{"openapi": "3.0.0", "info": {"title": "Group Properties API", "version": "1.0.0"}, "servers": [{"description": "Lab", "url": "https://b7ftljz4m6.execute-api.us-west-2.amazonaws.com/v1/command"}, {"description": "Prod", "url": " https://dtjdrpasm2.execute-api.us-west-1.amazonaws.com/v1/command"}], "paths": {"/group/GroupAccessDeviceAddRequest22V2": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceAddRequest22V2", "description": "Request to add a group access device.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          groupExternalId\n          deviceExternalId", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceAddRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceAvailablePortGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceAvailablePortGetListRequest", "description": "Request to get the list of available ports in a device.\n        The response is either GroupAccessDeviceAvailablePortGetListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceAvailablePortGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceCustomTagAddOrModifyListRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceCustomTagAddOrModifyListRequest", "description": "Request to add or modify a list of static configuration tag for a group access\n        device.  If the tag does not exist, it is added.  If the tag exists, its\n        value is updated.\n\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceCustomTagAddOrModifyListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceCustomTagAddRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceCustomTagAddRequest", "description": "Request to add a static configuration tag for a group access device.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceCustomTagAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceCustomTagDeleteListRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceCustomTagDeleteListRequest", "description": "Request to delete static configuration tags for a group access device.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceCustomTagDeleteListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceCustomTagGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceCustomTagGetListRequest", "description": "Request to get the list of custom configuration tags managed by the Device Management System, on a per-device profile basis.\n        The response is either GroupAccessDeviceCustomTagGetListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceCustomTagGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceCustomTagModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceCustomTagModifyRequest", "description": "Request to modify a static configuration tag for a group access device.\n\n        The tagValueToEncrypt element can only be used by a system administrator.\n\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          tagValueToEncrypt\n\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceCustomTagModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceDeleteRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceDeleteRequest", "description": "Request to delete a specified group access device.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          deviceExternalId\n\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceDeviceActivationGetRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceDeviceActivationGetRequest", "description": "Requests the activation information for a device configured at the Group level.\n        Returns a GroupAccessDeviceDeviceActivationGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceDeviceActivationGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceDeviceActivationModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceDeviceActivationModifyRequest", "description": "Activates or deactivates a device configured at the Group level. It is only possible\n        for this request to activate a device which is deactivated. Trying to activate a\n        device in the activating state will result in an error response since only the DAS is\n        allowed to execute this operation.\n        Returns a SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceDeviceActivationModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceFileGetListRequest14sp8": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceFileGetListRequest14sp8", "description": "Request to get the list of device files managed by the Device Management System, on a per-device profile basis.\n        The response is either GroupAccessDeviceFileGetListResponse14sp8 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceFileGetListRequest14sp8"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceFileGetRequest20": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceFileGetRequest20", "description": "Request to get a group device profile file.\n        The response is either GroupAccessDeviceFileGetResponse20 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceFileGetRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceFileModifyRequest14sp8": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceFileModifyRequest14sp8", "description": "Request to modify a specified group access device file.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceFileModifyRequest14sp8"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceGenerateActivationCodeRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceGenerateActivationCodeRequest", "description": "Requests a new activation code for a device configured at the Group level.\n        Returns a SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGenerateActivationCodeRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceGetAvailableCustomTagListRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceGetAvailableCustomTagListRequest", "description": "Get the list of all available custom tags managed by the Device Management System, on a per-device profile basis.\n        The response is either GroupAccessDeviceGetAvailableCustomTagListResponse or ErrorResponse.\n        The following elements are used in AS mode and ignored in XS data mode:\n          tagSetName", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetAvailableCustomTagListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceGetAvailableDetailListRequest19": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceGetAvailableDetailListRequest19", "description": "Requests the list of available access devices for assignment to a user\n        within a group. The list includes devices created at the system, service provider, and group levels.\n        The response is either GroupAccessDeviceGetAvailableDetailListResponse19 or\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetAvailableDetailListRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceGetEnhancedConfigurationTypeListRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceGetEnhancedConfigurationTypeListRequest", "description": "Requests the list of configurable device types of devices that have already been\n        added to the group.\n        The response is either GroupAccessDeviceGetEnhancedConfigurationTypeListResponse\n        or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetEnhancedConfigurationTypeListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceGetEnhancedConfigurationTypeRequest14": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceGetEnhancedConfigurationTypeRequest14", "description": "Requests the details of a specified configurable device type for a group.\n        The response is either GroupAccessDeviceGetEnhancedConfigurationTypeResponse14\n        or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetEnhancedConfigurationTypeRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceGetLinkedLeafDeviceListRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceGetLinkedLeafDeviceListRequest", "description": "Requests the list of linked leaf devices for the group level tree device passed in the request.\n        A tree device is a device associated with a device type that has the option\n        supportLinks set to \"Support Links from Devices\". Many leaf devices can be linked to it.\n        A leaf device is a device associated with a device type that has the option\n        supportLinks set to \"Support Link to Device\". It can be linked to only one tree device.\n        The list includes devices created at the system, service provider, and group levels.\n\n        The response is either GroupAccessDeviceGetLinkedLeafDeviceListResponse or\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetLinkedLeafDeviceListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceGetLinkedTreeDeviceRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceGetLinkedTreeDeviceRequest", "description": "Requests the tree device linked with the group level leaf device passed in the request.\n        A tree device is a device associated with a device type that has the option\n        supportLinks set to \"Support Links from Devices\". Many leaf devices can be linked to it.\n        A leaf device is a device associated with a device type that has the option\n        supportLinks set to \"Support Link to Device\". It can be linked to only one tree device.\n\n        The response is either GroupAccessDeviceGetLinkedTreeDeviceResponse or\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetLinkedTreeDeviceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceGetListRequest", "description": "Requests the list of access devices in a group.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          groupExternalId\n\n        The response is either GroupAccessDeviceGetListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceGetNativeTagsWithLogicListRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceGetNativeTagsWithLogicListRequest", "description": "Get the list of all native tags with logic managed by the Device Management System, on a per-device profile basis.\n        The response is either GroupAccessDeviceGetAvailableCustomTagListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetNativeTagsWithLogicListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceGetPagedSortedListRequest22": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceGetPagedSortedListRequest22", "description": "Requests the list of access devices in a group.\n        The response is either GroupAccessDeviceGetPagedSortedListResponse or ErrorResponse.\n        If no sortOrder is included, the response is sorted by Device Name ascending\n        by default.  If the responsePagingControl element is not provided, the paging startIndex\n        will be set to 1 by default, and the responsePageSize will be set to the maximum\n        responsePageSize by default.\n        Multiple search criteria are logically ANDed together unless the\n        searchCriteriaModeOr option is included. Then the search criteria are logically\n        ORed together.\n        The getVisualDeviceManagementAPIDevicesOnly element can only be set when CloudPBX is licenced.\n        If the getVisualDeviceManagementAPIDevicesOnly element is not set, all devices are returned with Visual Device Management API flag set to empty.\n        If the getVisualDeviceManagementAPIDevicesOnly element is set to true, only SIP devices supporting Visual Device Management API are returned.\n        If the getVisualDeviceManagementAPIDevicesOnly element is set to false, all SIP devices are returned with their current Visual Device Management API flag value.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetPagedSortedListRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceGetRequest24": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceGetRequest24", "description": "Requests the configuration of a specified group access device.\n        The response is either GroupAccessDeviceGetResponse24 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetRequest24"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceGetUserListRequest21sp1": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceGetUserListRequest21sp1", "description": "Requests the configuration of a specified group access device.\n        The response is either GroupAccessDeviceGetUserListResponse21sp1 or ErrorResponse.\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          searchCriteriaAccessDeviceEndpointPrivateIdentity", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetUserListRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceLinkDeviceListRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceLinkDeviceListRequest", "description": "Request to link one or more leaf devices to a group level tree device.\n        A tree device is a device associated with a device type that has the option\n        supportLinks set to \"Support Links from Devices\". Many leaf devices can be linked to it.\n        A leaf device is a device associated with a device type that has the option\n        supportLinks set to \"Support Link to Device\". It can be linked to only one tree device.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceLinkDeviceListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceModifyRequest22": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceModifyRequest22", "description": "Request to modify a specified group access device.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          deviceExternalId", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceModifyRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceModifyUserRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceModifyUserRequest", "description": "Request to modify attributes for line/ports assigned on the group device profile.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          privateIdentity", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceModifyUserRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceResetRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceResetRequest", "description": "Reset a specific group SIP device that supports the reset operation.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceResetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceTagSetGetRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceTagSetGetRequest", "description": "Request to get the custom configuration tag set defined at the access device.\n        The response is either GroupAccessDeviceTagSetGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceTagSetGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceTagSetModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceTagSetModifyRequest", "description": "Request to modify a static configuration tag set.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceTagSetModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAccessDeviceUnlinkDeviceListRequest": {"post": {"tags": ["Group"], "summary": "GroupAccessDeviceUnlinkDeviceListRequest", "description": "Request to unlink one or more leaf access devices from a tree device.\n        A leaf device is a device associated with a device type that has the option\n        supportLinks set to \"Support Link to Device\". It can be linked to only one tree device.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceUnlinkDeviceListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdminAddRequest": {"post": {"tags": ["Group"], "summary": "GroupAdminAddRequest", "description": "Add a group administrator.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdminAlternateIdAddRequest": {"post": {"tags": ["Group"], "summary": "GroupAdminAlternateIdAddRequest", "description": "Request to add an alternate admin Id to a group administrator.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminAlternateIdAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdminAlternateIdDeleteRequest": {"post": {"tags": ["Group"], "summary": "GroupAdminAlternateIdDeleteRequest", "description": "Request to delete an alternate admin user id of a group administrator.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminAlternateIdDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdminAlternateIdGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupAdminAlternateIdGetListRequest", "description": "Request to get the admin id and the list of alternate admin ids of an admin.\n        The response is either GroupAdminAlternateIdGetListResponse or ErrorResponse.\n        The \"userId\" can be either the admin user Id or an alternate admin user Id.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminAlternateIdGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdminAlternateIdModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupAdminAlternateIdModifyRequest", "description": "Request to modify an alternate id of a group admin.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminAlternateIdModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdminDeleteRequest": {"post": {"tags": ["Group"], "summary": "GroupAdminDeleteRequest", "description": "Delete a group administrator.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdminGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupAdminGetListRequest", "description": "Get a list of group and department administrators within the group.\n        The response is either a GroupAdminGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdminGetPagedSortedListRequest": {"post": {"tags": ["Group"], "summary": "GroupAdminGetPagedSortedListRequest", "description": "Get a list of group and department administrators within the group.\n        The response is either a GroupAdminGetPagedSortedListResponse or an ErrorResponse.\n        If no sort criterion is included, the response is sorted by administrator id ascending by default.\n        If the responsePagingControl element is not provided, the paging startIndex will be\n        set to 1 by default, and the responsePageSize will be set to the maximum\n        responsePageSize by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is\n        included. Then the search criteria are logically ORed together.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminGetPagedSortedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdminGetPolicyRequest20": {"post": {"tags": ["Group"], "summary": "GroupAdminGetPolicyRequest20", "description": "Requests the Group administrator's policy settings.\n        The response is either GroupAdminGetPolicyResponse20 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminGetPolicyRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdminGetRequest22": {"post": {"tags": ["Group"], "summary": "GroupAdminGetRequest22", "description": "Get a group administrators profile.\n        The response is either a GroupAdminGetResponse22 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdministratorPasswordRulesGetRequest": {"post": {"tags": ["Group"], "summary": "GroupAdministratorPasswordRulesGetRequest", "description": "Requests the effective password rules setting for a group administrator.\n        The response is either GroupAdministratorPasswordRulesGetResponse or\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdministratorPasswordRulesGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdminModifyPolicyRequest": {"post": {"tags": ["Group"], "summary": "GroupAdminModifyPolicyRequest", "description": "Request to modify the group administrator's policy settings.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in AS data mode:\n            dialableCallerIDAccess\n            verifyTranslationAndRoutingAccess\n            communicationBarringUserProfileAccess (only applicable to groups in an Enterprise)", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminModifyPolicyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAdminModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupAdminModifyRequest", "description": "Modify a group administrator.\n        Since old password is not specified here, any password rule related to old password\n        does not apply.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAnnouncementFileAddRequest": {"post": {"tags": ["Group"], "summary": "GroupAnnouncementFileAddRequest", "description": "Add an announcement to the group announcement repository\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          groupExternalId\n          announcementFileExternalId\n\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAnnouncementFileAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAnnouncementFileDeleteListRequest": {"post": {"tags": ["Group"], "summary": "GroupAnnouncementFileDeleteListRequest", "description": "Delete one or more announcements from the group announcement repository\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          groupExternalId\n          announcementFileExternalId\n\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAnnouncementFileDeleteListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAnnouncementFileGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupAnnouncementFileGetListRequest", "description": "Get the list of available announcement files for a Group.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          groupExternalId\n\n        The response is either a GroupAnnouncementFileGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAnnouncementFileGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAnnouncementFileGetPagedSortedListRequest": {"post": {"tags": ["Group"], "summary": "GroupAnnouncementFileGetPagedSortedListRequest", "description": "Get the list of available announcement files for\n        a Group.\n        If the responsePagingControl element is not provided,\n        the paging startIndex will be set to 1 by default,\n        and the responsePageSize will be set to the maximum responsePageSize by\n        default.\n        If no sortOrder is included, the response is sorted by Name ascending by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          groupExternalId\n\n        The response is either a GroupAnnouncementFileGetPagedSortedListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAnnouncementFileGetPagedSortedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAnnouncementFileGetRequest22": {"post": {"tags": ["Group"], "summary": "GroupAnnouncementFileGetRequest22", "description": "Request to get the announcement repository file information.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          announcementFileExternalId\n\n        The response is either GroupAnnouncementFileGetResponse22 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAnnouncementFileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAnnouncementFileModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupAnnouncementFileModifyRequest", "description": "Modify an existing announcement in the group repository\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          announcementFileExternalId\n\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAnnouncementFileModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupAnnouncementRepositoryGetSettingsRequest": {"post": {"tags": ["Group"], "summary": "GroupAnnouncementRepositoryGetSettingsRequest", "description": "Return the disk space being used.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAnnouncementRepositoryGetSettingsRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupApplicationServerSetGetRequest": {"post": {"tags": ["Group"], "summary": "GroupApplicationServerSetGetRequest", "description": "Get the Application Server set for a group.\n        The response is either a GroupApplicationServerSetGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupApplicationServerSetGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupApplicationServerSetModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupApplicationServerSetModifyRequest", "description": "Modify the Application Server set for a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupApplicationServerSetModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerActivationRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerActivationRequest", "description": "Activates or Deactivates the BroadWorks Mobile Manager.\n        The deactivationReason is required when isActive is set to false.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerActivationRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerAddHomeZoneRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerAddHomeZoneRequest", "description": "Add a home zone to the BroadWorks Mobile Manager.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerAddHomeZoneRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerAddRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerAddRequest", "description": "Add the BroadWorks Mobile Manager.\n        Only one BroadWorks Mobile Manager can be added per group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerDeleteHomeZoneListRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerDeleteHomeZoneListRequest", "description": "Delete a list of home zones from the BroadWorks Mobile Manager.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerDeleteHomeZoneListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerDeleteHomeZoneRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerDeleteHomeZoneRequest", "description": "Delete a home zone from the BroadWorks Mobile Manager.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerDeleteHomeZoneRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerDeleteRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerDeleteRequest", "description": "Delete the BroadWorks Mobile Manager.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerGetDomainListRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerGetDomainListRequest", "description": "Get the list of domains of the BroadWorks Mobile Manager.\n        The response is either GroupBroadWorksMobileManagerGetDomainListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerGetDomainListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerGetHomeZoneListRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerGetHomeZoneListRequest", "description": "Get the list of home zones of the BroadWorks Mobile Manager.\n        The response is either GroupBroadWorksMobileManagerGetHomeZoneListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerGetHomeZoneListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerGetHomeZoneRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerGetHomeZoneRequest", "description": "Get a home zone from the BroadWorks Mobile Manager.\n        The response is either GroupBroadWorksMobileManagerGetHomeZoneResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerGetHomeZoneRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerGetRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerGetRequest", "description": "Get the BroadWorks Mobile Manager.\n        The response is either GroupBroadWorksMobileManagerGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerModifyHomeZoneRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerModifyHomeZoneRequest", "description": "Modify an existing home zone in the BroadWorks Mobile Manager.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerModifyHomeZoneRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerModifyRequest", "description": "Modify the BroadWorks Mobile Manager settings.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupBroadWorksMobileManagerSendCarrierFilesRequest": {"post": {"tags": ["Group"], "summary": "GroupBroadWorksMobileManagerSendCarrierFilesRequest", "description": "Sends an email with the carrier information and certificate files.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobileManagerSendCarrierFilesRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCallProcessingGetPolicyRequest22V3": {"post": {"tags": ["Group"], "summary": "GroupCallProcessingGetPolicyRequest22V3", "description": "Request the group level data associated with Call Processing Policy.\n        The response is either a GroupCallProcessingGetPolicyResponse22V3 or an\n        ErrorResponse.\n\n        The useGroupCLIDSetting attribute controls the CLID settings\n        (clidPolicy,enterpriseCallsCLIDPolicy, groupCallsCLIDPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)\n\n        The useGroupMediaSetting attribute controls the Media settings\n        (medisPolicySelection, supportedMediaSetName)\n\n        The useGroupCallLimitsSetting attribute controls the Call Limits settings\n        (useMaxSimultaneousCalls, maxSimultaneousCalls,\n        useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls,\n        maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes,\n        useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth,\n        useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations,\n        useMaxConcurrentTerminatingAlertingRequests, maxConcurrentTerminatingAlertingRequests)\n\n        The useGroupTranslationRoutingSetting attribute controls the routing and translation settings\n        (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n        allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest22V3"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCallProcessingModifyPolicyRequest15sp2": {"post": {"tags": ["Group"], "summary": "GroupCallProcessingModifyPolicyRequest15sp2", "description": "Modify the group level data associated with Call Processing Policy.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The useGroupCLIDSetting attribute controls the CLID settings\n        (clidPolicy,enterpriseCallsCLIDPolicy, groupCallsCLIDPolicy,  emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowConfigurableCLIDForRedirectingIdentity, allowDepartmentCLIDNameOverride\n         useUserPhoneNumberForGroupCallsWhenInternalCLIDUnavailable, useUserPhoneNumberForEnterpriseCallsWhenInternalCLIDUnavailabl)\n\n        The allowDepartmentCLID attribute is automatically set to false when the useGroupName attribute is set to false.\n\n        The useGroupMediaSetting attribute controls the Media settings\n        (medisPolicySelection, supportedMediaSetName)\n\n        The useGroupCallLimitsSetting attribute controls the Call Limits settings\n        (useMaxSimultaneousCalls, maxSimultaneousCalls, useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls,\n        useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls,\n        maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth,\n        maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations,\n        useMaxConcurrentTerminatingAlertingRequests, maxConcurrentTerminatingAlertingRequests,\n        includeRedirectionsInMaximumNumberOfConcurrentCalls)\n\n        The useGroupTranslationRoutingSetting attribute controls the routing and translation settings (networkUsageSelection, enforceGroupCallingLineIdentityRestriction, allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing, routeOverrideDomain, routeOverridePrefix)\n        The useGroupDCLIDSetting controls the Dialable Caller ID settings (enableDialableCallerID)\n\n        The useGroupPhoneListLookupSetting controls whether or not to use the enterprise/service provider setting for the Phone List Lookup policy (enablePhoneListLookup)\n\n        The following elements are only used in AS data mode:\n           useGroupDCLIDSetting\n           enableDialableCallerID\n           allowConfigurableCLIDForRedirectingIdentity\n           allowDepartmentCLIDNameOverride\n           allowConfigurableCLIDForRedirectingIdentity\n           enterpriseCallsCLIDPolicy\n           groupCallsCLIDPolicy\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n           useGroupPhoneListLookupSetting\n           enablePhoneListLookup\n           useMaxConcurrentTerminatingAlertingRequests\n           maxConcurrentTerminatingAlertingRequests\n           includeRedirectionsInMaximumNumberOfConcurrentCalls\n           useUserPhoneNumberForGroupCallsWhenInternalCLIDUnavailable\n           useUserPhoneNumberForEnterpriseCallsWhenInternalCLIDUnavailable\n           allowMobileDNForRedirectingIdentity\n           enableGatewayRoutePolicy\n           networkCallsGatewayRouteIdentity\n           networkURLCallsGatewayRouteIdentity\n           emergencyCallsGatewayRouteIdentity\n           repairCallsGatewayRouteIdentity\n           callTypingErrorsGatewayRouteIdentity\n\n        The following elements are only used in XS data mode and ignored in AS data mode:\n           routeOverrideDomain\n           routeOverridePrefix", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingModifyPolicyRequest15sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommonPhoneListAddListRequest": {"post": {"tags": ["Group"], "summary": "GroupCommonPhoneListAddListRequest", "description": "Add one or more entries to a group's common phone list.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommonPhoneListAddListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommonPhoneListDeleteListRequest": {"post": {"tags": ["Group"], "summary": "GroupCommonPhoneListDeleteListRequest", "description": "Delete one or more entries from a group's common phone list.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommonPhoneListDeleteListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommonPhoneListGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupCommonPhoneListGetListRequest", "description": "Get a group's common phone list.\n        The response is either a GroupCommonPhoneListGetListResponse or an ErrorResponse.\n        The search can be done using multiple criterion.\n        If the searchCriteriaModeOr is present, any result matching any one criteria is included in the results.\n        Otherwise, only results matching all the search criterion are included in the results.\n        If no search criteria is specified, all results are returned.\n        Specifying searchCriteriaModeOr without any search criteria results in an ErrorResponse.\n        In all cases, if a responseSizeLimit is specified and the number of matching results is more than this limit, then an\n        ErrorResponse is returned.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommonPhoneListGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommonPhoneListModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupCommonPhoneListModifyRequest", "description": "Modify an entry in a group's common phone list.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommonPhoneListModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommunicationBarringAuthorizationCodeAddListRequest21sp1": {"post": {"tags": ["Group"], "summary": "GroupCommunicationBarringAuthorizationCodeAddListRequest21sp1", "description": "Add a list of Communication Barring Authorization codes to a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommunicationBarringAuthorizationCodeAddListRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommunicationBarringAuthorizationCodeDeleteListRequest": {"post": {"tags": ["Group"], "summary": "GroupCommunicationBarringAuthorizationCodeDeleteListRequest", "description": "Delete a list of Communication Barring Authorization codes from a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommunicationBarringAuthorizationCodeDeleteListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommunicationBarringAuthorizationCodeGetListRequest21sp1": {"post": {"tags": ["Group"], "summary": "GroupCommunicationBarringAuthorizationCodeGetListRequest21sp1", "description": "Get a list of Communication Barring Authorization Codes for a group.\n        The response is either GroupCommunicationBarringAuthorizationCodeGetListResponse21sp1 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommunicationBarringAuthorizationCodeGetListRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommunicationBarringAuthorizationCodeGetRequest": {"post": {"tags": ["Group"], "summary": "GroupCommunicationBarringAuthorizationCodeGetRequest", "description": "Request the group Communication Barring Authorization Code setting.\n        The response is either a GroupCommunicationBarringAuthorizationCodeGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommunicationBarringAuthorizationCodeGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommunicationBarringAuthorizationCodeModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupCommunicationBarringAuthorizationCodeModifyRequest", "description": "Modify the group Communication Barring Authorization Code settings\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommunicationBarringAuthorizationCodeModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommunicationBarringGetRequest": {"post": {"tags": ["Group"], "summary": "GroupCommunicationBarringGetRequest", "description": "Gets Communication Barring setting for a group.\n        The response is either a GroupCommunicationBarringGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommunicationBarringGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommunicationBarringModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupCommunicationBarringModifyRequest", "description": "Gets Communication Barring setting for a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommunicationBarringModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommunicationBarringProfileGetAssignedListRequest": {"post": {"tags": ["Group"], "summary": "GroupCommunicationBarringProfileGetAssignedListRequest", "description": "Get the list of all communication barring profiles assigned to the group. The response is either a\n        GroupCommunicationBarringProfileGetAssignedListResponse or an ErrorResponse.\n        This command only applies to groups in an Enterprise. This command will fail for groups in a Service Provider.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommunicationBarringProfileGetAssignedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCommunicationBarringProfileModifyListRequest": {"post": {"tags": ["Group"], "summary": "GroupCommunicationBarringProfileModifyListRequest", "description": "Assign a replacement list of Communication Barring Profiles to a group.\n        The response is either a SuccessResponse or an ErrorResponse.\n        This command only applies to groups in an Enterprise. This command will fail for groups in a Service Provider.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCommunicationBarringProfileModifyListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupConsolidatedAddRequest": {"post": {"tags": ["Group"], "summary": "GroupConsolidatedAddRequest", "description": "Add a group.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          serviceProviderExternalId\n          groupExternalId\n\n        The following elements are only used in Amplify data mode and ignored in AS and XS data mode:\n        servicePolicy,\n        callProcessingSliceId,\n        provisioningSliceId,\n        subscriberPartition.\n        When the callProcessingSliceId or provisioningSliceId is not specified in the AmplifyDataMode,\n        the default slice Id is assigned to the Group.\n        Only Provisioning admin and above can change the callProcessingSliceId,\n        provisioningSliceId, and subscriberPartition.\n\n        The following elements are only used in Amplify and XS data mode and ignored in AS mode:\n        preferredDataCenter.\n        Only Provisioning admin and above can change the preferredDataCenter.\n\n        The following elements are only used in XS data mode and ignored in Amplify and AS data mode:\n        defaultUserCallingLineIdPhoneNumber.\n\n        The following elements are optional for the group. If the elements are included,\n        they will be either added, authorized, or modified on the group. Should any of the\n        following elements be rejected to due existing system or service provider settings,\n        the group will not be added and the response will be an ErrorResponse:\n          domain\n          admin\n          minExtensionLength\n          maxExtensionLength\n          defaultExtensionLength\n          servicePackAuthorization\n          groupServiceAuthorizationAndAssignment\n          userServiceAuthorization\n          servicePack\n          activatablePhoneNumber\n          activatableDNRange\n          routingProfile\n          trunkGroupMaxActiveCalls\n          trunkGroupBurstingMaxActiveCalls\n          meetMeConferencingAllocatedPorts\n\n\n        When a group or user service is included that is not activated, is not licensed,\n        or not authorized to the service provider, the response will be an ErrorResponse.\n\n\t\tIf the group service authorized quantity is not included it will default to Unlimited.\n\n        If activatablePhoneNumber and activatableDNRange elements are included, when\n        activate element is present, this value overrides the system group default\n        activatable settings.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupConsolidatedAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupConsolidatedAddRequest22": {"post": {"tags": ["Group"], "summary": "GroupConsolidatedAddRequest22", "description": "Add a group.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          serviceProviderExternalId\n          groupExternalId\n\n        The following elements are only used in Amplify data mode and ignored in AS and XS data mode:\n        servicePolicy,\n        callProcessingSliceId,\n        provisioningSliceId,\n        subscriberPartition.\n        When the callProcessingSliceId or provisioningSliceId is not specified in the AmplifyDataMode,\n        the default slice Id is assigned to the Group.\n        Only Provisioning admin and above can change the callProcessingSliceId,\n        provisioningSliceId, and subscriberPartition.\n\n        The following elements are only used in Amplify and XS data mode and ignored in AS mode:\n        preferredDataCenter.\n        Only Provisioning admin and above can change the preferredDataCenter.\n\n        The following elements are only used in XS data mode and ignored in Amplify and AS data mode:\n        defaultUserCallingLineIdPhoneNumber.\n\n        The following elements are optional for the group. If the elements are included,\n        they will be either added, authorized, or modified on the group. Should any of the\n        following elements be rejected to due existing system or service provider settings,\n        the group will not be added and the response will be an ErrorResponse:\n          domain\n          admin\n          minExtensionLength\n          maxExtensionLength\n          defaultExtensionLength\n          servicePackAuthorization\n          groupServiceAuthorizationAndAssignment\n          userServiceAuthorization\n          servicePack\n          activatablePhoneNumber\n          activatableDNRange\n          routingProfile\n          trunkGroupMaxActiveCalls\n          trunkGroupBurstingMaxActiveCalls\n          meetMeConferencingAllocatedPorts\n        When a group or user service is included that is not activated, is not licensed,\n        or not authorized to the service provider, the response will be an ErrorResponse.\n\n\t\tIf the group service authorized quantity is not included it will default to Unlimited.\n\n        If activatablePhoneNumber and activatableDNRange elements are included, when\n        activate element is present, this value overrides the system group default\n        activatable settings.\n       If the activatablePhoneNumber and activatableDNRange element are included, the phone numbers are added to the service provider if they are available to be assigned to the group and not currently added to the service provider.\n        The response returned is a\n-\tSuccessResponse if all the data is successfully added.\n-\tErrorResponse if any data other than the DN validation/assignment fails.\n-\tGroupConsolidatedAddResponse22 if any of the activatablePhoneNumber or activatableDNRange fails validation.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupConsolidatedAddRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupConsolidatedDnAssignListRequest": {"post": {"tags": ["Group"], "summary": "GroupConsolidatedDnAssignListRequest", "description": "Adds DNs to enterprise and group and activates the DNs on assignment.\n        It is possible to add either: a single DN,\n        or a list of DNs, or a range of DNs, or any combination thereof.\n        The response is either SuccessResponse or GroupConsolidatedDnAssignListResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupConsolidatedDnAssignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCPEConfigRebuildConfigFileRequest": {"post": {"tags": ["Group"], "summary": "GroupCPEConfigRebuildConfigFileRequest", "description": "Rebuild the group default config file for the specified device type.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCPEConfigRebuildConfigFileRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCPEConfigRebuildDeviceConfigFileRequest": {"post": {"tags": ["Group"], "summary": "GroupCPEConfigRebuildDeviceConfigFileRequest", "description": "Rebuild the config file for a specified device.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode:\n          force", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCPEConfigRebuildDeviceConfigFileRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCPEConfigReorderDeviceLinePortsRequest": {"post": {"tags": ["Group"], "summary": "GroupCPEConfigReorderDeviceLinePortsRequest", "description": "Reorder the lines of a group device. You can not add or delete line ports, only\n        re-ordering the list is allowed. The ordered list of line ports can be obtained\n        with the GroupAccessDeviceGetRequest16 command.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCPEConfigReorderDeviceLinePortsRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCPEConfigResetDeviceRequest": {"post": {"tags": ["Group"], "summary": "GroupCPEConfigResetDeviceRequest", "description": "Reset a specific group device.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCPEConfigResetDeviceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCPEConfigResetDeviceTypeRequest": {"post": {"tags": ["Group"], "summary": "GroupCPEConfigResetDeviceTypeRequest", "description": "Reset all the devices of the specified device type in a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCPEConfigResetDeviceTypeRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCPEConfigSetConfigFileRequest": {"post": {"tags": ["Group"], "summary": "GroupCPEConfigSetConfigFileRequest", "description": "Request to set a new group default configuration file for a device type.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        When the element configFile is set to nil, the configuration file defined\n        at the parent level is used.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCPEConfigSetConfigFileRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCustomContactDirectoryAddRequest17": {"post": {"tags": ["Group"], "summary": "GroupCustomContactDirectoryAddRequest17", "description": "Adds a Custom Contact Directory to a group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCustomContactDirectoryAddRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCustomContactDirectoryDeleteRequest": {"post": {"tags": ["Group"], "summary": "GroupCustomContactDirectoryDeleteRequest", "description": "Deletes a Custom Contact Directory to a group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCustomContactDirectoryDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCustomContactDirectoryGetAvailableUserListRequest17": {"post": {"tags": ["Group"], "summary": "GroupCustomContactDirectoryGetAvailableUserListRequest17", "description": "Get a list of users that can be part of a custom contact directory.\n        The response is either GroupCustomContactDirectoryGetAvailableUserListResponse17 or  ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCustomContactDirectoryGetAvailableUserListRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCustomContactDirectoryGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupCustomContactDirectoryGetListRequest", "description": "Gets the list of Custom Contact Directories for a group.\n        The response is either GroupCustomContactDirectoryGetListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCustomContactDirectoryGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCustomContactDirectoryGetRequest17": {"post": {"tags": ["Group"], "summary": "GroupCustomContactDirectoryGetRequest17", "description": "Gets a Custom Contact Directory in a group.\n        The response is either GroupCustomContactDirectoryGetResponse17 or\n        ErrorResponse.\n        The search can be done using multiple criterion.\n        If the searchCriteriaModeOr is present, any result matching any one criteria is included in the results.\n        Otherwise, only results matching all the search criterion are included in the results.\n        If no search criteria is specified, all results are returned.\n        Specifying searchCriteriaModeOr without any search criteria results in an ErrorResponse.\n        In all cases, if a responseSizeLimit is specified and the number of matching results is more than this limit, then an\n        ErrorResponse is returned. The Receptionist Note column is only populated in AS mode; and populated only if the user\n        sending the request is a the owner of this Receptionist Note and a Note exists.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCustomContactDirectoryGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupCustomContactDirectoryModifyRequest17": {"post": {"tags": ["Group"], "summary": "GroupCustomContactDirectoryModifyRequest17", "description": "Adds a Custom Contact Directory to a group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCustomContactDirectoryModifyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeleteRequest": {"post": {"tags": ["Group"], "summary": "GroupDeleteRequest", "description": "Delete a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDepartmentAddRequest": {"post": {"tags": ["Group"], "summary": "GroupDepartmentAddRequest", "description": "Add a department to a group.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode:\n           callingLineIdName\n           caliingLineIdPhoneNumber", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDepartmentAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDepartmentAdminAddRequest": {"post": {"tags": ["Group"], "summary": "GroupDepartmentAdminAddRequest", "description": "Add a department administrator to a group department.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDepartmentAdminAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDepartmentAdminDeleteRequest": {"post": {"tags": ["Group"], "summary": "GroupDepartmentAdminDeleteRequest", "description": "Delete a group department administrator.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDepartmentAdminDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDepartmentAdminGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupDepartmentAdminGetListRequest", "description": "Get a list of department administrators for the department.\n        The response is either a GroupDepartmentAdminGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDepartmentAdminGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDepartmentAdminGetRequest": {"post": {"tags": ["Group"], "summary": "GroupDepartmentAdminGetRequest", "description": "Get a group department administrators profile.\n        The response is either a GroupDepartmentAdminGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDepartmentAdminGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDepartmentAdminModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupDepartmentAdminModifyRequest", "description": "Modify a group department administrator.\n        Since old password is not specified here, any password rule related to old password\n        does not apply.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDepartmentAdminModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDepartmentDeleteRequest": {"post": {"tags": ["Group"], "summary": "GroupDepartmentDeleteRequest", "description": "Delete a department from a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDepartmentDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDepartmentGetAvailableParentListRequest": {"post": {"tags": ["Group"], "summary": "GroupDepartmentGetAvailableParentListRequest", "description": "Get a list of departments that could be the parent department of the specified\n        department. The department itself and all its descendents are not eligible to be\n        the parent department. If the group belongs to an enterprise, it also returns the\n        departments defined in the enterprise it belongs to.\n        The response is either GroupDepartmentGetAvailableParentListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDepartmentGetAvailableParentListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDepartmentGetListRequest18": {"post": {"tags": ["Group"], "summary": "GroupDepartmentGetListRequest18", "description": "Request a list of departments in a group. You may request only the\n        list of departments defined at the group-level, or you may request\n        the list of all departments in the group including all the departments\n        defined within the enterprise the group belongs to.\n        The response is either GroupDepartmentGetListResponse18 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDepartmentGetListRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDepartmentGetRequest": {"post": {"tags": ["Group"], "summary": "GroupDepartmentGetRequest", "description": "Request the attributes of a department.\n        The response is either a GroupDepartmentGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDepartmentGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDepartmentModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupDepartmentModifyRequest", "description": "Modify a department of a group.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode:\n           callingLineIdName\n           caliingLineIdPhoneNumber", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDepartmentModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceActivationPolicyGetRequest": {"post": {"tags": ["Group"], "summary": "GroupDeviceActivationPolicyGetRequest", "description": "Request the Device Activation policy of a group.\n        The response is either a GroupDeviceActivationPolicyGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceActivationPolicyGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceActivationPolicyModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupDeviceActivationPolicyModifyRequest", "description": "Modify the Device Activation policy of a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceActivationPolicyModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceManagementEventGetListRequest22": {"post": {"tags": ["Group"], "summary": "GroupDeviceManagementEventGetListRequest22", "description": "Request device management's events for a specific queue.\n        It is possible to restrict the number of rows returned using\n        responseSizeLimit.\n        If eventQueueType is not specified, the events from all the\n        event queues are returned.\n        The response is either a GroupDeviceManagementEventGetListResponse22 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceManagementEventGetListRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceManagementGetAccessDeviceCountForDeviceTypeGroupRequest": {"post": {"tags": ["Group"], "summary": "GroupDeviceManagementGetAccessDeviceCountForDeviceTypeGroupRequest", "description": "Request the number of access device of a particular device type and group.\n        If countOnlyResetSupportedDevice is true, count only access devices if the device type supports reset.\n        By default unmanaged device types are not allowed and devices are counted only if their device type supports Device Management.\n        An error is returned if deviceType is specified but does not support device management.\n        When allowUnmanagedDeviceType is true, unmanaged device type will be counted and a successful response is returned.\n        The response is either GroupDeviceManagementGetAccessDeviceCountForDeviceTypeGroupResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceManagementGetAccessDeviceCountForDeviceTypeGroupRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceManagementInProgressAndPendingEventCancelRequest": {"post": {"tags": ["Group"], "summary": "GroupDeviceManagementInProgressAndPendingEventCancelRequest", "description": "Cancel pending and in progress events.  A list of individual events can\n        be canceled.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceManagementInProgressAndPendingEventCancelRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceTypeCustomTagAddRequest": {"post": {"tags": ["Group"], "summary": "GroupDeviceTypeCustomTagAddRequest", "description": "Request to add a static configuration tag for an access device type used in a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeCustomTagAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceTypeCustomTagDeleteListRequest": {"post": {"tags": ["Group"], "summary": "GroupDeviceTypeCustomTagDeleteListRequest", "description": "Request to delete static configuration tags for an access device type used in a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeCustomTagDeleteListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceTypeCustomTagGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupDeviceTypeCustomTagGetListRequest", "description": "Request to get the list of custom configuration tags managed by the Device Management System, on a per-device type basis for a group.\n        The response is either GroupDeviceTypeCustomTagGetListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeCustomTagGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceTypeCustomTagModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupDeviceTypeCustomTagModifyRequest", "description": "Request to modify a static configuration tag for an access device type used in a group.\n\n        The tagValueToEncrypt element can only be used by a system administrator.\n\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          tagValueToEncrypt\n\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeCustomTagModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceTypeFileGetListRequest21": {"post": {"tags": ["Group"], "summary": "GroupDeviceTypeFileGetListRequest21", "description": "Request to get the list of device type files managed by the Device Management System, on a per-group basis.\n        The response is either GroupDeviceTypeFileGetListResponse21 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeFileGetListRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceTypeFileGetRequest16sp1": {"post": {"tags": ["Group"], "summary": "GroupDeviceTypeFileGetRequest16sp1", "description": "Request to get a group device type file.\n        The response is either GroupDeviceTypeFileGetResponse16sp1 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeFileGetRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceTypeFileModifyRequest14sp8": {"post": {"tags": ["Group"], "summary": "GroupDeviceTypeFileModifyRequest14sp8", "description": "Request to modify a specified device type file for a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeFileModifyRequest14sp8"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceTypeTagSetGetRequest": {"post": {"tags": ["Group"], "summary": "GroupDeviceTypeTagSetGetRequest", "description": "Request to get the custom configuration tag set defined for the group and device type.\n        The response is either GroupDeviceTypeTagSetGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeTagSetGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDeviceTypeTagSetModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupDeviceTypeTagSetModifyRequest", "description": "Request to modify a static configuration tag set.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeTagSetModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialableCallerIDCriteriaAddRequest": {"post": {"tags": ["Group"], "summary": "GroupDialableCallerIDCriteriaAddRequest", "description": "Add a new Dialable Caller ID Criteria. Criteria are added at the bottom of the list with the lowest priority. The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialableCallerIDCriteriaAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialableCallerIDCriteriaDeleteRequest": {"post": {"tags": ["Group"], "summary": "GroupDialableCallerIDCriteriaDeleteRequest", "description": "Delete a Dialable Caller ID Criteria.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialableCallerIDCriteriaDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialableCallerIDCriteriaGetRequest": {"post": {"tags": ["Group"], "summary": "GroupDialableCallerIDCriteriaGetRequest", "description": "Get an existing Dialable Caller ID Criteria.\n        The response is either a\n        GroupDialableCallerIDCriteriaGetRequest or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialableCallerIDCriteriaGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialableCallerIDCriteriaModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupDialableCallerIDCriteriaModifyRequest", "description": "Modify a Dialable Caller ID Criteria.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialableCallerIDCriteriaModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialableCallerIDGetRequest": {"post": {"tags": ["Group"], "summary": "GroupDialableCallerIDGetRequest", "description": "Get the Group's Dialable Caller ID settings and criteria list.\n        The response is either a\n        GroupDialableCallerIDGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialableCallerIDGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialableCallerIDModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupDialableCallerIDModifyRequest", "description": "Modify the group's Dialable Caller ID settings and criteria list.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialableCallerIDModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialPlanPolicyAddAccessCodeRequest": {"post": {"tags": ["Group"], "summary": "GroupDialPlanPolicyAddAccessCodeRequest", "description": "Request to add a Group level Dial Plan Access Code and its all attribues.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialPlanPolicyAddAccessCodeRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialPlanPolicyDeleteAccessCodeRequest": {"post": {"tags": ["Group"], "summary": "GroupDialPlanPolicyDeleteAccessCodeRequest", "description": "Request to delete a Group level Dial Plan Access Code and its all attribues.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialPlanPolicyDeleteAccessCodeRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialPlanPolicyGetAccessCodeListRequest": {"post": {"tags": ["Group"], "summary": "GroupDialPlanPolicyGetAccessCodeListRequest", "description": "Request the Group level data associated with Dial Plan Policy.\n        The response is either a GroupDialPlanPolicyGetAccessCodeListResponse\n        or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialPlanPolicyGetAccessCodeListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialPlanPolicyGetAccessCodeRequest": {"post": {"tags": ["Group"], "summary": "GroupDialPlanPolicyGetAccessCodeRequest", "description": "Request access code data associated with Group level Dial Plan Policy access codes.\n        The response is either a GroupDialPlanPolicyGetAccessCodeResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialPlanPolicyGetAccessCodeRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialPlanPolicyGetRequest22": {"post": {"tags": ["Group"], "summary": "GroupDialPlanPolicyGetRequest22", "description": "Request the Group level data associated with Dial Plan Policy.\n        The response is either a GroupDialPlanPolicyGetResponse22 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialPlanPolicyGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialPlanPolicyModifyAccessCodeRequest": {"post": {"tags": ["Group"], "summary": "GroupDialPlanPolicyModifyAccessCodeRequest", "description": "Request to modify a Group level Dial Plan Access Code and its attribues.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialPlanPolicyModifyAccessCodeRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDialPlanPolicyModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupDialPlanPolicyModifyRequest", "description": "Modify the Group level data associated with Dial Plan Policy.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          overrideResolvedDeviceDigitMap\n          deviceDigitMap", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialPlanPolicyModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDigitCollectionGetRequest13mp4": {"post": {"tags": ["Group"], "summary": "GroupDigitCollectionGetRequest13mp4", "description": "Request the group's digit collection attributes.\n        The response is either a GroupDigitCollectionGetResponse13mp4 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDigitCollectionGetRequest13mp4"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDigitCollectionModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupDigitCollectionModifyRequest", "description": "Modifies the group's digit collection attributes.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDigitCollectionModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnActivateListRequest": {"post": {"tags": ["Group"], "summary": "GroupDnActivateListRequest", "description": "Activate a list of assigned DNs on a group. It is possible to activate either: a single DN,\n        or a list of DNs, or a range of DNs, or any combination thereof.\n\n        It is not an error to activate an already activated DN\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnActivateListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnAssignListRequest": {"post": {"tags": ["Group"], "summary": "GroupDnAssignListRequest", "description": "Assign a list of service provider DNs to a group. It is possible to assign either: a single DN,\n        or a list of DNs, or a range of DNs, or any combination thereof.\n        The DNs must have previously been added to the service provider or enterprise.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnAssignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnDeactivateListRequest": {"post": {"tags": ["Group"], "summary": "GroupDnDeactivateListRequest", "description": "Deactivate a list of activated DNs on a group. The DNs then become available for\n        activation again. It is possible to deactivate either: a single DN,\n        or a list of DNs, or a range of DNs, or any combination thereof.\n        It is not an error to deactivate an already deactivated DN.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnDeactivateListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnGetActivationListRequest": {"post": {"tags": ["Group"], "summary": "GroupDnGetActivationListRequest", "description": "Get the list of activated and deactivated DNs in a group.\n        Ranges of DNs with identical assignment and activation properties are coalesced\n        to a single table row entry.\n        Only DNs assigned to a users are listed in the response when the number\n        activation Mode is set to \"User Activation Enabled\"\n        Dns assigned to the IMRN pool are not listed in the response.\n        The response is either a GroupDnGetActivationListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnGetActivationListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnGetAssignmentListRequest18": {"post": {"tags": ["Group"], "summary": "GroupDnGetAssignmentListRequest18", "description": "Get the list of assigned and unassigned DNs in a group. Each DN can be assigned\n        to a user and/or department. Ranges of DNs with identical assignment and activation properties\n        are coalesced to a single table row entry.\n        Dns assigned to the IMRN pool are not listed in the response.\n        The response is either a GroupDnGetAssignmentListResponse18 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnGetAssignmentListRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnGetAssignmentPagedSortedListRequest": {"post": {"tags": ["Group"], "summary": "GroupDnGetAssignmentPagedSortedListRequest", "description": "Get the list of assigned and unassigned DNs in a group. Each DN can be assigned\n        to a user and/or department. Ranges of DNs with identical assignment and activation properties\n        are coalesced to a single table row entry.\n        Dns assigned to the IMRN pool are not listed in the response.\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the  responsePageSize will be set to  the maximum ResponsePageSize by default.\n        If no sortOrder is included the response is sorted by Phone Number by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criterion are logically ORed together.\n\n        The department in both the search criteria and sort by fields refer to the department to which\n        the dn belongs.\n\n        A limitation to the search by DN activation exists when the Number Activation mode is set to\n        Off. In this case DNs not assigned to users are never returned by queries with the\n        \"dnActivationSearchCriteria\" included.\n\n        The response is either a GroupDnGetAssignmentPagedSortedListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnGetAssignmentPagedSortedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnGetAvailableListRequest": {"post": {"tags": ["Group"], "summary": "GroupDnGetAvailableListRequest", "description": "Get the list of DNs that are assigned to a group and still available for\n        assignment to users or service instances within the group.\n        Dns assigned to the IMRN pool are not listed in the response.\n        The response is either a GroupDnGetAvailableListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnGetAvailableListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnGetAvailableRangesListRequest": {"post": {"tags": ["Group"], "summary": "GroupDnGetAvailableRangesListRequest", "description": "Get a list of group DNs that are not assigned to user, service instances or IMRN pool.\n        The Dns are returned in a list of DNs or DN ranges and formated in E164 format for display.\n        The response is either a GroupDnGetAvailableRangeListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnGetAvailableRangesListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnGetDetailedAvailableListRequest": {"post": {"tags": ["Group"], "summary": "GroupDnGetDetailedAvailableListRequest", "description": "Get the list of DNs that are assigned to a group and still available for\n        assignment to users within the group with the department name, if the DN\n        is assigned to the department.\n        Dns assigned to the IMRN pool are not listed in the response.\n        The response is either a GroupDnGetDetailedAvailableListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnGetDetailedAvailableListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupDnGetListRequest", "description": "Get the list of DNs that are assigned to a group.\n        Dns assigned to the IMRN pool are not listed in the response.\n        The response is either a GroupDnGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnGetStatusListRequest": {"post": {"tags": ["Group"], "summary": "GroupDnGetStatusListRequest", "description": "Validates DNs given in the request\n        The response is GroupDnGetStatusListResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnGetStatusListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnGetSummaryListRequest": {"post": {"tags": ["Group"], "summary": "GroupDnGetSummaryListRequest", "description": "Get the list of assigned and unassigned DN ranges in a group.\n        Dns assigned to the IMRN pool are not listed in the response.\n        The response is either a GroupDnGetSummaryListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnGetSummaryListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnListAssignDepartmentRequest": {"post": {"tags": ["Group"], "summary": "GroupDnListAssignDepartmentRequest", "description": "Assign a list of group DNs to a department. If the department is not specified, this\n        will make the DNs become unassigned from any department.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnListAssignDepartmentRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDnUnassignListRequest": {"post": {"tags": ["Group"], "summary": "GroupDnUnassignListRequest", "description": "Unassign a list of service provider DNs from a group. The DNs then become available for\n        assignment to other groups. It is possible to unassign either: a single DN,\n        or a list of DNs, or a range of DNs, or any combination thereof.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnUnassignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDomainAssignListRequest": {"post": {"tags": ["Group"], "summary": "GroupDomainAssignListRequest", "description": "Assign a list of domains to a group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDomainAssignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDomainGetAssignedListRequest": {"post": {"tags": ["Group"], "summary": "GroupDomainGetAssignedListRequest", "description": "Requests the list of all domains assigned to a group.\n        The response is either GroupDomainGetAssignedListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDomainGetAssignedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDomainGetAssignedUserListRequest": {"post": {"tags": ["Group"], "summary": "GroupDomainGetAssignedUserListRequest", "description": "Request a list of users within in a group that have a given domain assigned.\n        The response is either GroupDomainGetAssignedUserListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDomainGetAssignedUserListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupDomainUnassignListRequest": {"post": {"tags": ["Group"], "summary": "GroupDomainUnassignListRequest", "description": "Unassign a list of domains from a group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDomainUnassignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupEmergencyCallNotificationGetRequest": {"post": {"tags": ["Group"], "summary": "GroupEmergencyCallNotificationGetRequest", "description": "Request the group level data associated with Emergency Call Notification.\n        The response is either a GroupEmergencyCallNotificationGetResponse or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupEmergencyCallNotificationGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupEmergencyCallNotificationModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupEmergencyCallNotificationModifyRequest", "description": "Modify the group level data associated with Emergency Call Notification.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupEmergencyCallNotificationModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupEndpointGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupEndpointGetListRequest", "description": "Request to search endpoints in the group.\n        The response is either GroupEndpointGetListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupEndpointGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupExchangeIntegrationGetRequest": {"post": {"tags": ["Group"], "summary": "GroupExchangeIntegrationGetRequest", "description": "Request the group level configuration for Exchange Integration.\n        The response is either a GroupExchangeIntegrationGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupExchangeIntegrationGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupExchangeIntegrationModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupExchangeIntegrationModifyRequest", "description": "Modify the group level configuration for Exchange Integration.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupExchangeIntegrationModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupExistingUsersAssignUserServiceListRequest": {"post": {"tags": ["Group"], "summary": "GroupExistingUsersAssignUserServiceListRequest", "description": "Request to assign the user services and service packs to all existing users within the group.\n        BroadSoft recommends using this command only for small groups with less than 100 users.  This\n        command will return an error if the group has over 500 users.  The recommended way to bulk\n        assign/unassign services is Service Pack Migration.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupExistingUsersAssignUserServiceListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupExistingUsersUnassignUserServiceListRequest": {"post": {"tags": ["Group"], "summary": "GroupExistingUsersUnassignUserServiceListRequest", "description": "Requests to unassign the user services and service packs for all existing users within the group.\n        BroadSoft recommends using this command only for small groups with less than 100 users.  This\n        command will return an error if the group has over 500 users.  The recommended way to bulk\n        assign/unassign services is Service Pack Migration.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupExistingUsersUnassignUserServiceListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupExtensionLengthGetRequest22": {"post": {"tags": ["Group"], "summary": "GroupExtensionLengthGetRequest22", "description": "Request the group's extension length.\n        The response is either a GroupExtensionLengthGetResponse22 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupExtensionLengthGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupExtensionLengthModifyRequest17": {"post": {"tags": ["Group"], "summary": "GroupExtensionLengthModifyRequest17", "description": "Modify the group's extension length range.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n         useExterpriseExtensionLengthSetting", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupExtensionLengthModifyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupFeatureAccessCodeGetRequest21": {"post": {"tags": ["Group"], "summary": "GroupFeatureAccessCodeGetRequest21", "description": "Get group FAC code level and the list of feature access codes for a group.\n        The response is either a GroupFeatureAccessCodeGetResponse21 or an\n        ErrorResponse.\n        Returned Feature Access Codes may be group specific, or Service Provider\n        Feature Access Codes, depending on FAC code level.\n\n        In release 20 the \"Call Recording\" FAC name is changed to\n        \"Call Recording - Start\".", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFeatureAccessCodeGetRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupFeatureAccessCodeModifyRequest21": {"post": {"tags": ["Group"], "summary": "GroupFeatureAccessCodeModifyRequest21", "description": "Modify group FAC code level and the list of feature access codes for a\n        group.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Note: choice element is only valid when useFeatureAccessCodeLevel is set\n        to \"Group\", otherwise an ErrorResponse will be returned.\n\n        In release 20 the \"Call Recording\" FAC name is changed to\n        \"Call Recording - Start\".", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFeatureAccessCodeModifyRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupFileRepositoryDeviceUserAddRequest": {"post": {"tags": ["Group"], "summary": "GroupFileRepositoryDeviceUserAddRequest", "description": "Add a new group file repository user.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFileRepositoryDeviceUserAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupFileRepositoryDeviceUserDeleteRequest": {"post": {"tags": ["Group"], "summary": "GroupFileRepositoryDeviceUserDeleteRequest", "description": "Delete a group file repository user.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFileRepositoryDeviceUserDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupFileRepositoryDeviceUserGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupFileRepositoryDeviceUserGetListRequest", "description": "Request the list of group users for a file repository in the system.\n        The response is either a GroupFileRepositoryDeviceUserGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFileRepositoryDeviceUserGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupFileRepositoryDeviceUserModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupFileRepositoryDeviceUserModifyRequest", "description": "Modify a group file repository user.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFileRepositoryDeviceUserModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupGetAvailableLeafDeviceListRequest": {"post": {"tags": ["Group"], "summary": "GroupGetAvailableLeafDeviceListRequest", "description": "Requests the list of available leaf devices that can be linked to a tree device within a specific group.\n        A leaf device is a device associated with a device type that has the option\n        supportLinks set to \"Support Link to Device\". It can be linked to only one tree device.\n        The list returned includes devices created at the system, service provider, and group levels.\n        The response is either GroupGetAvailableLeafDeviceListResponse or\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupGetAvailableLeafDeviceListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupGetAvailableTreeDeviceListRequest": {"post": {"tags": ["Group"], "summary": "GroupGetAvailableTreeDeviceListRequest", "description": "Requests the list of available tree devices to which leaf devices can be linked to within a specific group.\n        A tree device is a device associated with a device type that has the option\n        supportLinks set to \"Support Links from Devices\". Many leaf devices can be linked to it.\n        The list returned includes devices created at the system, service provider, and group levels.\n        The response is either GroupGetAvailableTreeDeviceListResponse or\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupGetAvailableTreeDeviceListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupGetDefaultRequest": {"post": {"tags": ["Group"], "summary": "GroupGetDefaultRequest", "description": "Request the default profile for a group.\n        The response is either a GroupGetDefaultResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupGetDefaultRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupGetListInServiceProviderPagedSortedListRequest": {"post": {"tags": ["Group"], "summary": "GroupGetListInServiceProviderPagedSortedListRequest", "description": "Request the list of groups in a service provider or enterprise.\n        If no sortOrder is included, the response is sorted by Group Id ascending by default.\n        The response is either a GroupGetListInServiceProviderPagedSortedListResponse or an ErrorResponse.\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1 by\n        default, and the responsePageSize will be set to the maximum responsePageSize by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is\n        included. Then the search criteria are logically ORed together.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupGetListInServiceProviderPagedSortedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupGetListInServiceProviderRequest": {"post": {"tags": ["Group"], "summary": "GroupGetListInServiceProviderRequest", "description": "Request the list of groups in a service provider or enterprise.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either a GroupGetListInServiceProviderResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupGetListInServiceProviderRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupGetListInSystemRequest": {"post": {"tags": ["Group"], "summary": "GroupGetListInSystemRequest", "description": "Request the list of groups in the system.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        If reseller administrator sends the request, searchCriteriaResellerId is ignored. All the groups\n        in the administrator's reseller meeting the search criteria are returned.\n\n        The response is either a GroupGetListInSystemResponse or an ErrorResponse.\n\n        The following data elements are only used in AS data mode:\n          searchCriteriaResellerId", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupGetListInSystemRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupGetRequest22V5": {"post": {"tags": ["Group"], "summary": "GroupGetRequest22V5", "description": "Get the profile for a group.\n        The response is either a GroupGetResponse22V5 or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          groupExternalId", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupGetRequest22V5"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupGetUserServiceAssignedUserListRequest": {"post": {"tags": ["Group"], "summary": "GroupGetUserServiceAssignedUserListRequest", "description": "Get the list of users assigned the user service or service pack.\n        The response is either a GroupGetUserServiceAssignedUserListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupGetUserServiceAssignedUserListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupIMRNAssignListRequest": {"post": {"tags": ["Group"], "summary": "GroupIMRNAssignListRequest", "description": "Assign a list of group DNs to the IMRN pool. It is possible to assign either: a single DN,\n        or a list of DNs, or a range of DNs, or any combination thereof.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupIMRNAssignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupIMRNGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupIMRNGetListRequest", "description": "Request a summary table of all DNs in a group IMRN pool.\n        The response is either GroupIMRNGetListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupIMRNGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupIMRNUnassignListRequest": {"post": {"tags": ["Group"], "summary": "GroupIMRNUnassignListRequest", "description": "Unassign a list of group DNs from the group IMRN pool. The DNs then become available for\n        assignment to users. It is possible to delete either: a single DN,\n        or a list of DNs, or a range of DNs, or any combination thereof.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupIMRNUnassignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupModifyRequest", "description": "Modify the profile for a group.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following elements are only used in Amplify data mode and ignored\n        in AS and XS data mode:\n        servicePolicy,\n        callProcessingSliceId,\n        provisioningSliceId,\n        subscriberPartition.\n        When the callProcessingSliceId or provisioningSliceId is set to nillable,\n        it will be assigned to the default Slice.\n        Only Provisioning admin and above can change the callProcessingSliceId, provisioningSliceId, and subscriberPartition.\n\n        The following elements are only used in Amplify and XS data mode and ignored in AS data mode:\n        preferredDataCenter.\n        Only Provisioning admin and above can change the preferredDataCenter.\n\n        The following elements are only used in XS data mode and ignored in Amplify and AS data mode:\n        defaultUserCallingLineIdPhoneNumber.\n\n        The following elements are only used in AS data mode and ignored in the XS data mode:\n\t\t extensionLengthSettings\n\t\t dialPlanAccessCode\n\t\t dialPlanPolicy", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupNetworkClassOfServiceAssignListRequest21": {"post": {"tags": ["Group"], "summary": "GroupNetworkClassOfServiceAssignListRequest21", "description": "Assign a list of Network Classes of Service to a group.\n        A default Network Class of Service must be specified unless there is already one assigned to the group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupNetworkClassOfServiceAssignListRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupNetworkClassOfServiceAssignToAllUsersRequest": {"post": {"tags": ["Group"], "summary": "GroupNetworkClassOfServiceAssignToAllUsersRequest", "description": "Assign a Network Classes of Service to all users with in a\n        group. The Network Classes of Service must be currently assigned to\n        the group. The response is either a SuccessResponse or\n       an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupNetworkClassOfServiceAssignToAllUsersRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupNetworkClassOfServiceGetAssignedListRequest": {"post": {"tags": ["Group"], "summary": "GroupNetworkClassOfServiceGetAssignedListRequest", "description": "Get a list of Network Classes of Service assigned to a group.\n        The response is either a GroupNetworkClassOfServiceGetAssignedListResponse\n        or an ErorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupNetworkClassOfServiceGetAssignedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupNetworkClassOfServiceGetAssignedUserListRequest21": {"post": {"tags": ["Group"], "summary": "GroupNetworkClassOfServiceGetAssignedUserListRequest21", "description": "Get a list of users within a group that have a given Network Class\n        of Service assigned.\n        The response is either a GroupNetworkClassOfServiceGetAssignedUserListResponse21\n        or an ErorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupNetworkClassOfServiceGetAssignedUserListRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupNetworkClassOfServiceModifyDefaultRequest": {"post": {"tags": ["Group"], "summary": "GroupNetworkClassOfServiceModifyDefaultRequest", "description": "Modifies the default Network Classes of Service of a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupNetworkClassOfServiceModifyDefaultRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupNetworkClassOfServiceUnassignListRequest21": {"post": {"tags": ["Group"], "summary": "GroupNetworkClassOfServiceUnassignListRequest21", "description": "Unassign a list of Network Classes of Service from a group.\n        If the default Network Class of Service is being unassigned, a new one must be specified unless there are no more\n        Network Classes of Service assigned to the group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupNetworkClassOfServiceUnassignListRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupNewUserTemplateAssignUserServiceListRequest": {"post": {"tags": ["Group"], "summary": "GroupNewUserTemplateAssignUserServiceListRequest", "description": "Request to assign the user services and service packs to all new users created within the group\n        after the completion of this request.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupNewUserTemplateAssignUserServiceListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupNewUserTemplateUnassignUserServiceListRequest": {"post": {"tags": ["Group"], "summary": "GroupNewUserTemplateUnassignUserServiceListRequest", "description": "Requests to unassign the user services and service packs for all new users created within the group\n        after the completion of this request.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupNewUserTemplateUnassignUserServiceListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupOfficeZoneAssignListRequest": {"post": {"tags": ["Group"], "summary": "GroupOfficeZoneAssignListRequest", "description": "Assign a list of Office Zones to a group.\n        The Element defaultOfficeZone is required only for the first assignment, for subsequent assignments it is optional.\n        Office Zones can only be assigned if the Location-Based Calling Restrictions has been authorized to the group otherwise the request will fail.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupOfficeZoneAssignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupOfficeZoneGetAssignedListRequest": {"post": {"tags": ["Group"], "summary": "GroupOfficeZoneGetAssignedListRequest", "description": "Get a list of Office Zones assigned to a group.\n        The response is either a GroupOfficeZoneGetAssignedListResponse\n        or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupOfficeZoneGetAssignedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupOfficeZoneGetAssignedUserListRequest": {"post": {"tags": ["Group"], "summary": "GroupOfficeZoneGetAssignedUserListRequest", "description": "Get a list of users within a group that have a given Office Zone assigned.\n        The response is either a GroupOfficeZoneGetAssignedUserListResponse\n        or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupOfficeZoneGetAssignedUserListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupOfficeZoneUnassignListRequest": {"post": {"tags": ["Group"], "summary": "GroupOfficeZoneUnassignListRequest", "description": "Unassign a list of OfficeZones from a group.  Note: a new default must be provided if unassigning the current default.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupOfficeZoneUnassignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupPasswordRulesGetRequest22": {"post": {"tags": ["Group"], "summary": "GroupPasswordRulesGetRequest22", "description": "Requests the group's password rules setting that is applicable to\n        users within the group.\n        The response is either GroupPasswordRulesGetResponse22 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPasswordRulesGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupPasswordRulesModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupPasswordRulesModifyRequest", "description": "Request to modify the group's password rules setting that apply to the\n        users within the group.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n        forcePasswordChangeAfterReset\n\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPasswordRulesModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupPhoneDirectoryGetPagedSortedListRequest": {"post": {"tags": ["Group"], "summary": "GroupPhoneDirectoryGetPagedSortedListRequest", "description": "Request a table containing the phone directory for a group.\n        The directory includes all users in the group and all entries in the group common phone list.\n\n        If the specified group is part of an enterprise, the directory\n        includes all users in the enterprise and all entries in the enterprise\n        common phone list and the common phone list of the specified group.\n\n        If the specified group is part of a service provider, the directory\n        includes all users in the group and all entries in the common phone\n        list of the specified group.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        If no sortOrder is included the response is sorted by User Id ascending with a secondary\n        sort by User Last Name ascending by default.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        ErrorResponse is returned if searchCriteriaExactUserGroup or searchCriteriaExactUserDepartment have multiple entries and searchCriteriaModeOr is not included.\n\n        The following elements are only used in AS data mode and ignored in Amplify and XS data mode:\n        \"sortByImpId\"\n        \"searchCriteriaImpId\"\n\n        The response is either GroupPhoneDirectoryGetPagedSortedListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPhoneDirectoryGetPagedSortedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupPolicyGetRequest22": {"post": {"tags": ["Group"], "summary": "GroupPolicyGetRequest22", "description": "Requests the Group's policy settings.\n        The response is either GroupPolicyGetResponse22 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPolicyGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupPolicyModifyRequest22": {"post": {"tags": ["Group"], "summary": "GroupPolicyModifyRequest22", "description": "Request to modify the policies for a Group.\n          The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode:\n          userAutoAttendantNameDialingAccess", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPolicyModifyRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupPortalPasscodeRulesGetRequest19": {"post": {"tags": ["Group"], "summary": "GroupPortalPasscodeRulesGetRequest19", "description": "Requests the group's passcode rules setting.\n        The response is either GroupPortalPasscodeRulesGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPortalPasscodeRulesGetRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupPortalPasscodeRulesModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupPortalPasscodeRulesModifyRequest", "description": "Request to modify the group's passcode rules setting.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements are only used in AS data mode:\n          numberOfRepeatedDigits\n          disallowRepeatedPatterns\n          disallowContiguousSequences\n          numberOfAscendingDigits\n          numberOfDescendingDigits\n          numberOfPreviousPasscodes", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPortalPasscodeRulesModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupRoutePointExternalSystemAssignListRequest": {"post": {"tags": ["Group"], "summary": "GroupRoutePointExternalSystemAssignListRequest", "description": "Assign a list of route point external systems to a group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointExternalSystemAssignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupRoutePointExternalSystemGetAssignedListRequest": {"post": {"tags": ["Group"], "summary": "GroupRoutePointExternalSystemGetAssignedListRequest", "description": "Requests the list of all Route Point External Systems assigned to a group.\n        The response is either GroupRoutePointExternalSystemGetAssignedListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointExternalSystemGetAssignedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupRoutePointExternalSystemGetAssignedRoutePointListRequest": {"post": {"tags": ["Group"], "summary": "GroupRoutePointExternalSystemGetAssignedRoutePointListRequest", "description": "Request a list of route points within in a group that have a given external system assigned.\n        The response is either GroupRoutePointExternalSystemGetAssignedRoutePointListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointExternalSystemGetAssignedRoutePointListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupRoutePointExternalSystemUnassignListRequest": {"post": {"tags": ["Group"], "summary": "GroupRoutePointExternalSystemUnassignListRequest", "description": "Unassign a list of route point external systems from a group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointExternalSystemUnassignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupRoutingProfileGetRequest": {"post": {"tags": ["Group"], "summary": "GroupRoutingProfileGetRequest", "description": "Request the routing profile for the group.\n        The response is either a GroupRoutingProfileGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutingProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupRoutingProfileModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupRoutingProfileModifyRequest", "description": "Requests to modify the routing profile for a group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutingProfileModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupScheduleAddEventRequest": {"post": {"tags": ["Group"], "summary": "GroupScheduleAddEventRequest", "description": "Add an event to group schedule.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The startDate element is adjusted to the first occurrence of the recurrent schedule that comes at or after the startDate.\n        The endDate element is set to the sum of the adjusted starDate element value and the event duration.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleAddEventRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupScheduleAddRequest": {"post": {"tags": ["Group"], "summary": "GroupScheduleAddRequest", "description": "Add a group schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupScheduleDeleteEventListRequest": {"post": {"tags": ["Group"], "summary": "GroupScheduleDeleteEventListRequest", "description": "Delete a list of events from a group schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleDeleteEventListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupScheduleDeleteListRequest": {"post": {"tags": ["Group"], "summary": "GroupScheduleDeleteListRequest", "description": "Delete a list of group schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleDeleteListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupScheduleGetEventDetailListRequest": {"post": {"tags": ["Group"], "summary": "GroupScheduleGetEventDetailListRequest", "description": "Get the list of events of a group schedule.\n        The response is either a GroupScheduleGetEventDetailListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleGetEventDetailListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupScheduleGetEventListRequest": {"post": {"tags": ["Group"], "summary": "GroupScheduleGetEventListRequest", "description": "Get the list of events of a group schedule.\n        The response is either a GroupScheduleGetEventListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleGetEventListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupScheduleGetEventRequest": {"post": {"tags": ["Group"], "summary": "GroupScheduleGetEventRequest", "description": "Get an event from a group schedule.\n        The response is either a GroupScheduleGetEventResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleGetEventRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupScheduleGetListRequest17sp1": {"post": {"tags": ["Group"], "summary": "GroupScheduleGetListRequest17sp1", "description": "Get the list of schedules viewable by a group. The list can be filtered by schedule type.\n        The response is either a GroupScheduleGetListResponse17sp1 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleGetListRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupScheduleGetPagedSortedListRequest": {"post": {"tags": ["Group"], "summary": "GroupScheduleGetPagedSortedListRequest", "description": "Get the list of schedules viewable by a group.\n        The response is either a GroupScheduleGetPagedSortedListResponse or an ErrorResponse.\n        If no sortOrder is included, the response is sorted by Name ascending by default.\n        If the responsePagingControl element is not provided, the paging startIndex will be\n        set to 1 by default, and the responsePageSize will be set to the maximum\n        responsePageSize by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option\n        is included. Then the search criteria are logically ORed together.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleGetPagedSortedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupScheduleModifyEventRequest": {"post": {"tags": ["Group"], "summary": "GroupScheduleModifyEventRequest", "description": "Modify an event of a group schedule.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The startDate element is adjusted to the first occurrence of the recurrent schedule that comes at or after the startDate.\n        The endDate element is set to the sum of the adjusted starDate element value and the event duration.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleModifyEventRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupScheduleModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupScheduleModifyRequest", "description": "Modify a group schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupScheduleUsageRequest": {"post": {"tags": ["Group"], "summary": "GroupScheduleUsageRequest", "description": "Get the list of services using a group schedule.\n        The response is either a GroupScheduleUsageResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleUsageRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupSecurityClassificationCustomizationGetAvailableListRequest": {"post": {"tags": ["Group"], "summary": "GroupSecurityClassificationCustomizationGetAvailableListRequest", "description": "Get the available group security classification list. If it is not customized, it returns the system default list.\n        The response is either an GroupSecurityClassificationCustomizationGetAvailableListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSecurityClassificationCustomizationGetAvailableListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupServiceAssignListRequest": {"post": {"tags": ["Group"], "summary": "GroupServiceAssignListRequest", "description": "Assign one or more group services to the group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupServiceAssignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupServiceGetAuthorizationListRequest": {"post": {"tags": ["Group"], "summary": "GroupServiceGetAuthorizationListRequest", "description": "Requests the group's service authorization status.\n        The response is either GroupServiceGetAuthorizationListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupServiceGetAuthorizationListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupServiceGetAuthorizationRequest": {"post": {"tags": ["Group"], "summary": "GroupServiceGetAuthorizationRequest", "description": "Requests the group's service authorization information for a specific service or service pack.\n        The response is either GroupServiceGetAuthorizationResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupServiceGetAuthorizationRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupServiceGetAuthorizedListRequest": {"post": {"tags": ["Group"], "summary": "GroupServiceGetAuthorizedListRequest", "description": "Requests the list of services and service packs authorized to a group.\n        The response is either GroupServiceGetAuthorizedListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupServiceGetAuthorizedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupServiceIsAssignedRequest": {"post": {"tags": ["Group"], "summary": "GroupServiceIsAssignedRequest", "description": "Request to determine if a GroupService is assigned to the group.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupServiceIsAssignedRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupServiceModifyAuthorizationListRequest": {"post": {"tags": ["Group"], "summary": "GroupServiceModifyAuthorizationListRequest", "description": "Requests to change the group's service authorization status.\n        The boolean flags are used to authorize or unauthorize services and packs.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupServiceModifyAuthorizationListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupServicePhoneNumberLookupRequest": {"post": {"tags": ["Group"], "summary": "GroupServicePhoneNumberLookupRequest", "description": "Lookup if the given number is defined in the specified service in the group.\n        The response is GroupServicePhoneNumberLookupResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupServicePhoneNumberLookupRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupServiceUnassignListRequest": {"post": {"tags": ["Group"], "summary": "GroupServiceUnassignListRequest", "description": "Unassign one or more of the group's assigned services.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupServiceUnassignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupSessionAdmissionControlGetAvailableDeviceListRequest": {"post": {"tags": ["Group"], "summary": "GroupSessionAdmissionControlGetAvailableDeviceListRequest", "description": "Request to get the list of devices can be assigned to session admission control group for the group.\n        The response is either an GroupSessionAdmissionControlGetAvailableDeviceListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGetAvailableDeviceListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupSessionAdmissionControlGetRequest": {"post": {"tags": ["Group"], "summary": "GroupSessionAdmissionControlGetRequest", "description": "Get the session admission control capacity for the group.\n        The response is either a GroupSessionAdmissionControlGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupSessionAdmissionControlGroupAddDeviceListRequest": {"post": {"tags": ["Group"], "summary": "GroupSessionAdmissionControlGroupAddDeviceListRequest", "description": "Request to add one ore more devices to a group level session admission control group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGroupAddDeviceListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupSessionAdmissionControlGroupAddRequest19sp1": {"post": {"tags": ["Group"], "summary": "GroupSessionAdmissionControlGroupAddRequest19sp1", "description": "Request to add a session admission control group for the group.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Note that to provision the accessInfoPattern element, the\n        captureAccessInfoInPaniHeader system parameter needs to be set to \"true\".", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGroupAddRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupSessionAdmissionControlGroupDeleteDeviceListRequest": {"post": {"tags": ["Group"], "summary": "GroupSessionAdmissionControlGroupDeleteDeviceListRequest", "description": "Request to delete one or more devices from a group level session admission control group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGroupDeleteDeviceListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupSessionAdmissionControlGroupDeleteListRequest": {"post": {"tags": ["Group"], "summary": "GroupSessionAdmissionControlGroupDeleteListRequest", "description": "Request to delete one or more session admission control groups for the group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGroupDeleteListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupSessionAdmissionControlGroupGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupSessionAdmissionControlGroupGetListRequest", "description": "Request to get the list of session admission control group for the group.\n        The response is either a GroupSessionAdmissionControlGroupGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGroupGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupSessionAdmissionControlGroupGetRequest21sp1V2": {"post": {"tags": ["Group"], "summary": "GroupSessionAdmissionControlGroupGetRequest21sp1V2", "description": "Request to get a session admission control group for the group.\n        The response is either a GroupSessionAdmissionControlGroupGetResponse21sp1V2 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGroupGetRequest21sp1V2"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupSessionAdmissionControlGroupModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupSessionAdmissionControlGroupModifyRequest", "description": "Request to modify a session admission control group for the group.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Note that to provision the accessInfoPattern element, the\n        captureAccessInfoInPaniHeader system parameter needs to be set to \"true\".", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGroupModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupSessionAdmissionControlModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupSessionAdmissionControlModifyRequest", "description": "Request to modify session admission control capacity for the group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupShInterfaceGetUserListRequest21sp1": {"post": {"tags": ["Group"], "summary": "GroupShInterfaceGetUserListRequest21sp1", "description": "Returns a list of all Public User Identities and associated data in a group.\n        The response is either a GroupShInterfaceGetUserListResponse21sp1 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupShInterfaceGetUserListRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupStirShakenGetRequest": {"post": {"tags": ["Group"], "summary": "GroupStirShakenGetRequest", "description": "Get Group Stir Shaken service settings.\n        The response is either GroupStirShakenGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupStirShakenGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupStirShakenModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupStirShakenModifyRequest", "description": "Modify Group Stir Shaken service settings.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupStirShakenModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupTemplateOnlyDeviceFileGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupTemplateOnlyDeviceFileGetListRequest", "description": "Request to get the list of template files used to support a VDM device defined at group level.\n        The response is either GroupTemplateOnlyDeviceFileGetListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTemplateOnlyDeviceFileGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupThirdPartyEmergencyCallingGetRequest": {"post": {"tags": ["Group"], "summary": "GroupThirdPartyEmergencyCallingGetRequest", "description": "Get the third-party emergency call service settings for the Group.\n        The response is either a GroupThirdPartyEmergencyCallingGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupThirdPartyEmergencyCallingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupThirdPartyEmergencyCallingModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupThirdPartyEmergencyCallingModifyRequest", "description": "Modify the third-party emergency call service settings for the Group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupThirdPartyEmergencyCallingModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupTrunkGroupGetAvailableDetailListRequest": {"post": {"tags": ["Group"], "summary": "GroupTrunkGroupGetAvailableDetailListRequest", "description": "Requests the list of available trunk groups within a group.\n        The response is either GroupTrunkGroupGetAvailableDetailListResponse or\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetAvailableDetailListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupTrunkGroupStirShakenGetRequest": {"post": {"tags": ["Group"], "summary": "GroupTrunkGroupStirShakenGetRequest", "description": "Get Group Trunk Group Stir Shaken service settings.\n        The response is either GroupTrunkGroupStirShakenGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupStirShakenGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupTrunkGroupStirShakenModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupTrunkGroupStirShakenModifyRequest", "description": "Modify group trunk group Stir Shaken service settings.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupStirShakenModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupUserCallForwardingSettingsGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupUserCallForwardingSettingsGetListRequest", "description": "Get a list of users and the service settings for a Call Forwarding service.\n        The response is either GroupUserCallForwardingSettingsGetListResponse or ErrorResponse.\n        By default, virtual users and non-virtual users that match the selected search criteria are included in the response when \"includeVirtualUsers\" is present; otherwise, if \"includeVirtualUsers\" is absent, then only non-virtual users are returned.\n        The search can be performed using multiple criteria. If search criteria is specified, only the users matching all of the specified search criteria are included in the response. If no search criteria is specified, all results are returned.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupUserCallForwardingSettingsGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupUserCallingPlanSettingsGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupUserCallingPlanSettingsGetListRequest", "description": "Get a list of users and the default or custom calling plan setting.\n        The response is either GroupUserCallingPlanSettingsGetListResponse or ErrorResponse.\n        By default, virtual users and non-virtual users that match the selected search criteria are included in the response when \"includeVirtualUsers\" is present; otherwise, if \"includeVirtualUsers\" is absent, then only non-virtual users are returned.\n        The search can be performed using multiple criteria. If search criteria is specified, only the users matching all of the specified search criteria are included in the response. If no search criteria is specified, all results are returned.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupUserCallingPlanSettingsGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupUserCallWaitingSettingsGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupUserCallWaitingSettingsGetListRequest", "description": "Get a list of users and the Call Waiting service status (active or not active).\n        The response is either GroupUserCallWaitingSettingsGetListResponse or ErrorResponse.\n        By default, virtual users and non-virtual users that match the selected search criteria are included in the response when \"includeVirtualUsers\" is present; otherwise, if \"includeVirtualUsers\" is absent, then only non-virtual users are returned.\n        The search can be performed using multiple criteria. If search criteria is specified, only the users matching all of the specified search criteria are included in the response. If no search criteria is specified, all results are returned.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupUserCallWaitingSettingsGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupUserHotelingGuestSettingsGetListRequest": {"post": {"tags": ["Group"], "summary": "GroupUserHotelingGuestSettingsGetListRequest", "description": "Get a list of users and their Hoteling Guest service status (active or not active).\n        The response is either GroupUserHotelingGuestSettingsGetListResponse or ErrorResponse.\n        By default, virtual users and non-virtual users that match the selected search criteria are included in the response when \"includeVirtualUsers\" is present; otherwise, if \"includeVirtualUsers\" is absent, then only non-virtual users are returned.\n        The search can be performed using multiple criteria. If search criteria is specified, only the users matching all of the specified search criteria are included in the response. If no search criteria is specified, all results are returned.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupUserHotelingGuestSettingsGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupUserLanguageModifyRequest": {"post": {"tags": ["Group"], "summary": "GroupUserLanguageModifyRequest", "description": "Request to modify language of the users within a group.\n        If neither applyToUsers nor applyToServiceInstances is specified in the request, language is not changed for any user in the group.\n        If applyToUsers is specified, regular users within the group have the language modified.\n        If applyToServiceInstances is specified, the service instance users within the group have the language modified.\n\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupUserLanguageModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupVisualDeviceManagementGetDeviceInfoRequest": {"post": {"tags": ["Group"], "summary": "GroupVisualDeviceManagementGetDeviceInfoRequest", "description": "Get the information for a specified device supporting visual device management.\n        The response is either a GroupVisualDeviceManagementGetDeviceInfoResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupVisualDeviceManagementGetDeviceInfoRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupXsiPolicyProfileAssignListRequest": {"post": {"tags": ["Group"], "summary": "GroupXsiPolicyProfileAssignListRequest", "description": "Assign a group level Xsi policy profile and a list of user Xsi policy profiles\n        to a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupXsiPolicyProfileAssignListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupXsiPolicyProfileGetAssignedListRequest": {"post": {"tags": ["Group"], "summary": "GroupXsiPolicyProfileGetAssignedListRequest", "description": "Get a list of Xsi policy profile assigned.\n        The response is either a GroupXsiPolicyProfileGetAssignedListResponse\n        or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupXsiPolicyProfileGetAssignedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupXsiPolicyProfileGetAssignedUserListRequest": {"post": {"tags": ["Group"], "summary": "GroupXsiPolicyProfileGetAssignedUserListRequest", "description": "Get a list of user within a group that have a given\n        user Xsi policy profile assigned.\n        The response is either a GroupXsiPolicyProfileGetAssignedUserListResponse\n        or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupXsiPolicyProfileGetAssignedUserListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupXsiPolicyProfileModifyDefaultRequest": {"post": {"tags": ["Group"], "summary": "GroupXsiPolicyProfileModifyDefaultRequest", "description": "Modifies the default Xsi policy profile for a group.\n        It can only modify the user level default Xsi policy profile.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupXsiPolicyProfileModifyDefaultRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/group/GroupXsiPolicyProfileUnassignListRequest": {"post": {"tags": ["Group"], "summary": "GroupXsiPolicyProfileUnassignListRequest", "description": "Unassign a list of Xsi policy profile.\n        Only user level Xsi policy profile can be unassigned.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupXsiPolicyProfileUnassignListRequest"}}}}, "responses": {"200": {"description": ""}}}}}, "components": {"securitySchemes": {"basicAuth": {"type": "http", "scheme": "basic"}}, "schemas": {"GroupAccessDeviceAddRequest22V2": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "protocol": {"type": "string", "minLength": 1, "maxLength": 20}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "port": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "outboundProxyServerNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "stunServerNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "serialNumber": {"type": "string", "minLength": 1, "maxLength": 80}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "physicalLocation": {"type": "string", "minLength": 1, "maxLength": 1024}, "transportProtocol": {"type": "string", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, "useCustomUserNamePassword": {"type": "boolean"}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, {"type": "object", "properties": {"groupExternalId": {"type": "string", "maxLength": 36}, "deviceExternalId": {"type": "string", "maxLength": 36}}, "required": ["groupExternalId", "deviceExternalId"]}]}], "required": ["deviceType"]}, "GroupAccessDeviceAvailablePortGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}}, "required": ["serviceProviderId", "groupId", "accessDevice"]}, "GroupAccessDeviceCustomTagAddOrModifyListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "tag": {"type": "array", "items": {"type": "object", "properties": {"tagName": {"type": "string", "minLength": 1, "maxLength": 64}, "tagValue": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["tagName"]}}}, "required": ["serviceProviderId", "groupId", "deviceName", "tag"]}, "GroupAccessDeviceCustomTagAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "tagName": {"type": "string", "minLength": 1, "maxLength": 64}, "tagValue": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["serviceProviderId", "groupId", "deviceName", "tagName"]}, "GroupAccessDeviceCustomTagDeleteListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "tagName": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 64}}}, "required": ["serviceProviderId", "groupId", "deviceName", "tagName"]}, "GroupAccessDeviceCustomTagGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceCustomTagModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "tagName": {"type": "string", "minLength": 1, "maxLength": 64}}, "oneOf": [{"type": "object", "properties": {"tagValue": {"type": "string", "minLength": 1, "maxLength": 256}}}, {"type": "object", "properties": {"tagValueToEncrypt": {"type": "string", "minLength": 1, "maxLength": 256}}}], "required": ["serviceProviderId", "groupId", "deviceName", "tagName"]}, "GroupAccessDeviceDeleteRequest": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"deviceExternalId": {"type": "string", "maxLength": 36}}, "required": ["deviceExternalId"]}, {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}]}, "GroupAccessDeviceDeviceActivationGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceDeviceActivationModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "activateDevice": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "deviceName", "activateDevice"]}, "GroupAccessDeviceFileGetListRequest14sp8": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceFileGetRequest20": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["serviceProviderId", "groupId", "deviceName", "fileFormat"]}, "GroupAccessDeviceFileModifyRequest14sp8": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "fileSource": {"type": "string", "enum": ["Default", "Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}, "extendedCaptureEnabled": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "deviceName", "fileFormat"]}, "GroupAccessDeviceGenerateActivationCodeRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceGetAvailableCustomTagListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "tagSetName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceGetAvailableDetailListRequest19": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "isMusicOnHold": {"type": "boolean"}, "onlyVideoCapable": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "isMusicOnHold", "onlyVideoCapable"]}, "GroupAccessDeviceGetEnhancedConfigurationTypeListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupAccessDeviceGetEnhancedConfigurationTypeRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceType"]}, "GroupAccessDeviceGetLinkedLeafDeviceListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceGetLinkedTreeDeviceRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceGetListRequest": {"type": "object", "properties": {"responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaDeviceName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 40}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceMACAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 12}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceNetAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactDeviceType": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "searchCriteriaAccessDeviceVersion": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 1024}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "oneOf": [{"type": "object", "properties": {"groupExternalId": {"type": "string", "maxLength": 36}}, "required": ["groupExternalId"]}, {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}]}, "GroupAccessDeviceGetNativeTagsWithLogicListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceGetPagedSortedListRequest22": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "includeTotalNumberOfRows": {"type": "boolean"}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "sortOrder": {"type": "array", "items": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sortByDeviceName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDeviceName"]}, {"type": "object", "properties": {"sortByDeviceType": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDeviceType"]}, {"type": "object", "properties": {"sortByDeviceNetAddress": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDeviceNetAddress"]}, {"type": "object", "properties": {"sortByDeviceMACAddress": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDeviceMACAddress"]}]}}, "searchCriteriaDeviceName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 40}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceMACAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 12}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceNetAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactDeviceType": {"type": "array", "items": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}}, "searchCriteriaAccessDeviceVersion": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 1024}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaModeOr": {"type": "boolean"}, "getVisualDeviceManagementAPIDevicesOnly": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId"]}, "GroupAccessDeviceGetRequest24": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"deviceExternalId": {"type": "string", "maxLength": 36}}, "required": ["deviceExternalId"]}, {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}]}, "GroupAccessDeviceGetUserListRequest21sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaLinePortUserPart": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaLinePortDomain": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactEndpointType": {"type": "object", "properties": {"endpointType": {"type": "string", "enum": ["Primary", "Shared Call Appearance", "Video Add On", "Public Service Identity", "Music On Hold Internal", "Flexible Seating Guest", "Mobility"]}}, "required": ["endpointType"]}, "searchCriteriaExactUserType": {"type": "object", "properties": {"userType": {"type": "string", "enum": ["Normal", "Auto Attendant", "BroadWorks Anywhere", "Call Center", "Collaborate Bridge", "Find-me/Follow-me", "Flexible Seating Host", "Group Paging", "Hunt Group", "Instant Group Call", "Meet-Me Conferencing", "Music On Hold", "Route Point", "Voice Messaging", "VoiceXML"]}}, "required": ["userType"]}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaExactPortNumber": {"type": "object", "properties": {"port": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["port"]}, "searchCriteriaAccessDeviceEndpointPrivateIdentity": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserHotlineContact": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceLinkDeviceListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "leafDeviceKey": {"type": "array", "items": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceName"]}}}, "required": ["serviceProviderId", "groupId", "deviceName", "leafDeviceKey"]}, "GroupAccessDeviceModifyRequest22": {"type": "object", "properties": {"protocol": {"type": "string", "minLength": 1, "maxLength": 20}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "port": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "outboundProxyServerNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "stunServerNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "serialNumber": {"type": "string", "minLength": 1, "maxLength": 80}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "configurationMode": {"type": "string", "enum": ["Default", "Manual", "Custom"]}, "configurationFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}, "physicalLocation": {"type": "string", "minLength": 1, "maxLength": 1024}, "transportProtocol": {"type": "string", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, "useCustomUserNamePassword": {"type": "boolean"}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}}, "oneOf": [{"type": "object", "properties": {"deviceExternalId": {"type": "string", "maxLength": 36}}, "required": ["deviceExternalId"]}, {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}]}, "GroupAccessDeviceModifyUserRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "privateIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "isPrimaryLinePort": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "deviceName", "linePort"]}, "GroupAccessDeviceResetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceTagSetGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceTagSetModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "tagSetName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceUnlinkDeviceListRequest": {"type": "object", "properties": {"leafDeviceKey": {"type": "array", "items": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceName"]}}}, "required": ["leafDeviceKey"]}, "GroupAdminAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "userId": {"type": "string", "minLength": 1, "maxLength": 161}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "language": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "userId"]}, "GroupAdminAlternateIdAddRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "alternateUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "description": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["userId", "alternateUserId"]}, "GroupAdminAlternateIdDeleteRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "alternateUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId", "alternateUserId"]}, "GroupAdminAlternateIdGetListRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "GroupAdminAlternateIdModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "alternateUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "newAlternateUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "description": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["userId", "alternateUserId"]}, "GroupAdminDeleteRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "GroupAdminGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupAdminGetPagedSortedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "sortOrder": {"type": "array", "items": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sortByAdminId": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByAdminId"]}, {"type": "object", "properties": {"sortByAdminLastName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByAdminLastName"]}, {"type": "object", "properties": {"sortByAdminFirstName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByAdminFirstName"]}]}}, "searchCriteriaAdminId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaAdminLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaAdminFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactGroupAdminType": {"type": "array", "items": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Group", "Department"]}}, "required": ["type"]}}, "searchCriteriaLanguage": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 40}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDepartmentName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaModeOr": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId"]}, "GroupAdminGetPolicyRequest20": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "GroupAdminGetRequest22": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "GroupAdministratorPasswordRulesGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupAdminModifyPolicyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "profileAccess": {"type": "string", "enum": ["Full", "Read-Only", "None"]}, "userAccess": {"type": "string", "enum": ["Full", "Full Profile", "Read-Only Profile", "No Profile", "None"]}, "adminAccess": {"type": "string", "enum": ["Full", "Read-Only", "None"]}, "departmentAccess": {"type": "string", "enum": ["Full", "Read-Only", "None"]}, "accessDeviceAccess": {"type": "string", "enum": ["Full", "Associate User With Device", "Read-Only"]}, "enhancedServiceInstanceAccess": {"type": "string", "enum": ["Full", "Modify-Only"]}, "featureAccessCodeAccess": {"type": "string", "enum": ["Full", "Read-Only"]}, "phoneNumberExtensionAccess": {"type": "string", "enum": ["Full", "Read-Only"]}, "callingLineIdNumberAccess": {"type": "string", "enum": ["Full", "Read-Only"]}, "serviceAccess": {"type": "string", "enum": ["Full", "Read-Only"]}, "trunkGroupAccess": {"type": "string", "enum": ["Full", "Full Resources", "Read-Only Resources", "None"]}, "sessionAdmissionControlAccess": {"type": "string", "enum": ["Full", "Read-Only", "None"]}, "officeZoneAccess": {"type": "string", "enum": ["Full", "Read-Only"]}, "dialableCallerIDAccess": {"type": "string", "enum": ["Full", "Read-Only", "None"]}, "numberActivationAccess": {"type": "string", "enum": ["Full", "Read-Only", "None"]}, "verifyTranslationAndRoutingAccess": {"type": "string", "enum": ["Full", "None"]}, "communicationBarringUserProfileAccess": {"type": "string", "enum": ["Full", "None"]}}, "required": ["userId"]}, "GroupAdminModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "language": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userId"]}, "GroupAnnouncementFileAddRequest": {"type": "object", "properties": {"announcementFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "announcementFileName": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceProviderId", "groupId", "announcementFileName"]}, {"type": "object", "properties": {"groupExternalId": {"type": "string", "maxLength": 36}, "announcementFileExternalId": {"type": "string", "maxLength": 36}}, "required": ["groupExternalId", "announcementFileExternalId"]}]}], "required": ["announcementFile"]}, "GroupAnnouncementFileDeleteListRequest": {"type": "object", "properties": {}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "announcementFileKey": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "mediaFileType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "required": ["name", "mediaFileType"]}}}, "required": ["serviceProviderId", "groupId", "announcementFileKey"]}, {"type": "object", "properties": {"groupExternalId": {"type": "string", "maxLength": 36}, "announcementFileExternalId": {"type": "array", "items": {"type": "string", "maxLength": 36}}}, "required": ["groupExternalId", "announcementFileExternalId"]}]}]}, "GroupAnnouncementFileGetListRequest": {"type": "object", "properties": {"announcementFileType": {"type": "string", "enum": ["Audio", "Video"]}, "includeAnnouncementTable": {"type": "boolean"}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaAnnouncementFileName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "oneOf": [{"type": "object", "properties": {"groupExternalId": {"type": "string", "maxLength": 36}}, "required": ["groupExternalId"]}, {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}], "required": ["includeAnnouncementTable"]}, "GroupAnnouncementFileGetPagedSortedListRequest": {"type": "object", "properties": {"responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "searchCriteriaAnnouncementFileName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactAnnouncementFileType": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Audio", "Video"]}}, "required": ["type"]}, "searchCriteriaExactMediaFileType": {"type": "array", "items": {"type": "object", "properties": {"type": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "required": ["type"]}}, "searchCriteriaModeOr": {"type": "boolean"}}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupExternalId": {"type": "string", "maxLength": 36}}, "required": ["serviceProviderId", "groupId", "groupExternalId"]}]}, {"oneOf": [{"type": "object", "properties": {"sortByAnnouncementFileName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByAnnouncementFileName"]}, {"type": "object", "properties": {"sortByAnnouncementFileSize": {"type": "object", "properties": {"isAscending": {"type": "boolean"}}, "required": ["isAscending"]}}, "required": ["sortByAnnouncementFileSize"]}]}]}, "GroupAnnouncementFileGetRequest22": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"announcementFileExternalId": {"type": "string", "maxLength": 36}}, "required": ["announcementFileExternalId"]}, {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "announcementFileKey": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "mediaFileType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "required": ["name", "mediaFileType"]}}, "required": ["serviceProviderId", "groupId", "announcementFileKey"]}]}, "GroupAnnouncementFileModifyRequest": {"type": "object", "properties": {"newAnnouncementFileName": {"type": "string", "minLength": 1, "maxLength": 80}, "announcementFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "announcementFileKey": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "mediaFileType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "required": ["name", "mediaFileType"]}}, "required": ["serviceProviderId", "groupId", "announcementFileKey"]}, {"type": "object", "properties": {"announcementFileExternalId": {"type": "string", "maxLength": 36}}, "required": ["announcementFileExternalId"]}]}]}, "GroupAnnouncementRepositoryGetSettingsRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupApplicationServerSetGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupApplicationServerSetModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "applicationServerSetName": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceProviderId", "groupId"]}, "GroupBroadWorksMobileManagerActivationRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "isActive": {"type": "boolean"}, "deactivationReason": {"type": "string", "minLength": 1, "maxLength": 100}}, "required": ["serviceProviderId", "groupId", "isActive"]}, "GroupBroadWorksMobileManagerAddHomeZoneRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "homeZoneDomainName": {"type": "string", "minLength": 1, "maxLength": 100}, "mobileCountryCode": {"type": "string", "minLength": 1, "maxLength": 3}, "mobileNetworkCode": {"type": "string", "minLength": 1, "maxLength": 3}, "locationAreaCode": {"type": "string", "minLength": 1, "maxLength": 5}, "cellIdentity": {"type": "string", "minLength": 1, "maxLength": 5}}, "required": ["serviceProviderId", "groupId", "homeZoneDomainName", "mobileCountryCode", "mobileNetworkCode", "locationAreaCode", "cellIdentity"]}, "GroupBroadWorksMobileManagerAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "informationFile": {"type": "string", "minLength": 1}, "certificateFile": {"type": "string", "minLength": 1}, "isActive": {"type": "boolean"}, "localToCarrier": {"type": "boolean"}, "maxTxPerSecondEnabled": {"type": "boolean"}, "maxTxPerSecond": {"type": "integer", "minimum": 1.0, "maximum": 1000.0}, "tldnEnabled": {"type": "boolean"}, "genericNumberEnabled": {"type": "boolean"}, "mobileStateCheckEnabled": {"type": "boolean"}, "locationBasedServicesEnabled": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "informationFile", "certificateFile", "isActive", "localToCarrier", "maxTxPerSecondEnabled", "tldnEnabled", "genericNumberEnabled", "mobileStateCheckEnabled", "locationBasedServicesEnabled"]}, "GroupBroadWorksMobileManagerDeleteHomeZoneListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "homeZoneId": {"type": "array", "items": {"type": "string"}}}, "required": ["serviceProviderId", "groupId", "homeZoneId"]}, "GroupBroadWorksMobileManagerDeleteHomeZoneRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "homeZoneId": {"type": "string"}}, "required": ["serviceProviderId", "groupId", "homeZoneId"]}, "GroupBroadWorksMobileManagerDeleteRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupBroadWorksMobileManagerGetDomainListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupBroadWorksMobileManagerGetHomeZoneListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupBroadWorksMobileManagerGetHomeZoneRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "homeZoneId": {"type": "string"}}, "required": ["serviceProviderId", "groupId", "homeZoneId"]}, "GroupBroadWorksMobileManagerGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupBroadWorksMobileManagerModifyHomeZoneRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "homeZoneId": {"type": "string"}, "homeZoneDomainName": {"type": "string", "minLength": 1, "maxLength": 100}, "mobileCountryCode": {"type": "string", "minLength": 1, "maxLength": 3}, "mobileNetworkCode": {"type": "string", "minLength": 1, "maxLength": 3}, "locationAreaCode": {"type": "string", "minLength": 1, "maxLength": 5}, "cellIdentity": {"type": "string", "minLength": 1, "maxLength": 5}}, "required": ["serviceProviderId", "groupId", "homeZoneId"]}, "GroupBroadWorksMobileManagerModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "informationFile": {"type": "string", "minLength": 1}, "certificateFile": {"type": "string", "minLength": 1}, "localToCarrier": {"type": "boolean"}, "maxTxPerSecondEnabled": {"type": "boolean"}, "maxTxPerSecond": {"type": "integer", "minimum": 1.0, "maximum": 1000.0}, "tldnEnabled": {"type": "boolean"}, "genericNumberEnabled": {"type": "boolean"}, "mobileStateCheckEnabled": {"type": "boolean"}, "locationBasedServicesEnabled": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId"]}, "GroupBroadWorksMobileManagerSendCarrierFilesRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "emailTo": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceProviderId", "groupId", "emailTo"]}, "GroupCallProcessingGetPolicyRequest22V3": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingModifyPolicyRequest15sp2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useGroupCLIDSetting": {"type": "boolean"}, "useGroupMediaSetting": {"type": "boolean"}, "useGroupCallLimitsSetting": {"type": "boolean"}, "useGroupTranslationRoutingSetting": {"type": "boolean"}, "useGroupDCLIDSetting": {"type": "boolean"}, "useMaxSimultaneousCalls": {"type": "boolean"}, "maxSimultaneousCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "useMaxSimultaneousVideoCalls": {"type": "boolean"}, "maxSimultaneousVideoCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "useMaxCallTimeForAnsweredCalls": {"type": "boolean"}, "maxCallTimeForAnsweredCallsMinutes": {"type": "integer", "minimum": 3.0, "maximum": 2880.0}, "useMaxCallTimeForUnansweredCalls": {"type": "boolean"}, "maxCallTimeForUnansweredCallsMinutes": {"type": "integer", "minimum": 1.0, "maximum": 2880.0}, "mediaPolicySelection": {"type": "string", "enum": ["Use Uncompressed Codec", "Use Supported Media Set", "No Restrictions"]}, "supportedMediaSetName": {"type": "string", "minLength": 1, "maxLength": 80}, "networkUsageSelection": {"type": "string", "enum": ["Force All Calls", "Force All Except Extension and Location Calls", "Do Not Force Enterprise and Group Calls"]}, "enforceGroupCallingLineIdentityRestriction": {"type": "boolean"}, "allowEnterpriseGroupCallTypingForPrivateDialingPlan": {"type": "boolean"}, "allowEnterpriseGroupCallTypingForPublicDialingPlan": {"type": "boolean"}, "overrideCLIDRestrictionForPrivateCallCategory": {"type": "boolean"}, "useEnterpriseCLIDForPrivateCallCategory": {"type": "boolean"}, "enableEnterpriseExtensionDialing": {"type": "boolean"}, "useMaxConcurrentRedirectedCalls": {"type": "boolean"}, "maxConcurrentRedirectedCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "useMaxFindMeFollowMeDepth": {"type": "boolean"}, "maxFindMeFollowMeDepth": {"type": "integer", "minimum": 1.0, "maximum": 100.0}, "maxRedirectionDepth": {"type": "integer", "minimum": 1.0, "maximum": 100.0}, "useMaxConcurrentFindMeFollowMeInvocations": {"type": "boolean"}, "maxConcurrentFindMeFollowMeInvocations": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "clidPolicy": {"type": "string", "enum": ["Use DN", "Use Configurable CLID", "Use Group CLID"]}, "emergencyClidPolicy": {"type": "string", "enum": ["Use DN", "Use Configurable CLID", "Use Group CLID"]}, "allowAlternateNumbersForRedirectingIdentity": {"type": "boolean"}, "useGroupName": {"type": "boolean"}, "blockCallingNameForExternalCalls": {"type": "boolean"}, "enableDialableCallerID": {"type": "boolean"}, "allowConfigurableCLIDForRedirectingIdentity": {"type": "boolean"}, "allowDepartmentCLIDNameOverride": {"type": "boolean"}, "enterpriseCallsCLIDPolicy": {"type": "string", "enum": ["Use Extension", "Use Location Code plus Extension", "Use External Calls Policy"]}, "groupCallsCLIDPolicy": {"type": "string", "enum": ["Use Extension", "Use Location Code plus Extension", "Use External Calls Policy"]}, "useGroupPhoneListLookupSetting": {"type": "boolean"}, "enablePhoneListLookup": {"type": "boolean"}, "useMaxConcurrentTerminatingAlertingRequests": {"type": "boolean"}, "maxConcurrentTerminatingAlertingRequests": {"type": "integer", "minimum": 1.0, "maximum": 50.0}, "includeRedirectionsInMaximumNumberOfConcurrentCalls": {"type": "boolean"}, "useUserPhoneNumberForGroupCallsWhenInternalCLIDUnavailable": {"type": "boolean"}, "useUserPhoneNumberForEnterpriseCallsWhenInternalCLIDUnavailable": {"type": "boolean"}, "routeOverrideDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "routeOverridePrefix": {"type": "string", "minLength": 1, "maxLength": 10}, "allowMobileDNForRedirectingIdentity": {"type": "boolean"}, "enableGatewayRoutePolicy": {"type": "boolean"}, "networkCallsGatewayRouteIdentity": {"type": "string", "minLength": 1, "maxLength": 30}, "networkURLCallsGatewayRouteIdentity": {"type": "string", "minLength": 1, "maxLength": 30}, "emergencyCallsGatewayRouteIdentity": {"type": "string", "minLength": 1, "maxLength": 30}, "repairCallsGatewayRouteIdentity": {"type": "string", "minLength": 1, "maxLength": 30}, "callTypingErrorsGatewayRouteIdentity": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCommonPhoneListAddListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "entry": {"type": "array", "items": {"type": "object", "properties": {"entryName": {"type": "string", "minLength": 1, "maxLength": 50}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["entryName", "phoneNumber"]}}}, "required": ["serviceProviderId", "groupId", "entry"]}, "GroupCommonPhoneListDeleteListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "entryName": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 50}}}, "required": ["serviceProviderId", "groupId", "entryName"]}, "GroupCommonPhoneListGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaModeOr": {"type": "boolean"}, "searchCriteriaGroupCommonPhoneListName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupCommonPhoneListNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupCommonPhoneListModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "entryName": {"type": "string", "minLength": 1, "maxLength": 50}, "newEntryName": {"type": "string", "minLength": 1, "maxLength": 50}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "entryName"]}, "GroupCommunicationBarringAuthorizationCodeAddListRequest21sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "code": {"type": "array", "items": {"type": "object", "properties": {"code": {"type": "string", "minLength": 2, "maxLength": 14}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["code"]}}}, "required": ["serviceProviderId", "groupId", "code"]}, "GroupCommunicationBarringAuthorizationCodeDeleteListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "code": {"type": "array", "items": {"type": "string", "minLength": 2, "maxLength": 14}}}, "required": ["serviceProviderId", "groupId", "code"]}, "GroupCommunicationBarringAuthorizationCodeGetListRequest21sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaCommunicationBarringAuthorizationCode": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 14}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaCommunicationBarringAuthorizationCodeDescription": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaNetworkClassOfServiceName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 40}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupCommunicationBarringAuthorizationCodeGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "code": {"type": "string", "minLength": 2, "maxLength": 14}}, "required": ["serviceProviderId", "groupId", "code"]}, "GroupCommunicationBarringAuthorizationCodeModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "code": {"type": "string", "minLength": 2, "maxLength": 14}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "code"]}, "GroupCommunicationBarringGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCommunicationBarringModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useDefaultServiceProviderProfile": {"type": "boolean"}, "profile": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId"]}, "GroupCommunicationBarringProfileGetAssignedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCommunicationBarringProfileModifyListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "profileName": {"type": "object", "properties": {"profileName": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["profileName"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupConsolidatedAddRequest": {"type": "object", "properties": {"groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupExternalId": {"type": "string", "maxLength": 36}, "defaultDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "userLimit": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "groupName": {"type": "string", "minLength": 1, "maxLength": 80}, "callingLineIdName": {"type": "string", "minLength": 1, "maxLength": 80}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "locationDialingCode": {"type": "string", "minLength": 1, "maxLength": 15}, "contact": {"type": "object", "properties": {"contactName": {"type": "string", "minLength": 1, "maxLength": 30}, "contactNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "contactEmail": {"type": "string", "minLength": 1, "maxLength": 80}}}, "address": {"type": "object", "properties": {"addressLine1": {"type": "string", "minLength": 1, "maxLength": 80}, "addressLine2": {"type": "string", "minLength": 1, "maxLength": 80}, "city": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvince": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvinceDisplayName": {"type": "string", "minLength": 1, "maxLength": 50}, "zipOrPostalCode": {"type": "string", "minLength": 1, "maxLength": 50}, "country": {"type": "string", "minLength": 1, "maxLength": 50}}}, "servicePolicy": {"type": "string", "minLength": 1, "maxLength": 80}, "callProcessingSliceId": {"type": "string", "minLength": 1, "maxLength": 80}, "provisioningSliceId": {"type": "string", "minLength": 1, "maxLength": 80}, "subscriberPartition": {"type": "string", "minLength": 1, "maxLength": 80}, "preferredDataCenter": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultUserCallingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "domain": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 80}}, "admin": {"type": "array", "items": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "language": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userId"]}}, "minExtensionLength": {"type": "integer", "minimum": 2.0, "maximum": 20.0}, "maxExtensionLength": {"type": "integer", "minimum": 2.0, "maximum": 20.0}, "defaultExtensionLength": {"type": "integer", "minimum": 2.0, "maximum": 20.0}, "groupServiceAuthorizationAndAssignment": {"type": "array", "items": {"type": "object", "properties": {"serviceName": {"type": "string", "enum": ["Account/Authorization Codes", "Auto Attendant", "Auto Attendant - Video", "Auto Attendant - Standard", "Call Capacity Management", "Call Park", "Call Pickup", "City-Wide Centrex", "Custom Ringback Group", "Custom Ringback Group - Video", "Emergency Zones", "Enhanced Outgoing Calling Plan", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Incoming Calling Plan", "Instant Group Call", "Intercept Group", "Inventory Report", "LDAP Integration", "Meet-Me Conferencing", "Music On Hold", "Music On Hold - Video", "Outgoing Calling Plan", "Preferred Carrier Group", "Route Point", "Series Completion", "Service Scripts Group", "Trunk Group", "Voice Messaging Group", "VoiceXML"]}, "authorizedQuantity": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "assign": {"type": "boolean"}}, "required": ["serviceName"]}}, "userServiceAuthorization": {"type": "array", "items": {"type": "object", "properties": {"serviceName": {"type": "string", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}}, "oneOf": [{"type": "object", "properties": {"authorizedQuantity": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}}, "required": ["authorizedQuantity"]}, {"type": "object", "properties": {"unauthorized": {"type": "boolean"}}, "required": ["unauthorized"]}], "required": ["serviceName"]}}, "servicePackAuthorization": {"type": "array", "items": {"type": "object", "properties": {"servicePackName": {"type": "string", "minLength": 1, "maxLength": 80}}, "oneOf": [{"type": "object", "properties": {"authorizedQuantity": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}}, "required": ["authorizedQuantity"]}, {"type": "object", "properties": {"unauthorized": {"type": "boolean"}}, "required": ["unauthorized"]}], "required": ["servicePackName"]}}, "activatablePhoneNumber": {"type": "array", "items": {"type": "object", "properties": {"DN": {"type": "string", "minLength": 1, "maxLength": 23}, "activate": {"type": "boolean"}}, "required": ["DN"]}}, "activatableDNRange": {"type": "array", "items": {"type": "object", "properties": {"minPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "maxPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "activate": {"type": "boolean"}}, "required": ["minPhoneNumber", "maxPhoneNumber"]}}, "routingProfile": {"type": "string", "minLength": 4, "maxLength": 12}, "meetMeConferencingAllocatedPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}}, "required": ["quantity"]}]}, "trunkGroupMaxActiveCalls": {"type": "integer"}, "trunkGroupBurstingMaxActiveCalls": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 0.0}}, "required": ["quantity"]}]}}, "oneOf": [{"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, {"type": "object", "properties": {"serviceProviderExternalId": {"type": "string", "maxLength": 36}}, "required": ["serviceProviderExternalId"]}], "required": ["defaultDomain", "userLimit"]}, "GroupConsolidatedAddRequest22": {"type": "object", "properties": {"groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupExternalId": {"type": "string", "maxLength": 36}, "defaultDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "userLimit": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "groupName": {"type": "string", "minLength": 1, "maxLength": 80}, "callingLineIdName": {"type": "string", "minLength": 1, "maxLength": 80}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "locationDialingCode": {"type": "string", "minLength": 1, "maxLength": 15}, "contact": {"type": "object", "properties": {"contactName": {"type": "string", "minLength": 1, "maxLength": 30}, "contactNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "contactEmail": {"type": "string", "minLength": 1, "maxLength": 80}}}, "address": {"type": "object", "properties": {"addressLine1": {"type": "string", "minLength": 1, "maxLength": 80}, "addressLine2": {"type": "string", "minLength": 1, "maxLength": 80}, "city": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvince": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvinceDisplayName": {"type": "string", "minLength": 1, "maxLength": 50}, "zipOrPostalCode": {"type": "string", "minLength": 1, "maxLength": 50}, "country": {"type": "string", "minLength": 1, "maxLength": 50}}}, "servicePolicy": {"type": "string", "minLength": 1, "maxLength": 80}, "callProcessingSliceId": {"type": "string", "minLength": 1, "maxLength": 80}, "provisioningSliceId": {"type": "string", "minLength": 1, "maxLength": 80}, "subscriberPartition": {"type": "string", "minLength": 1, "maxLength": 80}, "preferredDataCenter": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultUserCallingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "domain": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 80}}, "admin": {"type": "array", "items": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "language": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userId"]}}, "minExtensionLength": {"type": "integer", "minimum": 2.0, "maximum": 20.0}, "maxExtensionLength": {"type": "integer", "minimum": 2.0, "maximum": 20.0}, "defaultExtensionLength": {"type": "integer", "minimum": 2.0, "maximum": 20.0}, "groupServiceAuthorizationAndAssignment": {"type": "array", "items": {"type": "object", "properties": {"serviceName": {"type": "string", "enum": ["Account/Authorization Codes", "Auto Attendant", "Auto Attendant - Video", "Auto Attendant - Standard", "Call Capacity Management", "Call Park", "Call Pickup", "City-Wide Centrex", "Custom Ringback Group", "Custom Ringback Group - Video", "Emergency Zones", "Enhanced Outgoing Calling Plan", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Incoming Calling Plan", "Instant Group Call", "Intercept Group", "Inventory Report", "LDAP Integration", "Meet-Me Conferencing", "Music On Hold", "Music On Hold - Video", "Outgoing Calling Plan", "Preferred Carrier Group", "Route Point", "Series Completion", "Service Scripts Group", "Trunk Group", "Voice Messaging Group", "VoiceXML"]}, "authorizedQuantity": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "assign": {"type": "boolean"}}, "required": ["serviceName"]}}, "userServiceAuthorization": {"type": "array", "items": {"type": "object", "properties": {"serviceName": {"type": "string", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}}, "oneOf": [{"type": "object", "properties": {"authorizedQuantity": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}}, "required": ["authorizedQuantity"]}, {"type": "object", "properties": {"unauthorized": {"type": "boolean"}}, "required": ["unauthorized"]}], "required": ["serviceName"]}}, "servicePackAuthorization": {"type": "array", "items": {"type": "object", "properties": {"servicePackName": {"type": "string", "minLength": 1, "maxLength": 80}}, "oneOf": [{"type": "object", "properties": {"authorizedQuantity": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}}, "required": ["authorizedQuantity"]}, {"type": "object", "properties": {"unauthorized": {"type": "boolean"}}, "required": ["unauthorized"]}], "required": ["servicePackName"]}}, "activatablePhoneNumber": {"type": "array", "items": {"type": "object", "properties": {"DN": {"type": "string", "minLength": 1, "maxLength": 23}, "activate": {"type": "boolean"}}, "required": ["DN"]}}, "activatableDNRange": {"type": "array", "items": {"type": "object", "properties": {"minPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "maxPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "activate": {"type": "boolean"}}, "required": ["minPhoneNumber", "maxPhoneNumber"]}}, "routingProfile": {"type": "string", "minLength": 4, "maxLength": 12}, "meetMeConferencingAllocatedPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}}, "required": ["quantity"]}]}, "trunkGroupMaxActiveCalls": {"type": "integer"}, "trunkGroupBurstingMaxActiveCalls": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 0.0}}, "required": ["quantity"]}]}}, "oneOf": [{"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, {"type": "object", "properties": {"serviceProviderExternalId": {"type": "string", "maxLength": 36}}, "required": ["serviceProviderExternalId"]}], "required": ["defaultDomain", "userLimit"]}, "GroupConsolidatedDnAssignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "array", "items": {"type": "object", "properties": {"DN": {"type": "string", "minLength": 1, "maxLength": 23}, "activate": {"type": "boolean"}}, "required": ["DN"]}}, "dnRange": {"type": "array", "items": {"type": "object", "properties": {"minPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "maxPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "activate": {"type": "boolean"}}, "required": ["minPhoneNumber", "maxPhoneNumber"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupCPEConfigRebuildConfigFileRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "force": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "deviceType"]}, "GroupCPEConfigRebuildDeviceConfigFileRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "force": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupCPEConfigReorderDeviceLinePortsRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "orderedLinePortList": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["serviceProviderId", "groupId", "deviceName", "orderedLinePortList"]}, "GroupCPEConfigResetDeviceRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupCPEConfigResetDeviceTypeRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceType"]}, "GroupCPEConfigSetConfigFileRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "configFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}}, "required": ["serviceProviderId", "groupId", "deviceType", "configFile"]}, "GroupCustomContactDirectoryAddRequest17": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "entry": {"type": "array", "items": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, {"type": "object", "properties": {"virtualOnNetPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["virtualOnNetPhoneNumber"]}]}}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupCustomContactDirectoryDeleteRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupCustomContactDirectoryGetAvailableUserListRequest17": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaExactUserGroup": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupCustomContactDirectoryGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCustomContactDirectoryGetRequest17": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaModeOr": {"type": "boolean"}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaMobilePhoneNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaImpId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 196}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaTitle": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaReceptionistNote": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 256}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupCustomContactDirectoryModifyRequest17": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "newName": {"type": "string", "minLength": 1, "maxLength": 40}, "entryList": {"type": "object", "properties": {"entry": {"type": "array", "items": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, {"type": "object", "properties": {"virtualOnNetPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["virtualOnNetPhoneNumber"]}]}}}, "required": ["entry"]}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupDeleteRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDepartmentAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "departmentName": {"type": "string", "minLength": 1, "maxLength": 50}, "parentDepartmentKey": {"type": "object", "properties": {}}, "callingLineIdName": {"type": "string"}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["serviceProviderId", "groupId", "departmentName"]}, "GroupDepartmentAdminAddRequest": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["serviceProviderId", "groupId", "name"]}, "userId": {"type": "string", "minLength": 1, "maxLength": 161}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "language": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["departmentKey", "userId"]}, "GroupDepartmentAdminDeleteRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "GroupDepartmentAdminGetListRequest": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["departmentKey"]}, "GroupDepartmentAdminGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "GroupDepartmentAdminModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "language": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userId"]}, "GroupDepartmentDeleteRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "departmentName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["serviceProviderId", "groupId", "departmentName"]}, "GroupDepartmentGetAvailableParentListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "departmentName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["serviceProviderId", "groupId", "departmentName"]}, "GroupDepartmentGetListRequest18": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "includeEnterpriseDepartments": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "includeEnterpriseDepartments"]}, "GroupDepartmentGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "departmentName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["serviceProviderId", "groupId", "departmentName"]}, "GroupDepartmentModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "departmentName": {"type": "string", "minLength": 1, "maxLength": 50}, "newDepartmentName": {"type": "string", "minLength": 1, "maxLength": 50}, "newParentDepartmentKey": {"type": "object", "properties": {}}, "callingLineIdName": {"type": "string"}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["serviceProviderId", "groupId", "departmentName"]}, "GroupDeviceActivationPolicyGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDeviceActivationPolicyModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useGroupSettings": {"type": "boolean"}, "allowActivationCodeRequestByUser": {"type": "boolean"}, "sendActivationCodeInEmail": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId"]}, "GroupDeviceManagementEventGetListRequest22": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "eventQueueType": {"type": "string", "enum": ["Completed", "In Progress Or Pending"]}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaExactDeviceManagementEventStatusInProgressOrPending": {"type": "object", "properties": {"dmEventStatusInProgressOrPending": {"type": "string", "enum": ["Pending", "Queued", "In Progress", "Process On Other Host", "Stale"]}}, "required": ["dmEventStatusInProgressOrPending"]}, "searchCriteriaExactDeviceManagementEventStatusCompleted": {"type": "object", "properties": {"dmEventStatusCompleted": {"type": "string", "enum": ["Canceled", "Completed"]}}, "required": ["dmEventStatusCompleted"]}, "searchCriteriaExactDeviceManagementEventAction": {"type": "object", "properties": {"dmEventAction": {"type": "string", "enum": ["Delete", "Download", "Rebuild", "Reset", "Upload"]}}, "required": ["dmEventAction"]}, "searchCriteriaExactDeviceManagementEventLevel": {"type": "object", "properties": {"dmEventLevel": {"type": "string", "enum": ["Device", "Device Type", "Device Type Group", "Group", "User", "Device Type Service Provider", "Service Provider"]}}, "required": ["dmEventLevel"]}, "searchCriteriaExactDeviceManagementEventType": {"type": "object", "properties": {"dmEventType": {"type": "string", "enum": ["Automatic", "Manual"]}}, "required": ["dmEventType"]}, "searchCriteriaDeviceManagementEventAdditionalInfo": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 0, "maxLength": 256}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceManagementEventLoginId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupDeviceManagementGetAccessDeviceCountForDeviceTypeGroupRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "countOnlyResetSupportedDevice": {"type": "boolean"}, "allowUnmanagedDeviceType": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "deviceType"]}, "GroupDeviceManagementInProgressAndPendingEventCancelRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "eventId": {"type": "array", "items": {"type": "string"}}}, "required": ["serviceProviderId", "groupId", "eventId"]}, "GroupDeviceTypeCustomTagAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "tagName": {"type": "string", "minLength": 1, "maxLength": 64}, "tagValue": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["serviceProviderId", "groupId", "deviceType", "tagName"]}, "GroupDeviceTypeCustomTagDeleteListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "tagName": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 64}}}, "required": ["serviceProviderId", "groupId", "deviceType", "tagName"]}, "GroupDeviceTypeCustomTagGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceType"]}, "GroupDeviceTypeCustomTagModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "tagName": {"type": "string", "minLength": 1, "maxLength": 64}}, "oneOf": [{"type": "object", "properties": {"tagValue": {"type": "string", "minLength": 1, "maxLength": 256}}}, {"type": "object", "properties": {"tagValueToEncrypt": {"type": "string", "minLength": 1, "maxLength": 256}}}], "required": ["serviceProviderId", "groupId", "deviceType", "tagName"]}, "GroupDeviceTypeFileGetListRequest21": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceType"]}, "GroupDeviceTypeFileGetRequest16sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["serviceProviderId", "groupId", "deviceType", "fileFormat"]}, "GroupDeviceTypeFileModifyRequest14sp8": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "fileSource": {"type": "string", "enum": ["Default", "Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}}, "required": ["serviceProviderId", "groupId", "deviceType", "fileFormat"]}, "GroupDeviceTypeTagSetGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceType"]}, "GroupDeviceTypeTagSetModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "tagSetName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "deviceType"]}, "GroupDialableCallerIDCriteriaAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "prefixDigits": {"type": "string", "minLength": 1, "maxLength": 10}, "matchCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}, "matchAlternateCallIndicator": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}, "matchLocalCategory": {"type": "boolean"}, "matchNationalCategory": {"type": "boolean"}, "matchInterlataCategory": {"type": "boolean"}, "matchIntralataCategory": {"type": "boolean"}, "matchInternationalCategory": {"type": "boolean"}, "matchPrivateCategory": {"type": "boolean"}, "matchEmergencyCategory": {"type": "boolean"}, "matchOtherCategory": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "name", "matchLocalCategory", "matchNationalCategory", "matchInterlataCategory", "matchIntralataCategory", "matchInternationalCategory", "matchPrivateCategory", "matchEmergencyCategory", "matchOtherCategory"]}, "GroupDialableCallerIDCriteriaDeleteRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupDialableCallerIDCriteriaGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupDialableCallerIDCriteriaModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "newName": {"type": "string", "minLength": 1, "maxLength": 40}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "prefixDigits": {"type": "string", "minLength": 1, "maxLength": 10}, "matchCallType": {"type": "object", "properties": {"callType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["callType"]}, "matchAlternateCallIndicator": {"type": "object", "properties": {"alternateCallIndicator": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["alternateCallIndicator"]}, "matchLocalCategory": {"type": "boolean"}, "matchNationalCategory": {"type": "boolean"}, "matchInterlataCategory": {"type": "boolean"}, "matchIntralataCategory": {"type": "boolean"}, "matchInternationalCategory": {"type": "boolean"}, "matchPrivateCategory": {"type": "boolean"}, "matchEmergencyCategory": {"type": "boolean"}, "matchOtherCategory": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupDialableCallerIDGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDialableCallerIDModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useGroupCriteria": {"type": "boolean"}, "nsScreeningFailurePolicy": {"type": "string", "enum": ["Display Received Caller ID", "Restrict Number", "Restrict Name And Number"]}, "criteriaPriorityOrder": {"type": "array", "items": {"type": "object", "properties": {"criteriaName": {"type": "string", "minLength": 1, "maxLength": 40}, "priority": {"type": "xs:float", "minimum": 0.0, "maximum": 1000000.0}}, "required": ["criteriaName", "priority"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupDialPlanPolicyAddAccessCodeRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "accessCode": {"type": "string", "minLength": 1, "maxLength": 5}, "includeCodeForNetworkTranslationsAndRouting": {"type": "boolean"}, "includeCodeForScreeningServices": {"type": "boolean"}, "enableSecondaryDialTone": {"type": "boolean"}, "description": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceProviderId", "groupId", "accessCode", "includeCodeForNetworkTranslationsAndRouting", "includeCodeForScreeningServices", "enableSecondaryDialTone"]}, "GroupDialPlanPolicyDeleteAccessCodeRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "accessCode": {"type": "string", "minLength": 1, "maxLength": 5}}, "required": ["serviceProviderId", "groupId", "accessCode"]}, "GroupDialPlanPolicyGetAccessCodeListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDialPlanPolicyGetAccessCodeRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "accessCode": {"type": "string", "minLength": 1, "maxLength": 5}}, "required": ["serviceProviderId", "groupId", "accessCode"]}, "GroupDialPlanPolicyGetRequest22": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDialPlanPolicyModifyAccessCodeRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "accessCode": {"type": "string", "minLength": 1, "maxLength": 5}, "includeCodeForNetworkTranslationsAndRouting": {"type": "boolean"}, "includeCodeForScreeningServices": {"type": "boolean"}, "enableSecondaryDialTone": {"type": "boolean"}, "description": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceProviderId", "groupId", "accessCode"]}, "GroupDialPlanPolicyModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useSetting": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "requiresAccessCodeForPublicCalls": {"type": "boolean"}, "allowE164PublicCalls": {"type": "boolean"}, "preferE164NumberFormatForCallbackServices": {"type": "boolean"}, "publicDigitMap": {"type": "string", "minLength": 1, "maxLength": 2048}, "privateDigitMap": {"type": "string", "minLength": 1, "maxLength": 2048}, "overrideResolvedDeviceDigitMap": {"type": "boolean"}, "deviceDigitMap": {"type": "string", "minLength": 1, "maxLength": 2048}}, "required": ["serviceProviderId", "groupId"]}, "GroupDigitCollectionGetRequest13mp4": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDigitCollectionModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useSetting": {"type": "string"}, "accessCode": {"type": "string", "minLength": 1, "maxLength": 1}, "publicDigitMap": {"type": "string", "minLength": 1, "maxLength": 2048}, "privateDigitMap": {"type": "string", "minLength": 1, "maxLength": 2048}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnActivateListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "dnRange": {"type": "array", "items": {"type": "object", "properties": {"minPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "maxPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["minPhoneNumber", "maxPhoneNumber"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnAssignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "dnRange": {"type": "array", "items": {"type": "object", "properties": {"minPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "maxPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["minPhoneNumber", "maxPhoneNumber"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnDeactivateListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "dnRange": {"type": "array", "items": {"type": "object", "properties": {"minPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "maxPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["minPhoneNumber", "maxPhoneNumber"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnGetActivationListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnGetAssignmentListRequest18": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactDnDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaExactDnActivation": {"type": "object", "properties": {"activated": {"type": "boolean"}}, "required": ["activated"]}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnGetAssignmentPagedSortedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "sortOrder": {"type": "array", "items": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sortByDn": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDn"]}, {"type": "object", "properties": {"sortByDepartmentName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDepartmentName"]}, {"type": "object", "properties": {"sortByDnActivated": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDnActivated"]}, {"type": "object", "properties": {"sortByDnAvailable": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDnAvailable"]}, {"type": "object", "properties": {"sortByUserId": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserId"]}, {"type": "object", "properties": {"sortByUserFirstName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserFirstName"]}, {"type": "object", "properties": {"sortByUserLastName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserLastName"]}, {"type": "object", "properties": {"sortByExtension": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByExtension"]}, {"type": "object", "properties": {"sortByEmailAddress": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByEmailAddress"]}]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDepartmentName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactDnActivation": {"type": "object", "properties": {"activated": {"type": "boolean"}}, "required": ["activated"]}, "searchCriteriaExactDnAvailability": {"type": "object", "properties": {"available": {"type": "boolean"}}, "required": ["available"]}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserType": {"type": "array", "items": {"type": "object", "properties": {"userType": {"type": "string", "enum": ["Normal", "Auto Attendant", "BroadWorks Anywhere", "Call Center", "Collaborate Bridge", "Find-me/Follow-me", "Flexible Seating Host", "Group Paging", "Hunt Group", "Instant Group Call", "Meet-Me Conferencing", "Music On Hold", "Route Point", "Voice Messaging", "VoiceXML"]}}, "required": ["userType"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaModeOr": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnGetAvailableListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnGetAvailableRangesListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnGetDetailedAvailableListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnGetStatusListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "dn": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["serviceProviderId", "groupId", "dn"]}, "GroupDnGetSummaryListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnListAssignDepartmentRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "departmentKey": {"type": "object", "properties": {}}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "dnRange": {"type": "array", "items": {"type": "object", "properties": {"minPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "maxPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["minPhoneNumber", "maxPhoneNumber"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupDnUnassignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "dnRange": {"type": "array", "items": {"type": "object", "properties": {"minPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "maxPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["minPhoneNumber", "maxPhoneNumber"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupDomainAssignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "domain": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 80}}}, "required": ["serviceProviderId", "groupId", "domain"]}, "GroupDomainGetAssignedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDomainGetAssignedUserListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "domain": {"type": "string", "minLength": 1, "maxLength": 80}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId", "domain"]}, "GroupDomainUnassignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "domain": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 80}}}, "required": ["serviceProviderId", "groupId", "domain"]}, "GroupEmergencyCallNotificationGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupEmergencyCallNotificationModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "sendEmergencyCallNotificationEmail": {"type": "boolean"}, "emergencyCallNotifyEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceProviderId", "groupId"]}, "GroupEndpointGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaLinePortUserPart": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaLinePortDomain": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceType": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 40}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 40}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceMACAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 12}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceNetAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupExchangeIntegrationGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupExchangeIntegrationModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "enableExchangeIntegration": {"type": "boolean"}, "exchangeURL": {"type": "string", "minLength": 1, "maxLength": 256}, "exchangeCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 64}, "password": {"type": "string", "minLength": 1, "maxLength": 104}}, "required": ["userName", "password"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupExistingUsersAssignUserServiceListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceName": {"type": "array", "items": {"type": "string", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}}, "servicePackName": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 80}}}, "required": ["serviceProviderId", "groupId"]}, "GroupExistingUsersUnassignUserServiceListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceName": {"type": "array", "items": {"type": "string", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}}, "servicePackName": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 80}}}, "required": ["serviceProviderId", "groupId"]}, "GroupExtensionLengthGetRequest22": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupExtensionLengthModifyRequest17": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "minExtensionLength": {"type": "integer", "minimum": 2.0, "maximum": 20.0}, "maxExtensionLength": {"type": "integer", "minimum": 2.0, "maximum": 20.0}, "defaultExtensionLength": {"type": "integer", "minimum": 2.0, "maximum": 20.0}, "useEnterpriseExtensionLengthSetting": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId"]}, "GroupFeatureAccessCodeGetRequest21": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupFeatureAccessCodeModifyRequest21": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useFeatureAccessCodeLevel": {"type": "string", "enum": ["Service Provider", "Group"]}}, "oneOf": [{"type": "object", "properties": {"restoreDefaultCodes": {"type": "boolean"}}}, {"type": "object", "properties": {"featureAccessCode": {"type": "array", "items": {"type": "object", "properties": {"featureAccessCodeName": {"type": "string", "minLength": 1}, "mainCode": {"type": "string", "minLength": 1, "maxLength": 5}, "alternateCode": {"type": "string", "minLength": 1, "maxLength": 5}, "enableFAC": {"type": "boolean"}}, "required": ["featureAccessCodeName"]}}}}], "required": ["serviceProviderId", "groupId"]}, "GroupFileRepositoryDeviceUserAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "fileRepositoryName": {"type": "string", "minLength": 1, "maxLength": 40}, "userName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 30}, "allowPut": {"type": "boolean"}, "allowDelete": {"type": "boolean"}, "allowGet": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "fileRepositoryName", "userName", "password", "allowPut", "allowDelete", "allowGet"]}, "GroupFileRepositoryDeviceUserDeleteRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "fileRepositoryName": {"type": "string", "minLength": 1, "maxLength": 40}, "userName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "fileRepositoryName", "userName"]}, "GroupFileRepositoryDeviceUserGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "fileRepositoryName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "fileRepositoryName"]}, "GroupFileRepositoryDeviceUserModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "fileRepositoryName": {"type": "string", "minLength": 1, "maxLength": 40}, "userName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 30}, "allowPut": {"type": "boolean"}, "allowDelete": {"type": "boolean"}, "allowGet": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "fileRepositoryName", "userName"]}, "GroupGetAvailableLeafDeviceListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupGetAvailableTreeDeviceListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupGetDefaultRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "GroupGetListInServiceProviderPagedSortedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "sortOrder": {"type": "array", "items": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sortByGroupId": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByGroupId"]}, {"type": "object", "properties": {"sortByGroupName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByGroupName"]}]}}, "searchCriteriaGroupId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaModeOr": {"type": "boolean"}}, "required": ["serviceProviderId"]}, "GroupGetListInServiceProviderRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaGroupId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId"]}, "GroupGetListInSystemRequest": {"type": "object", "properties": {"responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaGroupId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactServiceProvider": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "searchCriteriaServiceProviderId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaResellerId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 36}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}}, "GroupGetRequest22V5": {"type": "object", "properties": {}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, {"type": "object", "properties": {"groupExternalId": {"type": "string", "maxLength": 36}}, "required": ["groupExternalId"]}]}]}, "GroupGetUserServiceAssignedUserListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "oneOf": [{"type": "object", "properties": {"serviceName": {"type": "string", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}}, "required": ["serviceName"]}, {"type": "object", "properties": {"servicePackName": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["servicePackName"]}], "required": ["serviceProviderId", "groupId"]}, "GroupIMRNAssignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "imrn": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "imrnRange": {"type": "array", "items": {"type": "object", "properties": {"minPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "maxPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["minPhoneNumber", "maxPhoneNumber"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupIMRNGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupIMRNUnassignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "imrn": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "imrnRange": {"type": "array", "items": {"type": "object", "properties": {"minPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "maxPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["minPhoneNumber", "maxPhoneNumber"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "defaultDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "userLimit": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "groupName": {"type": "string", "minLength": 1, "maxLength": 80}, "callingLineIdName": {"type": "string", "minLength": 1, "maxLength": 80}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "locationDialingCode": {"type": "string", "minLength": 1, "maxLength": 15}, "contact": {"type": "object", "properties": {"contactName": {"type": "string", "minLength": 1, "maxLength": 30}, "contactNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "contactEmail": {"type": "string", "minLength": 1, "maxLength": 80}}}, "address": {"type": "object", "properties": {"addressLine1": {"type": "string", "minLength": 1, "maxLength": 80}, "addressLine2": {"type": "string", "minLength": 1, "maxLength": 80}, "city": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvince": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvinceDisplayName": {"type": "string", "minLength": 1, "maxLength": 50}, "zipOrPostalCode": {"type": "string", "minLength": 1, "maxLength": 50}, "country": {"type": "string", "minLength": 1, "maxLength": 50}}}, "servicePolicy": {"type": "string", "minLength": 1, "maxLength": 80}, "callProcessingSliceId": {"type": "string", "minLength": 1, "maxLength": 80}, "provisioningSliceId": {"type": "string", "minLength": 1, "maxLength": 80}, "subscriberPartition": {"type": "string", "minLength": 1, "maxLength": 80}, "preferredDataCenter": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultUserCallingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extensionLengthSettings": {"type": "object", "properties": {"minExtensionLength": {"type": "integer", "minimum": 2.0, "maximum": 20.0}, "maxExtensionLength": {"type": "integer", "minimum": 2.0, "maximum": 20.0}, "defaultExtensionLength": {"type": "integer", "minimum": 2.0, "maximum": 20.0}, "useEnterpriseExtensionLengthSetting": {"type": "boolean"}}}, "dialPlanAccessCode": {"type": "object", "properties": {"accessCode": {"type": "string", "minLength": 1, "maxLength": 5}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "includeCodeForNetworkTranslationsAndRouting": {"type": "boolean"}, "includeCodeForScreeningServices": {"type": "boolean"}, "enableSecondaryDialTone": {"type": "boolean"}}, "required": ["accessCode"]}, "dialPlanPolicy": {"type": "object", "properties": {"useSetting": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "requiresAccessCodeForPublicCalls": {"type": "boolean"}, "allowE164PublicCalls": {"type": "boolean"}, "preferE164NumberFormatForCallbackServices": {"type": "boolean"}, "publicDigitMap": {"type": "string", "minLength": 1, "maxLength": 2048}, "privateDigitMap": {"type": "string", "minLength": 1, "maxLength": 2048}}}}, "required": ["serviceProviderId", "groupId"]}, "GroupNetworkClassOfServiceAssignListRequest21": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "networkClassOfService": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}, "defaultNetworkClassOfService": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"useExisting": {"type": "boolean"}}, "required": ["useExisting"]}, {"type": "object", "properties": {"networkClassOfServiceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["networkClassOfServiceName"]}]}}, "required": ["serviceProviderId", "groupId", "defaultNetworkClassOfService"]}, "GroupNetworkClassOfServiceAssignToAllUsersRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "networkClassOfService"]}, "GroupNetworkClassOfServiceGetAssignedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupNetworkClassOfServiceGetAssignedUserListRequest21": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId", "networkClassOfService"]}, "GroupNetworkClassOfServiceModifyDefaultRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "networkClassOfService"]}, "GroupNetworkClassOfServiceUnassignListRequest21": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "networkClassOfService": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}, "defaultNetworkClassOfService": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"useExisting": {"type": "boolean"}}, "required": ["useExisting"]}, {"type": "object", "properties": {"networkClassOfServiceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["networkClassOfServiceName"]}]}}, "required": ["serviceProviderId", "groupId", "defaultNetworkClassOfService"]}, "GroupNewUserTemplateAssignUserServiceListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceName": {"type": "array", "items": {"type": "string", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}}, "servicePackName": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 80}}}, "required": ["serviceProviderId", "groupId"]}, "GroupNewUserTemplateUnassignUserServiceListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceName": {"type": "array", "items": {"type": "string", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}}, "servicePackName": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 80}}}, "required": ["serviceProviderId", "groupId"]}, "GroupOfficeZoneAssignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "officeZoneName": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}, "defaultOfficeZoneName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId"]}, "GroupOfficeZoneGetAssignedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupOfficeZoneGetAssignedUserListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "officeZoneName": {"type": "string", "minLength": 1, "maxLength": 40}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId", "officeZoneName"]}, "GroupOfficeZoneUnassignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "officeZoneName": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}, "defaultOfficeZoneName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId"]}, "GroupPasswordRulesGetRequest22": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupPasswordRulesModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "disallowUserId": {"type": "boolean"}, "disallowOldPassword": {"type": "boolean"}, "disallowReversedOldPassword": {"type": "boolean"}, "restrictMinDigits": {"type": "boolean"}, "minDigits": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "restrictMinUpperCaseLetters": {"type": "boolean"}, "minUpperCaseLetters": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "restrictMinLowerCaseLetters": {"type": "boolean"}, "minLowerCaseLetters": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "restrictMinNonAlphanumericCharacters": {"type": "boolean"}, "minNonAlphanumericCharacters": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "minLength": {"type": "integer", "minimum": 3.0, "maximum": 40.0}, "maxFailedLoginAttempts": {"type": "integer", "minimum": 0.0, "maximum": 10.0}, "passwordExpiresDays": {"type": "integer", "minimum": 0.0, "maximum": 199.0}, "sendLoginDisabledNotifyEmail": {"type": "boolean"}, "loginDisabledNotifyEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "disallowPreviousPasswords": {"type": "boolean"}, "numberOfPreviousPasswords": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "forcePasswordChangeAfterReset": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId"]}, "GroupPhoneDirectoryGetPagedSortedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "isExtendedInfoRequested": {"type": "boolean"}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "sortOrder": {"type": "array", "items": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sortByUserLastName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserLastName"]}, {"type": "object", "properties": {"sortByUserFirstName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserFirstName"]}, {"type": "object", "properties": {"sortByMobilePhoneNumber": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByMobilePhoneNumber"]}, {"type": "object", "properties": {"sortByEmailAddress": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByEmailAddress"]}, {"type": "object", "properties": {"sortByDepartmentName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDepartmentName"]}, {"type": "object", "properties": {"sortByYahooId": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByYahooId"]}, {"type": "object", "properties": {"sortByUserId": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserId"]}, {"type": "object", "properties": {"sortByImpId": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByImpId"]}]}}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupLocationCode": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 15}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaMobilePhoneNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaDepartmentName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserGroup": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "searchCriteriaYahooId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaImpId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 196}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaModeOr": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "isExtendedInfoRequested"]}, "GroupPolicyGetRequest22": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupPolicyModifyRequest22": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "callingPlanAccess": {"type": "string", "enum": ["Full", "Restricted"]}, "extensionAccess": {"type": "string", "enum": ["Full", "Read-Only", "None"]}, "voiceMessagingAccess": {"type": "string", "enum": ["Full", "Restricted"]}, "departmentAdminUserAccess": {"type": "string", "enum": ["Full", "Read-Only Profile", "No Profile", "None"]}, "departmentAdminTrunkGroupAccess": {"type": "string", "enum": ["Full", "None"]}, "departmentAdminPhoneNumberExtensionAccess": {"type": "string", "enum": ["Full", "Read-Only"]}, "departmentAdminCallingLineIdNumberAccess": {"type": "string", "enum": ["Full", "Read-Only"]}, "userAuthenticationAccess": {"type": "string", "enum": ["Full", "None"]}, "userGroupDirectoryAccess": {"type": "string", "enum": ["Full", "None"]}, "userProfileAccess": {"type": "string", "enum": ["Full", "Read-Only", "None"]}, "userEnhancedCallLogAccess": {"type": "string", "enum": ["Full", "Read-Only"]}, "userAutoAttendantNameDialingAccess": {"type": "string", "enum": ["Full", "None"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupPortalPasscodeRulesGetRequest19": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupPortalPasscodeRulesModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useRuleLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "disallowRepeatedDigits": {"type": "boolean"}, "numberOfRepeatedDigits": {"type": "integer", "minimum": 1.0, "maximum": 6.0}, "disallowRepeatedPatterns": {"type": "boolean"}, "disallowContiguousSequences": {"type": "boolean"}, "numberOfAscendingDigits": {"type": "integer", "minimum": 2.0, "maximum": 5.0}, "numberOfDescendingDigits": {"type": "integer", "minimum": 2.0, "maximum": 5.0}, "disallowUserNumber": {"type": "boolean"}, "disallowReversedUserNumber": {"type": "boolean"}, "disallowOldPasscode": {"type": "boolean"}, "numberOfPreviousPasscodes": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "disallowReversedOldPasscode": {"type": "boolean"}, "minCodeLength": {"type": "integer", "minimum": 2.0, "maximum": 15.0}, "maxCodeLength": {"type": "integer", "minimum": 3.0, "maximum": 30.0}, "disableLoginAfterMaxFailedLoginAttempts": {"type": "boolean"}, "maxFailedLoginAttempts": {"type": "integer", "minimum": 2.0, "maximum": 10.0}, "expirePassword": {"type": "boolean"}, "passcodeExpiresDays": {"type": "integer", "minimum": 15.0, "maximum": 180.0}, "sendLoginDisabledNotifyEmail": {"type": "boolean"}, "loginDisabledNotifyEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceProviderId", "groupId"]}, "GroupRoutePointExternalSystemAssignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "routePointExternalSystem": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["serviceProviderId", "groupId"]}, "GroupRoutePointExternalSystemGetAssignedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupRoutePointExternalSystemGetAssignedRoutePointListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "externalSystem": {"type": "string", "minLength": 1, "maxLength": 40}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaRoutePointName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId", "externalSystem"]}, "GroupRoutePointExternalSystemUnassignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "routePointExternalSystem": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["serviceProviderId", "groupId"]}, "GroupRoutingProfileGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupRoutingProfileModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "routingProfile": {"type": "string", "minLength": 4, "maxLength": 12}}, "required": ["serviceProviderId", "groupId"]}, "GroupScheduleAddEventRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "eventName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}, "recurrence": {"type": "object", "properties": {}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"recurDaily": {"type": "object", "properties": {"recurInterval": {"type": "integer", "minimum": 1.0, "maximum": 999.0}}}}, "required": ["recurDaily"]}, {"type": "object", "properties": {"recurWeekly": {"type": "object", "properties": {"recurInterval": {"type": "integer", "minimum": 1.0, "maximum": 999.0}, "sunday": {"type": "boolean"}, "monday": {"type": "boolean"}, "tuesday": {"type": "boolean"}, "wednesday": {"type": "boolean"}, "thursday": {"type": "boolean"}, "friday": {"type": "boolean"}, "saturday": {"type": "boolean"}}, "required": ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"]}}, "required": ["recurWeekly"]}, {"type": "object", "properties": {"recurMonthlyByDay": {"type": "object", "properties": {"recurInterval": {"type": "integer", "minimum": 1.0, "maximum": 99.0}, "dayOfMonth": {"type": "integer", "minimum": 1.0, "maximum": 31.0}}, "required": ["dayOfMonth"]}}, "required": ["recurMonthlyByDay"]}, {"type": "object", "properties": {"recurMonthlyByWeek": {"type": "object", "properties": {"recurInterval": {"type": "integer", "minimum": 1.0, "maximum": 99.0}, "dayOfWeekInMonth": {"type": "string", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, "dayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}}, "required": ["dayOfWeekInMonth", "dayOfWeek"]}}, "required": ["recurMonthlyByWeek"]}, {"type": "object", "properties": {"recurYearlyByDay": {"type": "object", "properties": {"recurInterval": {"type": "integer", "minimum": 1.0, "maximum": 99.0}, "dayOfMonth": {"type": "integer", "minimum": 1.0, "maximum": 31.0}, "month": {"type": "string", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}}, "required": ["dayOfMonth", "month"]}}, "required": ["recurYearlyByDay"]}, {"type": "object", "properties": {"recurYearlyByWeek": {"type": "object", "properties": {"recurInterval": {"type": "integer", "minimum": 1.0, "maximum": 99.0}, "dayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "dayOfWeekInMonth": {"type": "string", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, "month": {"type": "string", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}}, "required": ["dayOfWeek", "dayOfWeekInMonth", "month"]}}, "required": ["recurYearlyByWeek"]}]}, {"oneOf": [{"type": "object", "properties": {"recurForEver": {"type": "boolean"}}, "required": ["recurForEver"]}, {"type": "object", "properties": {"recurEndDate": {"type": "string"}}, "required": ["recurEndDate"]}, {"type": "object", "properties": {"recurEndOccurrence": {"type": "integer", "minimum": 1.0, "maximum": 999.0}}, "required": ["recurEndOccurrence"]}]}]}}, "oneOf": [{"type": "object", "properties": {"allDayEvent": {"type": "boolean"}}, "required": ["allDayEvent"]}, {"type": "object", "properties": {"startTime": {"type": "object", "properties": {"hour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "minute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["hour", "minute"]}, "endTime": {"type": "object", "properties": {"hour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "minute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["hour", "minute"]}}, "required": ["startTime", "endTime"]}], "required": ["serviceProviderId", "groupId", "scheduleKey", "eventName", "startDate", "endDate"]}, "GroupScheduleAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["serviceProviderId", "groupId", "scheduleName", "scheduleType"]}, "GroupScheduleDeleteEventListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "eventName": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["serviceProviderId", "groupId", "scheduleKey", "eventName"]}, "GroupScheduleDeleteListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "scheduleKey": {"type": "array", "items": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}}}, "required": ["serviceProviderId", "groupId", "scheduleKey"]}, "GroupScheduleGetEventDetailListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}}, "required": ["serviceProviderId", "groupId", "scheduleKey"]}, "GroupScheduleGetEventListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}}, "required": ["serviceProviderId", "groupId", "scheduleKey"]}, "GroupScheduleGetEventRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "eventName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "scheduleKey", "eventName"]}, "GroupScheduleGetListRequest17sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupScheduleGetPagedSortedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "sortByScheduleName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}, "searchCriteriaScheduleName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 40}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactScheduleType": {"type": "array", "items": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["type"]}}, "searchCriteriaExactScheduleLevel": {"type": "array", "items": {"type": "object", "properties": {"level": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["level"]}}, "searchCriteriaModeOr": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId"]}, "GroupScheduleModifyEventRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "eventName": {"type": "string", "minLength": 1, "maxLength": 40}, "newEventName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}, "recurrence": {"type": "object", "properties": {}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"recurDaily": {"type": "object", "properties": {"recurInterval": {"type": "integer", "minimum": 1.0, "maximum": 999.0}}}}, "required": ["recurDaily"]}, {"type": "object", "properties": {"recurWeekly": {"type": "object", "properties": {"recurInterval": {"type": "integer", "minimum": 1.0, "maximum": 999.0}, "sunday": {"type": "boolean"}, "monday": {"type": "boolean"}, "tuesday": {"type": "boolean"}, "wednesday": {"type": "boolean"}, "thursday": {"type": "boolean"}, "friday": {"type": "boolean"}, "saturday": {"type": "boolean"}}, "required": ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"]}}, "required": ["recurWeekly"]}, {"type": "object", "properties": {"recurMonthlyByDay": {"type": "object", "properties": {"recurInterval": {"type": "integer", "minimum": 1.0, "maximum": 99.0}, "dayOfMonth": {"type": "integer", "minimum": 1.0, "maximum": 31.0}}, "required": ["dayOfMonth"]}}, "required": ["recurMonthlyByDay"]}, {"type": "object", "properties": {"recurMonthlyByWeek": {"type": "object", "properties": {"recurInterval": {"type": "integer", "minimum": 1.0, "maximum": 99.0}, "dayOfWeekInMonth": {"type": "string", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, "dayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}}, "required": ["dayOfWeekInMonth", "dayOfWeek"]}}, "required": ["recurMonthlyByWeek"]}, {"type": "object", "properties": {"recurYearlyByDay": {"type": "object", "properties": {"recurInterval": {"type": "integer", "minimum": 1.0, "maximum": 99.0}, "dayOfMonth": {"type": "integer", "minimum": 1.0, "maximum": 31.0}, "month": {"type": "string", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}}, "required": ["dayOfMonth", "month"]}}, "required": ["recurYearlyByDay"]}, {"type": "object", "properties": {"recurYearlyByWeek": {"type": "object", "properties": {"recurInterval": {"type": "integer", "minimum": 1.0, "maximum": 99.0}, "dayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "dayOfWeekInMonth": {"type": "string", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, "month": {"type": "string", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}}, "required": ["dayOfWeek", "dayOfWeekInMonth", "month"]}}, "required": ["recurYearlyByWeek"]}]}, {"oneOf": [{"type": "object", "properties": {"recurForEver": {"type": "boolean"}}, "required": ["recurForEver"]}, {"type": "object", "properties": {"recurEndDate": {"type": "string"}}, "required": ["recurEndDate"]}, {"type": "object", "properties": {"recurEndOccurrence": {"type": "integer", "minimum": 1.0, "maximum": 999.0}}, "required": ["recurEndOccurrence"]}]}]}}, "oneOf": [{"type": "object", "properties": {"allDayEvent": {"type": "boolean"}}, "required": ["allDayEvent"]}, {"type": "object", "properties": {"startTime": {"type": "object", "properties": {"hour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "minute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["hour", "minute"]}, "endTime": {"type": "object", "properties": {"hour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "minute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["hour", "minute"]}}, "required": ["startTime", "endTime"]}], "required": ["serviceProviderId", "groupId", "scheduleKey", "eventName"]}, "GroupScheduleModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "newScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "scheduleKey"]}, "GroupScheduleUsageRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}}, "required": ["serviceProviderId", "groupId", "scheduleKey"]}, "GroupSecurityClassificationCustomizationGetAvailableListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupServiceAssignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceName": {"type": "array", "items": {"type": "string", "enum": ["Account/Authorization Codes", "Auto Attendant", "Auto Attendant - Video", "Auto Attendant - Standard", "Call Capacity Management", "Call Park", "Call Pickup", "City-Wide Centrex", "Custom Ringback Group", "Custom Ringback Group - Video", "Emergency Zones", "Enhanced Outgoing Calling Plan", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Incoming Calling Plan", "Instant Group Call", "Intercept Group", "Inventory Report", "LDAP Integration", "Meet-Me Conferencing", "Music On Hold", "Music On Hold - Video", "Outgoing Calling Plan", "Preferred Carrier Group", "Route Point", "Series Completion", "Service Scripts Group", "Trunk Group", "Voice Messaging Group", "VoiceXML"]}}}, "required": ["serviceProviderId", "groupId", "serviceName"]}, "GroupServiceGetAuthorizationListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupServiceGetAuthorizationRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "oneOf": [{"type": "object", "properties": {"userServiceName": {"type": "string", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}}, "required": ["userServiceName"]}, {"type": "object", "properties": {"groupServiceName": {"type": "string", "enum": ["Account/Authorization Codes", "Auto Attendant", "Auto Attendant - Video", "Auto Attendant - Standard", "Call Capacity Management", "Call Park", "Call Pickup", "City-Wide Centrex", "Custom Ringback Group", "Custom Ringback Group - Video", "Emergency Zones", "Enhanced Outgoing Calling Plan", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Incoming Calling Plan", "Instant Group Call", "Intercept Group", "Inventory Report", "LDAP Integration", "Meet-Me Conferencing", "Music On Hold", "Music On Hold - Video", "Outgoing Calling Plan", "Preferred Carrier Group", "Route Point", "Series Completion", "Service Scripts Group", "Trunk Group", "Voice Messaging Group", "VoiceXML"]}}, "required": ["groupServiceName"]}, {"type": "object", "properties": {"servicePackName": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["servicePackName"]}], "required": ["serviceProviderId", "groupId"]}, "GroupServiceGetAuthorizedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupServiceIsAssignedRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceName": {"type": "string", "enum": ["Account/Authorization Codes", "Auto Attendant", "Auto Attendant - Video", "Auto Attendant - Standard", "Call Capacity Management", "Call Park", "Call Pickup", "City-Wide Centrex", "Custom Ringback Group", "Custom Ringback Group - Video", "Emergency Zones", "Enhanced Outgoing Calling Plan", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Incoming Calling Plan", "Instant Group Call", "Intercept Group", "Inventory Report", "LDAP Integration", "Meet-Me Conferencing", "Music On Hold", "Music On Hold - Video", "Outgoing Calling Plan", "Preferred Carrier Group", "Route Point", "Series Completion", "Service Scripts Group", "Trunk Group", "Voice Messaging Group", "VoiceXML"]}}, "required": ["serviceProviderId", "groupId", "serviceName"]}, "GroupServiceModifyAuthorizationListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "servicePackAuthorization": {"type": "array", "items": {"type": "object", "properties": {"servicePackName": {"type": "string", "minLength": 1, "maxLength": 80}}, "oneOf": [{"type": "object", "properties": {"authorizedQuantity": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}}, "required": ["authorizedQuantity"]}, {"type": "object", "properties": {"unauthorized": {"type": "boolean"}}, "required": ["unauthorized"]}], "required": ["servicePackName"]}}, "groupServiceAuthorization": {"type": "array", "items": {"type": "object", "properties": {"serviceName": {"type": "string", "enum": ["Account/Authorization Codes", "Auto Attendant", "Auto Attendant - Video", "Auto Attendant - Standard", "Call Capacity Management", "Call Park", "Call Pickup", "City-Wide Centrex", "Custom Ringback Group", "Custom Ringback Group - Video", "Emergency Zones", "Enhanced Outgoing Calling Plan", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Incoming Calling Plan", "Instant Group Call", "Intercept Group", "Inventory Report", "LDAP Integration", "Meet-Me Conferencing", "Music On Hold", "Music On Hold - Video", "Outgoing Calling Plan", "Preferred Carrier Group", "Route Point", "Series Completion", "Service Scripts Group", "Trunk Group", "Voice Messaging Group", "VoiceXML"]}}, "oneOf": [{"type": "object", "properties": {"authorizedQuantity": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}}, "required": ["authorizedQuantity"]}, {"type": "object", "properties": {"unauthorized": {"type": "boolean"}}, "required": ["unauthorized"]}], "required": ["serviceName"]}}, "userServiceAuthorization": {"type": "array", "items": {"type": "object", "properties": {"serviceName": {"type": "string", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}}, "oneOf": [{"type": "object", "properties": {"authorizedQuantity": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}}, "required": ["authorizedQuantity"]}, {"type": "object", "properties": {"unauthorized": {"type": "boolean"}}, "required": ["unauthorized"]}], "required": ["serviceName"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupServicePhoneNumberLookupRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceType": {"type": "string", "enum": ["BroadWorks Anywhere"]}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["serviceProviderId", "groupId", "serviceType", "phoneNumber"]}, "GroupServiceUnassignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceName": {"type": "array", "items": {"type": "string", "enum": ["Account/Authorization Codes", "Auto Attendant", "Auto Attendant - Video", "Auto Attendant - Standard", "Call Capacity Management", "Call Park", "Call Pickup", "City-Wide Centrex", "Custom Ringback Group", "Custom Ringback Group - Video", "Emergency Zones", "Enhanced Outgoing Calling Plan", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Incoming Calling Plan", "Instant Group Call", "Intercept Group", "Inventory Report", "LDAP Integration", "Meet-Me Conferencing", "Music On Hold", "Music On Hold - Video", "Outgoing Calling Plan", "Preferred Carrier Group", "Route Point", "Series Completion", "Service Scripts Group", "Trunk Group", "Voice Messaging Group", "VoiceXML"]}}}, "required": ["serviceProviderId", "groupId", "serviceName"]}, "GroupSessionAdmissionControlGetAvailableDeviceListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaDeviceName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 40}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceMACAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 12}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceNetAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactDeviceType": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "searchCriteriaExactDeviceLevel": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}}, "required": ["deviceLevel"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupSessionAdmissionControlGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupSessionAdmissionControlGroupAddDeviceListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "devices": {"type": "array", "items": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}}}, "required": ["serviceProviderId", "groupId", "name", "devices"]}, "GroupSessionAdmissionControlGroupAddRequest19sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "maxSession": {"type": "integer", "minimum": 0.0}, "maxUserOriginatingSessions": {"type": "integer", "minimum": 0.0}, "maxUserTerminatingSessions": {"type": "integer", "minimum": 0.0}, "reservedSession": {"type": "integer", "minimum": 0.0}, "reservedUserOriginatingSessions": {"type": "integer", "minimum": 0.0}, "reservedUserTerminatingSessions": {"type": "integer", "minimum": 0.0}, "becomeDefaultGroup": {"type": "boolean"}, "countIntraSACGroupSessions": {"type": "boolean"}, "devices": {"type": "array", "items": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}}, "blockEmergencyAndRepairCallsDueToSACLimits": {"type": "boolean"}, "mediaGroupName": {"type": "string", "minLength": 1, "maxLength": 80}, "accessInfoPattern": {"type": "string", "minLength": 1, "maxLength": 1024}}, "required": ["serviceProviderId", "groupId", "name", "maxSession", "reservedSession", "becomeDefaultGroup", "countIntraSACGroupSessions", "blockEmergencyAndRepairCallsDueToSACLimits"]}, "GroupSessionAdmissionControlGroupDeleteDeviceListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "devices": {"type": "array", "items": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}}}, "required": ["serviceProviderId", "groupId", "name", "devices"]}, "GroupSessionAdmissionControlGroupDeleteListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupSessionAdmissionControlGroupGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupSessionAdmissionControlGroupGetRequest21sp1V2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupSessionAdmissionControlGroupModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "newName": {"type": "string", "minLength": 1, "maxLength": 40}, "maxSession": {"type": "integer", "minimum": 0.0}, "maxUserOriginatingSessions": {"type": "integer", "minimum": 0.0}, "maxUserTerminatingSessions": {"type": "integer", "minimum": 0.0}, "reservedSession": {"type": "integer", "minimum": 0.0}, "reservedUserOriginatingSessions": {"type": "integer", "minimum": 0.0}, "reservedUserTerminatingSessions": {"type": "integer", "minimum": 0.0}, "becomeDefaultGroup": {"type": "boolean"}, "countIntraSACGroupSessions": {"type": "boolean"}, "deviceList": {"type": "object", "properties": {"device": {"type": "array", "items": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}}}, "required": ["device"]}, "blockEmergencyAndRepairCallsDueToSACLimits": {"type": "boolean"}, "mediaGroupName": {"type": "string", "minLength": 1, "maxLength": 80}, "accessInfoPattern": {"type": "string", "minLength": 1, "maxLength": 1024}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupSessionAdmissionControlModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "restrictAggregateSessions": {"type": "boolean"}, "maxSessions": {"type": "integer", "minimum": 0.0}, "maxUserOriginatingSessions": {"type": "integer", "minimum": 0.0}, "maxUserTerminatingSessions": {"type": "integer", "minimum": 0.0}, "countIntraGroupSessions": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId"]}, "GroupShInterfaceGetUserListRequest21sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupStirShakenGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupStirShakenModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useParentLevelSettings": {"type": "boolean"}, "signingPolicy": {"type": "string", "enum": ["All Eligible Calls", "Eligible Inter-Network Calls", "Off"]}, "taggingPolicy": {"type": "string", "enum": ["All Eligible Calls", "Eligible Intra-Network Calls", "Off"]}, "signingServiceURL": {"type": "string", "minLength": 1, "maxLength": 256}, "tagFromOrPAI": {"type": "string", "enum": ["PAI", "From", "Both"]}, "verstatTag": {"type": "string", "enum": ["TN-Validation-Passed", "TN-Validation-Failed", "No-TN-Validation"]}, "useOSValueForOrigId": {"type": "boolean"}, "origUUID": {"type": "string", "maxLength": 36}, "attestationLevel": {"type": "string", "enum": ["Full", "Partial", "Gateway"]}, "enableVerification": {"type": "boolean"}, "verificationServiceURL": {"type": "string", "minLength": 1, "maxLength": 256}, "verificationErrorHandling": {"type": "string", "enum": ["Abort", "Proceed"]}, "proxyVerstatToCNAMSubscribe": {"type": "boolean"}, "useUnknownHeadersFromCNAMNotify": {"type": "boolean"}, "enableSigningForUnscreenedTrunkGroupOriginations": {"type": "boolean"}, "enableTaggingForUnscreenedTrunkGroupOriginations": {"type": "boolean"}, "unscreenedTrunkGroupOriginationAttestationLevel": {"type": "string", "enum": ["Full", "Partial", "Gateway"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupTemplateOnlyDeviceFileGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupThirdPartyEmergencyCallingGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupThirdPartyEmergencyCallingModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "enableDeviceManagement": {"type": "boolean"}, "enableRouting": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId"]}, "GroupTrunkGroupGetAvailableDetailListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupTrunkGroupStirShakenGetRequest": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupStirShakenModifyRequest": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "useParentLevelSettings": {"type": "boolean"}, "signingPolicy": {"type": "string", "enum": ["All Eligible Calls", "Eligible Inter-Network Calls", "Off"]}, "taggingPolicy": {"type": "string", "enum": ["All Eligible Calls", "Eligible Intra-Network Calls", "Off"]}, "signingServiceURL": {"type": "string", "minLength": 1, "maxLength": 256}, "tagFromOrPAI": {"type": "string", "enum": ["PAI", "From", "Both"]}, "verstatTag": {"type": "string", "enum": ["TN-Validation-Passed", "TN-Validation-Failed", "No-TN-Validation"]}, "useOSValueForOrigId": {"type": "boolean"}, "origUUID": {"type": "string", "maxLength": 36}, "attestationLevel": {"type": "string", "enum": ["Full", "Partial", "Gateway"]}, "enableSigningForUnscreenedTrunkGroupOriginations": {"type": "boolean"}, "enableTaggingForUnscreenedTrunkGroupOriginations": {"type": "boolean"}, "unscreenedTrunkGroupOriginationAttestationLevel": {"type": "string", "enum": ["Full", "Partial", "Gateway"]}}, "required": ["trunkGroupKey"]}, "GroupUserCallForwardingSettingsGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "callForwardingService": {"type": "string", "enum": ["Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective"]}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "includeVirtualUsers": {"type": "boolean"}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaExactUserInTrunkGroup": {"type": "object", "properties": {"userInTrunkGroup": {"type": "boolean"}}, "required": ["userInTrunkGroup"]}, "searchCriteriaForwardedToNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "oneOf": [{"type": "object", "properties": {"sortByUserLastName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserLastName"]}, {"type": "object", "properties": {"sortByUserFirstName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserFirstName"]}, {"type": "object", "properties": {"sortByUserDepartment": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserDepartment"]}, {"type": "object", "properties": {"sortByDn": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDn"]}, {"type": "object", "properties": {"sortByExtension": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByExtension"]}, {"type": "object", "properties": {"sortByForwardedToNumber": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByForwardedToNumber"]}], "required": ["serviceProviderId", "groupId", "callForwardingService", "responsePagingControl"]}, "GroupUserCallingPlanSettingsGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "callingPlanService": {"type": "string", "enum": ["Incoming Calling Plan", "Outgoing Calling Plan"]}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "includeVirtualUsers": {"type": "boolean"}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaExactUserInTrunkGroup": {"type": "object", "properties": {"userInTrunkGroup": {"type": "boolean"}}, "required": ["userInTrunkGroup"]}}, "oneOf": [{"type": "object", "properties": {"sortByUserLastName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserLastName"]}, {"type": "object", "properties": {"sortByUserFirstName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserFirstName"]}, {"type": "object", "properties": {"sortByUserDepartment": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserDepartment"]}, {"type": "object", "properties": {"sortByDn": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDn"]}, {"type": "object", "properties": {"sortByExtension": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByExtension"]}], "required": ["serviceProviderId", "groupId", "callingPlanService", "responsePagingControl"]}, "GroupUserCallWaitingSettingsGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "includeVirtualUsers": {"type": "boolean"}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaExactUserInTrunkGroup": {"type": "object", "properties": {"userInTrunkGroup": {"type": "boolean"}}, "required": ["userInTrunkGroup"]}, "searchCriteriaServiceStatus": {"type": "object", "properties": {"isActive": {"type": "boolean"}}, "required": ["isActive"]}}, "oneOf": [{"type": "object", "properties": {"sortByUserLastName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserLastName"]}, {"type": "object", "properties": {"sortByUserFirstName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserFirstName"]}, {"type": "object", "properties": {"sortByUserDepartment": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserDepartment"]}, {"type": "object", "properties": {"sortByDn": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDn"]}, {"type": "object", "properties": {"sortByExtension": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByExtension"]}, {"type": "object", "properties": {"sortByServiceStatus": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByServiceStatus"]}], "required": ["serviceProviderId", "groupId", "responsePagingControl"]}, "GroupUserHotelingGuestSettingsGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "includeVirtualUsers": {"type": "boolean"}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaExactUserInTrunkGroup": {"type": "object", "properties": {"userInTrunkGroup": {"type": "boolean"}}, "required": ["userInTrunkGroup"]}}, "oneOf": [{"type": "object", "properties": {"sortByUserLastName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserLastName"]}, {"type": "object", "properties": {"sortByUserFirstName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserFirstName"]}, {"type": "object", "properties": {"sortByUserDepartment": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByUserDepartment"]}, {"type": "object", "properties": {"sortByDn": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDn"]}, {"type": "object", "properties": {"sortByExtension": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByExtension"]}, {"type": "object", "properties": {"sortByServiceStatus": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByServiceStatus"]}], "required": ["serviceProviderId", "groupId", "responsePagingControl"]}, "GroupUserLanguageModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "applyToUsers": {"type": "boolean"}, "applyToServiceInstances": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "language"]}, "GroupVisualDeviceManagementGetDeviceInfoRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupXsiPolicyProfileAssignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupXsiPolicyProfile": {"type": "string", "minLength": 1, "maxLength": 40}, "userXsiPolicyProfile": {"type": "object", "properties": {"name": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}, "default": {"type": "string", "minLength": 1, "maxLength": 40}}}}, "required": ["serviceProviderId", "groupId"]}, "GroupXsiPolicyProfileGetAssignedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "level": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupXsiPolicyProfileGetAssignedUserListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "xsiPolicyProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "level": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["name", "level"]}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId", "xsiPolicyProfile"]}, "GroupXsiPolicyProfileModifyDefaultRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "userDefaultXsiPolicyProfile": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId"]}, "GroupXsiPolicyProfileUnassignListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "userXsiPolicyProfile": {"type": "object", "properties": {"name": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}, "newDefault": {"type": "string", "minLength": 1, "maxLength": 40}}}}, "required": ["serviceProviderId", "groupId"]}}}}
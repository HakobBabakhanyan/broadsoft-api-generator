{"openapi": "3.0.0", "info": {"title": "Group Properties API", "version": "1.0.0"}, "servers": [{"description": "Lab", "url": "https://b7ftljz4m6.execute-api.us-west-2.amazonaws.com/v1/command"}, {"description": "Prod", "url": " https://dtjdrpasm2.execute-api.us-west-1.amazonaws.com/v1/command"}], "paths": {"/deprecated/AuthenticationVerifyRequest": {"post": {"tags": ["Deprecated"], "summary": "AuthenticationVerifyRequest", "description": "AuthenticationVerifyRequest is used to authenticate a user using the user Id and password. The response is a AuthenticationVerifyResponse or an ErrorResponse\n        Replaced By: AuthenticationVerifyRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthenticationVerifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/AuthenticationVerifyRequest14sp8": {"post": {"tags": ["Deprecated"], "summary": "AuthenticationVerifyRequest14sp8", "description": "AuthenticationVerifyRequest14sp8 is used to authenticate a user either by userId/password, userId/sip username/sip password,\n        dn/passcode or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.\n        The phone number may be any DN associated with a user.\n\n        The response is a AuthenticationVerifyResponse14sp8 or an ErrorResponse\n\n        Replaced by AuthenticationVerifyRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthenticationVerifyRequest14sp8"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/AuthenticationVerifyRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "AuthenticationVerifyRequest21sp1", "description": "AuthenticationVerifyRequest21sp1 is used to authenticate a user either by userId/password, userId/sip username/sip password,\n        dn/passcode, lineport/password or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.\n        The phone number may be any DN associated with a user.\n        The lineport may be any lineport associated with a user.\n        The password used for the lineport is the user's password associated with userId.\n\n        The response is a AuthenticationVerifyResponse21sp1 or an ErrorResponse\n        Replaced by AuthenticationVerifyRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthenticationVerifyRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/AuthenticationVerifyRequest22": {"post": {"tags": ["Deprecated"], "summary": "AuthenticationVerifyRequest22", "description": "AuthenticationVerifyRequest22 is used to authenticate a user either by userId/password, userId/sip username/sip password,\n        dn/passcode, lineport/password or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.\n        The phone number may be any DN associated with a user.\n        The lineport may be any lineport associated with a user.\n        The password used for the lineport is the user's password associated with userId.\n\n        The response is a AuthenticationVerifyResponse22 or an ErrorResponse\n        Replaced by AuthenticationVerifyRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthenticationVerifyRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/AuthenticationVerifyRequest22V2": {"post": {"tags": ["Deprecated"], "summary": "AuthenticationVerifyRequest22V2", "description": "AuthenticationVerifyRequest22V2 is used to authenticate a user either by userId/password, userId/sip username/sip password,\n        dn/passcode, lineport/password or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.\n        The phone number may be any DN associated with a user.\n        The lineport may be any lineport associated with a user.\n        The password used for the lineport is the user's password associated with userId.\n\n        The response is a AuthenticationVerifyResponse22V2 or an ErrorResponse\n        Replaced by AuthenticationVerifyRequest22V3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthenticationVerifyRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/AuthenticationVerifyRequest22V3": {"post": {"tags": ["Deprecated"], "summary": "AuthenticationVerifyRequest22V3", "description": "AuthenticationVerifyRequest22V3 is used to authenticate a user either by userId/password, userId/sip username/sip password,\n        dn/passcode, lineport/password or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.\n        The phone number may be any DN associated with a user.\n        The lineport may be any lineport associated with a user.\n        The password used for the lineport is the user's password associated with userId.\n\n        The response is a AuthenticationVerifyResponse22V3 or an ErrorResponse\n        Replaced by AuthenticationVerifyRequest22V4.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AuthenticationVerifyRequest22V3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/DeviceManagementFileAuthLocationGetRequest": {"post": {"tags": ["Deprecated"], "summary": "DeviceManagementFileAuthLocationGetRequest", "description": "Get the address and credentials of the File Repository hosting the requested access device file. Also get the file name and path on the File Repository. The response is either a DeviceManagementFileAuthLocationGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeviceManagementFileAuthLocationGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/DeviceManagementFileAuthLocationGetRequest17": {"post": {"tags": ["Deprecated"], "summary": "DeviceManagementFileAuthLocationGetRequest17", "description": "Get the address and credentials of the File Repository hosting the requested access device file.\n        Also get the file name and path on the File Repository.\n        The response is either a DeviceManagementFileAuthLocationGetResponse17 or an ErrorResponse.\n\n        Replaced by: DeviceManagementFileAuthLocationGetRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeviceManagementFileAuthLocationGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/DeviceManagementFileAuthLocationGetRequest18": {"post": {"tags": ["Deprecated"], "summary": "DeviceManagementFileAuthLocationGetRequest18", "description": "Get the address and credentials of the File Repository hosting the requested access device file.\n        Also get the file name and path on the File Repository.\n        The response is either a DeviceManagementFileAuthLocationGetResponse18 or an ErrorResponse.\n        Replaced by: DeviceManagementFileAuthLocationGetRequest21.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeviceManagementFileAuthLocationGetRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/DeviceManagementFileAuthLocationGetRequest20sp1": {"post": {"tags": ["Deprecated"], "summary": "DeviceManagementFileAuthLocationGetRequest20sp1", "description": "Get the address and credentials of the File Repository hosting the requested access device file.\n        Also get the file name and path on the File Repository.\n        The response is either a DeviceManagementFileAuthLocationGetResponse20sp1 or an ErrorResponse.\n        Replaced by: DeviceManagementFileAuthLocationGetRequest21sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeviceManagementFileAuthLocationGetRequest20sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/DeviceManagementFileAuthLocationGetRequest21": {"post": {"tags": ["Deprecated"], "summary": "DeviceManagementFileAuthLocationGetRequest21", "description": "Get the address and credentials of the File Repository hosting the requested access device file.\n        Also get the file name and path on the File Repository.\n        The response is either DeviceManagementFileAuthLocationGetResponse21 or ErrorResponse.\n        The following elements are only used in AS data mode and will fail in XS data mode:\n          deviceToken\n\n\t\tReplaced by: DeviceManagementFileAuthLocationGetRequest21sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeviceManagementFileAuthLocationGetRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/DeviceManagementFileAuthLocationGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "DeviceManagementFileAuthLocationGetRequest21sp1", "description": "Get the address and credentials of the File Repository hosting the requested access device file.\n        Also get the file name and path on the File Repository.\n        The response is either DeviceManagementFileAuthLocationGetResponse21sp1 or ErrorResponse.\n        The following elements are only used in AS data mode and will fail in XS data mode:\n          deviceToken\n        Replaced by DeviceManagementFileAuthLocationGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeviceManagementFileAuthLocationGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/DeviceManagementFileAuthLocationGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "DeviceManagementFileAuthLocationGetRequest22", "description": "Get the address and credentials of the File Repository hosting the requested access device file.\n        Also get the file name and path on the File Repository.\n        The response is either DeviceManagementFileAuthLocationGetResponse22 or ErrorResponse.\n        The following elements are only used in AS data mode and will fail in XS data mode:\n          deviceToken", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeviceManagementFileAuthLocationGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/DeviceManagementFileAuthLocationGetRequest22V2": {"post": {"tags": ["Deprecated"], "summary": "DeviceManagementFileAuthLocationGetRequest22V2", "description": "Get the address and credentials of the File Repository hosting the requested access device file.\n        Also get the file name and path on the File Repository.\n        The response is either DeviceManagementFileAuthLocationGetResponse22V2 or ErrorResponse.\n        The following elements are only used in AS data mode and will fail in XS data mode:\n          deviceToken\n        The following elements are only used in XS data mode and will be ignored in AS data mode:\n          fileNameLookup\n          fileNameOnDisk", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeviceManagementFileAuthLocationGetRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequest", "description": "Request a summary table of all Mobile Subscriber Directory Numbers in an enterprise.\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the  responsePageSize will be set to  the maximum ResponsePageSize by default.\n        If no sortOrder is included the response is sorted by Mobile Number ascending by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n        The department in both the search criteria and sort by fields refer to the department of the user.\n        The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListResponse or ErrorResponse.\n        Replaced by: EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest", "description": "Request a list of available Mobile Subscriber Directory Numbers not yet assigned to any user.\n        The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListResponse or ErrorResponse.\n        Replaced by: EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequest", "description": "Request a list of available Mobile Subscriber Directory Numbers not yet assigned to any user.\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        If no sortOrder is included the response is sorted by Mobile Number ascending by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n        The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListResponse or ErrorResponse.\n        Replaced by: EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequest", "description": "Request the enterprise level data associated with Call Center Agents Unavailable Code Settings.\n        The response is either an EnterpriseCallCenterAgentUnavailableCodeSettingsGetResponse or an\n        ErrorResponse.\n\n        Replaced by EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequest17sp4.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseCallCenterEnhancedReportingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseCallCenterEnhancedReportingGetRequest", "description": "Request to get an enterprise level call center enhanced reporting setting.\n        The response is either an EnterpriseCallCenterEnhancedReportingGetResponse or an ErrorResponse.\n\n        Replaced by EnterpriseCallCenterEnhancedReportingGetRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseCallCenterEnhancedReportingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseCallCenterEnhancedReportingModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseCallCenterEnhancedReportingModifyRequest", "description": "Request to modify enterprise level call center enhanced reporting settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by EnterpriseCallCenterEnhancedReportingModifyRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseCallCenterEnhancedReportingModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseCallCenterGetRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseCallCenterGetRequest", "description": "Request the enterprise level data associated with Call Center.\n        The response is either an EnterpriseCallCenterGetResponse or an\n        ErrorResponse.\n\n        Replaced by EnterpriseCallCenterGetRequest17sp4.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseCallCenterGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseCallCenterMonitoringGetRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseCallCenterMonitoringGetRequest", "description": "Request the enterprise level data associated with Call Center Monitoring.\n        The response is either an EnterpriseCallCenterMonitoringGetResponse or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseCallCenterMonitoringGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseEnterpriseTrunkAddRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseEnterpriseTrunkAddRequest", "description": "Request to add an enterprise trunk in an enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by: EnterpriseEnterpriseTrunkAddRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseEnterpriseTrunkAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseEnterpriseTrunkGetRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseEnterpriseTrunkGetRequest", "description": "Request to get an enterprise trunk\n        The response is either an EnterpriseEnterpriseTrunkGetResponse or an ErrorResponse.\n        Replaced by: EnterpriseEnterpriseTrunkGetRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseEnterpriseTrunkGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseEnterpriseTrunkGetRequest21": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseEnterpriseTrunkGetRequest21", "description": "Request to get an enterprise trunk\n        The response is either an EnterpriseEnterpriseTrunkGetResponse21 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseEnterpriseTrunkGetRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterprisePhoneDirectoryGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterprisePhoneDirectoryGetListRequest", "description": "Request a table containing the phone directory for an enterprise.\n         The directory includes all users in the enterprise and all entries in the enterprise common phone list.\n         It is possible to search by various criteria to restrict the number of rows returned.\n         Multiple search criteria are logically ANDed together.\n         The response is either EnterprisePhoneDirectoryGetListResponse or ErrorResponse.\n         Replace by: EnterprisePhoneDirectoryGetListRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterprisePhoneDirectoryGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterprisePhoneDirectoryGetListRequest17": {"post": {"tags": ["Deprecated"], "summary": "EnterprisePhoneDirectoryGetListRequest17", "description": "Request a table containing the phone directory for an enterprise.\n        The directory includes all users in the enterprise and all entries in the enterprise common phone list.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either EnterprisePhoneDirectoryGetListResponse17 or ErrorResponse.\n\n        Replaced by: EnterprisePhoneDirectoryGetListRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterprisePhoneDirectoryGetListRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterprisePhoneDirectoryGetListRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "EnterprisePhoneDirectoryGetListRequest17sp3", "description": "Request a table containing the phone directory for an enterprise.\n        The directory includes all users in the enterprise and all entries in the enterprise common phone list.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either EnterprisePhoneDirectoryGetListResponse17sp3 or ErrorResponse.\n\n        Replaced by: EnterprisePhoneDirectoryGetListRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterprisePhoneDirectoryGetListRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterprisePhoneDirectoryGetPagedListRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterprisePhoneDirectoryGetPagedListRequest", "description": "Request a table containing the phone directory for an enterprise.\n        The directory includes all users in the enterprise and all entries in the enterprise common phone list.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either EnterprisePhoneDirectoryGetPagedListResponse or ErrorResponse.\n\n        Replaced By: EnterprisePhoneDirectoryGetPagedSortedListRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterprisePhoneDirectoryGetPagedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseSessionAdmissionControlGroupAddRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseSessionAdmissionControlGroupAddRequest", "description": "Request to add a session admission control group for the enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseSessionAdmissionControlGroupAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseSessionAdmissionControlGroupGetRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseSessionAdmissionControlGroupGetRequest", "description": "Request to get a session admission control group for the enterprise.\n        The response is either an EnterpriseSessionAdmissionControlGroupGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseSessionAdmissionControlGroupGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseSessionAdmissionControlGroupGetRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseSessionAdmissionControlGroupGetRequest19sp1", "description": "Request to get a session admission control group for the enterprise.\n        The response is either an EnterpriseSessionAdmissionControlGroupGetResponse19sp1 or an ErrorResponse.\n\n        Replaced by: EnterpriseSessionAdmissionControlGroupGetRequest21sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseSessionAdmissionControlGroupGetRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseSessionAdmissionControlGroupGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseSessionAdmissionControlGroupGetRequest21sp1", "description": "Request to get a session admission control group for the enterprise.\n        The response is either an EnterpriseSessionAdmissionControlGroupGetResponse21sp1 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseSessionAdmissionControlGroupGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/EnterpriseVoiceVPNGetRequest": {"post": {"tags": ["Deprecated"], "summary": "EnterpriseVoiceVPNGetRequest", "description": "Request the enterprise level data associated with Voice VPN.\n        The response is either a EnterpriseVoiceVPNGetResponse or an ErrorResponse.\n        Replaced By: EnterpriseVoiceVPNGetRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EnterpriseVoiceVPNGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAccessDeviceFileGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupAccessDeviceFileGetListRequest", "description": "Request to get the list of device files managed by the Device Management System, on a per-device profile basis.\n          The response is either GroupAccessDeviceFileGetListResponse or ErrorResponse.\n          Replaced By: GroupAccessDeviceFileGetListRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceFileGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAccessDeviceFileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupAccessDeviceFileGetRequest", "description": "Request to get a group device profile file.\n          The response is either GroupAccessDeviceFileGetResponse or ErrorResponse.\n          Replaced By: GroupAccessDeviceFileGetRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceFileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAccessDeviceFileGetRequest14sp8": {"post": {"tags": ["Deprecated"], "summary": "GroupAccessDeviceFileGetRequest14sp8", "description": "Request to get a group device profile file.\n        The response is either GroupAccessDeviceFileGetResponse14sp8 or ErrorResponse.\n        Replaced by: GroupAccessDeviceFileGetRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceFileGetRequest14sp8"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAccessDeviceFileGetRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupAccessDeviceFileGetRequest16sp1", "description": "Request to get a group device profile file.\n        The response is either GroupAccessDeviceFileGetResponse16sp1 or ErrorResponse.\n\n        Replaced by: GroupAccessDeviceFileGetRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceFileGetRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAccessDeviceFileModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupAccessDeviceFileModifyRequest", "description": "Request to modify a specified group access device file.\n          The response is either a SuccessResponse or an ErrorResponse.\n          Replaced By: GroupAccessDeviceFileModifyRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceFileModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAccessDeviceGetAvailableDetailListRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupAccessDeviceGetAvailableDetailListRequest14", "description": "Requests the list of available access devices for assignment to a user\n        within a group. The list includes devices created at the system, service provider, and group levels.\n        The response is either GroupAccessDeviceGetAvailableDetailListResponse14 or\n        ErrorResponse.\n\n        Replaced by: GroupAccessDeviceGetAvailableDetailListRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetAvailableDetailListRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAccessDeviceGetPagedSortedListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupAccessDeviceGetPagedSortedListRequest", "description": "Requests the list of access devices in a group.\n        The response is either GroupAccessDeviceGetPagedSortedListResponse or ErrorResponse.\n        If no sortOrder is included, the response is sorted by Device Name ascending\n        by default.  If the responsePagingControl element is not provided, the paging startIndex\n        will be set to 1 by default, and the responsePageSize will be set to the maximum\n        responsePageSize by default.\n        Multiple search criteria are logically ANDed together unless the\n        searchCriteriaModeOr option is included. Then the search criteria are logically\n        ORed together.\n        The getVisualDeviceManagementAPIDevicesOnly element can only be set when CloudPBX is licenced.\n        If the getVisualDeviceManagementAPIDevicesOnly element is not set, all devices are returned with Visual Device Management API flag set to empty.\n        If the getVisualDeviceManagementAPIDevicesOnly element is set to true, only SIP devices supporting Visual Device Management API are returned.\n        If the getVisualDeviceManagementAPIDevicesOnly element is set to false, all SIP devices are returned with their current Visual Device Management API flag value.\n\n        Replaced by GroupAccessDeviceGetPagedSortedListRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetPagedSortedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAccessDeviceGetRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupAccessDeviceGetRequest14", "description": "Requests the configuration of a specified group access device.\n        The response is either GroupAccessDeviceGetResponse14 or ErrorResponse.\n        Replaced By: GroupAccessDeviceGetRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAccessDeviceGetRequest14sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupAccessDeviceGetRequest14sp3", "description": "Requests the configuration of a specified group access device.\n        The response is either GroupAccessDeviceGetResponse14sp3 or ErrorResponse.\n        Replaced By: GroupAccessDeviceGetRequest14sp6", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetRequest14sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAccessDeviceGetRequest14sp6": {"post": {"tags": ["Deprecated"], "summary": "GroupAccessDeviceGetRequest14sp6", "description": "Requests the configuration of a specified group access device.\n        The response is either GroupAccessDeviceGetResponse14sp6 or ErrorResponse.\n        Replaced by: GroupAccessDeviceGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetRequest14sp6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAccessDeviceGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupAccessDeviceGetRequest16", "description": "Requests the configuration of a specified group access device.\n        The response is either GroupAccessDeviceGetResponse16 or ErrorResponse.\n\n        Replaced by: GroupAccessDeviceGetRequest18sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAccessDeviceGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAdminGetPolicyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupAdminGetPolicyRequest", "description": "Requests the Group administrator's policy settings.\n        The response is either GroupAdminGetPolicyResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminGetPolicyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAdminGetPolicyRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupAdminGetPolicyRequest14sp1", "description": "Requests the Group administrator's policy settings.\n        The response is either GroupAdminGetPolicyResponse14sp1 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminGetPolicyRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAdminGetPolicyRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupAdminGetPolicyRequest16sp1", "description": "Requests the Group administrator's policy settings.\n        The response is either GroupAdminGetPolicyResponse16sp1 or ErrorResponse.\n        Replaced by: GroupAdminGetPolicyRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminGetPolicyRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAdminGetPolicyRequest16sp2": {"post": {"tags": ["Deprecated"], "summary": "GroupAdminGetPolicyRequest16sp2", "description": "Requests the Group administrator's policy settings.\n        The response is either GroupAdminGetPolicyResponse16sp2 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminGetPolicyRequest16sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAdminGetPolicyRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupAdminGetPolicyRequest17", "description": "Requests the Group administrator's policy settings.\n        The response is either GroupAdminGetPolicyResponse17 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminGetPolicyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAdminGetPolicyRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupAdminGetPolicyRequest17sp3", "description": "Requests the Group administrator's policy settings.\n        The response is either GroupAdminGetPolicyResponse17sp3 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAdminGetPolicyRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAnnouncementFileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupAnnouncementFileGetRequest", "description": "Request to get the announcement repository file information.\n        The response is either GroupAnnouncementFileGetResponse or ErrorResponse.\n\n        Replaced by: GroupAnnouncementFileGetRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAnnouncementFileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAutoAttendantAddInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupAutoAttendantAddInstanceRequest14", "description": "Add a Auto Attendant instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: GroupAutoAttendantAddInstanceRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAutoAttendantAddInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAutoAttendantAddInstanceRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupAutoAttendantAddInstanceRequest16", "description": "Add a Auto Attendant instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAutoAttendantAddInstanceRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAutoAttendantAddInstanceRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupAutoAttendantAddInstanceRequest17sp1", "description": "Add a Auto Attendant instance to a group.\n        The domain is required in the serviceUserId.\n        Only Group and Enterprise level schedules are accepted.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAutoAttendantAddInstanceRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAutoAttendantGetInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupAutoAttendantGetInstanceRequest14", "description": "Request to get all the information of a Auto Attendant instance.\n        The response is either GroupAutoAttendantGetInstanceResponse or ErrorResponse.\n        Replaced By: GroupAutoAttendantGetInstanceRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAutoAttendantGetInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAutoAttendantGetInstanceRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupAutoAttendantGetInstanceRequest16", "description": "Request to get all the information of a Auto Attendant instance.\n        The response is either GroupAutoAttendantGetInstanceResponse16 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAutoAttendantGetInstanceRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAutoAttendantGetInstanceRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupAutoAttendantGetInstanceRequest17", "description": "Request to get all the information of a Auto Attendant instance.\n        The response is either GroupAutoAttendantGetInstanceResponse17 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAutoAttendantGetInstanceRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAutoAttendantGetInstanceRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupAutoAttendantGetInstanceRequest17sp1", "description": "Request to get all the information of a Auto Attendant instance.\n        The response is either GroupAutoAttendantGetInstanceResponse17sp1 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAutoAttendantGetInstanceRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAutoAttendantModifyInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupAutoAttendantModifyInstanceRequest", "description": "Request to modify an Auto Attendant instance.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: GroupAutoAttendantModifyInstanceRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAutoAttendantModifyInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupAutoAttendantModifyInstanceRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupAutoAttendantModifyInstanceRequest16", "description": "Request to modify an Auto Attendant instance.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupAutoAttendantModifyInstanceRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupBroadWorksAnywhereGetInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupBroadWorksAnywhereGetInstanceRequest", "description": "Request to get all the information of a BroadWorks Anywhere instance.\n        The response is either GroupBroadWorksAnywhereGetInstanceResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksAnywhereGetInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupBroadWorksMobilityGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupBroadWorksMobilityGetRequest", "description": "Get the groups BroadWorks Mobility settings.\n        The response is either a GroupBroadWorksMobilityGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobilityGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupBroadWorksMobilityGetRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupBroadWorksMobilityGetRequest19sp1", "description": "Get the group's BroadWorks Mobility settings.\n        The response is either a GroupBroadWorksMobilityGetResponse19sp1 or an ErrorResponse.\n\n        Replaced by: GroupBroadWorksMobilityGetRequest22 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobilityGetRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupBroadWorksMobilityGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupBroadWorksMobilityGetRequest21sp1", "description": "Get the group's BroadWorks Mobility settings.\n        The response is either a GroupBroadWorksMobilityGetResponse21sp1 or an ErrorResponse.\n\n        Replaced by GroupBroadWorksMobilityGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobilityGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupBroadWorksMobilityGetRequest21sp1V2": {"post": {"tags": ["Deprecated"], "summary": "GroupBroadWorksMobilityGetRequest21sp1V2", "description": "Get the group's BroadWorks Mobility settings.\n        The response is either a GroupBroadWorksMobilityGetResponse21sp1V2 or an ErrorResponse.\n\n        Replaced by GroupBroadWorksMobilityGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobilityGetRequest21sp1V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupBroadWorksMobilityGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "GroupBroadWorksMobilityGetRequest22", "description": "Get the group's BroadWorks Mobility settings.\n        The response is either a GroupBroadWorksMobilityGetResponse22 or an ErrorResponse.\n\n        Replaced by GroupBroadWorksMobilityGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobilityGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupBroadWorksMobilityGetRequest22V2": {"post": {"tags": ["Deprecated"], "summary": "GroupBroadWorksMobilityGetRequest22V2", "description": "Get the group's BroadWorks Mobility settings.\n        The response is either a GroupBroadWorksMobilityGetResponse22V2 or an ErrorResponse.\n\n        Replaced by GroupBroadWorksMobilityGetRequest22V3.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobilityGetRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupBroadWorksMobilityGetRequest22V3": {"post": {"tags": ["Deprecated"], "summary": "GroupBroadWorksMobilityGetRequest22V3", "description": "Get the group's BroadWorks Mobility settings.\n        The response is either a GroupBroadWorksMobilityGetResponse22V3 or an ErrorResponse.\n\n        Replaced by GroupBroadWorksMobilityGetRequest22V4.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupBroadWorksMobilityGetRequest22V3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterAddInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterAddInstanceRequest14", "description": "Add a Call Center instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: GroupCallCenterAddInstanceRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterAddInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterAddInstanceRequest14sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterAddInstanceRequest14sp3", "description": "Add a Call Center instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: GroupCallCenterAddInstanceRequest14sp9", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterAddInstanceRequest14sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterAddInstanceRequest14sp9": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterAddInstanceRequest14sp9", "description": "Add a Call Center instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced By: GroupCallCenterAddInstanceRequest16,\n                     GroupCallCenterAddAgentListRequest,\n                     GroupCallCenterModifyPolicyRequest,\n                     GroupCallCenterModifyAnnouncementRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterAddInstanceRequest14sp9"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterAddInstanceRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterAddInstanceRequest16", "description": "Add a Call Center instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: GroupCallCenterAddInstanceRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterAddInstanceRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterAddInstanceRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterAddInstanceRequest17", "description": "Add a Call Center instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterAddInstanceRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterAddInstanceRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterAddInstanceRequest17sp1", "description": "Add a Call Center instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: GroupCallCenterAddInstanceRequest17sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterAddInstanceRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterAddInstanceRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterAddInstanceRequest17sp3", "description": "Add a Call Center instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n\n         Replaced by GroupCallCenterAddInstanceRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterAddInstanceRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterAddInstanceRequest19": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterAddInstanceRequest19", "description": "Add a Call Center instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced by GroupCallCenterAddInstanceRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterAddInstanceRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterAgentUnavailableCodeSettingsGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterAgentUnavailableCodeSettingsGetRequest", "description": "Request the group level data associated with Call Center Agents Unavailable Code Settings.\n        The response is either an GroupCallCenterAgentUnavailableCodeSettingsGetResponse or an\n        ErrorResponse.\n\n        Replaced by GroupCallCenterAgentUnavailableCodeSettingsGetRequest17sp4.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterAgentUnavailableCodeSettingsGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterBouncedCallGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterBouncedCallGetRequest", "description": "Get a call center's bounced call settings.\n        The response is either a GroupCallCenterBouncedCallGetResponse or an ErrorResponse.\n\n        Replaced by: GroupCallCenterBouncedCallGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterBouncedCallGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterComfortMessageBypassGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterComfortMessageBypassGetRequest", "description": "Get a call center's comfort message bypass settings.\n        The response is either a GroupCallCenterComfortMessageBypassGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterComfortMessageBypassGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterComfortMessageBypassGetRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterComfortMessageBypassGetRequest17", "description": "Get a call center's comfort message bypass settings.\n        The response is either a GroupCallCenterComfortMessageBypassGetResponse17 or an ErrorResponse.\n\n        Replaced by: GroupCallCenterComfortMessageBypassGetRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterComfortMessageBypassGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterComfortMessageBypassModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterComfortMessageBypassModifyRequest", "description": "Modify a call center's comfort message bypass settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterComfortMessageBypassModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterComfortMessageBypassModifyRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterComfortMessageBypassModifyRequest17", "description": "Modify a call center's comfort message bypass\n        settings.\n        The response is either a SuccessResponse\n        or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterComfortMessageBypassModifyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterEnhancedGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterEnhancedGetRequest", "description": "Request to get the Call Center Enhanced configuration data for a\n        Call Center.\n        The response is either GroupCallCenterEnhancedGetResponse or\n        ErrorResponse.\n\n        Replaced By: GroupCallCenterGetInstanceResponse16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterEnhancedGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterEnhancedModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterEnhancedModifyRequest", "description": "Modify the Call Center Enhanced configuration data for a Call\n        Center.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced By: GroupCallCenterModifyInstanceRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterEnhancedModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterEnhancedReportingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterEnhancedReportingGetRequest", "description": "Request to get a group level call center enhanced reporting setting.\n        The response is either a GroupCallCenterEnhancedReportingGetResponse or an ErrorResponse.\n\n        Replaced by GroupCallCenterEnhancedReportingGetRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterEnhancedReportingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterEnhancedReportingModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterEnhancedReportingModifyRequest", "description": "Request to modify group level call center enhanced reporting settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by GroupCallCenterEnhancedReportingModifyRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterEnhancedReportingModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterForcedForwardingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterForcedForwardingGetRequest", "description": "Get a call center's forced forwarding settings.\n        The response is either a GroupCallCenterForcedForwardingGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterForcedForwardingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterForcedForwardingGetRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterForcedForwardingGetRequest17", "description": "Get a call center's forced forwarding settings.\n        The response is either a GroupCallCenterForcedForwardingGetResponse17 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterForcedForwardingGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterForcedForwardingModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterForcedForwardingModifyRequest", "description": "Modify a call center's forced forwarding settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterForcedForwardingModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetAnnouncementRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetAnnouncementRequest", "description": "Get a call center's announcement settings.\n        The response is either a GroupCallCenterGetAnnouncementResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetAnnouncementRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetAnnouncementRequest14sp6": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetAnnouncementRequest14sp6", "description": "Get a call center's announcement settings.\n        The response is either a GroupCallCenterGetAnnouncementResponse14sp6 or an ErrorResponse.\n\n        Replaced By: GroupCallCenterGetAnnouncementRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetAnnouncementRequest14sp6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetAnnouncementRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetAnnouncementRequest16", "description": "Get a call center's announcement settings.\n        The response is either a GroupCallCenterGetAnnouncementResponse16 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetAnnouncementRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetAnnouncementRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetAnnouncementRequest17", "description": "Get a call center's announcement settings.\n        The response is either a GroupCallCenterGetAnnouncementResponse17 or an ErrorResponse.\n\n        Replaced by GroupCallCenterGetAnnouncementRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetAnnouncementRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetAnnouncementRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetAnnouncementRequest17sp4", "description": "Get a call center's announcement settings.\n        The response is either a GroupCallCenterGetAnnouncementResponse17sp4 or an ErrorResponse.\n\n    Replaced by: GroupCallCenterGetAnnouncementRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetAnnouncementRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetAvailableUserListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetAvailableUserListRequest", "description": "Get a list of users that can be assigned to a Call Center group.\n        Searching for users by group only makes sense when the call center is part of an Enterprise.\n        The response is either GroupCallCenterGetAvailableUserListResponse or ErrorResponse.\n\n        Replaced By: GroupCallCenterGetAvailableAgentListRequest and GroupCallCenterGetAvailableSupervisorListRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetAvailableUserListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetDNISAnnouncementRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetDNISAnnouncementRequest", "description": "Get a call center's DNIS Announcements\n        The response is either a GroupCallCenterGetDNISAnnouncementRequest or an ErrorResponse.\n\n        Replaced by GroupCallCenterGetDNISAnnouncementRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetDNISAnnouncementRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetDNISAnnouncementRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetDNISAnnouncementRequest17sp4", "description": "Get a call center's DNIS Announcements\n        The response is either a GroupCallCenterGetDNISAnnouncementRequest17sp4 or an ErrorResponse.\n\n    Replaced by: GroupCallCenterGetDNISAnnouncementRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetDNISAnnouncementRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetDNISAnnouncementRequest19": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetDNISAnnouncementRequest19", "description": "Get a call center's DNIS Announcements\n        The response is either a GroupCallCenterGetDNISAnnouncementRequest19 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetDNISAnnouncementRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetDNISAnnouncementRequest20": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetDNISAnnouncementRequest20", "description": "Get a call center's DNIS Announcements\n        The response is either a GroupCallCenterGetDNISAnnouncementResponse20 or an ErrorResponse.\n\n        Replaced by: GroupCallCenterGetDNISAnnouncementRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetDNISAnnouncementRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetInstanceRequest14", "description": "Request to get all the information of a Call Center instance.\n        The response is either GroupCallCenterGetInstanceResponse14 or ErrorResponse.\n        Replaced By: GroupCallCenterGetInstanceRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetInstanceRequest14sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetInstanceRequest14sp3", "description": "Request to get all the information of a Call Center instance.\n        The response is either GroupCallCenterGetInstanceResponse14sp3 or ErrorResponse.\n        Replaced By: GroupCallCenterGetInstanceRequest14sp9", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetInstanceRequest14sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetInstanceRequest14sp9": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetInstanceRequest14sp9", "description": "Request to get all the information of a Call Center instance.\n        The response is either GroupCallCenterGetInstanceResponse14sp9 or ErrorResponse.\n\n        Replaced By: GroupCallCenterGetInstanceRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetInstanceRequest14sp9"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetInstanceRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetInstanceRequest16", "description": "Request to get all the information of a Call Center instance.\n        The response is either GroupCallCenterGetInstanceResponse16 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetInstanceRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetInstanceRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetInstanceRequest17", "description": "Request to get all the information of a Call Center instance.\n        The response is either GroupCallCenterGetInstanceResponse17 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetInstanceRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetInstanceRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetInstanceRequest17sp1", "description": "Request to get all the information of a Call Center instance.\n        The response is either GroupCallCenterGetInstanceResponse17sp1 or ErrorResponse.\n\n        Replaced by: GroupCallCenterGetInstanceRequest17sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetInstanceRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetInstanceRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetInstanceRequest17sp3", "description": "Request to get all the information of a Call Center instance.\n        The response is either GroupCallCenterGetInstanceResponse17sp3 or ErrorResponse.\n        Replaced by GroupCallCenterGetInstanceRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetInstanceRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetInstanceRequest19": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetInstanceRequest19", "description": "Request to get all the information of a Call Center instance.\n        The response is either GroupCallCenterGetInstanceResponse19 or ErrorResponse.\n\n        Replaced by: GroupCallCenterGetInstanceRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetInstanceRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetInstanceRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetInstanceRequest19sp1", "description": "Request to get all the information of a Call Center instance.\n        The response is either GroupCallCenterGetInstanceResponse19sp1 or ErrorResponse.\n        Replaced by GroupCallCenterGetInstanceRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetInstanceRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetInstanceStatisticsReportingRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetInstanceStatisticsReportingRequest", "description": "Request to get the call center statistics reporting settings.\n        The response is either GroupCallCenterGetInstanceStatisticsReportingResponse or ErrorResponse.\n\n        Replaced By: GroupCallCenterGetInstanceStatisticsReportingRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetInstanceStatisticsReportingRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetInstanceStatisticsReportingRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetInstanceStatisticsReportingRequest16", "description": "Request to get the call center statistics reporting settings.\n        The response is either GroupCallCenterGetInstanceStatisticsReportingResponse16 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetInstanceStatisticsReportingRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetInstanceStatisticsRequest13mp8": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetInstanceStatisticsRequest13mp8", "description": "Get Call Center queue and agent statistics.\n        The response is either GroupCallCenterGetInstanceStatisticsResponse13mp8 or ErrorResponse.\n        Replaced By: GroupCallCenterGetInstanceStatisticsRequest14sp9", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetInstanceStatisticsRequest13mp8"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetRequest", "description": "Request the Group level data associated with Call Center.\n        The response is either a GroupCallCenterGetResponse or an\n        ErrorResponse.\n\n        Replaced by GroupCallCenterGetRequest17sp4.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterGetSupervisorListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterGetSupervisorListRequest", "description": "Get a list of supervisors assigned to a call center.\n        Only users in the same group or enterprise as this call center can\n        successfully execute this request.\n        The response is either a GroupCallCenterGetSupervisorListResponse\n        or an ErrorResponse.\n        Replaced By: GroupCallCenterSupervisorReportingGetRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterGetSupervisorListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterHolidayServiceGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterHolidayServiceGetRequest", "description": "Get a call center's holiday service settings.\n        The response is either a GroupCallCenterHolidayServiceGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterHolidayServiceGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterHolidayServiceGetRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterHolidayServiceGetRequest17", "description": "Get a call center's holiday service settings.\n        The response is either a GroupCallCenterHolidayServiceGetResponse17 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterHolidayServiceGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterHolidayServiceGetRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterHolidayServiceGetRequest17sp1", "description": "Get a call center's holiday service settings.\n        The response is either a GroupCallCenterHolidayServiceGetResponse17sp1 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterHolidayServiceGetRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterHolidayServiceModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterHolidayServiceModifyRequest", "description": "Modify a call center's holiday service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterHolidayServiceModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterHolidayServiceModifyRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterHolidayServiceModifyRequest17", "description": "Modify a call center's holiday service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterHolidayServiceModifyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterHolidayServiceModifyRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterHolidayServiceModifyRequest17sp1", "description": "Modify a call center's holiday service settings.\n        Only Group and Enterprise level schedules are\n        accepted.\n        The\n        response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterHolidayServiceModifyRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterModifyAnnouncementRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterModifyAnnouncementRequest", "description": "Modify a call center's announcement settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterModifyAnnouncementRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterModifyAnnouncementRequest14sp6": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterModifyAnnouncementRequest14sp6", "description": "Modify a call center's announcement settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced By: GroupCallCenterModifyAnnouncementRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterModifyAnnouncementRequest14sp6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterModifyAnnouncementRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterModifyAnnouncementRequest16", "description": "Modify a call center's announcement settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterModifyAnnouncementRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterModifyDNISAnnouncementRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterModifyDNISAnnouncementRequest", "description": "Modify a call center DNIS announcement settings.\n        The response is either a SuccessResponse or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterModifyDNISAnnouncementRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterModifyInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterModifyInstanceRequest", "description": "Request to modify a Call Center instance.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced By: GroupCallCenterModifyInstanceRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterModifyInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterModifyInstanceRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterModifyInstanceRequest16", "description": "Request to modify a Call Center instance.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterModifyInstanceRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterModifyInstanceRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterModifyInstanceRequest17sp1", "description": "Request to modify a Call Center instance.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: GroupCallCenterModifyInstanceRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterModifyInstanceRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterModifyInstanceRequest19": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterModifyInstanceRequest19", "description": "Request to modify a Call Center instance.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterModifyInstanceRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterModifyInstanceStatisticsReportingRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterModifyInstanceStatisticsReportingRequest", "description": "Modify the Call Center statistics reporting frequency and destination.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: GroupCallCenterModifyInstanceStatisticsReportingRequest14sp9", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterModifyInstanceStatisticsReportingRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterModifyInstanceStatisticsReportingRequest14sp9": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterModifyInstanceStatisticsReportingRequest14sp9", "description": "Modify the Call Center statistics reporting frequency and destination.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterModifyInstanceStatisticsReportingRequest14sp9"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterModifySupervisorListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterModifySupervisorListRequest", "description": "Replaces a list of users as supervisors for a call center.\n        Also allows the modification of the reporting server URL address.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Element \"reportingServerURL\"\" will always be ignored.\n        Replaced By: GroupCallCenterSupervisorReportingModifyRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterModifySupervisorListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterNightServiceGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterNightServiceGetRequest", "description": "Get a call center's night service settings.\n        The response is either a GroupCallCenterNightServiceGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterNightServiceGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterNightServiceGetRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterNightServiceGetRequest17", "description": "Get a call center's night service settings.\n        The response is either a GroupCallCenterNightServiceGetResponse17 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterNightServiceGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterNightServiceModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterNightServiceModifyRequest", "description": "Modify a call center's night service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterNightServiceModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterNightServiceModifyRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterNightServiceModifyRequest17", "description": "Modify a call center's night service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterNightServiceModifyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterOverflowGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterOverflowGetRequest", "description": "Get a call center's overflow settings.\n        The response is either a GroupCallCenterOverflowGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterOverflowGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterOverflowModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterOverflowModifyRequest", "description": "Modify a call center's overflow settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterOverflowModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterStrandedCallGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterStrandedCallGetRequest", "description": "Get a call center's stranded call settings.\n        The response is either a GroupCallCenterStrandedCallGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterStrandedCallGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterStrandedCallGetRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterStrandedCallGetRequest17", "description": "Get a call center's stranded call settings.\n        The response is either a GroupCallCenterStrandedCallGetResponse17 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterStrandedCallGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterStrandedCallModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterStrandedCallModifyRequest", "description": "Modify a call center's stranded call settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterStrandedCallModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterStrandedCallModifyRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterStrandedCallModifyRequest17", "description": "Modify a call center's stranded call settings.\n        The response is either a SuccessResponse or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterStrandedCallModifyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterStrandedCallUnavailableGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterStrandedCallUnavailableGetRequest", "description": "Get a call center's stranded calls - unavailable settings.\n        The response is either a GroupCallCenterStrandedCallUnavailableGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterStrandedCallUnavailableGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterStrandedCallUnavailableModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterStrandedCallUnavailableModifyRequest", "description": "Modify a call center's stranded calls -\n        unavailable settings.\n        The response is either a\n        SuccessResponse or\n        an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterStrandedCallUnavailableModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterSupervisorReportingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterSupervisorReportingGetRequest", "description": "Get a list of supervisors assigned to a call center.\n        Only users in the same group or enterprise as this call center\n        can successfully execute this request.\n        The response is either a\n        GroupCallCenterSupervisorReportingGetResponse or an\n        ErrorResponse.\n\n        Replaced By: GroupCallCenterGetSupervisorListRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterSupervisorReportingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallCenterSupervisorReportingModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallCenterSupervisorReportingModifyRequest", "description": "Replaces a list of users as supervisors for a call center.\n        Also allows the modification of the reporting server URL address.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced By: GroupCallCenterModifySupervisorListRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallCenterSupervisorReportingModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallingLineIdGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallingLineIdGetRequest", "description": "Get the calling line id settings for a group.\n        The response is either a GroupCallingLineIdGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallingLineIdGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallingLineIdModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallingLineIdModifyRequest", "description": "Modify the calling line id settings for a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallingLineIdModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallParkAddInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallParkAddInstanceRequest", "description": "Adds a Call Park group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallParkAddInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallParkGetInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallParkGetInstanceRequest", "description": "Gets a Call Park group.\n        The response is either GroupCallParkGetInstanceResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallParkGetInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallParkGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCallParkGetRequest", "description": "Gets the Call Park Group settings.\n        The response is either GroupCallParkGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallParkGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest14", "description": "Request the group level data associated with Call Processing Policy.\n        The response is either a GroupCallProcessingGetPolicyResponse14 or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest14sp1", "description": "Request the group level data associated with Call Processing Policy.\n        The response is either a GroupCallProcessingGetPolicyResponse14sp1 or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest14sp4", "description": "Request the group level data associated with Call Processing Policy.\n        The response is either a GroupCallProcessingGetPolicyResponse14sp4 or an\n        ErrorResponse.\n        Replaced By : GroupCallProcessingGetPolicyRequest15", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest14sp7": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest14sp7", "description": "Request the group level data associated with Call Processing Policy.\n            The response is either a GroupCallProcessingGetPolicyResponse14sp7 or an\n            ErrorResponse.\n            The useGroupCLIDSetting attribute controls the CLID settings\n            (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)\n            The useGroupMediaSetting attribute controls the Media settings\n            (medisPolicySelection, supportedMediaSetName)\n            The useGroupCallLimitsSetting attribute controls the Call Limits settings\n            (useMaxSimultaneousCalls, maxSimultaneousCalls,\n            useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)\n            The useGroupTranslationRoutingSetting attribute controls the routing and translation settings\n            (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n            allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)\n            Replaced By: GroupCallProcessingGetPolicyRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest14sp7"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest15": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest15", "description": "Request the group level data associated with Call Processing Policy.\n            The response is either a GroupCallProcessingGetPolicyResponse15 or an\n            ErrorResponse.\n            Replaced By: GroupCallProcessingGetPolicyRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest15sp2": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest15sp2", "description": "Request the group level data associated with Call Processing Policy.\n            The response is either a GroupCallProcessingGetPolicyResponse15sp2 or an\n            ErrorResponse.\n            The useGroupCLIDSetting attribute controls the CLID settings\n            (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)\n            The useGroupMediaSetting attribute controls the Media settings\n            (medisPolicySelection, supportedMediaSetName)\n            The useGroupCallLimitsSetting attribute controls the Call Limits settings\n            (useMaxSimultaneousCalls, maxSimultaneousCalls,\n            useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls,\n            maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes,\n            useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth,\n            useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)\n            The useGroupTranslationRoutingSetting attribute controls the routing and translation settings\n            (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n            allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan,\n            overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest15sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest16", "description": "Request the group level data associated with Call Processing Policy.\n          The response is either a GroupCallProcessingGetPolicyResponse16 or an\n          ErrorResponse.\n          The useGroupCLIDSetting attribute controls the CLID settings\n          (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)\n          The useGroupMediaSetting attribute controls the Media settings\n          (medisPolicySelection, supportedMediaSetName)\n         The useGroupCallLimitsSetting attribute controls the Call Limits settings\n         (useMaxSimultaneousCalls, maxSimultaneousCalls,\n         useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)\n         The useGroupTranslationRoutingSetting attribute controls the routing and translation settings\n         (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n         allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest16sp2": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest16sp2", "description": "Request the group level data associated with Call Processing Policy.\n          The response is either a GroupCallProcessingGetPolicyResponse16sp2 or an\n          ErrorResponse.\n          The useGroupCLIDSetting attribute controls the CLID settings\n          (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)\n          The useGroupMediaSetting attribute controls the Media settings\n          (medisPolicySelection, supportedMediaSetName)\n         The useGroupCallLimitsSetting attribute controls the Call Limits settings\n         (useMaxSimultaneousCalls, maxSimultaneousCalls,\n         useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)\n         The useGroupTranslationRoutingSetting attribute controls the routing and translation settings\n         (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n         allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)\n         The useGroupDCLIDSetting controls the Dialable Caller ID settings (enableDialableCallerID)", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest16sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest17", "description": "Request the group level data associated with Call Processing Policy.\n          The response is either a GroupCallProcessingGetPolicyResponse17 or an\n          ErrorResponse.\n          The useGroupCLIDSetting attribute controls the CLID settings\n          (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)\n          The useGroupMediaSetting attribute controls the Media settings\n          (medisPolicySelection, supportedMediaSetName)\n         The useGroupCallLimitsSetting attribute controls the Call Limits settings\n         (useMaxSimultaneousCalls, maxSimultaneousCalls,\n         useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)\n         The useGroupTranslationRoutingSetting attribute controls the routing and translation settings\n         (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n         allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest17sp3", "description": "Request the group level data associated with Call Processing Policy.\n          The response is either a GroupCallProcessingGetPolicyResponse17sp3 or an\n          ErrorResponse.\n          The useGroupCLIDSetting attribute controls the CLID settings\n          (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)\n          The useGroupMediaSetting attribute controls the Media settings\n          (medisPolicySelection, supportedMediaSetName)\n         The useGroupCallLimitsSetting attribute controls the Call Limits settings\n         (useMaxSimultaneousCalls, maxSimultaneousCalls,\n         useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)\n         The useGroupTranslationRoutingSetting attribute controls the routing and translation settings\n         (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n         allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)\n         The useGroupDCLIDSetting controls the Dialable Caller ID settings (enableDialableCallerID)\n\n         The following elements are only used in AS data mode:\n           useGroupDCLIDSetting\n           enableDialableCallerID\n\n         Replaced by GroupCallProcessingGetPolicyRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest17sp4", "description": "Request the group level data associated with Call Processing Policy.\n          The response is either a GroupCallProcessingGetPolicyResponse17sp4 or an\n          ErrorResponse.\n          The useGroupCLIDSetting attribute controls the CLID settings\n          (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowConfigurableCLIDForRedirectingIdentity)\n          The useGroupMediaSetting attribute controls the Media settings\n          (medisPolicySelection, supportedMediaSetName)\n          The useGroupCallLimitsSetting attribute controls the Call Limits settings\n          (useMaxSimultaneousCalls, maxSimultaneousCalls,\n          useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)\n          The useGroupTranslationRoutingSetting attribute controls the routing and translation settings\n          (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n          allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)\n         The following elements are only used in AS data mode:\n           useGroupDCLIDSetting\n           enableDialableCallerID\n\n         Replaced by GroupCallProcessingGetPolicyRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest18": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest18", "description": "Request the group level data associated with Call Processing Policy.\n        The response is either a GroupCallProcessingGetPolicyResponse18 or an\n        ErrorResponse.\n\n        The useGroupCLIDSetting attribute controls the CLID settings\n        (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)\n\n        The useGroupMediaSetting attribute controls the Media settings\n        (medisPolicySelection, supportedMediaSetName)\n        The useGroupCallLimitsSetting attribute controls the Call Limits settings\n        (useMaxSimultaneousCalls, maxSimultaneousCalls,\n        useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)\n        The useGroupTranslationRoutingSetting attribute controls the routing and translation settings\n        (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n        allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)\n        The following elements are only used in AS data mode:\n          useGroupDCLIDSetting\n          enableDialableCallerID\n          allowDepartmentCLIDNameOverride\n\n       Replaced By : GroupCallProcessingGetPolicyRequest18sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest18sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest18sp1", "description": "Request the group level data associated with Call Processing Policy.\n        The response is either a GroupCallProcessingGetPolicyResponse18sp1 or an\n        ErrorResponse.\n        The useGroupCLIDSetting attribute controls the CLID settings\n        (clidPolicy,enterpriseCallsCLIDPolicy, groupCallsCLIDPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)\n        The useGroupMediaSetting attribute controls the Media settings\n        (medisPolicySelection, supportedMediaSetName)\n        The useGroupCallLimitsSetting attribute controls the Call Limits settings\n        (useMaxSimultaneousCalls, maxSimultaneousCalls,\n        useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)\n        The useGroupTranslationRoutingSetting attribute controls the routing and translation settings\n        (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n        allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)\n        Replaced by: GroupCallProcessingGetPolicyRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest18sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest19sp1", "description": "Request the group level data associated with Call Processing Policy.\n        The response is either a GroupCallProcessingGetPolicyResponse19sp1 or an\n        ErrorResponse.\n        The useGroupCLIDSetting attribute controls the CLID settings\n        (clidPolicy,enterpriseCallsCLIDPolicy, groupCallsCLIDPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)\n        The useGroupMediaSetting attribute controls the Media settings\n        (medisPolicySelection, supportedMediaSetName)\n        The useGroupCallLimitsSetting attribute controls the Call Limits settings\n        (useMaxSimultaneousCalls, maxSimultaneousCalls,\n        useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)\n        The useGroupTranslationRoutingSetting attribute controls the routing and translation settings\n        (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n        allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)\n\n        Replaced by: GroupCallProcessingGetPolicyRequest21sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingGetPolicyRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingGetPolicyRequest21sp1", "description": "Request the group level data associated with Call Processing Policy.\n        The response is either a GroupCallProcessingGetPolicyResponse21sp1 or an\n        ErrorResponse.\n        The useGroupCLIDSetting attribute controls the CLID settings\n        (clidPolicy,enterpriseCallsCLIDPolicy, groupCallsCLIDPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)\n        The useGroupMediaSetting attribute controls the Media settings\n        (medisPolicySelection, supportedMediaSetName)\n        The useGroupCallLimitsSetting attribute controls the Call Limits settings\n        (useMaxSimultaneousCalls, maxSimultaneousCalls,\n        useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)\n        The useGroupTranslationRoutingSetting attribute controls the routing and translation settings\n        (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n        allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)\n\n        Replaced by: GroupCallProcessingGetPolicyRequest21sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingGetPolicyRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingModifyPolicyRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingModifyPolicyRequest14", "description": "Modify the group level data associated with Call Processing Policy.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By : GroupCallProcessingModifyPolicyRequest15", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingModifyPolicyRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingModifyPolicyRequest14sp7": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingModifyPolicyRequest14sp7", "description": "Modify the group level data associated with Call Processing Policy.\n            The response is either a SuccessResponse or an ErrorResponse.\n            The useGroupCLIDSetting attribute controls the CLID settings\n            (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)\n            The useGroupMediaSetting attribute controls the Media settings\n            (medisPolicySelection, supportedMediaSetName)\n            The useGroupCallLimitsSetting attribute controls the Call Limits settings\n            (useMaxSimultaneousCalls, maxSimultaneousCalls, useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)\n            The useGroupTranslationRoutingSetting attribute controls the routing and\n            translation settings (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,\n            allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)\n            Replaced By: GroupCallProcessingModifyPolicyRequest15sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingModifyPolicyRequest14sp7"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCallProcessingModifyPolicyRequest15": {"post": {"tags": ["Deprecated"], "summary": "GroupCallProcessingModifyPolicyRequest15", "description": "Modify the group level data associated with Call Processing Policy.\n            The response is either a SuccessResponse or an ErrorResponse.\n            Replaced By: GroupCallProcessingModifyPolicyRequest15sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCallProcessingModifyPolicyRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCollaborateBridgeAddInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCollaborateBridgeAddInstanceRequest", "description": "Add a collaborate bridge to a group.\n        The domain is required in the serviceUserId.\n        The request fails when supportOutdial is enabled and the system-level collaborate supportOutdial setting is disabled.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by GroupCollaborateBridgeAddInstanceRequest20sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCollaborateBridgeAddInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCollaborateBridgeGetInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCollaborateBridgeGetInstanceRequest", "description": "Request to get all the information of a collaborate bridge.\n        The response is either GroupCollaborateBridgeGetInstanceResponse or ErrorResponse.\n\n        Replaced by: GroupCollaborateBridgeGetInstanceRequest20sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCollaborateBridgeGetInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCollaborateBridgeModifyInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCollaborateBridgeModifyInstanceRequest", "description": "Request to modify a Collaborate bridge.\n        The request fails when the collaborateOwnerUserIdList is included in the request for the default collaborate bridge.\n        The request fails when the supportOutdial is included in the request and the system-level collaborate supportOutdial setting is disabled.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: GroupCollaborateBridgeModifyInstanceRequest20sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCollaborateBridgeModifyInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCustomContactDirectoryAddRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCustomContactDirectoryAddRequest", "description": "Adds a Custom Contact Directory to a group.\n        The response is either SuccessResponse or ErrorResponse.\n        Replace by: GroupCustomContactDirectoryAddRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCustomContactDirectoryAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCustomContactDirectoryGetAvailableUserListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCustomContactDirectoryGetAvailableUserListRequest", "description": "Get a list of users that can be part of a custom contact directory.\n        The response is either GroupCustomContactDirectoryGetAvailableUserListResponse or ErrorResponse.\n        Replace by: GroupCustomContactDirectoryGetAvailableUserListRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCustomContactDirectoryGetAvailableUserListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCustomContactDirectoryGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCustomContactDirectoryGetRequest", "description": "Gets a Custom Contact Directory in a group.\n        The response is either GroupCustomContactDirectoryGetResponse or ErrorResponse.\n        Replace by: GroupCustomContactDirectoryGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCustomContactDirectoryGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCustomContactDirectoryModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCustomContactDirectoryModifyRequest", "description": "Adds a Custom Contact Directory to a group.\n        The response is either SuccessResponse or ErrorResponse.\n        Replace by: GroupCustomContactDirectoryModifyRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCustomContactDirectoryModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCustomRingbackGroupGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCustomRingbackGroupGetRequest", "description": "Get the group's custom ring back service settings.\n        The response is either a GroupCustomRingbackGroupGetResponse or an ErrorResponse.\n        Replaced By: GroupCustomRingbackGroupGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCustomRingbackGroupGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupCustomRingbackGroupModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupCustomRingbackGroupModifyRequest", "description": "Modify the group's custom ring back service settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: GroupCustomRingbackGroupModifyRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupCustomRingbackGroupModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupDepartmentGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupDepartmentGetListRequest", "description": "Request a list of departments in a group. You may request only the\n        list of departments defined at the group-level, or you may request\n        the list of all departments in the group including all the departments\n        defined within the enterprise the group belongs to.\n        The response is either GroupDepartmentGetListResponse or ErrorResponse.\n\n        Replaced by: GroupDepartmentGetListRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDepartmentGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupDeviceManagementEventGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupDeviceManagementEventGetListRequest", "description": "Request device management's events for a specific queue.\n        It is possible to restrict the number of rows returned using\n        responseSizeLimit.\n        If eventQueueType is not specified, the events from all the\n        event queues are returned.\n        The response is either a GroupDeviceManagementEventGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceManagementEventGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupDeviceTypeFileGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupDeviceTypeFileGetListRequest", "description": "Request to get the list of device type files managed by the Device Management System, on a per-group basis.\n        The response is either GroupDeviceTypeFileGetListResponse or ErrorResponse.\n        Replaced By: GroupDeviceTypeFileGetListRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeFileGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupDeviceTypeFileGetListRequest14sp8": {"post": {"tags": ["Deprecated"], "summary": "GroupDeviceTypeFileGetListRequest14sp8", "description": "Request to get the list of device type files managed by the Device Management System, on a per-group basis.\n        The response is either GroupDeviceTypeFileGetListResponse14sp8 or ErrorResponse.\n\n        Replaced by: GroupDeviceTypeFileGetListRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeFileGetListRequest14sp8"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupDeviceTypeFileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupDeviceTypeFileGetRequest", "description": "Request to get a group device type file.\n        The response is either GroupDeviceTypeFileGetResponse or ErrorResponse.\n        Replaced By: GroupDeviceTypeFileGetRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeFileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupDeviceTypeFileGetRequest14sp8": {"post": {"tags": ["Deprecated"], "summary": "GroupDeviceTypeFileGetRequest14sp8", "description": "Request to get a group device type file.\n        The response is either GroupDeviceTypeFileGetResponse14sp8 or ErrorResponse.\n        Replaced by: GroupDeviceTypeFileGetRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeFileGetRequest14sp8"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupDeviceTypeFileModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupDeviceTypeFileModifyRequest", "description": "Request to modify a specified device type file for a group.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: GroupDeviceTypeFileModifyRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDeviceTypeFileModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupDialPlanPolicyGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupDialPlanPolicyGetRequest", "description": "Request the Group level data associated with Dial Plan Policy.\n        The response is either a GroupDialPlanPolicyGetResponse or an ErrorResponse.\n\n        Replaced by: GroupDialPlanPolicyGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDialPlanPolicyGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupDirectoryNumberHuntingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupDirectoryNumberHuntingGetRequest", "description": "Request to get the properties of the DNH service for a specified serviceUserId.\n        It gets the agents of a call center or hunt group that are members\n        of a directory number hunting group.  They are agents that are not already\n        assigned to any other directory number hunting group.\n        The response is either GroupDirectoryNumberHuntingGetResponse or ErrorResponse.\n\n        Replaced by: GroupDirectoryNumberHuntingGetRequest17sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDirectoryNumberHuntingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupDnGetAssignmentListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupDnGetAssignmentListRequest", "description": "Get the list of assigned and unassigned DNs in a group. Each DN can be assigned\n        to a user and/or department. Ranges of DNs with identical assignment and activation properties\n        are coalesced to a single table row entry.\n        The response is either a GroupDnGetAssignmentListResponse or an ErrorResponse.\n\n        Replaced by: GroupDnGetAssignmentListRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupDnGetAssignmentListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupEnterpriseTrunkAddRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupEnterpriseTrunkAddRequest", "description": "Request to add an enterprise trunk in a group.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by: GroupEnterpriseTrunkAddRequest21.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupEnterpriseTrunkAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupEnterpriseTrunkGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupEnterpriseTrunkGetRequest", "description": "Request to get an enterprise trunk\n        The response is either an GroupEnterpriseTrunkGetResponse or an ErrorResponse.\n        Replaced by: GroupEnterpriseTrunkGetRequest21.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupEnterpriseTrunkGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupEnterpriseTrunkGetRequest21": {"post": {"tags": ["Deprecated"], "summary": "GroupEnterpriseTrunkGetRequest21", "description": "Request to get an enterprise trunk\n        The response is either an GroupEnterpriseTrunkGetResponse21 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupEnterpriseTrunkGetRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupExtensionLengthGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupExtensionLengthGetRequest", "description": "Request the group's extension length.\n        The response is either a GroupExtensionLengthGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupExtensionLengthGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupExtensionLengthModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupExtensionLengthModifyRequest", "description": "Modify the group's extension length.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupExtensionLengthModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupFeatureAccessCodeGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupFeatureAccessCodeGetListRequest", "description": "Get the list of feature access codes for a group.\n        The response is either a GroupFeatureAccessCodeGetListResponse or an ErrorResponse.\n        Replaced by: GroupFeatureAccessCodeGetRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFeatureAccessCodeGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupFeatureAccessCodeGetRequest20": {"post": {"tags": ["Deprecated"], "summary": "GroupFeatureAccessCodeGetRequest20", "description": "Get group FAC code level and the list of feature access codes for a group.\n        The response is either a GroupFeatureAccessCodeGetResponse20 or an\n        ErrorResponse.\n        Returned Feature Access Codes may be group specific, or Service Provider\n        Feature Access Codes, depending on FAC code level.\n        In release 20 the \"Call Recording\" FAC name is changed to\n        \"Call Recording - Start\".\n        Replaced by: GroupFeatureAccessCodeGetRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFeatureAccessCodeGetRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupFeatureAccessCodeModifyListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupFeatureAccessCodeModifyListRequest", "description": "Modify a list of feature access codes for a group.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by: GroupFeatureAccessCodeModifyRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFeatureAccessCodeModifyListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupFeatureAccessCodeModifyRequest20": {"post": {"tags": ["Deprecated"], "summary": "GroupFeatureAccessCodeModifyRequest20", "description": "Modify group FAC code level and the list of feature access codes for a\n        group.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Note: choice element is only valid when useFeatureAccessCodeLevel is set\n        to \"Group\", otherwise an ErrorResponse will be returned.\n        In release 20 the \"Call Recording\" FAC name is changed to\n        \"Call Recording - Start\".\n        Replaced by: GroupFeatureAccessCodeModifyRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFeatureAccessCodeModifyRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequest", "description": "Request to get all the information of a specific Find-me/Follow-me alerting group selective criteria.\n        The response is either GroupFindMeFollowMeGetAlertingGroupResponse or ErrorResponse.\n        Replaced by: GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupFindMeFollowMeGetInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupFindMeFollowMeGetInstanceRequest", "description": "Request to get all the information of a Find-me/Follow-me instance.\n        The response is either GroupFindMeFollowMeGetInstanceResponse or ErrorResponse.\n        Replaced by: GroupFindMeFollowMeGetInstanceRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFindMeFollowMeGetInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupFlexibleSeatingHostAddInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupFlexibleSeatingHostAddInstanceRequest", "description": "Add a flexible seating host instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: GroupFlexibleSeatingHostAddInstanceRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFlexibleSeatingHostAddInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupFlexibleSeatingHostGetInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupFlexibleSeatingHostGetInstanceRequest", "description": "Request to get all the information of a flexible seating host instance.\n        The response is either GroupFlexibleSeatingHostGetInstanceResponse or ErrorResponse.\n\n        Replaced by: GroupFlexibleSeatingHostGetInstanceRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFlexibleSeatingHostGetInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupFlexibleSeatingHostModifyInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupFlexibleSeatingHostModifyInstanceRequest", "description": "Request to modify a flexible seating host instance.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: GroupFlexibleSeatingHostModifyInstanceRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupFlexibleSeatingHostModifyInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupGetRequest", "description": "Get the profile for a group.\n        The response is either a GroupGetResponse or an ErrorResponse.\n        Replaced By: GroupGetRequest14sp7", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupGetRequest14sp7": {"post": {"tags": ["Deprecated"], "summary": "GroupGetRequest14sp7", "description": "Get the profile for a group.\n        The response is either a GroupGetResponse14sp7 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupGetRequest14sp7"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupGroupPagingGetInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupGroupPagingGetInstanceRequest", "description": "Replaced by: GroupGroupPagingGetInstanceRequest17sp3\n        Request to get all the information of a Group Paging instance.\n        The response is either GroupGroupPagingGetInstanceResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupGroupPagingGetInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupGroupPagingGetInstanceRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupGroupPagingGetInstanceRequest17sp3", "description": "Request to get all the information of a Group Paging instance.\n        The response is either GroupGroupPagingGetInstanceResponse17sp3 or ErrorResponse.\n\n        Replaced by: GroupGroupPagingGetInstanceRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupGroupPagingGetInstanceRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHolidayScheduleAddRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupHolidayScheduleAddRequest", "description": "Add a holiday schedule to a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHolidayScheduleAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHolidayScheduleDeleteRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupHolidayScheduleDeleteRequest", "description": "Delete a holiday schedule from a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHolidayScheduleDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHolidayScheduleGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupHolidayScheduleGetListRequest", "description": "Get a holiday schedule in a group.\n        The response is either a GroupHolidayScheduleGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHolidayScheduleGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHolidayScheduleGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupHolidayScheduleGetRequest", "description": "Get a holiday schedule in a group.\n        The response is either a GroupHolidayScheduleGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHolidayScheduleGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHolidayScheduleModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupHolidayScheduleModifyRequest", "description": "Modify a holiday schedule in a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHolidayScheduleModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHuntGroupAddInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupHuntGroupAddInstanceRequest14", "description": "Add a Hunt Group instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHuntGroupAddInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHuntGroupAddInstanceRequest17sp1V1": {"post": {"tags": ["Deprecated"], "summary": "GroupHuntGroupAddInstanceRequest17sp1V1", "description": "Add a Hunt Group instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in XS data mode:\n           allowMembersToControlGroupBusy, use value \"false\" in AS data mode\n           enableGroupBusy, use value \"false\" in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHuntGroupAddInstanceRequest17sp1V1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHuntGroupAddInstanceRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupHuntGroupAddInstanceRequest17sp3", "description": "Add a Hunt Group instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in AS data mode:\n           useSystemHuntGroupCLIDSetting, use value \"true\" in XS data mode\n           includeHuntGroupNameInCLID, use value \"true\" in XS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHuntGroupAddInstanceRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHuntGroupAddInstanceRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupHuntGroupAddInstanceRequest17sp4", "description": "Add a Hunt Group instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in AS data mode:\n           useSystemHuntGroupCLIDSetting, use value \"true\" in XS data mode\n           includeHuntGroupNameInCLID, use value \"true\" in XS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHuntGroupAddInstanceRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHuntGroupGetInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupHuntGroupGetInstanceRequest14", "description": "Request to get all the information of a Hunt Group instance.\n        The response is either GroupHuntGroupGetInstanceResponse14 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHuntGroupGetInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHuntGroupGetInstanceRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupHuntGroupGetInstanceRequest17", "description": "Request to get all the information of a Hunt Group instance.\n        The response is either GroupHuntGroupGetInstanceResponse17 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHuntGroupGetInstanceRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHuntGroupGetInstanceRequest17sp1V1": {"post": {"tags": ["Deprecated"], "summary": "GroupHuntGroupGetInstanceRequest17sp1V1", "description": "Request to get all the information of a Hunt Group instance.\n        The response is either GroupHuntGroupGetInstanceResponse17sp1V1 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHuntGroupGetInstanceRequest17sp1V1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHuntGroupGetInstanceRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupHuntGroupGetInstanceRequest17sp3", "description": "Request to get all the information of a Hunt Group instance.\n        The response is either GroupHuntGroupGetInstanceResponse17sp3 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHuntGroupGetInstanceRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHuntGroupGetInstanceRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupHuntGroupGetInstanceRequest17sp4", "description": "Request to get all the information of a Hunt Group instance.\n        The response is either GroupHuntGroupGetInstanceResponse17sp4 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHuntGroupGetInstanceRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupHuntGroupGetInstanceRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupHuntGroupGetInstanceRequest19sp1", "description": "Request to get all the information of a Hunt Group instance.\n        The response is either GroupHuntGroupGetInstanceResponse19sp1 or ErrorResponse.\n\n        Replaced by: GroupHuntGroupGetInstanceRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupHuntGroupGetInstanceRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupInstantGroupCallGetInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupInstantGroupCallGetInstanceRequest14", "description": "Request to get all the information of an Instant Group Call service instance.\n        The response is either GroupInstantGroupCallGetInstanceResponse14 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupInstantGroupCallGetInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupInstantGroupCallGetInstanceRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupInstantGroupCallGetInstanceRequest17", "description": "Request to get all the information of an Instant Group Call service instance.\n        The response is either GroupInstantGroupCallGetInstanceResponse17 or ErrorResponse.\n\n        Replaced by: GroupInstantGroupCallGetInstanceRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupInstantGroupCallGetInstanceRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupInterceptGroupGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupInterceptGroupGetRequest", "description": "Get the group's intercept group service settings.\n        The response is either a GroupInterceptGroupGetResponse or an ErrorResponse.\n        Replaced By: GroupInterceptGroupGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupInterceptGroupGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupInterceptGroupGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupInterceptGroupGetRequest16", "description": "Get the group's intercept group service settings.\n        The response is either a GroupInterceptGroupGetResponse16 or an ErrorResponse.\n        Replaced By: GroupInterceptGroupGetRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupInterceptGroupGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupInterceptGroupModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupInterceptGroupModifyRequest", "description": "Modify the group's intercept group service settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: GroupInterceptGroupModifyRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupInterceptGroupModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMeetMeConferencingAddInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupMeetMeConferencingAddInstanceRequest", "description": "Add a Meet-Me Conferencing bridge to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMeetMeConferencingAddInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMeetMeConferencingAddInstanceRequest18": {"post": {"tags": ["Deprecated"], "summary": "GroupMeetMeConferencingAddInstanceRequest18", "description": "Add a Meet-Me Conferencing bridge to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMeetMeConferencingAddInstanceRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMeetMeConferencingGetInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupMeetMeConferencingGetInstanceRequest", "description": "Request to get all the information of a Meet-Me Conferencing bridge.\n        The response is either GroupMeetMeConferencingGetInstanceResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMeetMeConferencingGetInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMeetMeConferencingGetInstanceRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupMeetMeConferencingGetInstanceRequest17sp3", "description": "Request to get all the information of a Meet-Me Conferencing bridge.\n        The response is either GroupMeetMeConferencingGetInstanceResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMeetMeConferencingGetInstanceRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMeetMeConferencingGetInstanceRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupMeetMeConferencingGetInstanceRequest17sp4", "description": "Request to get all the information of a Meet-Me Conferencing bridge.\n        The response is either GroupMeetMeConferencingGetInstanceResponse17sp4 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMeetMeConferencingGetInstanceRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMeetMeConferencingGetInstanceRequest18": {"post": {"tags": ["Deprecated"], "summary": "GroupMeetMeConferencingGetInstanceRequest18", "description": "Request to get all the information of a Meet-Me Conferencing bridge.\n        The response is either GroupMeetMeConferencingGetInstanceResponse18 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMeetMeConferencingGetInstanceRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMeetMeConferencingGetInstanceRequest19": {"post": {"tags": ["Deprecated"], "summary": "GroupMeetMeConferencingGetInstanceRequest19", "description": "Request to get all the information of a Meet-Me Conferencing bridge.\n        The response is either GroupMeetMeConferencingGetInstanceResponse19 or ErrorResponse.\n\n        Replaced by: GroupMeetMeConferencingGetInstanceRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMeetMeConferencingGetInstanceRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMusicOnHoldAddInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupMusicOnHoldAddInstanceRequest14", "description": "Add a Music On Hold Instance to a department.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: GroupMusicOnHoldAddInstanceRequest14Sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMusicOnHoldAddInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMusicOnHoldAddInstanceRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupMusicOnHoldAddInstanceRequest14sp4", "description": "Add a Music On Hold Instance to a department.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMusicOnHoldAddInstanceRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMusicOnHoldAddInstanceRequest14sp6": {"post": {"tags": ["Deprecated"], "summary": "GroupMusicOnHoldAddInstanceRequest14sp6", "description": "Add a Music on Hold Instance to a department.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: GroupMusicOnHoldAddInstanceRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMusicOnHoldAddInstanceRequest14sp6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMusicOnHoldAddInstanceRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupMusicOnHoldAddInstanceRequest16", "description": "Add a Music on Hold Instance to a department.\n        The response is either SuccessResponse or\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMusicOnHoldAddInstanceRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMusicOnHoldGetInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupMusicOnHoldGetInstanceRequest14", "description": "Get a Music On Hold data for a group or department instance.\n        The response is either GroupMusicOnHoldGetInstanceResponse14 or ErrorResponse.\n        Replaced By: GroupMusicOnHoldGetInstanceRequest14Sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMusicOnHoldGetInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMusicOnHoldGetInstanceRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupMusicOnHoldGetInstanceRequest14sp4", "description": "Get a Music On Hold data for a group or department instance.\n        The response is either GroupMusicOnHoldGetInstanceResponse14sp4 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMusicOnHoldGetInstanceRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMusicOnHoldGetInstanceRequest14sp6": {"post": {"tags": ["Deprecated"], "summary": "GroupMusicOnHoldGetInstanceRequest14sp6", "description": "Get a Music On Hold data for a group or department instance.\n        The response is either GroupMusicOnHoldGetInstanceResponse14sp6 or ErrorResponse.\n        Replaced By: GroupMusicOnHoldGetInstanceRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMusicOnHoldGetInstanceRequest14sp6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMusicOnHoldGetInstanceRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupMusicOnHoldGetInstanceRequest16", "description": "Get a Music On Hold data for a group or department instance.\n        The response is either GroupMusicOnHoldGetInstanceResponse16 or ErrorResponse.\n\n      Replaced by: GroupMusicOnHoldGetInstanceRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMusicOnHoldGetInstanceRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMusicOnHoldModifyInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupMusicOnHoldModifyInstanceRequest14", "description": "Modify data for a group or department Music On Hold Instance.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMusicOnHoldModifyInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMusicOnHoldModifyInstanceRequest14sp6": {"post": {"tags": ["Deprecated"], "summary": "GroupMusicOnHoldModifyInstanceRequest14sp6", "description": "Modify data for a group or department Music On Hold Instance.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: GroupMusicOnHoldModifyInstanceRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMusicOnHoldModifyInstanceRequest14sp6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupMusicOnHoldModifyInstanceRequest16": {"post": {"tags": ["Deprecated"], "summary": "GroupMusicOnHoldModifyInstanceRequest16", "description": "Modify data for a group or department Music On\n        Hold Instance.\n        The response is either\n        SuccessResponse or\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMusicOnHoldModifyInstanceRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupPasswordRulesGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupPasswordRulesGetRequest", "description": "Requests the group's password rules setting that is applicable to\n        users within the group.\n        The response is either GroupPasswordRulesGetResponse or ErrorResponse.\n        Replaced by: GroupPasswordRulesGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPasswordRulesGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupPhoneDirectoryGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupPhoneDirectoryGetListRequest", "description": "Request a table containing the phone directory for a group.\n        If the specified group is part of an enterprise, the directory includes all users in the enterprise\n        and all entries in the enterprise common phone list and the common phone list of the specified group.\n        If the specified group is part of a service provider, the directory includes all users in the group\n        and all entries in the common phone list of the specified group.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either GroupPhoneDirectoryGetListResponse or ErrorResponse.\n\n        Replace by: GroupPhoneDirectoryGetListRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPhoneDirectoryGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupPhoneDirectoryGetListRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupPhoneDirectoryGetListRequest17", "description": "Request a table containing the phone directory for a group.\n        If the specified group is part of an enterprise, the directory\n        includes all users in the enterprise and all entries in the enterprise\n        common phone list and the common phone list of the specified group.\n        If the specified group is part of a service provider, the directory\n        includes all users in the group and all entries in the common phone\n        list of the specified group.\n        It is possible to search by various criteria to restrict the number of\n        rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either GroupPhoneDirectoryGetListResponse17 or\n        ErrorResponse.\n\n        Replaced by: GroupPhoneDirectoryGetListRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPhoneDirectoryGetListRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupPhoneDirectoryGetListRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupPhoneDirectoryGetListRequest17sp3", "description": "Request a table containing the phone directory for a group.\n        If the specified group is part of an enterprise, the directory\n        includes all users in the enterprise and all entries in the enterprise\n        common phone list and the common phone list of the specified group.\n        If the specified group is part of a service provider, the directory\n        includes all users in the group and all entries in the common phone\n        list of the specified group.\n        It is possible to search by various criteria to restrict the number of\n        rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either GroupPhoneDirectoryGetListResponse17sp3 or\n        ErrorResponse.\n\n        Replaced by: GroupPhoneDirectoryGetListRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPhoneDirectoryGetListRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupPhoneDirectoryGetPagedListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupPhoneDirectoryGetPagedListRequest", "description": "Request a table containing the phone directory for a group.\n        If the specified group is part of an enterprise, the directory\n        includes all users in the enterprise and all entries in the enterprise\n        common phone list and the common phone list of the specified group.\n\n        If the specified group is part of a service provider, the directory\n        includes all users in the group and all entries in the common phone\n        list of the specified group.\n\n        It is possible to search by various criteria to restrict the number of\n        rows returned.\n\n        Multiple search criteria are logically ANDed together.\n        The response is either GroupPhoneDirectoryGetPagedListResponse or\n        ErrorResponse.\n\n        Replaced By: GroupPhoneDirectoryGetPagedSortedListRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPhoneDirectoryGetPagedListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupPolicyGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupPolicyGetRequest", "description": "Requests the Group's policy settings.\n        The response is either GroupPolicyGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPolicyGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupPolicyGetRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupPolicyGetRequest14sp1", "description": "Requests the Group's policy settings.\n        The response is either GroupPolicyGetResponse14sp1 or ErrorResponse.\n        Replaced By : GroupPolicyGetRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPolicyGetRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupPolicyGetRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupPolicyGetRequest14sp4", "description": "Requests the Group's policy settings.\n        The response is either GroupPolicyGetResponse14sp4 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPolicyGetRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupPortalPasscodeRulesGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupPortalPasscodeRulesGetRequest", "description": "Requests the group's passcode rules setting.\n        The response is either GroupPortalPasscodeRulesGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupPortalPasscodeRulesGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointForcedForwardingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointForcedForwardingGetRequest", "description": "Get a route point's forced forwarding settings.\n        The response is either a GroupRoutePointForcedForwardingGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointForcedForwardingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointForcedForwardingModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointForcedForwardingModifyRequest", "description": "Modify a route point's forced forwarding\n        settings.\n        The response is either a SuccessResponse or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointForcedForwardingModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointGetAnnouncementRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointGetAnnouncementRequest", "description": "Get a route point's announcement settings.\n        The response is either a GroupRoutePointGetAnnouncementResponse or an ErrorResponse.\n\n      Replaced by: GroupRoutePointGetAnnouncementRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointGetAnnouncementRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointGetAnnouncementRequest19": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointGetAnnouncementRequest19", "description": "Get a route point's announcement settings.\n        The response is either a GroupRoutePointGetAnnouncementResponse19 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointGetAnnouncementRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointGetAnnouncementRequest20": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointGetAnnouncementRequest20", "description": "Get a route point's announcement settings.\n        The response is either a GroupRoutePointGetAnnouncementResponse20 or an ErrorResponse.\n        Replaced by: GroupRoutePointGetAnnouncementRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointGetAnnouncementRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointGetDNISAnnouncementRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointGetDNISAnnouncementRequest", "description": "Get a route point's DNIS Announcements\n        The response is either a GroupRoutePointGetDNISAnnouncementResponse or an ErrorResponse.\n\n    Replaced by: GroupRoutePointGetDNISAnnouncementRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointGetDNISAnnouncementRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointGetDNISAnnouncementRequest19": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointGetDNISAnnouncementRequest19", "description": "Get a route point's DNIS Announcements\n        The response is either a GroupRoutePointGetDNISAnnouncementResponse19 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointGetDNISAnnouncementRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointGetDNISAnnouncementRequest20": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointGetDNISAnnouncementRequest20", "description": "Get a route point's DNIS Announcements\n        The response is either a GroupRoutePointGetDNISAnnouncementResponse20 or an ErrorResponse.\n\n        Replaced by: GroupRoutePointGetDNISAnnouncementRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointGetDNISAnnouncementRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointGetInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointGetInstanceRequest", "description": "Request to get all the information of a Route Point instance.\n        The response is either GroupRoutePointGetInstanceResponse or ErrorResponse.\n\n        Replaced by: GroupRoutePointGetInstanceRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointGetInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointHolidayServiceGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointHolidayServiceGetRequest", "description": "Get a route point's holiday service settings.\n        The response is either a GroupRoutePointHolidayServiceGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointHolidayServiceGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointHolidayServiceGetRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointHolidayServiceGetRequest17sp1", "description": "Get a route point's holiday service settings.\n        The response is either a GroupRoutePointHolidayServiceGetResponse17sp1 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointHolidayServiceGetRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointHolidayServiceModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointHolidayServiceModifyRequest", "description": "Modify a route point's holiday service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointHolidayServiceModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointHolidayServiceModifyRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointHolidayServiceModifyRequest17sp1", "description": "Modify a route point's holiday service settings.\n        Only Group and Enterprise level schedules are accepted.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointHolidayServiceModifyRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointModifyAnnouncementRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointModifyAnnouncementRequest", "description": "Modify a route point's announcement settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointModifyAnnouncementRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointModifyDNISAnnouncementRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointModifyDNISAnnouncementRequest", "description": "Modify a route point DNIS announcement settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointModifyDNISAnnouncementRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointNightServiceGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointNightServiceGetRequest", "description": "Get a route point's night service settings.\n        The response is either a GroupRoutePointNightServiceGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointNightServiceGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointNightServiceGetRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointNightServiceGetRequest17sp1", "description": "Get a route point's night service settings.\n        The response is either a GroupRoutePointNightServiceGetResponse17sp1 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointNightServiceGetRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointNightServiceModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointNightServiceModifyRequest", "description": "Modify a route point's night service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointNightServiceModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointNightServiceModifyRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointNightServiceModifyRequest17sp1", "description": "Modify a route point's night service settings.\n        Only Group and Enterprise level schedules are accepted.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointNightServiceModifyRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointOverflowGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointOverflowGetRequest", "description": "Get a route point's overflow settings.\n        The response is either a GroupRoutePointOverflowGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointOverflowGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupRoutePointOverflowModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupRoutePointOverflowModifyRequest", "description": "Modify a route point's overflow settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupRoutePointOverflowModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupScheduleGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupScheduleGetListRequest", "description": "Get the list of a group schedules. The list can be filtered by schedule type.\n        The response is either a GroupScheduleGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupScheduleGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupServiceInstancePrivacyGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupServiceInstancePrivacyGetRequest", "description": "Request the data associated with Privacy for a service instance.\n        The response is either a GroupServiceInstancePrivacyGetResponse.\n        Replaced by: GroupServiceInstancePrivacyGetRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupServiceInstancePrivacyGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupSessionAdmissionControlGroupAddRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupSessionAdmissionControlGroupAddRequest", "description": "Request to add a session admission control group for the group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGroupAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupSessionAdmissionControlGroupGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupSessionAdmissionControlGroupGetRequest", "description": "Request to get a session admission control group for the group.\n        The response is either a GroupSessionAdmissionControlGroupGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGroupGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupSessionAdmissionControlGroupGetRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupSessionAdmissionControlGroupGetRequest19sp1", "description": "Request to get a session admission control group for the group.\n        The response is either a GroupSessionAdmissionControlGroupGetResponse19sp1 or an ErrorResponse.\n\n        Replaced by: GroupSessionAdmissionControlGroupGetRequest21sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGroupGetRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupSessionAdmissionControlGroupGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupSessionAdmissionControlGroupGetRequest21sp1", "description": "Request to get a session admission control group for the group.\n        The response is either a GroupSessionAdmissionControlGroupGetResponse21sp1 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSessionAdmissionControlGroupGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupSpeedDial100GetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupSpeedDial100GetRequest", "description": "Get the speed dial 100 service settings for a group.\n        The response is either a GroupSpeedDial100GetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupSpeedDial100GetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTimeScheduleAddRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTimeScheduleAddRequest", "description": "Add a time schedule to a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTimeScheduleAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTimeScheduleDeleteRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTimeScheduleDeleteRequest", "description": "Delete a time schedule from a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTimeScheduleDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTimeScheduleGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTimeScheduleGetListRequest", "description": "Request a list of all time schedules in a group.\n        The response is either a GroupTimeScheduleGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTimeScheduleGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTimeScheduleGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTimeScheduleGetRequest", "description": "Request to get a group time schedule.\n        The response is either a GroupTimeScheduleGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTimeScheduleGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTimeScheduleModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTimeScheduleModifyRequest", "description": "Modify a specified time schedule in a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTimeScheduleModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest14", "description": "Add a Trunk Group instance to a group.\n        The domain is required in the serviceUserId.\n        The publicUserIdentity in the ServiceInstanceAddProfile is not allowed for trunk groups.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest14sp1", "description": "Add a Trunk Group instance to a group.\n        The domain is required in the serviceUserId.\n        The publicUserIdentity in the ServiceInstanceAddProfile is not allowed for trunk groups.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest14sp4", "description": "Add a Trunk Group instance to a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest14sp9": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest14sp9", "description": "Add a Trunk Group instance to a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest14sp9"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest14sp9A": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest14sp9A", "description": "Add a Trunk Group instance to a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest14sp9A"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest15": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest15", "description": "Add a Trunk Group instance to a group.\n            The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest15sp2": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest15sp2", "description": "Add a Trunk Group instance to a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest15sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest17", "description": "Replaced by: GroupTrunkGroupAddInstanceRequest17sp4\n\n        Add a Trunk Group instance to a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest17sp3", "description": "Add a Trunk Group instance to a group.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by: GroupTrunkGroupAddInstanceRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest17sp4", "description": "Add a Trunk Group instance to a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest19": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest19", "description": "Add a Trunk Group instance to a group.\n        The command will fail if enableNetworkAddressIdentity is set to\n        true and administrator is not System/Provisioning level administrator.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by GroupTrunkGroupAddInstanceRequest19sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest19sp1", "description": "Add a Trunk Group instance to a group.\n        The command will fail if enableNetworkAddressIdentity is set to\n        true and administrator is not System/Provisioning level administrator.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by: GroupTrunkGroupAddInstanceRequest20sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest20sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest20sp1", "description": "Add a Trunk Group instance to a group.\n        The command will fail if enableNetworkAddressIdentity is set to\n        true and administrator is not System/Provisioning level administrator.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by: GroupTrunkGroupAddInstanceRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest20sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupAddInstanceRequest21": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupAddInstanceRequest21", "description": "Add a Trunk Group instance to a group.\n        The command will fail if enableNetworkAddressIdentity is set to\n        true and administrator is not System/Provisioning level administrator.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Following attributes are only used in IMS mode:\n          implicitRegistrationSetSupportPolicy\n          useSystemImplicitRegistrationSetSupportPolicy\n          sipIdentityForPilotAndProxyTrunkModesPolicy\n          useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy\n\n        Replaced by: GroupTrunkGroupAddInstanceRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupAddInstanceRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupDeleteInstanceRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupDeleteInstanceRequest", "description": "Delete a Trunk Group Instance from a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupDeleteInstanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceListRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceListRequest14", "description": "Get a list of Trunk Groups for the group or enterprise.\n        It is possible to restrict the results to a particular department, or expand the list to the entire enterprise.\n        The response is either a GroupTrunkGroupGetInstanceListResponse14 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceListRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest14", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse14 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest14sp1", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse14sp1 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest14sp4", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse14sp4 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest14sp5": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest14sp5", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse14sp5 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\".", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest14sp5"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest14sp9": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest14sp9", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse14sp9 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\".", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest14sp9"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest14sp9A": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest14sp9A", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse14sp9A or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\".", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest14sp9A"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest15": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest15", "description": "Get a Trunk Group Instance's profile.\n            The response is either a GroupTrunkGroupGetInstanceResponse15 or an ErrorResponse.\n            The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n            \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\".", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest15sp2": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest15sp2", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse15sp2 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\".", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest15sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest17", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse17 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\".", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest17sp3", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse17sp3 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\".\n\n        Replaced by: GroupTrunkGroupGetInstanceRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest17sp4", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse17sp4 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\", \"Phone Number\", \"Extension\",\n        \"Department\", \"Email Address\".", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest17sp4V2": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest17sp4V2", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse17sp4V2 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\".\n\n        Replaced by: GroupTrunkGroupGetInstanceRequest19V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest17sp4V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest19": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest19", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse19 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\", \"Phone Number\", \"Extension\",\n        \"Department\", \"Email Address\".\n\n        Replaced by GroupTrunkGroupGetInstanceRequest19sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest19sp1", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse19sp1 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\", \"Phone Number\", \"Extension\",\n        \"Department\", \"Email Address\".\n\n    Replaced by GroupTrunkGroupGetInstanceRequest19sp1V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest19sp1V2": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest19sp1V2", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse19sp1V2 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\", \"Phone Number\", \"Extension\",\n        \"Department\", \"Email Address\".\n        Replaced by: GroupTrunkGroupGetInstanceRequest20sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest19sp1V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest19V2": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest19V2", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse19V2 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\", \"Phone Number\", \"Extension\",\n        \"Department\", \"Email Address\".\n\n    Replaced by GroupTrunkGroupGetInstanceRequest19sp1V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest19V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest20sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest20sp1", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse20sp1 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\", \"Phone Number\", \"Extension\",\n        \"Department\", \"Email Address\".\n\n        Replaced by: GroupTrunkGroupGetInstanceRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest20sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceRequest21": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceRequest21", "description": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse21 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\", \"Phone Number\", \"Extension\",\n        \"Department\", \"Email Address\".\n        Replaced by: GroupTrunkGroupGetInstanceResponse23", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetInstanceUserListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetInstanceUserListRequest", "description": "Get a list of user's on a Trunk Group Instance.\n        The response is either a GroupTrunkGroupGetInstanceUserListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetInstanceUserListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetRequest", "description": "Get the maximum permissible active trunk group calls for the group.\n        The response is either a GroupTrunkGroupGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetRequest14sp1", "description": "Get the maximum and bursting maximum permissible active trunk group calls for the group.\n        The response is either a GroupTrunkGroupGetResponse14sp1 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupGetRequest14sp9": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupGetRequest14sp9", "description": "Get the maximum and bursting maximum permissible active trunk group calls for the group.\n        The response is either a GroupTrunkGroupGetResponse14sp9 or an ErrorResponse.\n\n        Deprecated by GroupTrunkGroupGetRequest23", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupGetRequest14sp9"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupModifyInstanceRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupModifyInstanceRequest14", "description": "Modify a Trunk Group Instance in a group.\n        The publicUserIdentity in the ServiceInstanceModifyProfile is not allowed for trunk groups.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupModifyInstanceRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupModifyInstanceRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupModifyInstanceRequest14sp4", "description": "Modify a Trunk Group Instance in a group.\n        The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupModifyInstanceRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupModifyInstanceRequest14sp9A": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupModifyInstanceRequest14sp9A", "description": "Modify a Trunk Group Instance in a group.\n        The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupModifyInstanceRequest14sp9A"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupModifyInstanceRequest15": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupModifyInstanceRequest15", "description": "Modify a Trunk Group Instance in a group.\n      The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.\n          The command will fail if enableNetworkAddressIdentity is set and\n          administrator is not System/Provisioning level administrator.\n      The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by GroupTrunkGroupModifyInstanceRequest19sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupModifyInstanceRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupModifyInstanceRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupModifyInstanceRequest19sp1", "description": "Modify a Trunk Group Instance in a group.\n      The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.\n          The command will fail if enableNetworkAddressIdentity is set and\n          administrator is not System/Provisioning level administrator.\n      Following attributes are only used in IMS mode:\n        implicitRegistrationSetSupportPolicy\n        useSystemImplicitRegistrationSetSupportPolicy\n        sipIdentityForPilotAndProxyTrunkModesPolicy\n        useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy\n      The response is either a SuccessResponse or an ErrorResponse.\n      Replaced by: GroupTrunkGroupModifyInstanceRequest20sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupModifyInstanceRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupModifyRequest", "description": "Modify the maximum and bursting maximum permissible active Trunk Group calls for the group.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupUserCreationTaskAddRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupUserCreationTaskAddRequest", "description": "Add a user creation task for a trunk group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupUserCreationTaskAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupUserCreationTaskDeleteRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupUserCreationTaskDeleteRequest", "description": "Delete a user creation task for a trunk group.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupUserCreationTaskDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupUserCreationTaskGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupUserCreationTaskGetListRequest", "description": "Get the list of user creation tasks for a trunk group.\n        The response is either GroupTrunkGroupUserCreationTaskGetListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupUserCreationTaskGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupTrunkGroupUserCreationTaskGetRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupTrunkGroupUserCreationTaskGetRequest", "description": "Request the details of a specified user creation task for a trunk group.\n        The response is either GroupTrunkGroupUserCreationTaskGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupTrunkGroupUserCreationTaskGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupVoiceMessagingGroupGetPasscodeRulesRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupVoiceMessagingGroupGetPasscodeRulesRequest", "description": "Requests the group's voice portal passcode rules setting.\n        The response is either GroupVoiceMessagingGroupGetPasscodeRulesResponse or ErrorResponse.\n        Replaced By: GroupPortalPasscodeRulesGetRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupVoiceMessagingGroupGetPasscodeRulesRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupVoiceMessagingGroupGetVoicePortalBrandingRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupVoiceMessagingGroupGetVoicePortalBrandingRequest", "description": "Get the group's voice portal branding settings.\n        The response is either a GroupVoiceMessagingGroupGetVoicePortalBrandingResponse or an ErrorResponse.\n        Replaced By: GroupVoiceMessagingGroupGetVoicePortalBrandingRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupVoiceMessagingGroupGetVoicePortalBrandingRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupVoiceMessagingGroupGetVoicePortalRequest14": {"post": {"tags": ["Deprecated"], "summary": "GroupVoiceMessagingGroupGetVoicePortalRequest14", "description": "Requests the group's voice messaging settings\n        The response is either GroupVoiceMessagingGroupGetVoicePortalResponse14 or ErrorResponse.\n        Replaced by GroupVoiceMessagingGroupGetVoicePortalRequest15", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupVoiceMessagingGroupGetVoicePortalRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupVoiceMessagingGroupGetVoicePortalRequest15": {"post": {"tags": ["Deprecated"], "summary": "GroupVoiceMessagingGroupGetVoicePortalRequest15", "description": "Request to get the group voice portal information for a voice messaging group.\n        The response is either GroupVoiceMessagingGroupGetVoicePortalResponse15 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupVoiceMessagingGroupGetVoicePortalRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupVoiceMessagingGroupGetVoicePortalRequest17": {"post": {"tags": ["Deprecated"], "summary": "GroupVoiceMessagingGroupGetVoicePortalRequest17", "description": "Request to get the group voice portal information for a voice messaging group.\n        The response is either GroupVoiceMessagingGroupGetVoicePortalResponse17 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupVoiceMessagingGroupGetVoicePortalRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupVoiceMessagingGroupModifyPasscodeRulesRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupVoiceMessagingGroupModifyPasscodeRulesRequest", "description": "Request to modify the group's voice portal passcode rules setting.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: GroupPortalPasscodeRulesModifyRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupVoiceMessagingGroupModifyPasscodeRulesRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/GroupVoiceMessagingGroupModifyVoicePortalBrandingRequest": {"post": {"tags": ["Deprecated"], "summary": "GroupVoiceMessagingGroupModifyVoicePortalBrandingRequest", "description": "Modify the group's voice portal branding settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: GroupVoiceMessagingGroupModifyVoicePortalBrandingRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupVoiceMessagingGroupModifyVoicePortalBrandingRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/LoginRequest13mp10": {"post": {"tags": ["Deprecated"], "summary": "LoginRequest13mp10", "description": "LoginRequest13mp10 is 2nd stage of the 2 stage OCI login process.\n        The signedPassword is not required for external authentication login from a trusted host (ACL).", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoginRequest13mp10"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/LoginRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "LoginRequest14sp4", "description": "LoginRequest14sp4 is 2nd stage of the 2 stage OCI login process.\n        The signedPassword is not required for external authentication login from a trusted host (ACL).", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoginRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/LoginRequest22V4": {"post": {"tags": ["Deprecated"], "summary": "LoginRequest22V4", "description": "Request to login to OCI.\n        password is not required for external authentication login from a trusted host (ACL).\n\n        The following data element is only used in XS data mode and will be ignored in AS data mode:\n          signedPassword\n\n        Replaced by: LoginRequest22V5.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/LoginRequest22V4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ResellerGetRequest": {"post": {"tags": ["Deprecated"], "summary": "ResellerGetRequest", "description": "Get the profile for a reseller.\n        The response is either ResellerGetResponse or ErrorResponse.\n\n        Replaced by: ResellerGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResellerGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ResellerGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "ResellerGetRequest22", "description": "Get the profile for a reseller.\n        The response is either ResellerGetResponse22 or ErrorResponse.\n\n        Replaced by: ResellerGetRequest22V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResellerGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAccessDeviceFileGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAccessDeviceFileGetListRequest", "description": "Request to get the list of device files managed by the Device Management System, on a per-device profile basis.\n          The response is either ServiceProviderAccessDeviceFileGetListResponse or ErrorResponse.\n          Replaced By: ServiceProviderAccessDeviceFileGetListRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAccessDeviceFileGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAccessDeviceFileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAccessDeviceFileGetRequest", "description": "Request to get a service provider device profile file.\n          The response is either ServiceProviderAccessDeviceFileGetResponse or ErrorResponse.\n          Replaced By: ServiceProviderAccessDeviceFileGetRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAccessDeviceFileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAccessDeviceFileGetRequest14sp8": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAccessDeviceFileGetRequest14sp8", "description": "Request to get a service provider device profile file.\n        The response is either ServiceProviderAccessDeviceFileGetResponse14sp8 or ErrorResponse.\n        Replaced by: ServiceProviderAccessDeviceFileGetRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAccessDeviceFileGetRequest14sp8"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAccessDeviceFileGetRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAccessDeviceFileGetRequest16sp1", "description": "Request to get a service provider device profile file.\n        The response is either ServiceProviderAccessDeviceFileGetResponse16sp1 or ErrorResponse.\n\n        Replaced by: ServiceProviderAccessDeviceFileGetRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAccessDeviceFileGetRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAccessDeviceFileModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAccessDeviceFileModifyRequest", "description": "Request to modify a specified service provider/enterprise access device file.\n          The response is either a SuccessResponse or an ErrorResponse.\n          Replaced By: ServiceProviderAccessDeviceFileModifyRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAccessDeviceFileModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAccessDeviceGetRequest14": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAccessDeviceGetRequest14", "description": "Requests the configuration of a specified service provider access device.\n        The response is either ServiceProviderAccessDeviceGetResponse14 or ErrorResponse.\n        Replaced By: ServiceProviderAccessDeviceGetRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAccessDeviceGetRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAccessDeviceGetRequest14sp3": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAccessDeviceGetRequest14sp3", "description": "Requests the configuration of a specified service provider access device.\n        The response is either ServiceProviderAccessDeviceGetResponse14sp3 or ErrorResponse.\n        Replaced By: ServiceProviderAccessDeviceGetRequest14sp6", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAccessDeviceGetRequest14sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAccessDeviceGetRequest14sp6": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAccessDeviceGetRequest14sp6", "description": "Requests the configuration of a specified service provider access device.\n        The response is either ServiceProviderAccessDeviceGetResponse14sp6 or ErrorResponse.\n        Replaced by: ServiceProviderAccessDeviceGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAccessDeviceGetRequest14sp6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAccessDeviceGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAccessDeviceGetRequest16", "description": "Requests the configuration of a specified service provider access device.\n        The response is either ServiceProviderAccessDeviceGetResponse16 or ErrorResponse.\n\n        Replaced by: ServiceProviderAccessDeviceGetRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAccessDeviceGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAdminGetPolicyRequest14": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAdminGetPolicyRequest14", "description": "Requests the service provider administrator's policy settings.\n        The response is either ServiceProviderAdminGetPolicyResponse14 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAdminGetPolicyRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAdminGetPolicyRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAdminGetPolicyRequest16sp1", "description": "Requests the service provider administrator's policy settings.\n        The response is either ServiceProviderAdminGetPolicyResponse16sp1 or ErrorResponse.\n        Replaced by: ServiceProviderAdminGetPolicyRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAdminGetPolicyRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAdminGetPolicyRequest16sp2": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAdminGetPolicyRequest16sp2", "description": "Requests the service provider administrator's policy settings.\n        The response is either ServiceProviderAdminGetPolicyResponse16sp2 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAdminGetPolicyRequest16sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAdminGetPolicyRequest17": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAdminGetPolicyRequest17", "description": "Requests the service provider administrator's policy settings.\n        The response is either ServiceProviderAdminGetPolicyResponse17 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAdminGetPolicyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAdminGetPolicyRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAdminGetPolicyRequest17sp1", "description": "Requests the service provider administrator's policy settings.\n        The response is either ServiceProviderAdminGetPolicyResponse17sp1 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAdminGetPolicyRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAdminGetPolicyRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAdminGetPolicyRequest17sp3", "description": "Requests the service provider administrator's policy settings.\n        The response is either ServiceProviderAdminGetPolicyResponse17sp3 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAdminGetPolicyRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAnswerConfirmationGetRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAnswerConfirmationGetRequest", "description": "Get a service provider or enterprise's answer confirmation settings.\n        The response is either a ServiceProviderAnswerConfirmationGetResponse or an ErrorResponse.\n        Replaced By: ServiceProviderAnswerConfirmationGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAnswerConfirmationGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderAnswerConfirmationModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderAnswerConfirmationModifyRequest", "description": "Modify a service provider or enterprise's answer confirmation settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: ServiceProviderAnswerConfirmationModifyRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderAnswerConfirmationModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderBroadWorksMobilityGetRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderBroadWorksMobilityGetRequest", "description": "Get the service provider BroadWorks Mobility service settings.\n        The response is either a ServiceProviderBroadWorksMobilityGetResponse or an ErrorResponse.\n        Replaced by: ServiceProviderBroadWorksMobilityGetRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderBroadWorksMobilityGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderBroadWorksMobilityGetRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderBroadWorksMobilityGetRequest19sp1", "description": "Get the service provider BroadWorks Mobility service settings.\n        The response is either a ServiceProviderBroadWorksMobilityGetResponse19sp1 or an ErrorResponse.\n\n        Replaced by: ServiceProviderBroadWorksMobilityGetRequest22 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderBroadWorksMobilityGetRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderBroadWorksMobilityGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderBroadWorksMobilityGetRequest21sp1", "description": "Get the service provider BroadWorks Mobility service settings.\n        The response is either a ServiceProviderBroadWorksMobilityGetResponse21sp1 or an ErrorResponse.\n\n        Replaced by ServiceProviderBroadWorksMobilityGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderBroadWorksMobilityGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderBroadWorksMobilityGetRequest21sp1V2": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderBroadWorksMobilityGetRequest21sp1V2", "description": "Get the service provider BroadWorks Mobility service settings.\n        The response is either a ServiceProviderBroadWorksMobilityGetResponse21sp1V2 or an ErrorResponse.\n\n        Replaced by ServiceProviderBroadWorksMobilityGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderBroadWorksMobilityGetRequest21sp1V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderBroadWorksMobilityGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderBroadWorksMobilityGetRequest22", "description": "Get the service provider BroadWorks Mobility service settings.\n        The response is either a ServiceProviderBroadWorksMobilityGetResponse22 or an ErrorResponse.\n\n        Replaced by ServiceProviderBroadWorksMobilityGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderBroadWorksMobilityGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderBroadWorksMobilityGetRequest22V2": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderBroadWorksMobilityGetRequest22V2", "description": "Get the service provider BroadWorks Mobility service settings.\n        The response is either a ServiceProviderBroadWorksMobilityGetResponse22V2 or an ErrorResponse.\n        Replaced by ServiceProviderBroadWorksMobilityGetRequest22V3.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderBroadWorksMobilityGetRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequest", "description": "Adds Mobile Subscriber Directory Numbers to a service provider. It is possible to add a single DN,\n        or a list of DNs.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced by ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequest21.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest14": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest14", "description": "Request the service provider level data associated with Call Processing\n        Policy. The response is either a\n        ServiceProviderCallProcessingGetPolicyResponse14 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest14sp1", "description": "Request the service provider level data associated with Call Processing\n        Policy. The response is either a\n        ServiceProviderCallProcessingGetPolicyResponse14sp1 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest14sp4", "description": "Request the service provider level data associated with Call Processing\n        Policy. The response is either a\n        ServiceProviderCallProcessingGetPolicyResponse14sp4 or an ErrorResponse.\n        Replaced By : ServiceProviderCallProcessingGetPolicyRequest15", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest14sp7": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest14sp7", "description": "Request the service provider level data associated with Call Processing\n            Policy. The response is either a\n            ServiceProviderCallProcessingGetPolicyResponse14sp7 or an ErrorResponse.\n            Replaced By: ServiceProviderCallProcessingGetPolicyRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest14sp7"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest15": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest15", "description": "Request the service provider level data associated with Call Processing\n            Policy. The response is either a\n            ServiceProviderCallProcessingGetPolicyResponse15 or an ErrorResponse.\n            Replaced By: ServiceProviderCallProcessingGetPolicyRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest15sp2": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest15sp2", "description": "Request the service provider level data associated with Call Processing\n            Policy. The response is either a\n            ServiceProviderCallProcessingGetPolicyResponse15sp2 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest15sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest16": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest16", "description": "Request the service provider level data associated with Call Processing\n        Policy. The response is either a\n        ServiceProviderCallProcessingGetPolicyResponse16 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest16sp2": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest16sp2", "description": "Request the service provider level data associated with Call Processing\n        Policy. The response is either a\n        ServiceProviderCallProcessingGetPolicyResponse16sp2 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest16sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest17": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest17", "description": "Request the service provider level data associated with Call Processing\n        Policy. The response is either a\n        ServiceProviderCallProcessingGetPolicyResponse17 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest17sp3", "description": "Request the service provider level data associated with Call Processing\n        Policy. The response is either a\n        ServiceProviderCallProcessingGetPolicyResponse17sp3 or an ErrorResponse.\n\n        Replaced by ServiceProviderCallProcessingGetPolicyResponse17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest17sp4", "description": "Request the service provider level data associated with Call Processing\n        Policy. The response is either a\n        ServiceProviderCallProcessingGetPolicyResponse17sp4 or an ErrorResponse.\n\n        Replaced By : ServiceProviderCallProcessingGetPolicyRequest18sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest18sp1": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest18sp1", "description": "Request the service provider level data associated with Call Processing\n        Policy. The response is either a\n        ServiceProviderCallProcessingGetPolicyResponse18sp1 or an ErrorResponse.\n\n        Replaced by: ServiceProviderCallProcessingGetPolicyRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest18sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest19sp1", "description": "Request the service provider level data associated with Call Processing\n        Policy. The response is either a\n        ServiceProviderCallProcessingGetPolicyResponse19sp1 or an ErrorResponse.\n\n        Replaced by: ServiceProviderCallProcessingGetPolicyRequest21sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingGetPolicyRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingGetPolicyRequest21sp1", "description": "Request the service provider level data associated with Call Processing\n        Policy. The response is either a\n        ServiceProviderCallProcessingGetPolicyResponse21sp1 or an ErrorResponse.\n        Replaced by: ServiceProviderCallProcessingGetPolicyRequest21sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingGetPolicyRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCallProcessingModifyPolicyRequest14": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCallProcessingModifyPolicyRequest14", "description": "Modify the service provider level data associated with Call Processing\n       Policy. The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCallProcessingModifyPolicyRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCommunicationBarringProfileAddRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCommunicationBarringProfileAddRequest", "description": "Add a new Communication Barring Profile.\n        The priorities for OriginatingRules, RedirectingRules and IncomingRules are requantized to consecutive integers as part of the add.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCommunicationBarringProfileAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderCommunicationBarringProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderCommunicationBarringProfileGetRequest", "description": "Get an existing Communication Barring Profile.\n        The response is either a ServiceProviderCommunicationBarringProfileGetResponse\n        or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderCommunicationBarringProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderDeviceManagementEventGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderDeviceManagementEventGetListRequest", "description": "Request device management's events for a specific queue.\n        It is possible to restrict the number of rows returned using\n        responseSizeLimit.\n        If eventQueueType is not specified, the events from all the\n        event queues are returned.\n        The response is either a ServiceProviderDeviceManagementEventGetListResponse or an ErrorResponse.\n\n        Deprecated by: ServiceProviderDeviceManagementEventGetListRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderDeviceManagementEventGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderDialPlanPolicyGetRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderDialPlanPolicyGetRequest", "description": "Request the Service Provider level data associated with Dial Plan Policy.\n        The response is either a ServiceProviderDialPlanPolicyGetResponse\n        or an ErrorResponse.\n\n        Replaced by: ServiceProviderDialPlanPolicyGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderDialPlanPolicyGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderEnhancedCallLogsGetRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderEnhancedCallLogsGetRequest", "description": "Get the service provider's enhanced call log settings.\n        The response is either a ServiceProviderEnhancedCallLogsGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderEnhancedCallLogsGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderFeatureAccessCodeGetListRequest20": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderFeatureAccessCodeGetListRequest20", "description": "Get the list of feature access codes for a service provider or enterprise.\n        The response is either a ServiceProviderFeatureAccessCodeGetListResponse20\n        or an ErrorResponse.\n        In release 20 the \"Call Recording\" FAC name is changed to\n        \"Call Recording - Start\".\n        Replaced by: ServiceProviderFeatureAccessCodeGetListRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderFeatureAccessCodeGetListRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderFeatureAccessCodeModifyListRequest20": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderFeatureAccessCodeModifyListRequest20", "description": "Modify a list of feature access codes for a service provider or enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.\n        In release 20 the \"Call Recording\" FAC name is changed to\n        \"Call Recording - Start\".\n        Replaced by: ServiceProviderFeatureAccessCodeModifyListRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderFeatureAccessCodeModifyListRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderGetRequest13mp2": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderGetRequest13mp2", "description": "Get the profile for a service provider or enterprise.\n        The response is either a ServiceProviderGetResponse13mp2 or an ErrorResponse.\n\n        Replaced by: ServiceProviderGetRequest17sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderGetRequest13mp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderGetRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderGetRequest17sp1", "description": "Get the profile for a service provider or enterprise.\n        The response is either a ServiceProviderGetResponse17sp1 or an ErrorResponse.\n\n        Replaced by: ServiceProviderGetRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderGetRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderGetRequest22", "description": "Get the profile for a service provider or enterprise.\n        The response is either a ServiceProviderGetResponse22 or an ErrorResponse.\n\n        Replaced by ServiceProviderGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderInCallServiceActivationGetRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderInCallServiceActivationGetRequest", "description": "Request the service provider's DTMF based in-call service activation trigger attributes.The response is either a ServiceProviderInCallServiceActivationGetResponse or an ErrorResponse.\n          Replaced by: ServiceProviderInCallServiceActivationGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderInCallServiceActivationGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderInCallServiceActivationModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderInCallServiceActivationModifyRequest", "description": "Modifies the service provider's DTMF based in-call service activation trigger attributes.The response is either a SuccessResponse or an ErrorResponse.\n          Replaced by: ServiceProviderInCallServiceActivationModifyRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderInCallServiceActivationModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderPasswordRulesGetRequest13mp2": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderPasswordRulesGetRequest13mp2", "description": "Requests the service provider's password rules setting applicable to\n        Administrators (Group and Department) and Users.\n        The response is either ServiceProviderPasswordRulesGetResponse13mp2 or ErrorResponse.\n        Replaced By: ServiceProviderPasswordRulesGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderPasswordRulesGetRequest13mp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderPasswordRulesModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderPasswordRulesModifyRequest", "description": "Request to modify the service provider's password rules settings\n        setting applicable to Administrators (Group and Department) and Users.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: ServiceProviderPasswordRulesModifyRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderPasswordRulesModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderPortalPasscodeRulesGetRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderPortalPasscodeRulesGetRequest", "description": "Requests the service provider's passcode rules setting.\n        The response is either ServiceProviderPortalPasscodeRulesGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderPortalPasscodeRulesGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderServicePackMigrationTaskGetRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderServicePackMigrationTaskGetRequest", "description": "Requests the details of a specified service pack migration task.\n        The response is either ServiceProviderServicePackMigrationTaskGetResponse\n        or ErrorResponse.\n        Replaced By: ServiceProviderServicePackMigrationTaskGetRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderServicePackMigrationTaskGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderTrunkGroupGetRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderTrunkGroupGetRequest", "description": "Get the maximum permissible active Trunk Group calls for the service provider.\n        The response is either a ServiceProviderTrunkGroupGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderTrunkGroupGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderTrunkGroupGetRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderTrunkGroupGetRequest14sp1", "description": "Get the maximum and bursting maximum permissible active Trunk Group calls for the service provider.\n        The response is either a ServiceProviderTrunkGroupGetResponse14sp1 or an ErrorResponse.\n\n        Deprecated by ServiceProviderTrunkGroupGetRequest23", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderTrunkGroupGetRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderVoiceMessagingGroupGetPasscodeRulesRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderVoiceMessagingGroupGetPasscodeRulesRequest", "description": "Requests the service provider's voice portal passcode rules setting.\n        The response is either ServiceProviderVoiceMessagingGroupGetPasscodeRulesResponse or ErrorResponse.\n        Replaced By: ServiceProviderPortalPasscodeRulesGetRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderVoiceMessagingGroupGetPasscodeRulesRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequest", "description": "Get the service provider's voice portal branding settings.\n        The response is either a ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingResponse or an ErrorResponse.\n        Replaced By: ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderVoiceMessagingGroupModifyPasscodeRulesRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderVoiceMessagingGroupModifyPasscodeRulesRequest", "description": "Request to modify the service provider's voice portal passcode rules setting.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: ServiceProviderPortalPasscodeRulesModifyRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderVoiceMessagingGroupModifyPasscodeRulesRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequest": {"post": {"tags": ["Deprecated"], "summary": "ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequest", "description": "Modify the service provider's voice portal branding settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAccessDeviceFileGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemAccessDeviceFileGetListRequest", "description": "Request to get the list of device files managed by the Device Management System, on a per-device profile basis.\n          The response is either SystemAccessDeviceFileGetListResponse or ErrorResponse.\n          Replaced By: SystemAccessDeviceFileGetListRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAccessDeviceFileGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAccessDeviceFileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemAccessDeviceFileGetRequest", "description": "Request to get a device profile file.\n          The response is either SystemAccessDeviceFileGetResponse or ErrorResponse.\n          Replaced By: SystemAccessDeviceFileGetRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAccessDeviceFileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAccessDeviceFileGetRequest14sp8": {"post": {"tags": ["Deprecated"], "summary": "SystemAccessDeviceFileGetRequest14sp8", "description": "Request to get a device profile file.\n        The response is either SystemAccessDeviceFileGetResponse14sp8 or ErrorResponse.\n        Replaced by: SystemAccessDeviceFileGetRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAccessDeviceFileGetRequest14sp8"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAccessDeviceFileGetRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemAccessDeviceFileGetRequest16sp1", "description": "Request to get a device profile file.\n        The response is either SystemAccessDeviceFileGetResponse16sp1 or ErrorResponse.\n\n        Replaced by: SystemAccessDeviceFileGetRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAccessDeviceFileGetRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAccessDeviceFileModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemAccessDeviceFileModifyRequest", "description": "Request to modify a specified system access device file.\n          The response is either a SuccessResponse or an ErrorResponse.\n          Replaced By: SystemAccessDeviceFileModifyRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAccessDeviceFileModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAccessDeviceGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemAccessDeviceGetRequest", "description": "Requests the configuration of a specified system access device.\n        The response is either SystemAccessDeviceGetResponse or ErrorResponse.\n        Replaced By: SystemAccessDeviceGetRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAccessDeviceGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAccessDeviceGetRequest14sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemAccessDeviceGetRequest14sp3", "description": "Requests the configuration of a specified system access device.\n        The response is either SystemAccessDeviceGetResponse14sp3 or ErrorResponse.\n        Replaced By: SystemAccessDeviceGetRequest14sp6", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAccessDeviceGetRequest14sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAccessDeviceGetRequest14sp6": {"post": {"tags": ["Deprecated"], "summary": "SystemAccessDeviceGetRequest14sp6", "description": "Requests the configuration of a specified system access device.\n        The response is either SystemAccessDeviceGetResponse14sp6 or ErrorResponse.\n        Replaced by: SystemAccessDeviceGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAccessDeviceGetRequest14sp6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAccessDeviceGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "SystemAccessDeviceGetRequest16", "description": "Requests the configuration of a specified system access device.\n        The response is either SystemAccessDeviceGetResponse16 or ErrorResponse.\n\n        Replaced by: SystemAccessDeviceGetRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAccessDeviceGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAdviceOfChargeGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemAdviceOfChargeGetRequest", "description": "Request to get the list of Advice of Charge system parameters.\n        The response is either SystemAdviceOfChargeGetResponse or ErrorResponse.\n\n        Replaced by: SystemAdviceOfChargeGetRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAdviceOfChargeGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAdviceOfChargeModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemAdviceOfChargeModifyRequest", "description": "Request to modify Advice of Charge system parameters.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: SystemAdviceOfChargeModifyRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAdviceOfChargeModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemASRParametersGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemASRParametersGetRequest", "description": "Request to get the list of Application Server Registration system parameters.\n        The response is either SystemASRParametersGetResponse or ErrorResponse.\n        Replaced By: SystemASRParametersGetRequest14sp5", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemASRParametersGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemASRParametersGetRequest14sp5": {"post": {"tags": ["Deprecated"], "summary": "SystemASRParametersGetRequest14sp5", "description": "Request to get the list of Application Server Registration system parameters.\n        The response is either SystemASRParametersGetResponse14sp5 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemASRParametersGetRequest14sp5"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemASRParametersModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemASRParametersModifyRequest", "description": "Request to modify Application Server Registration system parameters.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemASRParametersModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAutomaticCallbackGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemAutomaticCallbackGetRequest", "description": "Request the system's automatic callback attributes.\n        The response is either a SystemAutomaticCallbackGetResponse or an ErrorResponse.\n        Replaced By: SystemAutomaticCallbackGetRequest15", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAutomaticCallbackGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAutomaticCallbackGetRequest15": {"post": {"tags": ["Deprecated"], "summary": "SystemAutomaticCallbackGetRequest15", "description": "Request the system's automatic callback attributes.\n            The response is either a SystemAutomaticCallbackGetResponse15 or an ErrorResponse.\n            Replaced By: SystemAutomaticCallbackGetRequest15sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAutomaticCallbackGetRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAutomaticCallbackGetRequest15sp2": {"post": {"tags": ["Deprecated"], "summary": "SystemAutomaticCallbackGetRequest15sp2", "description": "Request the system's automatic callback attributes.\n        The response is either a SystemAutomaticCallbackGetResponse15sp2 or an ErrorResponse.\n        Replaced by: SystemAutomaticCallbackGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAutomaticCallbackGetRequest15sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAutomaticCallbackModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemAutomaticCallbackModifyRequest", "description": "Modifies the system's automatic callback attributes.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: SystemAutomaticCallbackModifyRequest15", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAutomaticCallbackModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemAutomaticCollectCallGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemAutomaticCollectCallGetRequest", "description": "Get system Automatic Collect Call service settings.\n        The response is either SystemAutomaticCollectCallGetResponse or ErrorResponse.\n\n        Replaced by SystemAutomaticCollectCallGetRequest in AS mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemAutomaticCollectCallGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBCCTAddOCIInterfaceAddressRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemBCCTAddOCIInterfaceAddressRequest", "description": "Add an OCI entry to the Broadworks Common Communication Transport (BCCT) protocol to interface mapping table.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBCCTAddOCIInterfaceAddressRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBCCTDeleteOCIInterfaceAddressRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemBCCTDeleteOCIInterfaceAddressRequest", "description": "Delete an OCI entry in the Broadworks Common Communication Transport (BCCT) protocol to interface mapping table.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBCCTDeleteOCIInterfaceAddressRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBCCTGetOCIInterfaceAddressListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemBCCTGetOCIInterfaceAddressListRequest", "description": "Get the OCI entries from the Broadworks Common Communication Transport (BCCT) protocol to interface mapping list.\n        The response is SystemBCCTGetOCIInterfaceAddressListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBCCTGetOCIInterfaceAddressListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityGetRequest", "description": "Get the broadworks mobility system parameters.\n        The response is either a SystemBroadWorksMobilityGetResponse or an ErrorResponse.\n\n        Replaced by: SystemBroadWorksMobilityGetRequest17sp4.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityGetRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityGetRequest17sp4", "description": "Get the broadworks mobility system parameters.\n        The response is either a SystemBroadWorksMobilityGetResponse17sp4 or an ErrorResponse.\n        Replaced by: SystemBroadWorksMobilityGetRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityGetRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityGetRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityGetRequest19sp1", "description": "Get the broadworks mobility system parameters.\n        The response is either a SystemBroadWorksMobilityGetResponse19sp1 or an ErrorResponse.\n        Replaced by SystemBroadWorksMobilityGetRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityGetRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityGetRequest21": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityGetRequest21", "description": "Get the broadworks mobility system parameters.\n        The response is either a SystemBroadWorksMobilityGetResponse21 or an ErrorResponse.\n\n        Replaced by: SystemBroadWorksMobilityGetRequest22 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityGetRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityGetRequest21sp1", "description": "Get the broadworks mobility system parameters.\n        The response is either a SystemBroadWorksMobilityGetResponse21sp1 or an ErrorResponse.\n\n        Replaced by SystemBroadWorksMobilityGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityGetRequest21sp1V2": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityGetRequest21sp1V2", "description": "Get the broadworks mobility system parameters.\n        The response is either a SystemBroadWorksMobilityGetResponse21sp1V2 or an ErrorResponse.\n\n        Replaced by SystemBroadWorksMobilityGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityGetRequest21sp1V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityGetRequest22", "description": "Get the broadworks mobility system parameters.\n        The response is either a SystemBroadWorksMobilityGetResponse22 or an ErrorResponse.\n\n        Replaced by SystemBroadWorksMobilityGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityGetRequest22V2": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityGetRequest22V2", "description": "Get the broadworks mobility system parameters.\n        The response is either a SystemBroadWorksMobilityGetResponse22V2 or an ErrorResponse.\n\n        Replaced by SystemBroadWorksMobilityGetRequest22V3.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityGetRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityModifyRequest", "description": "Modify the BroadWorks Mobility system parameters.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by: SystemBroadWorksMobilityModifyRequest17sp4.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityModifyRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityModifyRequest17sp4", "description": "Modify the BroadWorks Mobility system parameters.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by SystemBroadWorksMobilityModifyRequest21.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityModifyRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityServiceAccessCodeAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityServiceAccessCodeAddRequest", "description": "Add a system service access code.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced by SystemBroadWorksMobilityServiceAccessCodeAddRequest21.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityServiceAccessCodeAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityServiceAccessCodeDeleteRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityServiceAccessCodeDeleteRequest", "description": "Delete a system service access code.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced by SystemBroadWorksMobilityServiceAccessCodeDeleteRequest21.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityServiceAccessCodeDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityServiceAccessCodeGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityServiceAccessCodeGetListRequest", "description": "Get a list of system service access codes.\n        The response is either SystemBroadWorksMobilityServiceAccessCodeGetListResponse or ErrorResponse.\n        Replaced by SystemBroadWorksMobilityServiceAccessCodeGetListRequest21.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityServiceAccessCodeGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBroadWorksMobilityServiceAccessCodeModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemBroadWorksMobilityServiceAccessCodeModifyRequest", "description": "Modify a system service access code.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced by SystemBroadWorksMobilityServiceAccessCodeModifyRequest21.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBroadWorksMobilityServiceAccessCodeModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBusyLampFieldGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemBusyLampFieldGetRequest", "description": "Request the system level data associated with the Busy Lamp\n        Field service. The response is either a\n        SystemBusyLampFieldGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBusyLampFieldGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBwDiameterBaseDataGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemBwDiameterBaseDataGetRequest", "description": "Requests the list of System Diameter base parameters.\n        The response is either SystemBwDiameterBaseDataGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBwDiameterBaseDataGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBwDiameterBaseDataGetRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemBwDiameterBaseDataGetRequest17sp3", "description": "Requests the list of System Diameter base parameters.\n        The response is either SystemBwDiameterBaseDataGetResponse17sp3 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBwDiameterBaseDataGetRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemBwDiameterPeerAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemBwDiameterPeerAddRequest", "description": "Add a static entry in the Diameter Peer Table.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemBwDiameterPeerAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequest", "description": "Request to get the system settings for the call center enhanced reporting scheduling tasks.\n        The response is either a SystemCallCenterEnhancedReportingScheduledTaskParametersGetResponse or an ErrorResponse.\n\n        Replaced by: SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallCenterGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallCenterGetRequest", "description": "Request the system level data associated with Call Center.\n        The response is either a SystemCallCenterGetResponse or an\n        ErrorResponse.\n        Replaced By: SystemCallCenterGetRequest14sp9", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallCenterGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallCenterGetRequest14sp9": {"post": {"tags": ["Deprecated"], "summary": "SystemCallCenterGetRequest14sp9", "description": "Request the system level data associated with Call Center.\n        The response is either a SystemCallCenterGetResponse14sp9 or an\n        ErrorResponse.\n\n        Replaced By: SystemCallCenterGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallCenterGetRequest14sp9"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallCenterGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "SystemCallCenterGetRequest16", "description": "Request the system level data associated with Call Center.\n        The response is either a SystemCallCenterGetResponse16 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallCenterGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallCenterGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallCenterGetRequest17": {"post": {"tags": ["Deprecated"], "summary": "SystemCallCenterGetRequest17", "description": "Request the system level data associated with Call Center.\n        The response is either a SystemCallCenterGetResponse17 or an\n        ErrorResponse.\n\n        Replaced by SystemCallCenterGetRequest17sp4.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallCenterGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallCenterGetRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "SystemCallCenterGetRequest17sp4", "description": "Request the system level data associated with Call Center.\n        The response is either a SystemCallCenterGetResponse17sp4 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallCenterGetRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallCenterGetRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallCenterGetRequest19": {"post": {"tags": ["Deprecated"], "summary": "SystemCallCenterGetRequest19", "description": "Request the system level data associated with Call Center.\n        The response is either a SystemCallCenterGetResponse19 or an\n        ErrorResponse.\n        Replaced by SystemCallCenterGetRequest21.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallCenterGetRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallCenterReportingServerGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallCenterReportingServerGetListRequest", "description": "Request to get a list of Call Center Reporting Server.\n        The response is either SystemCallCenterReportingServerGetListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallCenterReportingServerGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallingNameRetrievalGetRequest14": {"post": {"tags": ["Deprecated"], "summary": "SystemCallingNameRetrievalGetRequest14", "description": "Request the system's calling name retrieval attributes.\n        The response is either a SystemCallingNameRetrievalGetResponse14 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallingNameRetrievalGetRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallingNameRetrievalGetRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemCallingNameRetrievalGetRequest16sp1", "description": "Request the system's calling name retrieval attributes.\n        The response is either a SystemCallingNameRetrievalGetResponse16sp1 or an ErrorResponse.\n\n        Replaced by: SystemCallingNameRetrievalGetRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallingNameRetrievalGetRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallingNameRetrievalGetRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "SystemCallingNameRetrievalGetRequest17sp4", "description": "Request the system's calling name retrieval attributes.\n        The response is either a SystemCallingNameRetrievalGetResponse17sp4 or an ErrorResponse.\n\n        Replaced by: SystemCallingNameRetrievalGetRequest24", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallingNameRetrievalGetRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallingNameRetrievalGetRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemCallingNameRetrievalGetRequest20", "description": "Request the system's calling name retrieval attributes.\n        The response is either a SystemCallingNameRetrievalGetResponse20 or an ErrorResponse.\n\n        Replaced by: SystemCallingNameRetrievalGetRequest24", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallingNameRetrievalGetRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallingNameRetrievalModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallingNameRetrievalModifyRequest", "description": "Modifies the system's calling name retrieval attributes.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by: SystemCallingNameRetrievalModifyRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallingNameRetrievalModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallingNameRetrievalModifyRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemCallingNameRetrievalModifyRequest16sp1", "description": "Modifies the system's calling name retrieval attributes.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by: SystemCallingNameRetrievalModifyRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallingNameRetrievalModifyRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest14": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest14", "description": "Request the system level data associated with Call Processing Policy.\n        The response is either a SystemCallProcessingGetPolicyResponse14 or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest14sp1", "description": "Request the system level data associated with Call Processing Policy.\n        The response is either a SystemCallProcessingGetPolicyResponse14sp1 or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest14sp4", "description": "Request the system level data associated with Call Processing Policy.\n        The response is either a SystemCallProcessingGetPolicyResponse14sp4 or an\n        ErrorResponse.\n        Replaced By : SystemCallProcessingGetPolicyRequest15", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest14sp7": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest14sp7", "description": "Request the system level data associated with Call Processing Policy.\n            The response is either a SystemCallProcessingGetPolicyResponse14sp7 or an\n            ErrorResponse.\n            Replaced By: SystemCallProcessingGetPolicyRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest14sp7"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest15": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest15", "description": "Request the system level data associated with Call Processing Policy.\n            The response is either a SystemCallProcessingGetPolicyResponse15 or an\n            ErrorResponse.\n            Replaced By: SystemCallProcessingGetPolicyRequest15sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest15sp2": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest15sp2", "description": "Request the system level data associated with Call Processing Policy.\n            The response is either a SystemCallProcessingGetPolicyResponse15sp2 or an\n            ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest15sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest16": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest16", "description": "Request the system level data associated with Call Processing Policy.\n        The response is either a SystemCallProcessingGetPolicyResponse16 or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest16sp2": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest16sp2", "description": "Request the system level data associated with Call Processing Policy.\n        The response is either a SystemCallProcessingGetPolicyResponse16sp2 or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest16sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest17": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest17", "description": "The response is either a SystemCallProcessingGetPolicyResponse17 or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest17sp3", "description": "Request the system level data associated with Call Processing Policy.\n        The response is either a SystemCallProcessingGetPolicyResponse17sp3 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingGetPolicyRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest17sp4", "description": "The response is either a SystemCallProcessingGetPolicyResponse17sp4 or an\n        ErrorResponse.\n        Replaced By : SystemCallProcessingGetPolicyRequest18sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest18sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest18sp1", "description": "The response is either a SystemCallProcessingGetPolicyResponse18sp1 or an\n      ErrorResponse.\n\n      Replaced by: SystemCallProcessingGetPolicyRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest18sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest19sp1", "description": "The response is either a SystemCallProcessingGetPolicyResponse19sp1 or an\n      ErrorResponse.\n\n      Replaced by: SystemCallProcessingGetPolicyRequest21sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingGetPolicyRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingGetPolicyRequest21sp1", "description": "The response is either a SystemCallProcessingGetPolicyResponse21sp1 or an\n        ErrorResponse.\n        Replaced by: SystemCallProcessingGetPolicyRequest1sp2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingGetPolicyRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingModifyPolicyRequest14": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingModifyPolicyRequest14", "description": "Modify the system level data associated with Call Processing Policy.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By : SystemCallProcessingModifyPolicyRequest15", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingModifyPolicyRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileAddRequest", "description": "Add a call processing policy profile to system.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by SystemCallProcessingPolicyProfileAddRequest20.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileAddRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileAddRequest20", "description": "Add a call processing policy profile to system.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileAddRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile Auto Attendant subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequestResponse or an\n        ErrorResponse.\n        The response contains the call processing policy profile setting for Auto Attendant.\n\n        Replaced by:  SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile Auto Attendant subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequestResponse22 or an\n        ErrorResponse.\n        The response contains the call processing policy profile setting for Auto Attendant.\n\n        Replaced by: SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22V2 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile BroadWorks Anywhere subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequestResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile BroadWorks Anywhere subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequestResponse22 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileCallCenterProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileCallCenterProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile Call Center subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileCallCenterProfileGetRequestResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileCallCenterProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile Call Center subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileCallCenterProfileGetRequestResponse22 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22V2 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileCollaborateProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileCollaborateProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile Collaborate subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileCollaborateProfileGetResponse or an\n        ErrorResponse.\n\n        Replaced by:  SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileCollaborateProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile Collaborate subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileCollaborateProfileGetResponse22 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22V2 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile Find-me/Follow-me subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile Find-me/Follow-me subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse22 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22V2 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile Flexible Seating Host subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile Flexible Seating Host subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileGetRequest", "description": "Request to get a call processing policy profile in system.\n        The response is either a SystemCallProcessingPolicyProfileGetResponse or an ErrorResponse.\n\n        Replaced by SystemCallProcessingPolicyProfileGetRequest20.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileGetRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileGetRequest20", "description": "Request to get a call processing policy profile in system.\n        The response is either a SystemCallProcessingPolicyProfileGetResponse20 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileGetRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileGroupPagingProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileGroupPagingProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile Group Paging subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileGroupPagingProfileGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileGroupPagingProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileGroupPagingProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile Hunt Group subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile Hunt Group subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse22 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileInstantGroupCallProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileInstantGroupCallProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile Instant Group Call subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileInstantGroupCallProfileGetResponse22 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileInstantGroupCallProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileInstantGroupCallProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile Meet-Me Conferencing subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile Meet-Me Conferencing subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse22 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileModifyRequest", "description": "Modify a call processing policy profile in system.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by SystemCallProcessingPolicyProfileModifyRequest20.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileModifyRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileModifyRequest20", "description": "Modify a call processing policy profile in system.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileModifyRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileRoutePointProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileRoutePointProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile Route Point subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileRoutePointProfileGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileRoutePointProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile Route Point subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileRoutePointProfileGetResponse22 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile Trunk Group Pilot user subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile Trunk Group Pilot user subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V2 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V2": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V2", "description": "Request to get the configuration for a call processing policy profile Trunk Group Pilot user subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22V2 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V3 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileUserProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileUserProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile user subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileUserProfileGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileUserProfileGetRequest21sp1 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileUserProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileUserProfileGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileUserProfileGetRequest21sp1", "description": "Request to get the configuration for a call processing policy profile user subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileUserProfileGetResponse21sp1 or an\n        ErrorResponse.\n        Replaced by: SystemCallProcessingPolicyProfileUserProfileGetRequest22 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileUserProfileGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileUserProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileUserProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile user subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileUserProfileGetResponse22 or an ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileUserProfileGetRequest22V2 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileUserProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileUserProfileGetRequest22V2": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileUserProfileGetRequest22V2", "description": "Request to get the configuration for a call processing policy profile user subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileUserProfileGetResponse22V2 or an ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileUserProfileGetRequest22V2 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileUserProfileGetRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile Voice Portal subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile Voice Portal subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse22 or an\n        ErrorResponse.\n        Replaced by: SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest", "description": "Request to get the configuration for a call processing policy profile VoiceXML subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22", "description": "Request to get the configuration for a call processing policy profile VoiceXML subscriber type profile.\n        The response is either a SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse22 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallRecordingAddPlatformRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallRecordingAddPlatformRequest", "description": "Add a Call Recording platform.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by: SystemCallRecordingAddPlatformRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallRecordingAddPlatformRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallRecordingAddPlatformRequest19": {"post": {"tags": ["Deprecated"], "summary": "SystemCallRecordingAddPlatformRequest19", "description": "Add a Call Recording platform.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by: SystemCallRecordingAddPlatformRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallRecordingAddPlatformRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallRecordingAddPlatformRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemCallRecordingAddPlatformRequest20", "description": "Add a Call Recording platform.\n        The first system level call recording platform added is made the system default\n        call recording platform.  The first reseller level call recording platform added\n        for a reseller is made the reseller default call recording platform.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by: SystemCallRecordingAddPlatformRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallRecordingAddPlatformRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallRecordingGetPlatformListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallRecordingGetPlatformListRequest", "description": "Get list of Call Recording platforms.\n        The response is either SystemCallRecordingGetPlatformListResponse or ErrorResponse.\n\n        The possible values for \"Support Video Rec\" can be either true or false.\n        Schema version values include: 1.0, 2.0, 3.0\n\n        Replaced by: SystemCallRecordingGetPlatformListRequest20sp1 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallRecordingGetPlatformListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallRecordingGetPlatformListRequest20sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemCallRecordingGetPlatformListRequest20sp1", "description": "Get list of Call Recording platforms.\n        The response is either SystemCallRecordingGetPlatformListResponse20sp1 or ErrorResponse.\n\n        The possible values for \"Support Video Rec\" can be either true or false.\n        Schema version values include: 1.0, 2.0, 3.0\n\n\t\tReplaced by SystemCallRecordingGetPlatformListRequest22 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallRecordingGetPlatformListRequest20sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallRecordingGetPlatformListRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallRecordingGetPlatformListRequest22", "description": "Requests the list of all system-level call recording platforms and all reseller level call recording platforms.\n\t\tIf an excludeReseller is specified, returns all the system-level call recording platforms only.\n        If a resellerId is specified, returns all the system-level call recording platforms and the given reseller's call recording platforms.\n        If a reseller administrator sends the request and resellerId is not specified, the administrator's resellerId is used.\n        The response is either SystemCallRecordingGetPlatformListResponse22 or ErrorResponse.\n\n        Replaced by: SystemCallRecordingGetPlatformListRequest22V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallRecordingGetPlatformListRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallRecordingGetPlatformUsageRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallRecordingGetPlatformUsageRequest", "description": "Get the list of groups currently associated to the specified Call Recording platform.\n        The response is either SystemCallRecordingGetPlatformUsageResponse or ErrorResponse.\n\n\t\tReplaced by SystemCallRecordingGetPlatformUsageRequest22 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallRecordingGetPlatformUsageRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallRecordingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallRecordingGetRequest", "description": "Request the system level data associated with Call Recording.\n        The response is either a SystemCallRecordingGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemCallRecordingGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallRecordingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallRecordingGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemCallRecordingGetRequest22", "description": "Request the system level data associated with Call Recording.\n        The response is either a SystemCallRecordingGetResponse22 or an\n        ErrorResponse.\n\n        Replaced by: SystemCallRecordingGetRequest23", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallRecordingGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallRecordingModifyPlatformRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallRecordingModifyPlatformRequest", "description": "Modify the specified Call Recording platform.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by: SystemCallRecordingModifyPlatformRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallRecordingModifyPlatformRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCallRecordingModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCallRecordingModifyRequest", "description": "Modify the system level data associated with Call Recording.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced By: SystemCallRecordingModifyRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCallRecordingModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCollaborateGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCollaborateGetRequest", "description": "Request the system level data associated with collaborate services.\n        The response is either a SystemCollaborateGetResponse or an ErrorResponse.\n\n        Replaced by: SystemCollaborateGetRequest20sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCollaborateGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCollaborateGetRequest20sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemCollaborateGetRequest20sp1", "description": "Request the system level data associated with collaborate services.\n        The response is either a SystemCollaborateGetResponse20sp1 or an ErrorResponse.\n\n        Replaced by: SystemCollaborateGetRequest20sp1V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCollaborateGetRequest20sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCollaborateModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCollaborateModifyRequest", "description": "Modify the system level data associated with collaborate services.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by: SystemCollaborateModifyRequest20sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCollaborateModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCollaborateModifyRequest20sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemCollaborateModifyRequest20sp1", "description": "Modify the system level data associated with collaborate services.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by SystemCollaborateModifyRequest20sp1V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCollaborateModifyRequest20sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCommunicationBarringCriteriaAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCommunicationBarringCriteriaAddRequest", "description": "Add a new Communication Barring Criteria.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by: SystemCommunicationBarringCriteriaAddRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCommunicationBarringCriteriaAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCommunicationBarringCriteriaGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCommunicationBarringCriteriaGetRequest", "description": "Get an existing Communication Barring Criteria.\n        The response is either a SystemCommunicationBarringCriteriaGetResponse\n        or an ErrorResponse.\n        Replaced by: SystemCommunicationBarringCriteriaGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCommunicationBarringCriteriaGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCommunicationBarringCriteriaGetRequest17": {"post": {"tags": ["Deprecated"], "summary": "SystemCommunicationBarringCriteriaGetRequest17", "description": "Get an existing Communication Barring Criteria.\n        The response is either a\n        SystemCommunicationBarringCriteriaGetResponse17 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCommunicationBarringCriteriaGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCommunicationBarringProfileAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCommunicationBarringProfileAddRequest", "description": "Add a new Communication Barring Profile.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCommunicationBarringProfileAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCommunicationBarringProfileAddRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemCommunicationBarringProfileAddRequest17sp1", "description": "Add a new Communication Barring Profile.\n        The priorities for IncomingRules are requantized to consecutive integers as part of the add.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following elements are only used in XS data mode:\n     incomingDefaultAction\n     incomingDefaultCallTimeout\n     incomingRule", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCommunicationBarringProfileAddRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCommunicationBarringProfileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCommunicationBarringProfileGetRequest", "description": "Get an existing Communication Barring Profile.\n        The response is either a SystemCommunicationBarringProfileGetResponse\n        or an ErrorResponse.\n        Replaced by: SystemCommunicationBarringProfileGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCommunicationBarringProfileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCommunicationBarringProfileGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "SystemCommunicationBarringProfileGetRequest16", "description": "Get an existing Communication Barring Profile.\n        The response is either a SystemCommunicationBarringProfileGetResponse16\n        or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCommunicationBarringProfileGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCommunicationBarringProfileGetRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemCommunicationBarringProfileGetRequest17sp1", "description": "Get an existing Communication Barring Profile.\n         The response is either a SystemCommunicationBarringProfileGetResponse17sp1\n         or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCommunicationBarringProfileGetRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemConfigurableTreatmentGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemConfigurableTreatmentGetRequest", "description": "Get all the attributes of a configurable treatment.\n            The response is either a SystemConfigurableTreatmentGetResponse or an ErrorResponse.\n            Replaced By: SystemConfigurableTreatmentGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemConfigurableTreatmentGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCPEConfigAddFileServerRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCPEConfigAddFileServerRequest", "description": "Add a device CPE config file server.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: SystemCPEConfigAddFileServerRequest14sp6", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCPEConfigAddFileServerRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCPEConfigGetFileServerListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCPEConfigGetFileServerListRequest", "description": "Requests the list of device CPE config file servers.\n        The response is either SystemCPEConfigGetFileServerListResponse or ErrorResponse.\n        Replaced By: SystemCPEConfigGetFileServerListRequest14sp6", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCPEConfigGetFileServerListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCPEConfigModifyFileServerRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCPEConfigModifyFileServerRequest", "description": "Modify a device CPE config file server.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: SystemCPEConfigModifyFileServerRequest14sp6", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCPEConfigModifyFileServerRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCPEConfigParametersGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCPEConfigParametersGetRequest", "description": "Request to get the list of CPE Config system parameters.\n        The response is either SystemCPEConfigParametersGetResponse or ErrorResponse.\n        Replaced By: SystemCPEConfigParametersGetRequest14sp6", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCPEConfigParametersGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCPEConfigParametersGetRequest14sp6": {"post": {"tags": ["Deprecated"], "summary": "SystemCPEConfigParametersGetRequest14sp6", "description": "Request to get the list of CPE Config system parameters.\n        The response is either SystemCPEConfigParametersGetResponse14sp6 or ErrorResponse.\n\n        Replaced by: SystemCPEConfigParametersGetRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCPEConfigParametersGetRequest14sp6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCPEConfigParametersGetRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemCPEConfigParametersGetRequest20", "description": "Request to get the list of CPE Config system parameters.\n        The response is either SystemCPEConfigParametersGetResponse20 or ErrorResponse.\n\n        Replaced by: SystemCPEConfigParametersGetRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCPEConfigParametersGetRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCPEConfigParametersModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCPEConfigParametersModifyRequest", "description": "Request to modify CPE Config system parameters.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: SystemCPEConfigParametersModifyRequest20.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCPEConfigParametersModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCPEConfigParametersModifyRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemCPEConfigParametersModifyRequest20", "description": "Request to modify CPE Config system parameters.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: SystemCPEConfigParametersModifyRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCPEConfigParametersModifyRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemCrInterfaceGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemCrInterfaceGetRequest", "description": "Gets the system level attributes of the Cr Interface.\n        The response is either a SystemCrInterfaceGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemCrInterfaceGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceManagementEventGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceManagementEventGetListRequest", "description": "Request device management's events for a specific queue.\n        It is possible to restrict the number of rows returned using\n        responseSizeLimit.\n        If eventQueueType is not specified, the events from all the\n        event queues are returned.\n        The response is either a SystemDeviceManagementEventGetListResponse or an ErrorResponse.\n\n         Deprecated by: SystemDeviceManagementEventGetListRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceManagementEventGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceManagementTagAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceManagementTagAddRequest", "description": "Request to add a static configuration tag.\n          The response is either a SuccessResponse or an ErrorResponse.\n          Replaced by: SystemDeviceManagementTagAddRequest21sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceManagementTagAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceManagementTagAddRequest21sp2": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceManagementTagAddRequest21sp2", "description": "Request to add a static configuration tag.\n          The response is either a SuccessResponse or an ErrorResponse.\n          Replaced by: SystemDeviceManagementTagAddRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceManagementTagAddRequest21sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceTypeGetAvailableListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceTypeGetAvailableListRequest", "description": "Requests a list of non-obsolete Identity/device profile types defined in the system. It is possible\n        to get either all conference device types or all non-conferernce types. This command is similar\n        to the SystemSIPDeviceTypeGetListRequest and SystemMGCPDeviceTypeGetListRequest\n        but gets both SIP and MGCP types.\n        The response is either SystemDeviceTypeGetlAvailableListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceTypeGetAvailableListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceTypeGetAvailableListRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceTypeGetAvailableListRequest14sp1", "description": "Requests a list of non-obsolete Identity/device profile types defined in the system. It is possible\n        to get either all conference device types or all non-conferernce types. This command is similar\n        to the SystemSIPDeviceTypeGetListRequest and SystemMGCPDeviceTypeGetListRequest\n        but gets both SIP and MGCP types.\n        The response is either SystemDeviceTypeGetlAvailableListResponse14sp1 or ErrorResponse.\n        Replaced By: SystemDeviceTypeGetAvailableListRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceTypeGetAvailableListRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceTypeGetAvailableListRequest14sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceTypeGetAvailableListRequest14sp3", "description": "Requests a list of non-obsolete Identity/device profile types defined in the system. It is possible\n        to get either all conference device types or all non-conferernce types. This command is similar\n        to the SystemSIPDeviceTypeGetListRequest and SystemMGCPDeviceTypeGetListRequest\n        but gets both SIP and MGCP types.\n        The response is either SystemDeviceTypeGetlAvailableListResponse14sp1 or ErrorResponse.\n\n    Replaced by: SystemDeviceTypeGetAvailableListRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceTypeGetAvailableListRequest14sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceTypeGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceTypeGetRequest", "description": "Requests the information about the specified device type without regard to whether the\n        type is SIP or MGCP.\n        The response is either SystemDeviceTypeGetResponse or ErrorResponse.\n        Replaced By: SystemDeviceTypeGetRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceTypeGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceTypeGetRequest14sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceTypeGetRequest14sp3", "description": "Requests the information about the specified device type without regard to whether the\n        type is SIP or MGCP.\n        The response is either SystemDeviceTypeGetResponse14sp3 or ErrorResponse.\n        Replaced By: SystemDeviceTypeGetRequest14sp6", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceTypeGetRequest14sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceTypeGetRequest14sp6": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceTypeGetRequest14sp6", "description": "Requests the information about the specified device type without regard to whether the\n        type is SIP or MGCP.\n        The response is either SystemDeviceTypeGetResponse14sp6 or ErrorResponse.\n        Replaced by: SystemDeviceTypeGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceTypeGetRequest14sp6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceTypeGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceTypeGetRequest16", "description": "Requests the information about the specified device type without regard to whether the\n        type is SIP or MGCP.\n        The response is either SystemDeviceTypeGetResponse16 or ErrorResponse.\n        Replaced by: SystemDeviceTypeGetRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceTypeGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceTypeGetRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceTypeGetRequest16sp1", "description": "Replaced by: SystemDeviceTypeGetRequest18.\n        Requests the information about the specified device type without regard to whether the\n        type is SIP or MGCP.\n        The response is either SystemDeviceTypeGetResponse16sp1 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceTypeGetRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceTypeGetRequest18": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceTypeGetRequest18", "description": "Requests the information about the specified device type without regard to whether the\n        type is SIP or MGCP.\n        The response is either SystemDeviceTypeGetResponse18 or ErrorResponse.\n    Note: The elements deviceTypeConfigurationOption applies to SIP device types only. Therefore, only present in the response when the device type is SIP.\n    Replaced by: SystemSIPDeviceTypeGetRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceTypeGetRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceTypeGetRequest19": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceTypeGetRequest19", "description": "Requests the information about the specified device type without regard to whether the\n        type is SIP or MGCP.\n        The response is either SystemDeviceTypeGetResponse19 or ErrorResponse.\n\t\tNote: The elements deviceTypeConfigurationOption and staticLineOrdering apply to SIP device types only. Therefore, only present in the response when the device type is SIP.\n\n\t\tReplaced by: SystemSIPDeviceTypeGetRequest21sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceTypeGetRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceTypeGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceTypeGetRequest21sp1", "description": "Requests the information about the specified device type without regard to whether the\n        type is SIP or MGCP.\n        The response is either SystemDeviceTypeGetResponse21sp1 or ErrorResponse.\n    Note: The elements deviceTypeConfigurationOption and staticLineOrdering apply to SIP device types only. Therefore, only present in the response when the device type is SIP.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceTypeGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDeviceTypeGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemDeviceTypeGetRequest22", "description": "Requests the information about the specified device type without regard to whether the\n        type is SIP or MGCP.\n        The response is either SystemDeviceTypeGetResponse22 or ErrorResponse.\n    Note: The elements deviceTypeConfigurationOption and staticLineOrdering apply to SIP device types only. Therefore, only present in the response when the device type is SIP.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDeviceTypeGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDialPlanPolicyGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemDialPlanPolicyGetRequest", "description": "Request the system level data associated with Dial Plan Policy.\n        The response is either a SystemDialPlanPolicyGetResponse or an\n        ErrorResponse.\n        Replaced by: SystemDialPlanPolicyGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDialPlanPolicyGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDnGetUtilizationRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemDnGetUtilizationRequest", "description": "Get the utilization of a single DN.\n        The response is either SystemDnGetUtilizationResponse or ErrorResponse.\n        Replaced By: SystemDnGetUtilizationRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDnGetUtilizationRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemDomainGetListRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemDomainGetListRequest22", "description": "Requests the list of all matching system-level domains and all matching reseller level domains.\n        If excludeReseller is specified, returns all matching system-level domain names only.\n        If resellerId is specified, returns all matching system-level domain names and the given reseller's domains.\n        If reseller administrator sends the request and resellerId is not specified, the administrator's resellerId is used.\n\n        The response is either SystemDomainGetListResponse22 or ErrorResponse.\n\n        The following elements are only used in AS data mode:\n          includeReseller\n          resellerId\n\n          Replaced by SystemDomainGetListRequest22V2 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemDomainGetListRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemEnhancedCallLogsGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemEnhancedCallLogsGetRequest", "description": "Request the system level data associated with Enhanced Call Logs.\n        The response is either a SystemEnhancedCallLogsGetResponse or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemEnhancedCallLogsGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemEnhancedCallLogsGetRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "SystemEnhancedCallLogsGetRequest17sp4", "description": "Request the system level data associated with Enhanced Call Logs. The response is either a\n        SystemEnhancedCallLogsGetResponse17sp4 or an ErrorResponse.\n        Replaced by:SystemEnhancedCallLogsGetRequest20sp1 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemEnhancedCallLogsGetRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemEnhancedCallLogsGetRequest20sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemEnhancedCallLogsGetRequest20sp1", "description": "Request the system level data associated with Enhanced Call Logs. The response is either a\n        SystemEnhancedCallLogsGetResponse20sp1 or an ErrorResponse.\n        Replaced by:SystemEnhancedCallLogsGetRequest22 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemEnhancedCallLogsGetRequest20sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemEnhancedCallLogsGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemEnhancedCallLogsGetRequest22", "description": "Request the system level data associated with Enhanced Call Logs.\n        Replaced by: SystemEnhancedCallLogsGetRequest24.\n        Response to SystemDeviceTypeGetRequest16sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemEnhancedCallLogsGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemEnhancedCallLogsModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemEnhancedCallLogsModifyRequest", "description": "Modify the system level data associated with Enhanced Call Logs.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following elements are only used in AS data mode:\n          isSendEnabled\n          server1NetAddress\n          server1SendPort\n          server1RetrievePort\n          server2NetAddress\n          server2SendPort\n          server2RetrievePort\n          sharedSecret\n          retransmissionDelayMilliSeconds\n          maxTransmissions\n          soapTimeoutSeconds\n          useDBS\n          eclQueryApplicationURL\n          eclQueryDataRepositoryURL", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemEnhancedCallLogsModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemExpensiveCallTypeGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemExpensiveCallTypeGetListRequest", "description": "Request to get the list of expensive alternate call indicators in the system.\n        The response is either a SystemExpensiveCallTypeGetListResponse or an ErrorResponse.\n        Replaced by: SystemExpensiveCallTypeGetListRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemExpensiveCallTypeGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemExternalAuthenticationAddACLEntryRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemExternalAuthenticationAddACLEntryRequest", "description": "Add an entry to the external authentication access control list.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemExternalAuthenticationAddACLEntryRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemExternalAuthenticationDeleteACLEntryRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemExternalAuthenticationDeleteACLEntryRequest", "description": "Delete an entry from the external authentication access control list.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemExternalAuthenticationDeleteACLEntryRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemExternalAuthenticationModifyACLEntryRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemExternalAuthenticationModifyACLEntryRequest", "description": "Modify an entry from the external authentication access control list.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemExternalAuthenticationModifyACLEntryRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemFeatureAccessCodeGetListRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemFeatureAccessCodeGetListRequest20", "description": "Request to get list of default Feature Access Codes defined on system\n        level.\n        The response is either SystemFeatureAccessCodeGetListResponse20 or\n        ErrorResponse.\n        In release 20 the \"Call Recording\" FAC name is changed to\n        \"Call Recording - Start\".\n        Replaced by: SystemFeatureAccessCodeGetListRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemFeatureAccessCodeGetListRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemFeatureAccessCodeModifyListRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemFeatureAccessCodeModifyListRequest20", "description": "Modify default Feature Access Codes.\n        The response is either a SuccessResponse or an ErrorResponse.\n        In release 20 the \"Call Recording\" FAC name is changed to\n        \"Call Recording - Start\".\n        Replaced by: SystemFeatureAccessCodeModifyListRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemFeatureAccessCodeModifyListRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemFileRepositoryDeviceAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemFileRepositoryDeviceAddRequest", "description": "Add a new file repository.\n            The response is either SuccessResponse or ErrorResponse.\n\n            Replaced by: SystemFileRepositoryDeviceAddRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemFileRepositoryDeviceAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemFileRepositoryDeviceAddRequest16": {"post": {"tags": ["Deprecated"], "summary": "SystemFileRepositoryDeviceAddRequest16", "description": "Add a new file repository.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: SystemFileRepositoryDeviceAddRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemFileRepositoryDeviceAddRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemFileRepositoryDeviceGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemFileRepositoryDeviceGetRequest", "description": "Request to get the file repository information.\n            The response is either SystemFileRepositoryDeviceGetResponse or ErrorResponse.\n\n            Replaced by: SystemFileRepositoryDeviceGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemFileRepositoryDeviceGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemFileRepositoryDeviceGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "SystemFileRepositoryDeviceGetRequest16", "description": "Request to get the file repository information.  The response is either SystemFileRepositoryDeviceGetResponse16 or ErrorResponse.\n\n        Replaced by: SystemFileRepositoryDeviceGetRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemFileRepositoryDeviceGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemFileRepositoryDeviceGetRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemFileRepositoryDeviceGetRequest20", "description": "Request to get the file repository information.  The response is either SystemFileRepositoryDeviceGetResponse20 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemFileRepositoryDeviceGetRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemFileRepositoryDeviceModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemFileRepositoryDeviceModifyRequest", "description": "Modify a file repository.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemFileRepositoryDeviceModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemGeographicRedundancyUnreachableFromPrimaryGetUserListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemGeographicRedundancyUnreachableFromPrimaryGetUserListRequest", "description": "Get the list of users that are unreachable from the primary application server.\n        The response is a SystemGeographicRedundancyUnreachableFromPrimaryGetUserListResponse or an ErrorResponse.\n\n        Replaced by: SystemGeographicRedundancyUnreachableFromPrimaryGetUserListRequest22 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemGeographicRedundancyUnreachableFromPrimaryGetUserListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemGetRegistrationContactListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemGetRegistrationContactListRequest", "description": "Get the list of registration contacts.\n        This request handles all levels of administration privileges.  The content of the response will only contain\n        items within the scope of the requester's login id.  At the system level any of the choice parameters may be\n        specified to filter the registrations listed.  At the reseller level, the resellerId must be specified.\n        ResellerId is not valid at service provider, group or user level. At the service provider level the\n        serviceProviderId must be specified for the service provider and group options.  When using the userId or\n        linePort options the specified value must be valid for that service provider login.  At the group level\n        the servicProviderId and the groupId must be specified for the group option. When using the userId or linePort\n        options the specified value must be valid for that group login.\n        The serviceProviderId option is not valid at the group level.  At the user level when using the userId or\n        linePort options the specified value must be valid for that user login.  The serviceProviderId and groupId\n        options are not valid at the user level.\n        The response is either SystemGetRegistrationContactListResponse or ErrorResponse.\n\n        The following elements are only used in AS data mode:\n          resellerId", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemGetRegistrationContactListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemHolidayScheduleAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemHolidayScheduleAddRequest", "description": "Add a system holiday schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemHolidayScheduleAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemHolidayScheduleDeleteRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemHolidayScheduleDeleteRequest", "description": "Delete a system holiday schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemHolidayScheduleDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemHolidayScheduleGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemHolidayScheduleGetListRequest", "description": "Request a list of all system holiday schedules.\n        The response is either a SystemHolidayScheduleGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemHolidayScheduleGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemHolidayScheduleGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemHolidayScheduleGetRequest", "description": "Get a system holiday schedule.\n        The response is either a SystemHolidayScheduleGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemHolidayScheduleGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemHolidayScheduleModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemHolidayScheduleModifyRequest", "description": "Modify a system holiday schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemHolidayScheduleModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemHuntGroupGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemHuntGroupGetRequest", "description": "Request the system level data associated with Hunt Group.\n        The response is either a SystemHuntGroupGetResponse or an\n        ErrorResponse.\n        Replaced by: SystemHuntGroupGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemHuntGroupGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemInCallServiceActivationGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemInCallServiceActivationGetRequest", "description": "Request the system's DTMF based in-call service activation trigger attributes. The response is either a SystemInCallServiceActivationGetResponse or an ErrorResponse.\n\n          Replaced by: SystemInCallServiceActivationGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemInCallServiceActivationGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemInCallServiceActivationModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemInCallServiceActivationModifyRequest", "description": "Modifies the system's DTMF based in-call service activation trigger  attributes.The response is either a SuccessResponse or an ErrorResponse.\n          Replaced by: SystemInCallServiceActivationModifyRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemInCallServiceActivationModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemIntegratedIMPGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemIntegratedIMPGetRequest", "description": "Get the system Integrated IMP service attributes.\n        The response is either SystemIntegratedIMPGetResponse or ErrorResponse.\n\n        Replaced by SystemIntegratedIMPGetRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemIntegratedIMPGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemLanguageAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemLanguageAddRequest", "description": "Request to add a language to the system.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by: SystemLanguageAddRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemLanguageAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemLanguageModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemLanguageModifyRequest", "description": "Request to modify a language properties in the system.\n        If the becomeDefaultLanguage element is present, the language in this request becomes\n        the default language for the system.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by: SystemLanguageModifyRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemLanguageModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemLicensingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemLicensingGetRequest", "description": "Get all the licensing information.\n        The response is either SystemLicensingGetResponse or ErrorResponse.\n        Replaced By: SystemLicensingGetRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemLicensingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemLicensingGetRequest14sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemLicensingGetRequest14sp3", "description": "Get all the licensing information.\n        The response is either SystemLicensingGetResponse14sp3 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemLicensingGetRequest14sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemLocationBasedCallingRestrictionsGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemLocationBasedCallingRestrictionsGetRequest", "description": "Gets system level the Location Based Calling Restrictions attributes.\n        The response is either a SystemLocationBasedCallingRestrictionsGetResponse or an ErrorResponse.\n\n        Replaced by: SystemLocationBasedCallingRestrictionsGetRequest17sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemLocationBasedCallingRestrictionsGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemMailParametersGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemMailParametersGetRequest", "description": "Request to get the list of Mail system parameters.\n        The response is either SystemMailParametersGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemMailParametersGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemMaliciousCallTraceGetUserListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemMaliciousCallTraceGetUserListRequest", "description": "Request the list of users that use the Malicious Call Trace feature.\n        The response is either a SystemMaliciousCallTraceGetUserListResponse or an\n        ErrorResponse.\n        Replaced By: SystemMaliciousCallTraceGetRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemMaliciousCallTraceGetUserListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemMediaAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemMediaAddRequest", "description": "Request to add a Media to the system.\n            The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemMediaAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemMeetMeConferencingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemMeetMeConferencingGetRequest", "description": "Request the system level data associated with Meet-Me Conferencing functions.\n        The response is either a SystemMeetMeConferencingGetResponse or an ErrorResponse.\n\n        Replaced by: SystemMeetMeConferencingGetRequest17sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemMeetMeConferencingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemMeetMeConferencingGetRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemMeetMeConferencingGetRequest17sp3", "description": "Request the system level data associated with Meet-Me Conferencing functions.\n        The response is either a SystemMeetMeConferencingGetResponse17sp3 or an ErrorResponse.\n\n        Replaced by: SystemMeetMeConferencingGetRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemMeetMeConferencingGetRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemMeetMeConferencingGetRequest18": {"post": {"tags": ["Deprecated"], "summary": "SystemMeetMeConferencingGetRequest18", "description": "Request the system level data associated with Meet-Me Conferencing functions.\n        The response is either a SystemMeetMeConferencingGetResponse18 or an ErrorResponse.\n\n        Replaced by SystemMeetMeConferencingGetRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemMeetMeConferencingGetRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemMigratedUsersGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemMigratedUsersGetListRequest", "description": "Get a list of migrated users.\n        The response is either SystemMigratedUsersGetListResponse or ErrorResponse.\n\n        Replaced by: SystemMigratedUsersGetListRequest22 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemMigratedUsersGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemNetworkClassOfServiceGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemNetworkClassOfServiceGetRequest", "description": "Get an existing Network Class of Service.\n        The response is either a SystemNetworkClassOfServiceGetResponse\n        or an ErrorResponse.\n        Replaced by: SystemNetworkClassOfServiceGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemNetworkClassOfServiceGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemNetworkServerSyncParametersGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemNetworkServerSyncParametersGetRequest", "description": "Request to get the list of Network Server Sync system parameters.\n        The response is either SystemNetworkServerSyncParametersGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemNetworkServerSyncParametersGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemNetworkServerSyncParametersGetRequest14sp2": {"post": {"tags": ["Deprecated"], "summary": "SystemNetworkServerSyncParametersGetRequest14sp2", "description": "Request to get the list of Network Server Sync system parameters.\n         The response is either SystemNetworkServerSyncParametersGetResponse14sp2 or ErrorResponse.\n         Replaced By: SystemNetworkServerSyncParametersGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemNetworkServerSyncParametersGetRequest14sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemNetworkServerSyncParametersGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "SystemNetworkServerSyncParametersGetRequest16", "description": "Request to get the list of Network Server Sync system parameters.\n        The response is either SystemNetworkServerSyncParametersGetResponse16 or ErrorResponse.\n        Replaced By: SystemNetworkServerSyncParametersGetRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemNetworkServerSyncParametersGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemNetworkSynchingServerAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemNetworkSynchingServerAddRequest", "description": "Request to add a Network Server to the system.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by SystemNetworkSynchingServerAddRequest22V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemNetworkSynchingServerAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemNetworkSynchingServerAddRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemNetworkSynchingServerAddRequest22", "description": "Request to add a Network Server to the system.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by SystemNetworkSynchingServerAddRequest22V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemNetworkSynchingServerAddRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemNetworkSynchingServerModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemNetworkSynchingServerModifyRequest", "description": "Request to modify a Network Server in the system.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          becomePreferred\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          order\n        Replaced by SystemNetworkSynchingServerModifyRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemNetworkSynchingServerModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemNumberActivationGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemNumberActivationGetRequest", "description": "Request to get the Number Activation state.\n        The response is either SystemNumberActivationGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemNumberActivationGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemNumberActivationModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemNumberActivationModifyRequest", "description": "Request to modify system number activation setting.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemNumberActivationModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemOCICallControlApplicationAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemOCICallControlApplicationAddRequest", "description": "Add an application to the OCI call control application list.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemOCICallControlApplicationAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemOCICallControlApplicationAddRequest14sp9": {"post": {"tags": ["Deprecated"], "summary": "SystemOCICallControlApplicationAddRequest14sp9", "description": "Add an application to the OCI call control application list.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: SystemOCICallControlApplicationAddRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemOCICallControlApplicationAddRequest14sp9"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemOCIReportingParametersGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemOCIReportingParametersGetRequest", "description": "Request to get the list of OCIReporting system parameters.\n        The response is either SystemOCIReportingParametersGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemOCIReportingParametersGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemOCIReportingParametersGetRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemOCIReportingParametersGetRequest14sp1", "description": "Request to get the list of OCIReporting system parameters.\n        The response is either SystemOCIReportingParametersGetResponse14sp1 or\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemOCIReportingParametersGetRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemOutgoingCallingPlanGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemOutgoingCallingPlanGetRequest", "description": "Request the system level data associated with Outgoing Calling Plan.\n        The response is either a SystemOutgoingCallingPlanGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemOutgoingCallingPlanGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPasswordRulesGetRequest13mp2": {"post": {"tags": ["Deprecated"], "summary": "SystemPasswordRulesGetRequest13mp2", "description": "Requests the system's password rules setting applicable to\n        System administrator, Provisioning Administrator,\n        and/or Service Provider Administrator, Group Administrator, Department Administrator, user.\n        The response is either SystemPasswordRulesGetResponse13mp2 or ErrorResponse.\n        Replaced By : SystemPasswordRulesGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPasswordRulesGetRequest13mp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPasswordRulesModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemPasswordRulesModifyRequest", "description": "Request to modify the system providers password rule\n        setting applicable to System Adminstrator, Provisioning Administrator,\n        and/or Service Provider Administrator, Group Administrator, Department Administrator, User.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: SystemPasswordRulesModifyRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPasswordRulesModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPerformanceMeasurementReportingAddFileServerRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemPerformanceMeasurementReportingAddFileServerRequest", "description": "Add a performance measurements reporting ftp server.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPerformanceMeasurementReportingAddFileServerRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPerformanceMeasurementReportingDeleteFileServerRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemPerformanceMeasurementReportingDeleteFileServerRequest", "description": "Delete a performance measurements reporting ftp server.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPerformanceMeasurementReportingDeleteFileServerRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPerformanceMeasurementReportingGetFileServerListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemPerformanceMeasurementReportingGetFileServerListRequest", "description": "Requests the list performance measurements reporting ftp servers.\n        The response is either SystemPerformanceMeasurementReportingGetFileServerListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPerformanceMeasurementReportingGetFileServerListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPerformanceMeasurementReportingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemPerformanceMeasurementReportingGetRequest", "description": "Requests the performance measurements reporting settings.\n        The response is either SystemPerformanceMeasurementReportingGetResponse or ErrorResponse.\n\n        Replaced by: SystemPerformanceMeasurementReportingGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPerformanceMeasurementReportingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPerformanceMeasurementReportingGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemPerformanceMeasurementReportingGetRequest22", "description": "Requests the performance measurements reporting settings.\n        The response is either SystemPerformanceMeasurementReportingGetResponse22 or ErrorResponse.\n        Replaced by: SystemPerformanceMeasurementReportingGetRequest24", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPerformanceMeasurementReportingGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPerformanceMeasurementReportingModifyFileServerRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemPerformanceMeasurementReportingModifyFileServerRequest", "description": "Modify a performance measurements reporting ftp server.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPerformanceMeasurementReportingModifyFileServerRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPolicyGetDefaultRequest14": {"post": {"tags": ["Deprecated"], "summary": "SystemPolicyGetDefaultRequest14", "description": "Requests the system's default policy settings.\n        The response is either SystemPolicyGetDefaultResponse14 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPolicyGetDefaultRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPolicyGetDefaultRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemPolicyGetDefaultRequest14sp1", "description": "Requests the system's default policy settings.\n        The response is either SystemPolicyGetDefaultResponse14sp1 or ErrorResponse.\n        Replaced By: SystemPolicyGetDefaultRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPolicyGetDefaultRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPolicyGetDefaultRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "SystemPolicyGetDefaultRequest14sp4", "description": "Requests the system's default policy settings.\n        The response is either SystemPolicyGetDefaultResponse14sp4 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPolicyGetDefaultRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPolicyGetDefaultRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemPolicyGetDefaultRequest16sp1", "description": "Requests the system's default policy settings.\n        The response is either SystemPolicyGetDefaultResponse16sp1 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPolicyGetDefaultRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPolicyGetDefaultRequest16sp2": {"post": {"tags": ["Deprecated"], "summary": "SystemPolicyGetDefaultRequest16sp2", "description": "Requests the system's default policy settings.\n        The response is either SystemPolicyGetDefaultResponse16sp2 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPolicyGetDefaultRequest16sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPolicyGetDefaultRequest17": {"post": {"tags": ["Deprecated"], "summary": "SystemPolicyGetDefaultRequest17", "description": "Requests the system's default policy settings.\n        The response is either SystemPolicyGetDefaultResponse17 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPolicyGetDefaultRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPolicyGetDefaultRequest17sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemPolicyGetDefaultRequest17sp1", "description": "Requests the system's default policy settings.\n        The response is either SystemPolicyGetDefaultResponse17sp1 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPolicyGetDefaultRequest17sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPolicyGetDefaultRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemPolicyGetDefaultRequest17sp3", "description": "Requests the system's default policy settings.\n        The response is either SystemPolicyGetDefaultResponse17sp3 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPolicyGetDefaultRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemPortalPasscodeRulesGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemPortalPasscodeRulesGetRequest", "description": "Requests the system passcode rules setting.\n        The response is either SystemPortalPasscodeRulesGetResponse or ErrorResponse.\n\n        Replaced by: SystemPortalPasscodeRulesGetRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemPortalPasscodeRulesGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemProvisioningValidationGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemProvisioningValidationGetRequest", "description": "Request to get the system's provisioning validation attributes.\n        The response is either a SystemProvisioningValidationGetResponse or and ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemProvisioningValidationGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemRedundancyParametersGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemRedundancyParametersGetRequest", "description": "Replaced by: SystemRedundancyParametersGetRequest16sp2\n\n        Request to get the list of Redundancy system parameters.\n        The response is either SystemRedundancyParametersGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemRedundancyParametersGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSecurityClassificationGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSecurityClassificationGetRequest", "description": "Get a system Security Classifications parameters.\n        The response is either SystemSecurityClassificationGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSecurityClassificationGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSelectiveServicesGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSelectiveServicesGetRequest", "description": "Request the system level data associated with Selective Services.\n        The response is either a SystemSelectiveServicesGetResponse or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSelectiveServicesGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSelectiveServicesGetRequest18sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSelectiveServicesGetRequest18sp1", "description": "Request the system level data associated with Selective Services.\n        The response is either a SystemSelectiveServicesGetResponse18sp1 or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSelectiveServicesGetRequest18sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSessionAdmissionControlGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSessionAdmissionControlGetRequest", "description": "Get the session admission control settings for the system.\n        The response is either a SystemSessionAdmissionControlGetResponse or an ErrorResponse.\n\n        Replaced by: SystemSessionAdmissionControlGetRequest21sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSessionAdmissionControlGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSessionAdmissionControlGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSessionAdmissionControlGetRequest21sp1", "description": "Get the session admission control settings for the system.\n        The response is either a SystemSessionAdmissionControlGetResponse21sp1 or an ErrorResponse.\n        Replaced by: SystemSessionAdmissionControlGetRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSessionAdmissionControlGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSessionAdmissionControlGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemSessionAdmissionControlGetRequest22", "description": "Get the session admission control settings for the system.\n        The response is either a SystemSessionAdmissionControlGetResponse22 or an ErrorResponse.\n\n        Replaced by: SystemSessionAdmissionControlGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSessionAdmissionControlGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSessionAuditGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSessionAuditGetRequest", "description": "Request the system level data associated with session audit.\n        The response is either a SystemSessionAuditGetResponse or an\n        ErrorResponse.\n        Replaced By: SystemSessionAuditGetRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSessionAuditGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSessionAuditGetRequest14sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemSessionAuditGetRequest14sp3", "description": "Request the system level data associated with session audit.\n        The response is either a SystemSessionAuditGetResponse14sp3 or\n        an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSessionAuditGetRequest14sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSessionAuditModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSessionAuditModifyRequest", "description": "Modify the system level data associated with session sudit.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: SystemSessionAuditModifyRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSessionAuditModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemShInterfaceParametersGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemShInterfaceParametersGetRequest", "description": "Retrieves the Sh Interface system parameters.\n        The response is either a SystemShInterfaceParametersGetResponse or an ErrorResponse.\n\n        Replaced by: SystemShInterfaceParametersGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemShInterfaceParametersGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemShInterfaceParametersModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemShInterfaceParametersModifyRequest", "description": "Modifies the Sh Interface system parameters.  This request must be submitted on both nodes in the redundant Application Server cluster in order for the changes to take effect on each node without requiring a restart.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by: SystemShInterfaceParametersModifyRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemShInterfaceParametersModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPAddACLEntryRequest14": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPAddACLEntryRequest14", "description": "Add an entry to the SIP access control list.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPAddACLEntryRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeleteACLEntryRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeleteACLEntryRequest", "description": "Delete an entry from the SIP access control list.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeleteACLEntryRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest14sp1", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: SystemSIPDeviceTypeAddRequest14sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest14sp2": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest14sp2", "description": "Request to add a sip device type.\n          The response is either SuccessResponse or ErrorResponse.\n          Replaced By: SystemSIPDeviceTypeAddRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest14sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest14sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest14sp3", "description": "Request to add a sip device type.\n          The response is either SuccessResponse or ErrorResponse.\n          Replaced by: SystemSIPDeviceTypeAddRequest14sp6", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest14sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest14sp6": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest14sp6", "description": "Request to add a sip device type.\n            The response is either SuccessResponse or ErrorResponse.\n            Replaced By : SystemSIPDeviceTypeAddRequest15", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest14sp6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest15": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest15", "description": "Request to add a sip device type.\n            The response is either SuccessResponse or ErrorResponse.\n            Replaced By : SystemSIPDeviceTypeAddRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest16": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest16", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced by: SystemSIPDeviceTypeAddRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest16sp1", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: SystemSIPDeviceTypeAddRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest17": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest17", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest17sp4", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced by: SystemSIPDeviceTypeAddRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest18": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest18", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements are only used in XS data mode:\n          enable3G4GContinuity\n\n        Replaced by: SystemSIPDeviceTypeAddRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest18sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest18sp1", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in XS data mode:\n          enable3G4GContinuity, use value \"false\" in AS data mode\n        The following elements are only used in AS data mode:\n          holdAnnouncementMethod, use value \"useInactive\" in XS data mode\n        The following element values are only applicable in AS data mode:\n          holdNormalization=useRfc3264Hold will raise an error in XS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest18sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest18sp1V2": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest18sp1V2", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in XS data mode:\n          enable3G4GContinuity, use value \"false\" in AS data mode\n        The following elements are only used in AS data mode:\n          holdAnnouncementMethod, use value \"useInactive\" in XS data mode\n          supportRFC3398, use value \"false\" in XS data mode\n        The following element values are only applicable in AS data mode:\n          holdNormalization=useRfc3264Hold will raise an error in XS data mode\n    Replaced by: SystemSIPDeviceTypeAddRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest18sp1V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest19": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest19", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in XS data mode:\n          enable3G4GContinuity, use value \"false\" in AS data mode\n        The following elements are only used in AS data mode:\n          holdAnnouncementMethod, use value \"useInactive\" in XS data mode\n          supportRFC3398, use value \"false\" in XS data mode\n        The following element values are only applicable in AS data mode:\n          holdNormalization=useRfc3264Hold will raise an error in XS data mode\n        Replaced by: SystemSIPDeviceTypeAddRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest19sp1", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in XS data mode:\n          enable3G4GContinuity, use value \"false\" in AS data mode\n        The following elements are only used in AS data mode:\n          holdAnnouncementMethod, use value \"useInactive\" in XS data mode\n          supportRFC3398, use value \"false\" in XS data mode\n          bypassMediaTreatment, use value \"false\" in XS data mode\n\n        The following element values are only applicable in AS data mode:\n          holdNormalization=useRfc3264Hold will raise an error in XS data mode\n        Replaced by: SystemSIPDeviceTypeAddRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest20", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in XS data mode:\n          enable3G4GContinuity, use value \"false\" in AS data mode\n        The following elements are only used in AS data mode:\n          holdAnnouncementMethod, use value \"useInactive\" in XS data mode\n          supportRFC3398, use value \"false\" in XS data mode\n          supportClientSessionInfo, use value \"false\" in XS data mode\n          supportCallInfoConferenceSubscriptionURI, use value \"false\" in XS data mode\n          supportRemotePartyInfo, use value \"false\" in XS data mode\n        The following element values are only applicable in AS data mode:\n          holdNormalization=useRfc3264Hold will raise an error in XS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest20sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest20sp1", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements are only used in HSS data mode:\n          enable3G4GContinuity, use value \"false\" in AS data mode\n       The following logic applies to these elements:\n          macInCert\n          macInNonRequestURI\n          The two elements are mutually exclusive.\n          When both are set to true, the command fails.\n        The following elements are only used in AS data mode:\n          holdAnnouncementMethod, use value \"useInactive\" in HSS data mode\n          supportRFC3398, use value \"false\" in HSS data mode\n          supportClientSessionInfo, use value \"false\" in HSS data mode\n          supportCallInfoConferenceSubscriptionURI, use value \"false\" in HSS data mode\n          supportRemotePartyInfo, use value \"false\" in HSS data mode\n        The following element values are only applicable in AS data mode:\n          holdNormalization=useRfc3264Hold will raise an error in HSS data mode\n\n\t\tReplaced by: SystemSIPDeviceTypeAddRequest21sp1V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest20sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest21": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest21", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in XS data mode:\n          enhancedForICS, use value \"false\" in AS data mode\n          supports3G4GContinuity, use value \"false\" in AS data mode\n          publishesOwnPresence, use value \"false\" in AS data mode\n        The following elements are only used in AS data mode:\n          holdAnnouncementMethod, use value \"useInactive\" in XS data mode\n          supportRFC3398, use value \"false\" in XS data mode\n          supportClientSessionInfo, use value \"false\" in XS data mode\n          supportCallInfoConferenceSubscriptionURI, use value \"false\" in XS data mode\n          supportRemotePartyInfo, use value \"false\" in XS data mode\n          bypassMediaTreatment, use value \"false\" in XS data mode\n          supportCauseParameter, use value \"false\" in XS data mode\n        The following element values are only applicable in AS data mode:\n          holdNormalization=useRfc3264Hold will raise an error in XS data mode\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          supportCauseParameter\n        Replaced by: SystemSIPDeviceTypeAddRequest21sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest21sp1", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in XS data mode:\n          enhancedForICS, use value \"false\" in AS data mode\n          supports3G4GContinuity, use value \"false\" in AS data mode\n          publishesOwnPresence, use value \"false\" in AS data mode\n          locationNetwork, use value \"Fixed\" in AS data mode\n        The following elements are only used in AS data mode:\n          holdAnnouncementMethod, use value \"useInactive\" in XS data mode\n          supportRFC3398, use value \"false\" in XS data mode\n          supportClientSessionInfo, use value \"false\" in XS data mode\n          supportCallInfoConferenceSubscriptionURI, use value \"false\" in XS data mode\n          supportRemotePartyInfo, use value \"false\" in XS data mode\n          bypassMediaTreatment, use value \"false\" in XS data mode\n          supportCauseParameter, use value \"false\" in XS data mode\n        The following element values are only applicable in AS data mode:\n          holdNormalization=useRfc3264Hold will raise an error in XS data mode\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          supportCauseParameter\n\n        Replaced by: SystemSIPDeviceTypeAddRequest21Sp1V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest21sp1V2": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest21sp1V2", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in the XS data mode and ignored in the AS data mode:\n          enhancedForICS\n          supports3G4GContinuity\n          publishesOwnPresence, use value \"false\" in AS data mode\n          locationNetwork, use value \"Fixed\" in AS data mode\n\n        The following elements are only used in AS data mode and ignored in the XS data mode:\n          supportRFC3398, use value \"false\" in XS data mode\n          supportClientSessionInfo, use value \"false\" in XS data mode\n          supportCallInfoConferenceSubscriptionURI, use value \"false\" in XS data mode\n          supportRemotePartyInfo, use value \"false\" in XS data mode\n          bypassMediaTreatment, use value \"false\" in XS data mode\n          supportCauseParameter, use value \"false\" in XS data mode\n\n        The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:\n          Non-intelligent Device Addressing\n          Intelligent Device Addressing\n\n        The following logic applies to these elements:\n          macInCert\n          macInNonRequestURI\n          The two elements are mutually exclusive.\n          When both are set to true, the command fails.\n\n          Replaced by: SystemSIPDeviceTypeAddRequest22 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest21sp1V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest22", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,\n        the device type created is at reseller level. Device type name should be unique through out the system\n        including all the reseller level device types.\n        The following elements are only used in the XS data mode and ignored in the AS data mode:\n          enhancedForICS\n          supports3G4GContinuity\n          publishesOwnPresence, use value \"false\" in AS data mode\n          locationNetwork, use value \"Fixed\" in AS data mode\n\n        The following elements are only used in AS data mode and ignored in the XS data mode:\n          supportRFC3398, use value \"false\" in XS data mode\n          supportClientSessionInfo, use value \"false\" in XS data mode\n          supportCallInfoConferenceSubscriptionURI, use value \"false\" in XS data mode\n          supportRemotePartyInfo, use value \"false\" in XS data mode\n          bypassMediaTreatment, use value \"false\" in XS data mode\n          supportCauseParameter, use value \"false\" in XS data mode\n          resellerId\n\n        The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:\n          Non-intelligent Device Addressing\n          Intelligent Device Addressing\n\n        The following logic applies to these elements:\n          macInCert\n          macInNonRequestURI\n          The two elements are mutually exclusive.\n          When both are set to true, the command fails.\n\n        Deprecated by: SystemSIPDeviceTypeAddRequest22V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest22V10": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest22V10", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,\n        the device type created is at reseller level. Device type name should be unique through out the system\n        including all the reseller level device types.\n        The following elements are only used in the XS data mode and ignored in the AS data mode:\n          enhancedForICS, use value \"false\" in AS data mode\n          supports3G4GContinuity, use value \"false\" in AS data mode\n          publishesOwnPresence, use value \"false\" in AS data mode\n          locationNetwork, use value \"Fixed\" in AS data mode\n          allowTerminationBasedOnICSI, use value \"false\" in AS data mode\n          roamingMode, use value \"None\" in AS data mode\n\n        The following elements are only used in AS data mode and ignored in the XS data mode:\n          supportClientSessionInfo, use value \"false\" in XS data mode\n          supportCallInfoConferenceSubscriptionURI, use value \"false\" in XS data mode\n          supportRemotePartyInfo, use value \"false\" in XS data mode\n          supportVisualDeviceManagementRedirectLink, use value \"false\" in XS data mode\n          bypassMediaTreatment, use value \"false\" in XS data mode\n          supportCauseParameter, use value \"false\" in XS data mode\n          resellerId\n          supportVisualDeviceManagementAPI, use value \"false\" in XS data mode\n          deviceCategory\n          verstatInPAIHeader, use value \"false\" in XS data mode\n          verstatInFromHeader, use value \"false\" in XS data mode\n        The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:\n          SignalingAddressType=Non-intelligent Device Addressing\n          SignalingAddressType=Intelligent Device Addressing\n\n        The following logic applies to these elements:\n          macInCert\n          macInNonRequestURI\n          The two elements are mutually exclusive.\n          When both are set to true, the command fails.\n\n        Replaced by: SystemSIPDeviceTypeAddRequest23V7.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest22V10"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest22V2": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest22V2", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,\n        the device type created is at reseller level. Device type name should be unique through out the system\n        including all the reseller level device types.\n        The following elements are only used in the XS data mode and ignored in the AS data mode:\n          enhancedForICS\n          supports3G4GContinuity\n          publishesOwnPresence, use value \"false\" in AS data mode\n          locationNetwork, use value \"Fixed\" in AS data mode\n          allowTerminationBasedOnICSI, use value \"false\" in AS data mode\n          roamingMode, use value \"None\" in AS data mode\n\n        The following elements are only used in AS data mode and ignored in the XS data mode:\n          supportRFC3398, use value \"false\" in XS data mode\n          supportClientSessionInfo, use value \"false\" in XS data mode\n          supportCallInfoConferenceSubscriptionURI, use value \"false\" in XS data mode\n          supportRemotePartyInfo, use value \"false\" in XS data mode\n          bypassMediaTreatment, use value \"false\" in XS data mode\n          supportCauseParameter, use value \"false\" in XS data mode\n          resellerId\n\n        The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:\n          Non-intelligent Device Addressing\n          Intelligent Device Addressing\n\n        The following logic applies to these elements:\n          macInCert\n          macInNonRequestURI\n          The two elements are mutually exclusive.\n          When both are set to true, the command fails.\n\n        Deprecated by SystemSIPDeviceTypeAddRequest22V3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest22V3": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest22V3", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,\n        the device type created is at reseller level. Device type name should be unique through out the system\n        including all the reseller level device types.\n        The following elements are only used in the XS data mode and ignored in the AS data mode:\n          enhancedForICS, use value \"false\" in AS data mode\n          supports3G4GContinuity, use value \"false\" in AS data mode\n          publishesOwnPresence, use value \"false\" in AS data mode\n          locationNetwork, use value \"Fixed\" in AS data mode\n          allowTerminationBasedOnICSI, use value \"false\" in AS data mode\n          roamingMode, use value \"None\" in AS data mode\n\n        The following elements are only used in AS data mode and ignored in the XS data mode:\n          supportClientSessionInfo, use value \"false\" in XS data mode\n          supportCallInfoConferenceSubscriptionURI, use value \"false\" in XS data mode\n          supportRemotePartyInfo, use value \"false\" in XS data mode\n          supportVisualDeviceManagement, use value \"false\" in XS data mode\n          bypassMediaTreatment, use value \"false\" in XS data mode\n          supportCauseParameter, use value \"false\" in XS data mode\n          resellerId\n\n        The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:\n          SignalingAddressType=Non-intelligent Device Addressing\n          SignalingAddressType=Intelligent Device Addressing\n\n        The following logic applies to these elements:\n          macInCert\n          macInNonRequestURI\n          The two elements are mutually exclusive.\n          When both are set to true, the command fails.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest22V3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest22V5": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest22V5", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,\n        the device type created is at reseller level. Device type name should be unique through out the system\n        including all the reseller level device types.\n        The following elements are only used in the XS data mode and ignored in the AS data mode:\n          enhancedForICS, use value \"false\" in AS data mode\n          supports3G4GContinuity, use value \"false\" in AS data mode\n          publishesOwnPresence, use value \"false\" in AS data mode\n          locationNetwork, use value \"Fixed\" in AS data mode\n          allowTerminationBasedOnICSI, use value \"false\" in AS data mode\n          roamingMode, use value \"None\" in AS data mode\n\n        The following elements are only used in AS data mode and ignored in the XS data mode:\n          supportClientSessionInfo, use value \"false\" in XS data mode\n          supportCallInfoConferenceSubscriptionURI, use value \"false\" in XS data mode\n          supportRemotePartyInfo, use value \"false\" in XS data mode\n          supportVisualDeviceManagement, use value \"false\" in XS data mode\n          bypassMediaTreatment, use value \"false\" in XS data mode\n          supportCauseParameter, use value \"false\" in XS data mode\n          resellerId\n\n        The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:\n          SignalingAddressType=Non-intelligent Device Addressing\n          SignalingAddressType=Intelligent Device Addressing\n\n        The following logic applies to these elements:\n          macInCert\n          macInNonRequestURI\n          The two elements are mutually exclusive.\n          When both are set to true, the command fails.\n\n        Deprecated by: SystemSIPDeviceTypeAddRequest23V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest22V5"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest23": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest23", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,\n        the device type created is at reseller level. Device type name should be unique through out the system\n        including all the reseller level device types.\n        The following elements are only used in the XS data mode and ignored in the AS data mode:\n          enhancedForICS, use value \"false\" in AS data mode\n          supports3G4GContinuity, use value \"false\" in AS data mode\n          publishesOwnPresence, use value \"false\" in AS data mode\n          locationNetwork, use value \"Fixed\" in AS data mode\n          allowTerminationBasedOnICSI, use value \"false\" in AS data mode\n          roamingMode, use value \"None\" in AS data mode\n\n        The following elements are only used in AS data mode and ignored in the XS data mode:\n          supportClientSessionInfo, use value \"false\" in XS data mode\n          supportCallInfoConferenceSubscriptionURI, use value \"false\" in XS data mode\n          supportRemotePartyInfo, use value \"false\" in XS data mode\n          supportVisualDeviceManagement, use value \"false\" in XS data mode\n          bypassMediaTreatment, use value \"false\" in XS data mode\n          supportCauseParameter, use value \"false\" in XS data mode\n          supportCallingPartyCategoryInOutboundFromHeader, use value \"true\" in XS data mode\n          resellerId\n\n        The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:\n          SignalingAddressType=Non-intelligent Device Addressing\n          SignalingAddressType=Intelligent Device Addressing\n\n        The following logic applies to these elements:\n          macInCert\n          macInNonRequestURI\n          The two elements are mutually exclusive.\n          When both are set to true, the command fails.\n\n         Deprecated by: SystemSIPDeviceTypeAddRequest23V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest23"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeAddRequest23V2": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeAddRequest23V2", "description": "Request to add a sip device type.\n        The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,\n        the device type created is at reseller level. Device type name should be unique through out the system\n        including all the reseller level device types.\n        The following elements are only used in the XS data mode and ignored in the AS data mode:\n          enhancedForICS, use value \"false\" in AS data mode\n          supports3G4GContinuity, use value \"false\" in AS data mode\n          publishesOwnPresence, use value \"false\" in AS data mode\n          locationNetwork, use value \"Fixed\" in AS data mode\n          allowTerminationBasedOnICSI, use value \"false\" in AS data mode\n          roamingMode, use value \"None\" in AS data mode\n\n        The following elements are only used in AS data mode and ignored in the XS data mode:\n          supportClientSessionInfo, use value \"false\" in XS data mode\n          supportCallInfoConferenceSubscriptionURI, use value \"false\" in XS data mode\n          supportRemotePartyInfo, use value \"false\" in XS data mode\n          supportVisualDeviceManagement, use value \"false\" in XS data mode\n          bypassMediaTreatment, use value \"false\" in XS data mode\n          supportCauseParameter, use value \"false\" in XS data mode\n          supportCallingPartyCategoryInOutboundFromHeader, use value \"true\" in XS data mode\n          resellerId\n\n        The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:\n          SignalingAddressType=Non-intelligent Device Addressing\n          SignalingAddressType=Intelligent Device Addressing\n\n        The following logic applies to these elements:\n          macInCert\n          macInNonRequestURI\n          The two elements are mutually exclusive.\n          When both are set to true, the command fails.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeAddRequest23V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileAddRequest", "description": "Request to add a sip device type file.\n            The response is either SuccessResponse or ErrorResponse.\n            Replaced By: SystemSIPDeviceTypeFileAddRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileAddRequest14sp8": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileAddRequest14sp8", "description": "Request to add a sip device type file.\n          The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileAddRequest14sp8"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileAddRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileAddRequest16sp1", "description": "Replaced by: SystemSIPDeviceTypeFileAddRequest18.\n          Request to add a sip device type file.\n          The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileAddRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileAddRequest18": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileAddRequest18", "description": "Request to add a sip device type file.\n          The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileAddRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileAddRequest19": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileAddRequest19", "description": "Request to add a sip device type file.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: SystemSIPDeviceTypeFileAddRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileAddRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileAddRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileAddRequest20", "description": "Request to add a sip device type file.\n        The response is either SuccessResponse or ErrorResponse.\n\n        Replaced by: SystemSIPDeviceTypeFileAddRequest20Sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileAddRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileDeleteRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileDeleteRequest", "description": "Request to delete a sip device type file.\n            The response is either SuccessResponse or ErrorResponse.\n            Replaced By: SystemSIPDeviceTypeFileDeleteRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileGetListRequest", "description": "Request to get the list of device files managed by the Device Management System, on a per-device type basis.\n          The response is either SystemSIPDeviceTypeFileGetListResponse or ErrorResponse.\n          Replaced By: SystemSIPDeviceTypeFileGetListRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileGetRequest", "description": "Request to get a sip device type file.\n            The response is either SystemSIPDeviceTypeFileGetResponse or ErrorResponse.\n            Replaced By: SystemSIPDeviceTypeFileGetRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileGetRequest14sp8": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileGetRequest14sp8", "description": "Request to get a sip device type file.\n          The response is either SystemSIPDeviceTypeFileGetResponse14sp8 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileGetRequest14sp8"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileGetRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileGetRequest16sp1", "description": "Replaced by: SystemSIPDeviceTypeFileGetRequest18.\n          Request to get a sip device type file.\n          The response is either SystemSIPDeviceTypeFileGetResponse16sp1 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileGetRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileGetRequest18": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileGetRequest18", "description": "Request to get a sip device type file.\n          The response is either SystemSIPDeviceTypeFileGetResponse18 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileGetRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileGetRequest19": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileGetRequest19", "description": "Request to get a sip device type file.\n          The response is either SystemSIPDeviceTypeFileGetResponse19 or ErrorResponse.\n\n          Replaced by: SystemSIPDeviceTypeFileGetRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileGetRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileGetRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileGetRequest20", "description": "Request to get a sip device type file.\n          The response is either SystemSIPDeviceTypeFileGetResponse20 or ErrorResponse.\n\n          Replaced by: SystemSIPDeviceTypeFileGetRequest20Sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileGetRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileModifyRequest", "description": "Request to modify a sip device type file.\n            The response is either SuccessResponse or ErrorResponse.\n            Replaced By: SystemSIPDeviceTypeFileModifyRequest14sp8", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeFileModifyRequest14sp8": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeFileModifyRequest14sp8", "description": "Request to modify a sip device type file.\n          The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeFileModifyRequest14sp8"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest14sp1", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse14sp1 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest14sp2": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest14sp2", "description": "Request to get a sip device type.\n          See Also: SystemDeviceTypeGetRequest\n          The response is either SystemSIPDeviceTypeGetResponse14sp2 or ErrorResponse.\n          Replaced By: SystemSIPDeviceTypeGetRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest14sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest14sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest14sp3", "description": "Request to get a sip device type.\n          See Also: SystemDeviceTypeGetRequest\n          The response is either SystemSIPDeviceTypeGetResponse14sp3 or ErrorResponse.\n          Replaced by: SystemSIPDeviceTypeGetRequest14sp6", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest14sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest14sp6": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest14sp6", "description": "Request to get a sip device type.\n          See Also: SystemDeviceTypeGetRequest\n          The response is either SystemSIPDeviceTypeGetResponse14sp6 or ErrorResponse.\n          Replaced By : SystemSIPDeviceTypeGetRequest15", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest14sp6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest15": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest15", "description": "Request to get a sip device type.\n            See Also: SystemDeviceTypeGetRequest\n            The response is either SystemSIPDeviceTypeGetResponse15 or ErrorResponse.\n            Replaced By : SystemSIPDeviceTypeGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest16", "description": "Request to get a sip device type.\n          See Also: SystemDeviceTypeGetRequest\n          The response is either SystemSIPDeviceTypeGetResponse16 or ErrorResponse.\n          Replaced by: SystemSIPDeviceTypeGetRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest16sp1", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse16sp1 or ErrorResponse.\n\n        Replaced by:  SystemSIPDeviceTypeGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest17": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest17", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse17 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest17sp4", "description": "Replaced by: SystemSIPDeviceTypeGetRequest18.\n        Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse17sp4 or ErrorResponse.\n        Replaced by: SystemSIPDeviceTypeGetRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest18": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest18", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse18 or ErrorResponse.\n\n        Replaced by: SystemSIPDeviceTypeGetRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest18sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest18sp1", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse18sp1 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest18sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest18sp1V2": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest18sp1V2", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse19 or ErrorResponse.\n\n    Replaced by: SystemSIPDeviceTypeGetRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest18sp1V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest19": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest19", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse19 or ErrorResponse.\n        Replaced by: SystemSIPDeviceTypeGetRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest19sp1", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse19sp1 or ErrorResponse.\n\n        Replaced by: SystemSIPDeviceTypeGetRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest20", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse20 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest20sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest20sp1", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse20 or ErrorResponse.\n\t\tReplaced by: SystemSIPDeviceTypeGetRequest21sp1V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest20sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest21": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest21", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse21 or ErrorResponse.\n\n        Replaced by: SystemSIPDeviceTypeGetRequest21Sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest21sp1", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse21sp1 or ErrorResponse.\n\n        Replaced by: SystemSIPDeviceTypeGetRequest21sp1V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest21sp1V2": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest21sp1V2", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse21sp1V2 or ErrorResponse.\n\n        Replaced by: SystemSIPDeviceTypeGetRequest22 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest21sp1V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest22", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse22 or ErrorResponse.\n\n        Deprecated by: SystemSIPDeviceTypeGetRequest22V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest22V13": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest22V13", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse22V13 or ErrorResponse.\n\n        Replaced by: SystemSIPDeviceTypeGetRequest23V9", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest22V13"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest22V2": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest22V2", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse22V2 or ErrorResponse.\n\n        Deprecated by SystemSIPDeviceTypeGetRequest22V3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest22V3": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest22V3", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse22V3 or ErrorResponse.\n\n        Deprecated by SystemSIPDeviceTypeGetRequest22V4.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest22V3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest22V4": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest22V4", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse22V4 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest22V4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest22V5": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest22V5", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse22V5 or ErrorResponse.\n\n        Replaced by: SystemDeviceTypeGetRequest22V13 in XS data mode.\n        Replaced by: SystemDeviceTypeGetRequest22V6 in AS data mode.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest22V5"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest22V6": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest22V6", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse22V6 or ErrorResponse.\n\n        Replaced By: SystemSIPDeviceTypeGetRequest23V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest22V6"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest22V7": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest22V7", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse22V7 or ErrorResponse.\n\n        Replaced By: SystemSIPDeviceTypeGetRequest23V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest22V7"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest22V8": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest22V8", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse22V8 or ErrorResponse.\n\n        Replaced By: SystemSIPDeviceTypeGetRequest23V4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest22V8"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeGetRequest23": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeGetRequest23", "description": "Request to get a sip device type.\n        See Also: SystemDeviceTypeGetRequest\n        The response is either SystemSIPDeviceTypeGetResponse23 or ErrorResponse.\n\n        Replaced By: SystemSIPDeviceTypeGetRequest23V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeGetRequest23"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeModifyRequest", "description": "Request to modify a sip device type.\n        The following elements are not changeable:\n          numberOfPorts\n          SignalingAddressType\n          isConferenceDevice\n          isMusicOnHoldDevice\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeModifyRequest14sp2": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeModifyRequest14sp2", "description": "Request to modify a sip device type.\n        The following elements are not changeable:\n          numberOfPorts\n          SignalingAddressType\n          isConferenceDevice\n          isMusicOnHoldDevice\n          isMobilityManagerDevice\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By : SystemSIPDeviceTypeModifyRequest15", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeModifyRequest14sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeModifyRequest15": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeModifyRequest15", "description": "Request to modify a sip device type.\n            The following elements are not changeable:\n            numberOfPorts\n            SignalingAddressType\n            isConferenceDevice\n            isMusicOnHoldDevice\n            isMobilityManagerDevice\n            The response is either SuccessResponse or ErrorResponse.\n            Replaced By : SystemSIPDeviceTypeModifyRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeModifyRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeModifyRequest16": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeModifyRequest16", "description": "Request to modify a sip device type.\n        The following elements are not changeable:\n          numberOfPorts\n          SignalingAddressType\n          isConferenceDevice\n          isMusicOnHoldDevice\n          isMobilityManagerDevice\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced by: SystemSIPDeviceTypeModifyRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeModifyRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeModifyRequest16sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeModifyRequest16sp1", "description": "Request to modify a sip device type.\n        The following elements are not changeable:\n          numberOfPorts\n          SignalingAddressType\n          isConferenceDevice\n          isMusicOnHoldDevice\n          isMobilityManagerDevice\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeModifyRequest16sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeModifyRequest17": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeModifyRequest17", "description": "Request to modify a sip device type.\n        The following elements are not changeable:\n          numberOfPorts\n          SignalingAddressType\n          isConferenceDevice\n          isMusicOnHoldDevice\n          isMobilityManagerDevice\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements are only used in XS data mode:\n          enable3G4GContinuity\n\n        Replaced by: SystemSIPDeviceTypeModifyRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeModifyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeModifyRequest18sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeModifyRequest18sp1", "description": "Request to modify a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are not changeable:\n          numberOfPorts\n          SignalingAddressType\n          isConferenceDevice\n          isMusicOnHoldDevice\n          isMobilityManagerDevice\n          deviceTypeConfigurationOption\n          staticLineOrdering\n        The following elements are only used in XS data mode:\n          enable3G4GContinuity\n          allowTerminationBasedOnICSI\n        The following elements are only used in AS data mode:\n          holdAnnouncementMethod\n          supportRFC3398\n          supportClientSessionInfo\n          supportCallInfoConferenceSubscriptionURI\n          supportRemotePartyInfo\n        The following element values are only applicable in AS data mode:\n          holdNormalization=useRfc3264Hold will raise an error in XS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeModifyRequest18sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeModifyRequest21": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeModifyRequest21", "description": "Request to modify a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are not changeable:\n          numberOfPorts\n          SignalingAddressType\n          isConferenceDevice\n          isMusicOnHoldDevice\n          isMobilityManagerDevice\n          deviceTypeConfigurationOption\n          staticLineOrdering\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          holdAnnouncementMethod\n          supportRFC3398\n          supportClientSessionInfo\n          supportCallInfoConferenceSubscriptionURI\n          supportRemotePartyInfo\n          supportVisualDeviceManagement\n          bypassMediaTreatment\n          supportCauseParameter\n        The following elements are only used in XS data mode and ignored in AS mode:\n          enhancedForICS\n          supports3G4GContinuity\n          publishesOwnPresence\n          locationNetwork\n          roamingMode\n\n        The following logic applies to these elements:\n          macInCert\n          macInNonRequestURI\n          The two elements are mutually exclusive.\n          When both are set to true, the command fails.\n          When macInCert is set to true, macInNonRequestURI will be reset to false.\n          When macInNonRequestURI is set to true, macInCert will be reset to false.\n        Replaced by: SystemSIPDeviceTypeModifyRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeModifyRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPDeviceTypeModifyRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPDeviceTypeModifyRequest22", "description": "Request to modify a sip device type.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are not changeable:\n          numberOfPorts\n          SignalingAddressType\n          isConferenceDevice\n          isMusicOnHoldDevice\n          isMobilityManagerDevice\n          deviceTypeConfigurationOption\n          staticLineOrdering\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          supportClientSessionInfo\n          supportCallInfoConferenceSubscriptionURI\n          supportRemotePartyInfo\n          supportVisualDeviceManagement\n          bypassMediaTreatment\n          supportCauseParameter\n        The following elements are only used in XS data mode and ignored in AS mode:\n          enhancedForICS\n          supports3G4GContinuity\n          publishesOwnPresence\n          locationNetwork\n          allowTerminationBasedOnICSI\n          roamingMode\n        The following logic applies to these elements:\n          macInCert\n          macInNonRequestURI\n          The two elements are mutually exclusive.\n          When both are set to true, the command fails.\n          When macInCert is set to true, macInNonRequestURI will be reset to false.\n          When macInNonRequestURI is set to true, macInCert will be reset to false.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPDeviceTypeModifyRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSIPModifyACLEntryRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSIPModifyACLEntryRequest", "description": "Modify an entry from the SIP access control list.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSIPModifyACLEntryRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSMDIAddACLEntryRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSMDIAddACLEntryRequest", "description": "Add an entry to the SMDI access control list.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSMDIAddACLEntryRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSMDIDeleteACLEntryRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSMDIDeleteACLEntryRequest", "description": "Delete an entry from the SMDI access control list.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSMDIDeleteACLEntryRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSMDIModifyACLEntryRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSMDIModifyACLEntryRequest", "description": "Modify an entry from the SMDI access control list.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSMDIModifyACLEntryRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSMPPGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSMPPGetRequest", "description": "Request the system level data associated with SMPP external interface.\n        The response is either a SystemSMPPGetResponse or an ErrorResponse.\n        Replaced By: SystemSMPPGetRequest14sp5", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSMPPGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSpeedDial100GetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSpeedDial100GetRequest", "description": "Get the speed dial 100 system-wide default setting.\n        The response is either a SystemSpeedDial100GetResponse or an ErrorResponse.\n\n        Replaced by: SystemSpeedDial100GetRequest17sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSpeedDial100GetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSubscriberGetCallProcessingParametersRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSubscriberGetCallProcessingParametersRequest", "description": "Get the system call processing configuration for all subscribers\n        The response is either a SystemSubscriberGetCallProcessingParametersResponse or an ErrorResponse.\n        Replaced By: SystemSubscriberGetCallProcessingParametersRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSubscriberGetCallProcessingParametersRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSubscriberGetCallProcessingParametersRequest14sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemSubscriberGetCallProcessingParametersRequest14sp3", "description": "Get the system call processing configuration for all subscribers\n        The response is either a SystemSubscriberGetCallProcessingParametersResponse14sp3 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSubscriberGetCallProcessingParametersRequest14sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSubscriberGetCallProcessingParametersRequest14sp7": {"post": {"tags": ["Deprecated"], "summary": "SystemSubscriberGetCallProcessingParametersRequest14sp7", "description": "Get the system call processing configuration for all subscribers\n            The response is either a SystemSubscriberGetCallProcessingParametersResponse14sp7 or an ErrorResponse.\n            Replaced By : SystemSubscriberGetCallProcessingParametersRequest15sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSubscriberGetCallProcessingParametersRequest14sp7"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSubscriberGetCallProcessingParametersRequest15": {"post": {"tags": ["Deprecated"], "summary": "SystemSubscriberGetCallProcessingParametersRequest15", "description": "Get the system call processing configuration for all subscribers\n            The response is either a SystemSubscriberGetCallProcessingParametersResponse15 or an ErrorResponse.\n            Replaced By: SystemSubscriberGetCallProcessingParametersRequest15sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSubscriberGetCallProcessingParametersRequest15"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSubscriberGetCallProcessingParametersRequest15sp2": {"post": {"tags": ["Deprecated"], "summary": "SystemSubscriberGetCallProcessingParametersRequest15sp2", "description": "Get the system call processing configuration for all subscribers\n        The response is either a SystemSubscriberGetCallProcessingParametersResponse15sp2 or an ErrorResponse.\n        Replaced by: SystemSubscriberGetCallProcessingParametersRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSubscriberGetCallProcessingParametersRequest15sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSubscriberGetCallProcessingParametersRequest17": {"post": {"tags": ["Deprecated"], "summary": "SystemSubscriberGetCallProcessingParametersRequest17", "description": "Get the system call processing configuration for all subscribers\n        The response is either a SystemSubscriberGetCallProcessingParametersResponse17\n        or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSubscriberGetCallProcessingParametersRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSubscriberGetCallProcessingParametersRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "SystemSubscriberGetCallProcessingParametersRequest17sp3", "description": "Get the system call processing configuration for all subscribers\n        The response is either a SystemSubscriberGetCallProcessingParametersResponse17sp3\n        or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSubscriberGetCallProcessingParametersRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSubscriberGetCallProcessingParametersRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "SystemSubscriberGetCallProcessingParametersRequest17sp4", "description": "Get the system call processing configuration for all subscribers\n        The response is either a SystemSubscriberGetCallProcessingParametersResponse17sp4\n        or an ErrorResponse.\n\n        Replaced by SystemSubscriberGetCallProcessingParametersRequest18sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSubscriberGetCallProcessingParametersRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSubscriberGetProvisioningParametersRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSubscriberGetProvisioningParametersRequest", "description": "Get the system provisioning configuration for all subscribers\n        The response is either a SystemSubscriberGetProvisioningParametersResponse\n        or an ErrorResponse.\n\n        Replaced by: SystemSubscriberGetProvisioningParametersRequest24", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSubscriberGetProvisioningParametersRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSubscriberModifyCallProcessingParametersRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSubscriberModifyCallProcessingParametersRequest", "description": "Modify the system call processing configuration for all subscribers.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following elements are only used in AS data mode and ignored in the XS data mode:\n          userCallingLineIdSelection\n          isExtendedCallingLineIdActive\n          isRingTimeOutActive\n          ringTimeoutSeconds\n          allowEmergencyRemoteOfficeOriginations\n        Replaced By: SystemSubscriberModifyCallProcessingParametersRequest14sp7", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSubscriberModifyCallProcessingParametersRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSystemVoicePortalAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSystemVoicePortalAddRequest", "description": "Request to add a system voice portal instance.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in IMS mode:\n        publicUserIdentity, ignored in standalone mode if provided.\n\n        Replaced by: SystemSystemVoicePortalAddRequest21sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSystemVoicePortalAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSystemVoicePortalGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemSystemVoicePortalGetRequest", "description": "Request to get a system voice portal instance.\n        The response is either SystemSystemVoicePortalGetResponse or ErrorResponse.\n\n        Replaced by: SystemSystemVoicePortalGetRequest21sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSystemVoicePortalGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemSystemVoicePortalGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemSystemVoicePortalGetRequest21sp1", "description": "Request to get a system voice portal instance.\n        The response is either SystemSystemVoicePortalGetResponse21sp1 or ErrorResponse.\n\n        Replaced by: SystemSystemVoicePortalGetRequest23.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemSystemVoicePortalGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemThirdPartyEmergencyCallingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemThirdPartyEmergencyCallingGetRequest", "description": "Get the third-party emergency call service settings for the system.\n        The response is either a SystemThirdPartyEmergencyCallingGetResponse or an ErrorResponse.\n\n        Replaced by: SystemThirdPartyEmergencyCallingGetRequest24", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemThirdPartyEmergencyCallingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemThirdPartyIMPGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemThirdPartyIMPGetRequest", "description": "Get the system Third-Party IMP service attributes.\n        The response is either SystemThirdPartyIMPGetResponse or ErrorResponse.\n\n        Replaced by SystemThirdPartyIMPGetRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemThirdPartyIMPGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemThirdPartyVoiceMailSupportGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemThirdPartyVoiceMailSupportGetRequest", "description": "Request the system level data associated with Third-party Voice Mail Support.\n        The response is either a SystemThirdPartyVoiceMailSupportGetResponse or an\n        ErrorResponse.\n\n        Replaced by: SystemThirdPartyVoiceMailSupportGetRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemThirdPartyVoiceMailSupportGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemTimeScheduleAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemTimeScheduleAddRequest", "description": "Add a system time schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemTimeScheduleAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemTimeScheduleDeleteRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemTimeScheduleDeleteRequest", "description": "Delete a system time schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemTimeScheduleDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemTimeScheduleGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemTimeScheduleGetListRequest", "description": "Request a list of all system time schedules.\n        The response is either a SystemTimeScheduleGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemTimeScheduleGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemTimeScheduleGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemTimeScheduleGetRequest", "description": "Request to get a system time schedule.\n        The response is either a SystemTimeScheduleGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemTimeScheduleGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemTimeScheduleModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemTimeScheduleModifyRequest", "description": "Modify a specified system time schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemTimeScheduleModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemTreatmentMappingCallBlockingServiceGetListRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemTreatmentMappingCallBlockingServiceGetListRequest19sp1", "description": "Requests a table of all the existing Call Blocking Service Mappings in the system.\n        The response is either a SystemTreatmentMappingCallBlockingServicesGetListResponse19sp1\n        or an ErrorResponse.\n\n        Replaced by: SystemTreatmentMappingCallBlockingServiceGetListRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemTreatmentMappingCallBlockingServiceGetListRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemTrunkGroupGetRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemTrunkGroupGetRequest", "description": "Request the system level data associated with the Trunk Group service.\n        The response is either SystemTrunkGroupGetResponse or ErrorResponse.\n\n        Replaced by: SystemTrunkGroupGetRequest19sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemTrunkGroupGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemTrunkGroupGetRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemTrunkGroupGetRequest19sp1", "description": "Request the system level data associated with the Trunk Group service.\n        The response is either SystemTrunkGroupGetResponse19sp1 or ErrorResponse.\n        Replaced by: SystemTrunkGroupGetRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemTrunkGroupGetRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemTrunkGroupGetRequest21": {"post": {"tags": ["Deprecated"], "summary": "SystemTrunkGroupGetRequest21", "description": "Request the system level data associated with the Trunk Group service.\n        The response is either SystemTrunkGroupGetResponse21 or ErrorResponse.\n\n        Replaced by: SystemTrunkGroupGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemTrunkGroupGetRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemTrunkGroupGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "SystemTrunkGroupGetRequest22", "description": "Request the system level data associated with the Trunk Group service.\n        The response is either SystemTrunkGroupGetResponse22 or ErrorResponse.\n\n        Replaced by: SystemTrunkGroupGetRequest23", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemTrunkGroupGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemTrunkGroupGetRequest23": {"post": {"tags": ["Deprecated"], "summary": "SystemTrunkGroupGetRequest23", "description": "Request the system level data associated with the Trunk Group service.\n        The response is either SystemTrunkGroupGetResponse23 or ErrorResponse.\n\n        Replaced by: SystemTrunkGroupGetRequest24", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemTrunkGroupGetRequest23"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemTrunkGroupUserCreationTaskGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemTrunkGroupUserCreationTaskGetListRequest", "description": "Get the list of user creation tasks in the system.\n        The response is either SystemTrunkGroupUserCreationTaskGetListResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemTrunkGroupUserCreationTaskGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupGetPasscodeRulesRequest14": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupGetPasscodeRulesRequest14", "description": "Requests the system voice portal passcode rules setting.\n        The response is either SystemVoiceMessagingGroupGetPasscodeRulesResponse14 or ErrorResponse.\n        Replaced By: SystemPortalPasscodeRulesGetRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupGetPasscodeRulesRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupGetRequest14": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupGetRequest14", "description": "Request the system level data associated with Voice Messaging.\n        The response is either a SystemVoiceMessagingGroupGetResponse14 or an\n        ErrorResponse.\n\n        Replaced by: SystemVoiceMessagingGroupGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupGetRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupGetRequest16", "description": "Request the system level data associated with Voice Messaging.\n        The response is either a SystemVoiceMessagingGroupGetResponse16 or an\n        ErrorResponse.\n\n        Replaced by: SystemVoiceMessagingGroupGetRequest16sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupGetRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupGetRequest20", "description": "Request the system level data associated with Voice Messaging.\n        The response is either a SystemVoiceMessagingGroupGetResponse20 or an ErrorResponse.\n        Replaced by: SystemVoiceMessagingGroupGetRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupGetRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupGetVoicePortalMenusRequest14": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupGetVoicePortalMenusRequest14", "description": "Requests the system voice portal Menus setting.\n        The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse14 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupGetVoicePortalMenusRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupGetVoicePortalMenusRequest18": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupGetVoicePortalMenusRequest18", "description": "Requests the system voice portal Menus setting.\n        The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse18 or ErrorResponse.\n\n        Replaced by SystemVoiceMessagingGroupGetVoicePortalMenusRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupGetVoicePortalMenusRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupGetVoicePortalMenusRequest18sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupGetVoicePortalMenusRequest18sp1", "description": "Requests the system voice portal Menus setting.\n        The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse18sp1 or ErrorResponse.\n\n        Replaced by SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupGetVoicePortalMenusRequest18sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupGetVoicePortalMenusRequest19": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupGetVoicePortalMenusRequest19", "description": "Requests the system voice portal Menus setting.\n        The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse19 or ErrorResponse.\n\n        Replaced by: SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupGetVoicePortalMenusRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1", "description": "Requests the system voice portal Menus setting.\n        The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse19sp1 or ErrorResponse.\n\n        Replaced by SystemVoiceMessagingGroupGetVoicePortalMenusRequest20", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupGetVoicePortalMenusRequest20": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupGetVoicePortalMenusRequest20", "description": "Requests the system voice portal Menus setting.\n        The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse20 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupGetVoicePortalMenusRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupModifyPasscodeRulesRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupModifyPasscodeRulesRequest", "description": "Request to modify the system voice portal passcode rules setting.\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced By: SystemPortalPasscodeRulesModifyRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupModifyPasscodeRulesRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupModifyRequest", "description": "Modify the system level data associated with Voice Messaging.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemVoiceMessagingGroupModifyVoicePortalMenusRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemVoiceMessagingGroupModifyVoicePortalMenusRequest", "description": "Request to modify the system voice portal menus setting.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemVoiceMessagingGroupModifyVoicePortalMenusRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemZoneCallingRestrictionsNetAddressAddListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemZoneCallingRestrictionsNetAddressAddListRequest", "description": "Adds a list of IP addresses to a zone\n        The response is SuccessResponse or an ErrorResponse.\n        Replaced by: SystemZoneNetAddressAddListRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemZoneCallingRestrictionsNetAddressAddListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemZoneCallingRestrictionsNetAddressDeleteListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemZoneCallingRestrictionsNetAddressDeleteListRequest", "description": "Deletes a list of IP addresses from a zone\n        The response is SuccessResponse or an ErrorResponse.\n        Replaced by: SystemZoneNetAddressDeleteListRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemZoneCallingRestrictionsNetAddressDeleteListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemZoneCallingRestrictionsNetAddressGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemZoneCallingRestrictionsNetAddressGetListRequest", "description": "Gets a list of IP Addresses and/or Ranges assigned to a zone\n  Response is SystemZoneCallingRestrictionsNetAddressGetListResponse.\n        Replaced by: SystemZoneNetAddressGetListRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemZoneCallingRestrictionsNetAddressGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemZoneCallingRestrictionsZoneAddRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemZoneCallingRestrictionsZoneAddRequest", "description": "Add a zone.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by: SystemZoneAddRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemZoneCallingRestrictionsZoneAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemZoneCallingRestrictionsZoneDeleteRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemZoneCallingRestrictionsZoneDeleteRequest", "description": "Deletes a zone from the system\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by: SystemZoneDeleteRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemZoneCallingRestrictionsZoneDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemZoneCallingRestrictionsZoneGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemZoneCallingRestrictionsZoneGetListRequest", "description": "Gets a list of all zones defined in the system\n        The response is SystemZoneCallingRestrictionsZoneGetListResponse or an ErrorResponse.\n        Replaced by: SystemZoneGetListRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemZoneCallingRestrictionsZoneGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/SystemZoneCallingRestrictionsZoneModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "SystemZoneCallingRestrictionsZoneModifyRequest", "description": "Modifies attributes of a zone in the system.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by: SystemZonePhysicalLocationAddListRequest and\n        SystemZonePhysicalLocationDeleteListRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SystemZoneCallingRestrictionsZoneModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserAddRequest14": {"post": {"tags": ["Deprecated"], "summary": "UserAddRequest14", "description": "Request to add a user.\n        The domain is required in the userId.\n        The password is not required if external authentication is enabled.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAddRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserAddRequest14sp9": {"post": {"tags": ["Deprecated"], "summary": "UserAddRequest14sp9", "description": "Replaced by: UserAddRequest17sp4\n\n        Request to add a user.\n        The domain is required in the userId.\n        The password is not required if external authentication is enabled.\n        The officeZoneName and primaryZoneName elements are ignored and provided here for backwards compatibility only.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAddRequest14sp9"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserAddRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "UserAddRequest17sp4", "description": "Request to add a user.\n        The domain is required in the userId.\n        The password is not required if external authentication is enabled.\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          nameDialingName\n          alternateUserId\n\n        The response is either SuccessResponse or ErrorResponse.\n        Replaced by: UserAddRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAddRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserAlternateNumbersGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserAlternateNumbersGetRequest", "description": "Request the user level data associated with Alternate Numbers.\n        The response is either a UserAlternateNumbersGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAlternateNumbersGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserAnnouncementFileGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserAnnouncementFileGetRequest", "description": "Request to get the announcement repository file information.\n        The response is either UserAnnouncementFileGetResponse or ErrorResponse.\n\n        Replaced by: UserAnnouncementFileGetRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserAnnouncementFileGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBasicCallLogsGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "UserBasicCallLogsGetListRequest", "description": "Request user's call logs.\n        If the callLogType is not specified, all types of calls are returned.\n        The response is either a UserBasicCallLogsGetListResponse or an ErrorResponse.\n        Replaced By: UserBasicCallLogsGetListRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBasicCallLogsGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksAnywhereAddSelectiveCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksAnywhereAddSelectiveCriteriaRequest", "description": "Add a criteria to the user's BroadWorks Anywhere phone number.\n            The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksAnywhereAddSelectiveCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksAnywhereGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksAnywhereGetRequest", "description": "Get the list of all the BroadWorks Anywhere phone numbers for the user.\n        The response is either a UserBroadWorksAnywhereGetResponse or an ErrorResponse.\n        Replaced by: UserBroadWorksAnywhereGetRequest16sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksAnywhereGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksAnywhereGetSelectiveCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksAnywhereGetSelectiveCriteriaRequest", "description": "Get a criteria for the user's BroadWorks Anywhere phone number.\n         The response is either a UserBroadWorksAnywhereGetSelectiveCriteriaResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksAnywhereGetSelectiveCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadworksMobilityAddMobileIdentityUsingSharedCallAppearanceRequest": {"post": {"tags": ["Deprecated"], "summary": "UserBroadworksMobilityAddMobileIdentityUsingSharedCallAppearanceRequest", "description": "Adding a new mobile identity using the Share Call Appearance.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadworksMobilityAddMobileIdentityUsingSharedCallAppearanceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksMobilityGetRequest21": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksMobilityGetRequest21", "description": "Get the user's BroadWorks Mobility service settings.\n        The response is either a UserBroadWorksMobilityGetResponse21 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksMobilityGetRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksMobilityMobileIdentityAddRequest": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksMobilityMobileIdentityAddRequest", "description": "Add a mobile identity to the user's list of mobile identities.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.\n\n        Replaced by: UserBroadWorksMobilityMobileIdentityAddRequest21sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksMobilityMobileIdentityAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksMobilityMobileIdentityAddRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksMobilityMobileIdentityAddRequest21sp1", "description": "Add a mobile identity to the user's list of mobile identities.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.\n\n        Replaced by: UserBroadWorksMobilityMobileIdentityAddRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksMobilityMobileIdentityAddRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksMobilityMobileIdentityAddRequest22": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksMobilityMobileIdentityAddRequest22", "description": "Add a mobile identity to the user's list of mobile identities.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.\n        Replaced By: UserBroadWorksMobilityMobileIdentityAddRequest22V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksMobilityMobileIdentityAddRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksMobilityMobileIdentityConsolidatedAddRequest": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksMobilityMobileIdentityConsolidatedAddRequest", "description": "Add a mobile identity to the user's list of mobile identities.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.\n        Replaced By: UserBroadWorksMobilityMobileIdentityConsolidatedAddRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksMobilityMobileIdentityConsolidatedAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksMobilityMobileIdentityGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksMobilityMobileIdentityGetRequest", "description": "Get the settings for a user's specified mobile identity.\n        The response is either a UserBroadWorksMobilityMobileIdentityGetResponse or an ErrorResponse.\n\n        Replaced by: UserBroadWorksMobilityMobileIdentityGetRequest21sp1.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksMobilityMobileIdentityGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksMobilityMobileIdentityGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksMobilityMobileIdentityGetRequest21sp1", "description": "Get the settings for a user's specified mobile identity.\n        The response is either a UserBroadWorksMobilityMobileIdentityGetResponse21sp1 or an ErrorResponse.\n\n        Replaced by: UserBroadWorksMobilityMobileIdentityGetRequest21sp1V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksMobilityMobileIdentityGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksMobilityMobileIdentityGetRequest21sp1V2": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksMobilityMobileIdentityGetRequest21sp1V2", "description": "Get the settings for a user's specified mobile identity.\n        The response is either a UserBroadWorksMobilityMobileIdentityGetResponse21sp1V2 or an ErrorResponse.\n\n        Replaced by: UserBroadWorksMobilityMobileIdentityGetRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksMobilityMobileIdentityGetRequest21sp1V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksMobilityMobileIdentityGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksMobilityMobileIdentityGetRequest22", "description": "Get the settings for a user's specified mobile identity.\n        The response is either a UserBroadWorksMobilityMobileIdentityGetResponse22 or an ErrorResponse.\n        Replaced by UserBroadWorksMobilityMobileIdentityGetRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksMobilityMobileIdentityGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBroadWorksMobilityMobileIdentityGetRequest22V2": {"post": {"tags": ["Deprecated"], "summary": "UserBroadWorksMobilityMobileIdentityGetRequest22V2", "description": "Get the settings for a user's specified mobile identity.\n        The response is either a UserBroadWorksMobilityMobileIdentityGetResponse22V2 or an ErrorResponse.\n        Replaced By: UserBroadWorksMobilityMobileIdentityGetRequest22V3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBroadWorksMobilityMobileIdentityGetRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserBusyLampFieldGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserBusyLampFieldGetRequest", "description": "Request the settings for the busy lamp field service.\n        The response is either a UserBusyLampFieldGetResponse or an ErrorResponse.\n        Replaced by: UserBusyLampFieldGetRequest16sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserBusyLampFieldGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallCenterGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallCenterGetListRequest", "description": "Get the list of call centers the specified user belongs to.\n        The response is either a UserCallCenterGetListResponse or an ErrorResponse.\n        Replaced By: UserCallCenterGetRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallCenterGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallCenterGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallCenterGetRequest", "description": "Get the user's ACD state and the list of call centers the specified user belongs to.\n        The response is either a UserCallCenterGetResponse or an ErrorResponse.\n\n        Replaced By: UserCallCenterGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallCenterGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallCenterGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "UserCallCenterGetRequest16", "description": "Get the user's call center settings and the list of call centers the specified user belongs to.\n        The response is either a UserCallCenterGetResponse16 or an ErrorResponse.\n\n        Replaced by: UserCallCenterGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallCenterGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallCenterGetRequest17": {"post": {"tags": ["Deprecated"], "summary": "UserCallCenterGetRequest17", "description": "Get the user's call center settings and the list of call centers the specified user belongs to.\n        The response is either a UserCallCenterGetResponse17 or an ErrorResponse.\n\n        Replaced by UserCallCenterGetRequest17sp4.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallCenterGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallCenterGetRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "UserCallCenterGetRequest17sp4", "description": "Get the user's call center settings and the list of call centers the specified user belongs to.\n        The response is either a UserCallCenterGetResponse17sp4 or an ErrorResponse.\n\n        Replaced by UserCallCenterGetRequest19", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallCenterGetRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallCenterModifyAvailabilityListRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallCenterModifyAvailabilityListRequest", "description": "Request for an agent to login or logout of one or more Call Centers.\n        Contains a list specifing the desired login status of one or more call centers.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: UserCallCenterModifyRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallCenterModifyAvailabilityListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallCenterModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallCenterModifyRequest", "description": "Modifies the agents call center settings and the availability for an agent in one or more Call Centers.\n        Contains a list specifying the desired availability status of one or more call centers.\n        A default unavailable code will be used if the parameter agentUnavailableCode is not active, included or is invalid.\n        Changing the agentACDState from unavailable to any other state will automatically clear the unavailable code.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by UserCallCenterModifyRequest17sp4.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallCenterModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallCenterModifyRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "UserCallCenterModifyRequest17sp4", "description": "Modifies the agents call center settings and the availability for an agent in one or more Call Centers.\n        Contains a list specifying the desired availability status of one or more call centers.\n        A default unavailable code will be used if the parameter agentUnavailableCode is not active, included or is invalid.\n        Changing the agentACDState from unavailable to any other state will automatically clear the unavailable code.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced by UserCallCenterModifyRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallCenterModifyRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallCenterMonitoringGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallCenterMonitoringGetRequest", "description": "Request the user's Call Center Monitoring settings.\n        The response is either a UserCallCenterMonitoringGetResponse or an ErrorResponse.\n        Replaced by UserCallCenterMonitoringGetRequest23", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallCenterMonitoringGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallForwardingSelectiveAddCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallForwardingSelectiveAddCriteriaRequest", "description": "Add a criteria to the user's call forwarding selective service.\n         The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallForwardingSelectiveAddCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallForwardingSelectiveGetCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallForwardingSelectiveGetCriteriaRequest", "description": "Get a criteria for the user's call forwarding selective service.\n         The response is either a UserCallForwardingSelectiveGetCriteriaResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallForwardingSelectiveGetCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallForwardingSelectiveGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallForwardingSelectiveGetRequest", "description": "Get the user's call forwarding selective service setting.\n         The response is either a UserCallForwardingSelectiveGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallForwardingSelectiveGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallingPartyCategoryGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallingPartyCategoryGetRequest", "description": "Request the user level data associated with Calling Party Category.\n      The response is either a UserCallingPartyCategoryGetResponse or an\n      ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallingPartyCategoryGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallingPartyCategoryModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallingPartyCategoryModifyRequest", "description": "Modify the user level data associated with Calling Party Category.\n      The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallingPartyCategoryModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallLogsClearRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallLogsClearRequest", "description": "Clear a user's call logs associated with Basic Call Logs and Enhanced\n        Call Logs features.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: UserCallLogsClearRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallLogsClearRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallNotifyAddCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallNotifyAddCriteriaRequest", "description": "Add a criteria to the user's call notify service.\n         The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallNotifyAddCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallNotifyGetCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallNotifyGetCriteriaRequest", "description": "Get a criteria for the user's call notify service.\n         The response is either a UserCallNotifyGetCriteriaResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallNotifyGetCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallPoliciesGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallPoliciesGetRequest", "description": "Request the user level data associated with Call Policies.\n        The response is either a UserCallPoliciesGetResponse\n        or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallPoliciesGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallProcessingGetPolicyRequest14": {"post": {"tags": ["Deprecated"], "summary": "UserCallProcessingGetPolicyRequest14", "description": "Request the user level data associated with Call Processing Policy.\n        The response is either a UserCallProcessingGetPolicyResponse14 or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallProcessingGetPolicyRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallProcessingGetPolicyRequest14sp1": {"post": {"tags": ["Deprecated"], "summary": "UserCallProcessingGetPolicyRequest14sp1", "description": "Request the user level data associated with Call Processing Policy.\n        The response is either a UserCallProcessingGetPolicyResponse14sp1 or an\n        ErrorResponse.\n        Replaced By: UserCallProcessingGetPolicyRequest14sp7", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallProcessingGetPolicyRequest14sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallProcessingGetPolicyRequest14sp7": {"post": {"tags": ["Deprecated"], "summary": "UserCallProcessingGetPolicyRequest14sp7", "description": "Request the user level data associated with Call Processing Policy.\n            The response is either a UserCallProcessingGetPolicyResponse14sp7 or an\n            ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallProcessingGetPolicyRequest14sp7"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallProcessingGetPolicyRequest16": {"post": {"tags": ["Deprecated"], "summary": "UserCallProcessingGetPolicyRequest16", "description": "Request the user level data associated with Call Processing Policy.\n          The response is either a UserCallProcessingGetPolicyResponse16 or an\n          ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallProcessingGetPolicyRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallProcessingGetPolicyRequest16sp2": {"post": {"tags": ["Deprecated"], "summary": "UserCallProcessingGetPolicyRequest16sp2", "description": "Request the user level data associated with Call Processing Policy.\n          The response is either a UserCallProcessingGetPolicyResponse16 or an\n          ErrorResponse.\n\n          Replaced by: UserCallProcessingGetPolicyRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallProcessingGetPolicyRequest16sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallProcessingGetPolicyRequest17": {"post": {"tags": ["Deprecated"], "summary": "UserCallProcessingGetPolicyRequest17", "description": "Request the user level data associated with Call Processing Policy.\n          The response is either a UserCallProcessingGetPolicyResponse17 or an\n          ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallProcessingGetPolicyRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallProcessingGetPolicyRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "UserCallProcessingGetPolicyRequest17sp3", "description": "Request the user level data associated with Call Processing Policy.\n          The response is either a UserCallProcessingGetPolicyResponse17sp3 or an\n          ErrorResponse.\n\n          Replaced by: UserCallProcessingGetPolicyRequest17Sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallProcessingGetPolicyRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallProcessingGetPolicyRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "UserCallProcessingGetPolicyRequest17sp4", "description": "Request the user level data associated with Call Processing Policy.\n          The response is either a UserCallProcessingGetPolicyResponse17sp4 or an\n          ErrorResponse.\n\n          Replaced by: UserCallProcessingGetPolicyRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallProcessingGetPolicyRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallProcessingGetPolicyRequest18": {"post": {"tags": ["Deprecated"], "summary": "UserCallProcessingGetPolicyRequest18", "description": "Request the user level data associated with Call Processing Policy.\n        The response is either a UserCallProcessingGetPolicyResponse18 or an\n        ErrorResponse.\n\n        Replaced by: UserCallProcessingGetPolicyRequest19sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallProcessingGetPolicyRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallProcessingGetPolicyRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "UserCallProcessingGetPolicyRequest19sp1", "description": "Request the user level data associated with Call Processing Policy.\n        The response is either a UserCallProcessingGetPolicyResponse19sp1 or an\n        ErrorResponse.\n\n        Replaced by: UserCallProcessingGetPolicyRequest21sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallProcessingGetPolicyRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallProcessingGetPolicyRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "UserCallProcessingGetPolicyRequest21sp1", "description": "Request the user level data associated with Call Processing Policy.\n        The response is either a UserCallProcessingGetPolicyResponse21sp1 or an\n        ErrorResponse.\n        Replaced by: UserCallProcessingGetPolicyRequest21sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallProcessingGetPolicyRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallProcessingModifyPolicyRequest14": {"post": {"tags": ["Deprecated"], "summary": "UserCallProcessingModifyPolicyRequest14", "description": "Modify the user level data associated with Call Processing Policy.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: UserCallProcessingModifyPolicyRequest14sp7", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallProcessingModifyPolicyRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallRecordingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallRecordingGetRequest", "description": "Get the Call Recording attributes for a user.\n        The response is either a UserCallRecordingGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallRecordingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallRecordingGetRequest20": {"post": {"tags": ["Deprecated"], "summary": "UserCallRecordingGetRequest20", "description": "Get the Call Recording attributes for a user.\n        The response is either a UserCallRecordingGetResponse20 or an ErrorResponse.\n\n        The following parameters are not returned for service instance:\n          - pauseResumeNotification\n          - enableCallRecordingAnnouncement\n          - enableRecordCallRepeatWarningTone\n          - recordCallRepeatWarningToneTimerSeconds\n\n          Replaced by: UserCallRecordingGetRequest23.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallRecordingGetRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallTransferGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallTransferGetRequest", "description": "Request the user level data associated with Call Transfer.\n        The response is either a UserCallTransferGetResponse or an ErrorResponse.\n        Replaced By: UserCallTransferGetRequest14Sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallTransferGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCallWaitingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCallWaitingGetRequest", "description": "Request the user level data associated with Call Waiting.\n        The response is either a UserCallWaitingGetResponse or an\n        ErrorResponse.\n        Replaced by: UserCallWaitingGetRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCallWaitingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserChargeNumberGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserChargeNumberGetRequest", "description": "Request the user level data associated with Charge Number.\n        The response is either a UserChargeNumberGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserChargeNumberGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCollaborateBridgeGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCollaborateBridgeGetRequest", "description": "Request the collaborate bridged assigned to the user. The user can only be assigned to one collaborate bridge at any given time.\n        The response is either UserCollaborateBridgeGetResponse or ErrorResponse.\n\n        Replaced by: UserCollaborateBridgeGetRequest20sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCollaborateBridgeGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserConsolidatedModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "UserConsolidatedModifyRequest", "description": "Request to modify a user.\n        If deleteExistingDevices is set to true, when the devices for the main endpoint or SCA service are changed, devices with no more endpoint will be deleted if the command is executed with the correct priviledge.\n        Group administrator or above running this command can delete any group level devices.\n        Service provider administrator or above can delete any service provider and group devices.\n        Provisioning administrator or above can delete any devices.\n        An ErrorResponse will be returned if any device cannot be deleted because of insufficient privilege.\n\n        When phone numbers are un-assigned from the user, the unused numbers may be un-assigned from the group and service provider. If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be un-assigned from the group if the command is executed by a service provider administrator or above.\n        When set to 'Service Provider', they will be un-assigned from the group and service provider if the command is executed by a provisioning administrator or above.\n        When omitted, the number(s) will be left assigned to the group.\n        An ErrorResponse will be returned if any number cannot be unassigned because of insufficient privilege.\n       If the phoneNumber has not been assigned to the group and addPhoneNumberToGroup is set to true, it will be added to group if needed if the command is executed by a service provider administrator and above. The command will fail otherwise.\n\n        Alternate user ids can be added by a group level administrator or above.\n\n        The password is not required if external authentication is enabled.\n        When sharedCallAppearanceAccessDeviceEndpoint element is included and the Shared Call Appearance service is not assigned after this request, the request will fail.\n\n        The userService/servicePackwill be authorized to the group if it has not been authorized to the group and the command is excuted by a service provider administrator. The request will fail otherwise.\n        If not present, the authorizedQuantity will be set to unlimited if allowed.\n\n        If any of the third party voice mail elements are included but the service is not assigned after this request, the request will fail.\n\n         If the sip authentication elements are included but the SPI Authentication service is not assigned after this request, the request will fail.\n         If the impPassword element is included but the Integrated IMP service is not assigned after this request, the request will fail.\n         The following elements are ignored in XS data mode:\n          nameDialingName\n          alternateUserIdList\n          passcode\n          trunkAddressing\n          thirdPartyVoiceMailServerSelection\n          thirdPartyVoiceMailServerUserServer\n          thirdPartyVoiceMailServerMailboxIdType\n          thirdPartyVoiceMailMailboxURL\n          sipAuthenticationData\n          newUserExternalId\n         The response is either SuccxessResponse or ErrorResponse.\n         Replaced by: UserConsolidatedModifyRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserConsolidatedModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCustomRingbackUserAddCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCustomRingbackUserAddCriteriaRequest", "description": "Add a criteria to the user's custom ringback service.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCustomRingbackUserAddCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCustomRingbackUserGetCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCustomRingbackUserGetCriteriaRequest", "description": "Get a criteria for the user's custom ringback service.\n        The response is either a UserCustomRingbackUserGetCriteriaResponse or an ErrorResponse.\n        Replaced By: UserCustomRingbackUserGetCriteriaRequest15Sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCustomRingbackUserGetCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCustomRingbackUserGetCriteriaRequest15sp2": {"post": {"tags": ["Deprecated"], "summary": "UserCustomRingbackUserGetCriteriaRequest15sp2", "description": "Get a criteria for the user's custom ringback service.\n        The response is either a UserCustomRingbackUserGetCriteriaResponse15sp2 or an ErrorResponse.\n        Replaced By: UserCustomRingbackUserGetCriteriaRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCustomRingbackUserGetCriteriaRequest15sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCustomRingbackUserGetCriteriaRequest20": {"post": {"tags": ["Deprecated"], "summary": "UserCustomRingbackUserGetCriteriaRequest20", "description": "Get a criteria for the user's custom ringback service.\n        The response is either a UserCustomRingbackUserGetCriteriaResponse20 or an ErrorResponse.\n        Replaced by: UserCustomRingbackUserGetCriteriaRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCustomRingbackUserGetCriteriaRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserCustomRingbackUserModifyCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserCustomRingbackUserModifyCriteriaRequest", "description": "Modify a criteria for the user's custom ringback service.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: UserCustomRingbackUserModifyCriteriaRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCustomRingbackUserModifyCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserDevicePoliciesGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserDevicePoliciesGetRequest", "description": "Request the user level data associated with Device Policy.\n          The response is either a UserDevicePoliciesGetResponse or an\n          ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserDevicePoliciesGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserDevicePoliciesGetRequest19sp1": {"post": {"tags": ["Deprecated"], "summary": "UserDevicePoliciesGetRequest19sp1", "description": "Request the user level data associated with Device Policy.\n          The response is either a UserDevicePoliciesGetResponse19sp1 or an\n          ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserDevicePoliciesGetRequest19sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserDevicePoliciesGetRequest20": {"post": {"tags": ["Deprecated"], "summary": "UserDevicePoliciesGetRequest20", "description": "Request the user level data associated with Device Policy.\n          The response is either a UserDevicePoliciesGetResponse20 or an\n          ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserDevicePoliciesGetRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserDirectedCallPickupWithBargeInGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserDirectedCallPickupWithBargeInGetRequest", "description": "Request the user level data associated with Directed Call Pickup With Barge In.\n        The response is either a UserDirectedCallPickupWithBargeInGetResponse or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserDirectedCallPickupWithBargeInGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserEnhancedCallLogsGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "UserEnhancedCallLogsGetListRequest", "description": "Request user's call logs. It is possible to get a subset of the total list of calls\n        by specifying a starting offset and the number of calls to get.\n        If the callLogType is not specified, all types of calls are returned.\n        The response is either a UserEnhancedCallLogsGetListResponse or an ErrorResponse.\n        Replaced By: UserEnhancedCallLogsGetListRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserEnhancedCallLogsGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserEnhancedCallLogsGetListRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "UserEnhancedCallLogsGetListRequest14sp4", "description": "Request user's call logs. It is possible to get a subset of the total list of calls\n            by specifying a starting offset and the number of calls to get.\n            If the callLogType is not specified, all types of calls are returned.\n            The response is either a UserEnhancedCallLogsGetListResponse14sp4 or an ErrorResponse.\n            Replaced by:\n            UserEnhancedCallLogsGetListRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserEnhancedCallLogsGetListRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserEnhancedCallLogsGetListRequest16": {"post": {"tags": ["Deprecated"], "summary": "UserEnhancedCallLogsGetListRequest16", "description": "Request user's call logs.\n        If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.\n        It is possible to restrict the number of rows returned using responsePagingControl.\n        The response is either a UserEnhancedCallLogsGetListResponse16 or an ErrorResponse.\n\n        Replaced by UserEnhancedCallLogsGetListRequest17sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserEnhancedCallLogsGetListRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserEnhancedCallLogsGetListRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "UserEnhancedCallLogsGetListRequest17sp4", "description": "Request user's call logs.\n        If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.\n        The filters \"dateTimeRange\", \"numberFilter\", \"redirectedNumberFilter\", accountAuthorizationCodeFilter\"\n        and \"\"subscriberType\" are ignored if call logs are stored in CDS. When \"ReceivedOrMissed\" is specified\n        as \"callLogType\" and call logs are stored in CDS, all call logs including placed will be returned.\n        It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl\n        is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control\n        the maximum number of call logs can be returned.\n        The response is either a UserEnhancedCallLogsGetListResponse17sp4 or an ErrorResponse.\n        Replaced by UserEnhancedCallLogsGetListRequest17sp4V2.\n        Originally deprecated in release 20.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserEnhancedCallLogsGetListRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserEnhancedCallLogsGetListRequest17sp4V2": {"post": {"tags": ["Deprecated"], "summary": "UserEnhancedCallLogsGetListRequest17sp4V2", "description": "Request user's call logs.\n        If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.\n        The filters \"dateTimeRange\", \"numberFilter\", \"redirectedNumberFilter\", \"accountAuthorizationCodeFilter\"\n        \"callAuthorizationCodeFilter\" and \"subscriberType\" are ignored if call logs are stored in CDS. When\n        \"ReceivedOrMissed\" is specified as \"callLogType\" and call logs are stored in CDS, all call logs including\n        placed will be returned.\n        It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl\n        is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control\n        the maximum number of call logs can be returned.\n        The response is either a UserEnhancedCallLogsGetListResponse17sp4V2 or an ErrorResponse.\n        The following elements are only used in AS data mode and not returned in XS data mode:\n          callAuthorizationCodeFilter", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserEnhancedCallLogsGetListRequest17sp4V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserEnhancedCallLogsGetListRequest20": {"post": {"tags": ["Deprecated"], "summary": "UserEnhancedCallLogsGetListRequest20", "description": "Request user's call logs.\n        If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.\n        The filters \"dateTimeRange\", \"numberFilter\", \"redirectedNumberFilter\", \"accountAuthorizationCodeFilter\"\n        \"callAuthorizationCodeFilter\" and \"subscriberType\" are ignored if call logs are stored in CDS. When\n        \"ReceivedOrMissed\" is specified as \"callLogType\" and call logs are stored in CDS, all call logs including\n        placed will be returned.\n        It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl\n        is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control\n        the maximum number of call logs can be returned.\n        The response is either a UserEnhancedCallLogsGetListResponse20 or an ErrorResponse.\n        The following elements are only used in AS data mode and not returned in XS data mode:\n          callAuthorizationCodeFilter", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserEnhancedCallLogsGetListRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserEnhancedCallLogsGetListRequest20sp1": {"post": {"tags": ["Deprecated"], "summary": "UserEnhancedCallLogsGetListRequest20sp1", "description": "Request user's call logs.\n        If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.\n        The filters \"dateTimeRange\", \"numberFilter\", \"redirectedNumberFilter\", \"accountAuthorizationCodeFilter\"\n        \"callAuthorizationCodeFilter\" and \"subscriberType\" are ignored if call logs are stored in CDS. When\n        \"ReceivedOrMissed\" is specified as \"callLogType\" and call logs are stored in CDS, all call logs including\n        placed will be returned.\n        It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl\n        is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control\n        the maximum number of call logs can be returned.\n        The response is either a UserEnhancedCallLogsGetListResponse20sp1 or an ErrorResponse.\n        The following elements are only used in AS data mode:\n          callAuthorizationCodeFilter\n          callSecurityClassification", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserEnhancedCallLogsGetListRequest20sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserEnhancedCallLogsGetListRequest21": {"post": {"tags": ["Deprecated"], "summary": "UserEnhancedCallLogsGetListRequest21", "description": "Request user's call logs.\n        If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.\n        The filters \"dateTimeRange\", \"numberFilter\", \"redirectedNumberFilter\", \"accountAuthorizationCodeFilter\"\n        \"callAuthorizationCodeFilter\" and \"subscriberType\" are ignored if call logs are stored in CDS. When\n        \"ReceivedOrMissed\" is specified as \"callLogType\" and call logs are stored in CDS, all call logs including\n        placed will be returned.\n        It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl\n        is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control\n        the maximum number of call logs can be returned.\n        The response is either a UserEnhancedCallLogsGetListResponse21 or an ErrorResponse.\n        The following elements are only used in AS data mode and not returned in XS data mode:\n          callAuthorizationCodeFilter\n\n        Replaced by: UserEnhancedCallLogsGetListRequest21Sp1 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserEnhancedCallLogsGetListRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserExecutiveGetFilteringSelectiveCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserExecutiveGetFilteringSelectiveCriteriaRequest", "description": "Get a filtering criteria for an executive user.\n        Both executive and the executive assistant can run this command.\n        The response is either UserExecutiveGetSelectiveCriteriaResponse or ErrorResponse.\n        Replaced by: UserExecutiveGetFilteringSelectiveCriteriaRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserExecutiveGetFilteringSelectiveCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserFaxMessagingGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserFaxMessagingGetRequest", "description": "Request the user level data associated with Fax Messaging.\n        The response is either a UserFaxMessagingGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserFaxMessagingGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserFaxMessagingGetRequest17": {"post": {"tags": ["Deprecated"], "summary": "UserFaxMessagingGetRequest17", "description": "Request the user level data associated with Fax Messaging.\n        The response is either a UserFaxMessagingGetResponse17 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserFaxMessagingGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserFeatureAccessCodeGetListRequest20": {"post": {"tags": ["Deprecated"], "summary": "UserFeatureAccessCodeGetListRequest20", "description": "Get the list of feature access codes for a user.\n        The response is either a UserFeatureAccessCodeGetListResponse20 or an ErrorResponse.\n        In release 20 the \"Call Recording\" FAC name is changed to\n        \"Call Recording Start\".\n        Replaced by: UserFeatureAccessCodeGetListRequest21 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserFeatureAccessCodeGetListRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserFlexibleSeatingGuestGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserFlexibleSeatingGuestGetRequest", "description": "Request the user level data associated with flexible seating guest.\n        The response is either a UserFlexibleSeatingGuestGetResponse or an ErrorResponse.\n\n        Replaced by: UserFlexibleSeatingGuestGetRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserFlexibleSeatingGuestGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserFlexibleSeatingGuestModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "UserFlexibleSeatingGuestModifyRequest", "description": "Modify the user level data associated with flexible seating guest.\n\t\taccessDeviceEndpoint can only be configured by group or a higher level administrator.\n\t\tThe request fails if isActive is set to false and the guest is associated to a host.\n\t\tThe request fails when enableAssociationLimit, associationLimitHours, unlockPhonePINCode are changed when the guest is associated to a host.\n\t\tThe request fails when accessDeviceEndpoint is set in the request when the guest is associated to a host.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        Replaced by: UserFlexibleSeatingGuestModifyRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserFlexibleSeatingGuestModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetLoginInfoRequest": {"post": {"tags": ["Deprecated"], "summary": "UserGetLoginInfoRequest", "description": "UserGetLoginInfoRequest is used to access login information for a user\n        either by a userId or dn.\n        The phone number may be any DN associated with a user.\n\n        The response is a UserGetLoginInfoResponse or an ErrorResponse\n\n        Replaced by UserGetLoginInfoRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetLoginInfoRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetLoginInfoRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "UserGetLoginInfoRequest21sp1", "description": "UserGetLoginInfoRequest21sp1 is used to access login information for a user\n        either by a userId, dn or lineport.\n        The phone number may be any DN associated with a user.\n        The lineport may be any lineport associated with a user.\n\n        The response is a UserGetLoginInfoResponse21sp1 or an ErrorResponse\n\n        Replaced by UserGetLoginInfoRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetLoginInfoRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetLoginInfoRequest22": {"post": {"tags": ["Deprecated"], "summary": "UserGetLoginInfoRequest22", "description": "UserGetLoginInfoRequest22 is used to access login information for a user\n        either by a userId, dn or lineport.\n        The phone number may be any DN associated with a user.\n        The lineport may be any lineport associated with a user.\n\n        The response is a UserGetLoginInfoResponse22 or an ErrorResponse\n        Replaced by UserGetLoginInfoRequest22V2.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetLoginInfoRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetLoginInfoRequest22V2": {"post": {"tags": ["Deprecated"], "summary": "UserGetLoginInfoRequest22V2", "description": "UserGetLoginInfoRequest22V2 is used to access login information for a user\n        either by a userId, dn or lineport.\n        The phone number may be any DN associated with a user.\n        The lineport may be any lineport associated with a user.\n\n        The response is a UserGetLoginInfoResponse22V2 or an ErrorResponse\n\n        Replaced by UserGetLoginInfoRequest22V3.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetLoginInfoRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetLoginInfoRequest22V3": {"post": {"tags": ["Deprecated"], "summary": "UserGetLoginInfoRequest22V3", "description": "UserGetLoginInfoRequest22V3 is used to access login information for a user\n        either by a userId, dn or lineport.\n        The phone number may be any DN associated with a user.\n        The lineport may be any lineport associated with a user.\n\n        The response is a UserGetLoginInfoResponse22V3 or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS and Amplify data mode.\n          loginRole", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetLoginInfoRequest22V3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest14": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest14", "description": "Request to get the user information.  The response is either UserGetResponse14\n        or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest14sp4", "description": "Request to get the user information.  The response is either UserGetResponse14sp4\n        or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest14sp9": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest14sp9", "description": "Request to get the user information.  The response is either UserGetResponse14sp4\n            or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest14sp9"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest15sp2": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest15sp2", "description": "Request to get the user information.  The response is either\n        UserGetResponse15sp2 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest15sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest17": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest17", "description": "Replaced by: UserGetRequest17sp4\n\n        Request to get the user information.  The response is either\n        UserGetResponse17 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest17"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest17sp3": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest17sp3", "description": "Replaced by: UserGetRequest18\n\n        Request to get the user information.  The response is either\n        UserGetResponse17sp3 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest17sp3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest17sp4", "description": "Replaced by: UserGetRequest18\n\n        Request to get the user information.  The response is either\n        UserGetResponse17sp4 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest18": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest18", "description": "Request to get the user information.  The response is either\n        UserGetResponse18 or ErrorResponse.\n\n    Replaced by: UserGetRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest18"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest19": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest19", "description": "Request to get the user information.  The response is either\n        UserGetResponse19 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest20": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest20", "description": "Request to get the user information.  The response is either\n        UserGetResponse20 or ErrorResponse.\n        Replaced by: UserGetRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest21": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest21", "description": "Request to get the user information.  The response is either\n        UserGetResponse21 or ErrorResponse.\n\n        Replaced by UserGetRequest21sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest21"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest21sp1": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest21sp1", "description": "Request to get the user information.  The response is either\n        UserGetResponse21sp1 or ErrorResponse.\n\n        Replaced by UserGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest21sp1"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest21sp1V2": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest21sp1V2", "description": "Request to get the user information.  The response is either\n        UserGetResponse21sp1V2 or ErrorResponse.\n\n         Replaced by UserGetRequest22V3 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest21sp1V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest22": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest22", "description": "Request to get the user information.  The response is either\n        UserGetResponse22 or ErrorResponse.\n\n        Replaced by UserGetRequest22V2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest22"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest22V2": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest22V2", "description": "Request to get the user information.  The response is either\n        UserGetResponse22V2 or ErrorResponse.\n\n        Replaced by UserGetRequest22V3.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest22V2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserGetRequest22V3": {"post": {"tags": ["Deprecated"], "summary": "UserGetRequest22V3", "description": "Request to get the user information.  The response is either\n        UserGetResponse22V3 or ErrorResponse.\n\n        Replaced by: UserGetRequest22V4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserGetRequest22V3"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserHolidayScheduleAddRequest": {"post": {"tags": ["Deprecated"], "summary": "UserHolidayScheduleAddRequest", "description": "Add a holiday schedule to a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserHolidayScheduleAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserHolidayScheduleDeleteRequest": {"post": {"tags": ["Deprecated"], "summary": "UserHolidayScheduleDeleteRequest", "description": "Delete a holiday schedule from a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserHolidayScheduleDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserHolidayScheduleGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "UserHolidayScheduleGetListRequest", "description": "Get a holiday schedule list for a user.\n        The response is either a UserHolidayScheduleGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserHolidayScheduleGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserHolidayScheduleGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserHolidayScheduleGetRequest", "description": "Get a holiday schedule a user.\n        The response is either a UserHolidayScheduleGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserHolidayScheduleGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserHolidayScheduleModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "UserHolidayScheduleModifyRequest", "description": "Modify a holiday schedule for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserHolidayScheduleModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserHotelingGuestGetRequest14": {"post": {"tags": ["Deprecated"], "summary": "UserHotelingGuestGetRequest14", "description": "Request the user level data associated with Hoteling Guest.\n        The response is either a UserHotelingGuestGetResponse14 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserHotelingGuestGetRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserHotelingGuestGetRequest14sp2": {"post": {"tags": ["Deprecated"], "summary": "UserHotelingGuestGetRequest14sp2", "description": "Request the user level data associated with Hoteling Guest.\n        The response is either a UserHotelingGuestGetResponse14 or an ErrorResponse.\n        Replaced by: UserHotelingGuestGetRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserHotelingGuestGetRequest14sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserHotelingHostGetRequest14": {"post": {"tags": ["Deprecated"], "summary": "UserHotelingHostGetRequest14", "description": "Request the user level data associated with Hoteling Host.\n        The response is either a UserHotelingHostGetResponse14 or an ErrorResponse.\n        Replaced by: UserHotelingHostGetRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserHotelingHostGetRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserHotelingHostGetRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "UserHotelingHostGetRequest14sp4", "description": "Request the user level data associated with Hoteling Host.\n        The response is either a UserHotelingHostGetResponse14sp4 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserHotelingHostGetRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserInterceptUserGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserInterceptUserGetRequest", "description": "Get the user's intercept user service settings.\n        The response is either a UserInterceptUserGetResponse or an ErrorResponse.\n        Replaced By: UserInterceptUserGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserInterceptUserGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserInterceptUserGetRequest16": {"post": {"tags": ["Deprecated"], "summary": "UserInterceptUserGetRequest16", "description": "Get the user's intercept user service settings.\n        The response is either a UserInterceptUserGetResponse16 or an ErrorResponse.\n        Replaced By: UserInterceptUserGetRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserInterceptUserGetRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserInterceptUserModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "UserInterceptUserModifyRequest", "description": "Modify the user's intercept user service settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: UserInterceptUserModifyRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserInterceptUserModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserMeetMeConferencingAddConferenceRequest": {"post": {"tags": ["Deprecated"], "summary": "UserMeetMeConferencingAddConferenceRequest", "description": "Add a Meet-Me conference.\n        The response is either UserMeetMeConferencingAddConferenceResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserMeetMeConferencingAddConferenceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserMeetMeConferencingAddConferenceRequest19": {"post": {"tags": ["Deprecated"], "summary": "UserMeetMeConferencingAddConferenceRequest19", "description": "Add a Meet-Me conference.\n        The response is either UserMeetMeConferencingAddConferenceResponse19 or ErrorResponse.\n        The startTime element is adjusted to the first occurrence of the recurrent schedule that comes at or after the startTime.\n        The startTime, endTime and recurrence information for a conferenceSchedule element will be adjusted to the user Host time zone.\n\n        Replaced by: UserMeetMeConferencingAddConferenceRequest23", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserMeetMeConferencingAddConferenceRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserMeetMeConferencingGetConferenceGreetingRequest": {"post": {"tags": ["Deprecated"], "summary": "UserMeetMeConferencingGetConferenceGreetingRequest", "description": "Get the information of a conference custom greeting.\n        The response is either UserMeetMeConferencingGetConferenceGreetingResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserMeetMeConferencingGetConferenceGreetingRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserMeetMeConferencingGetConferenceRequest": {"post": {"tags": ["Deprecated"], "summary": "UserMeetMeConferencingGetConferenceRequest", "description": "Get the information of a conference owned by the user.\n        The response is either UserMeetMeConferencingGetConferenceResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserMeetMeConferencingGetConferenceRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserMeetMeConferencingGetConferenceRequest19": {"post": {"tags": ["Deprecated"], "summary": "UserMeetMeConferencingGetConferenceRequest19", "description": "Get the information of a conference owned by the user.\n        The response is either UserMeetMeConferencingGetConferenceResponse19 or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserMeetMeConferencingGetConferenceRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserMeetMeConferencingGetConferenceRequest20": {"post": {"tags": ["Deprecated"], "summary": "UserMeetMeConferencingGetConferenceRequest20", "description": "Get the information of a conference owned by the user.\n        The response is either UserMeetMeConferencingGetConferenceResponse20 or ErrorResponse.\n\n        Replaced by: UserMeetMeConferencingGetConferenceRequest23", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserMeetMeConferencingGetConferenceRequest20"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserMeetMeConferencingModifyConferenceGreetingRequest": {"post": {"tags": ["Deprecated"], "summary": "UserMeetMeConferencingModifyConferenceGreetingRequest", "description": "Modify an existing custom greeting audio file.\n        The response is either SuccessResponse or\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserMeetMeConferencingModifyConferenceGreetingRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserModifyRequest14": {"post": {"tags": ["Deprecated"], "summary": "UserModifyRequest14", "description": "Request to modify a user. The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserModifyRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserModifyRequest14sp9": {"post": {"tags": ["Deprecated"], "summary": "UserModifyRequest14sp9", "description": "Request to modify a user. The response is either\n        SuccessResponse or ErrorResponse.\n        Replaced by: UserModifyRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserModifyRequest14sp9"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserModifyRequest16": {"post": {"tags": ["Deprecated"], "summary": "UserModifyRequest16", "description": "Replaced by: UserModifyRequest17sp4\n\n        Request to modify a user.\n        When oldPassword is specified, all password rule applies. If oldPassword in not specified,\n        any password rule related to old password does not apply.\n        The request will fail if officeZoneName or primaryZoneName is present but the Location-Based Calling Restrictions service is not assigned to the user.\n        The response is either SuccessResponse or ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserModifyRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserModifyRequest17sp4": {"post": {"tags": ["Deprecated"], "summary": "UserModifyRequest17sp4", "description": "Request to modify a user.\n        When oldPassword is specified, all password rule applies. If oldPassword in not specified,\n        any password rule related to old password does not apply.\n        The request will fail if officeZoneName or primaryZoneName is present but the Location-Based Calling Restrictions service is not assigned to the user.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          contact[2]-contact[5]\n          nameDialingName\n          alternateUserIdList\n        The impId and impPassword are accepted when the Third-Party IMP service is assigned to the user;\n        when Integrated IMP service is assigned to the user and active, only the impPassword is accepted;\n        all other cases, the request fails if either field is changed.\n\n        Replaced by: UserModifyRequest21", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserModifyRequest17sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserMusicOnHoldUserGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserMusicOnHoldUserGetRequest", "description": "Request the user level data associated with Music On Hold User.\n        The response is either a UserMusicOnHoldUserGetResponse or an\n        ErrorResponse.\n        Replaced By: UserMusicOnHoldUserGetRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserMusicOnHoldUserGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserMusicOnHoldUserModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "UserMusicOnHoldUserModifyRequest", "description": "Modify data for Music On Hold User.\n        The response is either a SuccessResponse or an\n        ErrorResponse.\n        Replaced By: UserMusicOnHoldUserModifyRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserMusicOnHoldUserModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserPersonalAssistantGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserPersonalAssistantGetRequest", "description": "Request to get the User Personal Assistant information.\n        The response is either a UserPersonalAssistantGetResponse or an ErrorResponse.\n\n        Replaced by: UserPersonalAssistantGetRequest22", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPersonalAssistantGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserPriorityAlertAddCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserPriorityAlertAddCriteriaRequest", "description": "Add a criteria to the user's priority alert service.\n         The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPriorityAlertAddCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserPriorityAlertGetCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserPriorityAlertGetCriteriaRequest", "description": "Get a criteria for the user's priority alert service.\n         The response is either a UserPriorityAlertGetCriteriaResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPriorityAlertGetCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserPrivacyGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserPrivacyGetRequest", "description": "Request the user level data associated with Privacy.\n        The response is either a UserPrivacyGetResponse or an\n        ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPrivacyGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserPushNotificationGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserPushNotificationGetRequest", "description": "Get the push notification settings for a user.\n        The response is either UserPushNotificationGetResponse or ErrorResponse.\n\n        Replaced by: UserPushNotificationRequest24", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPushNotificationGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserScheduleGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "UserScheduleGetListRequest", "description": "Get the list of a user schedules. The list can be filtered by schedule type.\n        The response is either a UserScheduleGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserScheduleGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSecurityClassificationGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSecurityClassificationGetRequest", "description": "Get a user's Security Classifications configuration.\n        The response is either UserSecurityClassificationGetResponse or ErrorResponse.\n\n        Replaced By: UserSecurityClassificationGetRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSecurityClassificationGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSelectiveCallAcceptanceAddCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSelectiveCallAcceptanceAddCriteriaRequest", "description": "Add a criteria to the user's selective call acceptance service.\n         The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSelectiveCallAcceptanceAddCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSelectiveCallAcceptanceGetCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSelectiveCallAcceptanceGetCriteriaRequest", "description": "Get a criteria for the user's selective call acceptance service.\n         The response is either a UserSelectiveCallAcceptanceGetCriteriaResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSelectiveCallAcceptanceGetCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSelectiveCallRejectionAddCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSelectiveCallRejectionAddCriteriaRequest", "description": "Add a criteria to the user's selective call rejection service.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSelectiveCallRejectionAddCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSelectiveCallRejectionGetCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSelectiveCallRejectionGetCriteriaRequest", "description": "Get a criteria for the user's selective call rejection service.\n        The response is either a UserSelectiveCallRejectionGetCriteriaResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSelectiveCallRejectionGetCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSelectiveCallRejectionGetCriteriaRequest16": {"post": {"tags": ["Deprecated"], "summary": "UserSelectiveCallRejectionGetCriteriaRequest16", "description": "Get a criteria for the user's selective call rejection service.\n        The response is either a UserSelectiveCallRejectionGetCriteriaResponse16 or an ErrorResponse.\n        Replaced by: UserSelectiveCallRejectionGetCriteriaRequest16sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSelectiveCallRejectionGetCriteriaRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSelectiveCallRejectionModifyCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSelectiveCallRejectionModifyCriteriaRequest", "description": "Modify a criteria for the user's selective call rejection service.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSelectiveCallRejectionModifyCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSequentialRingAddCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSequentialRingAddCriteriaRequest", "description": "Add a criteria to the user's sequential ring service.\n         The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSequentialRingAddCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSequentialRingGetCriteriaRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSequentialRingGetCriteriaRequest", "description": "Get a criteria for the user's sequential ring service.\n         The response is either a UserSequentialRingGetCriteriaResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSequentialRingGetCriteriaRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSequentialRingGetRequest13mp16": {"post": {"tags": ["Deprecated"], "summary": "UserSequentialRingGetRequest13mp16", "description": "Get the user's sequential ring service setting.\n        The response is either a UserSequentialRingGetResponse13mp16 or an ErrorResponse.\n        Replaced By: UserSequentialRingGetRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSequentialRingGetRequest13mp16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSharedCallAppearanceAddEndpointRequest14": {"post": {"tags": ["Deprecated"], "summary": "UserSharedCallAppearanceAddEndpointRequest14", "description": "Associate an access device instance to the user's Shared Call Appearance.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSharedCallAppearanceAddEndpointRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSharedCallAppearanceAddEndpointRequest14sp2": {"post": {"tags": ["Deprecated"], "summary": "UserSharedCallAppearanceAddEndpointRequest14sp2", "description": "Associate an access device instance to the user's Shared Call Appearance.\n         The response is either a SuccessResponse or an ErrorResponse.\n         Replaced by: UserSharedCallAppearanceAddEndpointRequest21 in XS data mode\n         Replaced by: UserSharedCallAppearanceAddEndpointRequest22 in AS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSharedCallAppearanceAddEndpointRequest14sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSharedCallAppearanceGetEndpointRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSharedCallAppearanceGetEndpointRequest", "description": "Get the user's Shared Call Appearance endpoint setting.\n        The response is either a UserSharedCallAppearanceGetEndpointResponse or an ErrorResponse.\n        Replaced by: UserSharedCallAppearanceGetEndpointRequest21 in XS data mode", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSharedCallAppearanceGetEndpointRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSharedCallAppearanceGetRequest14": {"post": {"tags": ["Deprecated"], "summary": "UserSharedCallAppearanceGetRequest14", "description": "Get the user's Shared Call Appearance service setting.\n        The response is either a UserSharedCallAppearanceGetResponse14 or an ErrorResponse.\n        Replaced By: UserSharedCallAppearanceGetRequest14sp2", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSharedCallAppearanceGetRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSharedCallAppearanceGetRequest14sp2": {"post": {"tags": ["Deprecated"], "summary": "UserSharedCallAppearanceGetRequest14sp2", "description": "Get the user's Shared Call Appearance service setting.\n        The response is either a UserSharedCallAppearanceGetResponse14sp2 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSharedCallAppearanceGetRequest14sp2"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingFamilyAddPhoneNumberRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingFamilyAddPhoneNumberRequest", "description": "Add a new phone number and set the answer confirmation setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingFamilyAddPhoneNumberRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingFamilyDeletePhoneNumberRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingFamilyDeletePhoneNumberRequest", "description": "Delete the phone number specified.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingFamilyDeletePhoneNumberRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingFamilyGetPhoneNumberRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingFamilyGetPhoneNumberRequest", "description": "Get the answer confirmation setting for the phone number specified.\n        The response is either a UserSimultaneousRingFamilyGetPhoneNumberResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingFamilyGetPhoneNumberRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingFamilyGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingFamilyGetRequest", "description": "Get the user's simultaneous ring service family setting.\n        The response is either a UserSimultaneousRingFamilyGetResponse or an ErrorResponse.\n        Replaced By: UserSimultaneousRingFamilyGetRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingFamilyGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingFamilyGetRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingFamilyGetRequest14sp4", "description": "Get the user's simultaneous ring service Family setting.\n        The response is either a UserSimultaneousRingFamilyGetResponse14sp4 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingFamilyGetRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingFamilyModifyPhoneNumberRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingFamilyModifyPhoneNumberRequest", "description": "Modify the require confirmation setting for the destination.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingFamilyModifyPhoneNumberRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingFamilyModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingFamilyModifyRequest", "description": "Modify the user's simultaneous ring family service setting.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: UserSimultaneousRingFamilyModifyRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingFamilyModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingFamilyModifyRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingFamilyModifyRequest14sp4", "description": "Modify the user's simultaneous ring family service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingFamilyModifyRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingPersonalAddPhoneNumberRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingPersonalAddPhoneNumberRequest", "description": "Add a new phone number and set the answer confirmation setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingPersonalAddPhoneNumberRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingPersonalDeletePhoneNumberRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingPersonalDeletePhoneNumberRequest", "description": "Delete the phone number specified.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingPersonalDeletePhoneNumberRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingPersonalGetPhoneNumberRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingPersonalGetPhoneNumberRequest", "description": "Get the answer confirmation setting for the phone number specified.\n        The response is either a UserSimultaneousRingPersonalGetPhoneNumberResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingPersonalGetPhoneNumberRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingPersonalGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingPersonalGetRequest", "description": "Get the user's simultaneous ring service personal setting.\n        The response is either a UserSimultaneousRingPersonalGetResponse or an ErrorResponse.\n        Replaced By: UserSimultaneousRingPersonalGetRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingPersonalGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingPersonalGetRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingPersonalGetRequest14sp4", "description": "Get the user's simultaneous ring service personal setting.\n        The response is either a UserSimultaneousRingPersonalGetResponse14sp4 or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingPersonalGetRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingPersonalModifyPhoneNumberRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingPersonalModifyPhoneNumberRequest", "description": "Modify the require confirmation setting for the destination.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingPersonalModifyPhoneNumberRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingPersonalModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingPersonalModifyRequest", "description": "Modify the user's simultaneous ring personal service setting.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Replaced By: UserSimultaneousRingPersonalModifyRequest14sp4", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingPersonalModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSimultaneousRingPersonalModifyRequest14sp4": {"post": {"tags": ["Deprecated"], "summary": "UserSimultaneousRingPersonalModifyRequest14sp4", "description": "Modify the user's simultaneous ring personal service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSimultaneousRingPersonalModifyRequest14sp4"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserSpeedDial100GetListRequest": {"post": {"tags": ["Deprecated"], "summary": "UserSpeedDial100GetListRequest", "description": "Get the speed dial 100 settings for a user.\n        The response is either a UserSpeedDial100GetListResponse or an ErrorResponse.\n\n        Replaced by: UserSpeedDial100GetListRequest17Sp1", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserSpeedDial100GetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserThirdPartyVoiceMailSupportGetRequest13mp16": {"post": {"tags": ["Deprecated"], "summary": "UserThirdPartyVoiceMailSupportGetRequest13mp16", "description": "Request the user level data associated with Third-Party Voice Mail Support.\n        The response is either a UserThirdPartyVoiceMailSupportGetResponse13mp16 or an\n        ErrorResponse.\n        Replaced by: UserThirdPartyVoiceMailSupportGetRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserThirdPartyVoiceMailSupportGetRequest13mp16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserTimeScheduleAddRequest": {"post": {"tags": ["Deprecated"], "summary": "UserTimeScheduleAddRequest", "description": "Add a time schedule for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserTimeScheduleAddRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserTimeScheduleDeleteRequest": {"post": {"tags": ["Deprecated"], "summary": "UserTimeScheduleDeleteRequest", "description": "Delete a user time schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserTimeScheduleDeleteRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserTimeScheduleGetListRequest": {"post": {"tags": ["Deprecated"], "summary": "UserTimeScheduleGetListRequest", "description": "Get all time schedules for a user. This includes the user's personal schedules and user's group's\n        schedules.\n        The response is either a UserTimeScheduleGetListResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserTimeScheduleGetListRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserTimeScheduleGetRequest": {"post": {"tags": ["Deprecated"], "summary": "UserTimeScheduleGetRequest", "description": "Request to get a user time schedule.\n        The response is either a UserTimeScheduleGetResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserTimeScheduleGetRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserTimeScheduleModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "UserTimeScheduleModifyRequest", "description": "Modify a user time schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserTimeScheduleModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserVideoAddOnGetRequest14": {"post": {"tags": ["Deprecated"], "summary": "UserVideoAddOnGetRequest14", "description": "Get the user's Video Add-On service setting.\n        The response is either a UserVideoAddOnGetResponse14 or an ErrorResponse.\n\n        Replaced by: UserVideoAddOnGetRequest19.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVideoAddOnGetRequest14"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserVideoAddOnGetRequest19": {"post": {"tags": ["Deprecated"], "summary": "UserVideoAddOnGetRequest19", "description": "Get the user's Video Add-On service setting.\n        The response is either a UserVideoAddOnGetResponse19 or an ErrorResponse.\n\n        Replaced by: UserVideoAddOnGetRequest22.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVideoAddOnGetRequest19"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserVoiceMessagingUserGetAdvancedVoiceManagementRequest": {"post": {"tags": ["Deprecated"], "summary": "UserVoiceMessagingUserGetAdvancedVoiceManagementRequest", "description": "Get the user's voice messaging advanced voice management service setting.\n        The response is either a UserVoiceMessagingUserGetAdvancedVoiceManagementResponse or an ErrorResponse.\n        Replaced By: UserVoiceMessagingUserGetAdvancedVoiceManagementRequest14sp3", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVoiceMessagingUserGetAdvancedVoiceManagementRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserVoiceMessagingUserGetGreetingRequest13mp16": {"post": {"tags": ["Deprecated"], "summary": "UserVoiceMessagingUserGetGreetingRequest13mp16", "description": "Get the user's voice messaging greeting information.\n        The response is either a UserVoiceMessagingUserGetGreetingResponse13mp16 or an ErrorResponse.\n        Replaced By: UserVoiceMessagingUserGetGreetingRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVoiceMessagingUserGetGreetingRequest13mp16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserVoiceMessagingUserGetGreetingRequest16": {"post": {"tags": ["Deprecated"], "summary": "UserVoiceMessagingUserGetGreetingRequest16", "description": "Get the user's voice messaging greeting information.\n        The response is either a UserVoiceMessagingUserGetGreetingResponse16 or an ErrorResponse.\n\n        Replaced by: UserVoiceMessagingUserGetGreetingRequest18", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVoiceMessagingUserGetGreetingRequest16"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserVoiceMessagingUserGetVoiceManagementRequest13mp8": {"post": {"tags": ["Deprecated"], "summary": "UserVoiceMessagingUserGetVoiceManagementRequest13mp8", "description": "Get the user's voice messaging voice management service settings.\n        The response is either a UserVoiceMessagingUserGetVoiceManagementResponse13mp8 or an ErrorResponse.\n        Replaced by: UserVoiceMessagingUserGetVoiceManagementRequest17", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVoiceMessagingUserGetVoiceManagementRequest13mp8"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserVoiceMessagingUserGetVoicePortalPasswordInfoRequest": {"post": {"tags": ["Deprecated"], "summary": "UserVoiceMessagingUserGetVoicePortalPasswordInfoRequest", "description": "Request the user's voice portal password information.\n        The response is either a UserVoiceMessagingUserGetVoicePortalPasswordInfoResponse or an ErrorResponse.\n        Replaced By: UserPortalPasscodeGetInfoRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVoiceMessagingUserGetVoicePortalPasswordInfoRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserVoiceMessagingUserGetVoicePortalRequest": {"post": {"tags": ["Deprecated"], "summary": "UserVoiceMessagingUserGetVoicePortalRequest", "description": "Get the user's voice messaging voice portal settings.\n        The response is either a UserVoiceMessagingUserGetVoicePortalResponse or an ErrorResponse.\n        Replaced By: UserVoiceMessagingUserGetVoicePortalRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVoiceMessagingUserGetVoicePortalRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserVoiceMessagingUserModifyGreetingRequest": {"post": {"tags": ["Deprecated"], "summary": "UserVoiceMessagingUserModifyGreetingRequest", "description": "Modify the user's voice messaging greeting.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.\n        Replaced By: UserVoiceMessagingUserModifyGreetingRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVoiceMessagingUserModifyGreetingRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserVoiceMessagingUserModifyRequest": {"post": {"tags": ["Deprecated"], "summary": "UserVoiceMessagingUserModifyRequest", "description": "Modify the user's voice messaging advanced voice management service setting.\n        Modify a voice mail distribution list for a users voice message.\n        Modify the user's voice messaging greeting.\n        Modify the user's voice messaging outgoing message waiting indicator service setting.\n        Modify the user's voice messaging voice portal settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVoiceMessagingUserModifyRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserVoiceMessagingUserModifyVoicePortalPasswordRequest": {"post": {"tags": ["Deprecated"], "summary": "UserVoiceMessagingUserModifyVoicePortalPasswordRequest", "description": "Modify the user's Voice Portal password\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.\n        Replaced By: UserPortalPasscodeModifyRequest", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVoiceMessagingUserModifyVoicePortalPasswordRequest"}}}}, "responses": {"200": {"description": ""}}}}, "/deprecated/UserVoiceMessagingUserModifyVoicePortalRequest": {"post": {"tags": ["Deprecated"], "summary": "UserVoiceMessagingUserModifyVoicePortalRequest", "description": "Modify the user's voice messaging voice portal settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.\n        Replaced By: UserVoiceMessagingUserModifyVoicePortalRequest16", "security": [{"basicAuth": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserVoiceMessagingUserModifyVoicePortalRequest"}}}}, "responses": {"200": {"description": ""}}}}}, "components": {"securitySchemes": {"basicAuth": {"type": "http", "scheme": "basic"}}, "schemas": {"AuthenticationVerifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userId", "password"]}, "AuthenticationVerifyRequest14sp8": {"type": "object", "properties": {}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userId", "password"]}, {"type": "object", "properties": {"phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "passcode": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["phoneNumber", "passcode"]}, {"type": "object", "properties": {"loginToken": {"type": "string", "minLength": 1}}, "required": ["loginToken"]}, {"type": "object", "properties": {"sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["sipAuthenticationUserName", "sipAuthenticationPassword", "userId"]}]}]}, "AuthenticationVerifyRequest21sp1": {"type": "object", "properties": {}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userId", "password"]}, {"type": "object", "properties": {"phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "passcode": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["phoneNumber", "passcode"]}, {"type": "object", "properties": {"linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["linePort", "password"]}, {"type": "object", "properties": {"loginToken": {"type": "string", "minLength": 1}}, "required": ["loginToken"]}, {"type": "object", "properties": {"sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["sipAuthenticationUserName", "sipAuthenticationPassword", "userId"]}]}]}, "AuthenticationVerifyRequest22": {"type": "object", "properties": {}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userId", "password"]}, {"type": "object", "properties": {"phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "passcode": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["phoneNumber", "passcode"]}, {"type": "object", "properties": {"linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["linePort", "password"]}, {"type": "object", "properties": {"loginToken": {"type": "string", "minLength": 1}}, "required": ["loginToken"]}, {"type": "object", "properties": {"sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["sipAuthenticationUserName", "sipAuthenticationPassword", "userId"]}]}]}, "AuthenticationVerifyRequest22V2": {"type": "object", "properties": {}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userId", "password"]}, {"type": "object", "properties": {"phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "passcode": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["phoneNumber", "passcode"]}, {"type": "object", "properties": {"linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["linePort", "password"]}, {"type": "object", "properties": {"loginToken": {"type": "string", "minLength": 1}}, "required": ["loginToken"]}, {"type": "object", "properties": {"sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["sipAuthenticationUserName", "sipAuthenticationPassword", "userId"]}]}]}, "AuthenticationVerifyRequest22V3": {"type": "object", "properties": {}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userId", "password"]}, {"type": "object", "properties": {"phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "passcode": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["phoneNumber", "passcode"]}, {"type": "object", "properties": {"linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["linePort", "password"]}, {"type": "object", "properties": {"loginToken": {"type": "string", "minLength": 1}}, "required": ["loginToken"]}, {"type": "object", "properties": {"sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["sipAuthenticationUserName", "sipAuthenticationPassword", "userId"]}]}]}, "DeviceManagementFileAuthLocationGetRequest": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "deviceAccessMethod": {"type": "string", "minLength": 1, "maxLength": 40}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "accessDeviceUserName": {"type": "string", "minLength": 1, "maxLength": 161}, "accessDeviceUserPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "signedPassword": {"type": "string", "minLength": 1}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "realmName": {"type": "string", "minLength": 1, "maxLength": 265}, "digestHa1Complement": {"type": "string", "minLength": 32, "maxLength": 256}, "digestResponse": {"type": "string", "minLength": 32, "maxLength": 32}}, "required": ["deviceAccessProtocol", "deviceAccessMethod", "deviceAccessURI"]}, "DeviceManagementFileAuthLocationGetRequest17": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "deviceAccessMethod": {"type": "string", "minLength": 1, "maxLength": 40}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "accessDeviceUserName": {"type": "string", "minLength": 1, "maxLength": 161}, "accessDeviceUserPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "signedPassword": {"type": "string", "minLength": 1}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "realmName": {"type": "string", "minLength": 1, "maxLength": 265}, "digestHa1Complement": {"type": "string", "minLength": 32, "maxLength": 256}, "digestResponse": {"type": "string", "minLength": 32, "maxLength": 32}}, "required": ["deviceAccessProtocol", "deviceAccessMethod", "deviceAccessURI"]}, "DeviceManagementFileAuthLocationGetRequest18": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "deviceAccessMethod": {"type": "string", "minLength": 1, "maxLength": 40}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "accessDeviceUserName": {"type": "string", "minLength": 1, "maxLength": 161}, "accessDeviceUserPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "signedPassword": {"type": "string", "minLength": 1}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "realmName": {"type": "string", "minLength": 1, "maxLength": 265}, "digestHa1Complement": {"type": "string", "minLength": 32, "maxLength": 256}, "digestResponse": {"type": "string", "minLength": 32, "maxLength": 32}}, "required": ["deviceAccessProtocol", "deviceAccessMethod", "deviceAccessURI"]}, "DeviceManagementFileAuthLocationGetRequest20sp1": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "deviceAccessMethod": {"type": "string", "minLength": 1, "maxLength": 40}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "accessDeviceUserName": {"type": "string", "minLength": 1, "maxLength": 161}, "accessDeviceUserPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "signedPassword": {"type": "string", "minLength": 1}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "realmName": {"type": "string", "minLength": 1, "maxLength": 265}, "digestHa1Complement": {"type": "string", "minLength": 32, "maxLength": 256}, "digestResponse": {"type": "string", "minLength": 32, "maxLength": 32}}, "required": ["deviceAccessProtocol", "deviceAccessMethod", "deviceAccessURI"]}, "DeviceManagementFileAuthLocationGetRequest21": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "deviceAccessMethod": {"type": "string", "minLength": 1, "maxLength": 40}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "accessDeviceUserName": {"type": "string", "minLength": 1, "maxLength": 161}, "accessDeviceUserPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "deviceToken": {"type": "string", "minLength": 1}, "signedPassword": {"type": "string", "minLength": 1}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "realmName": {"type": "string", "minLength": 1, "maxLength": 265}, "digestHa1Complement": {"type": "string", "minLength": 32, "maxLength": 256}, "digestResponse": {"type": "string", "minLength": 32, "maxLength": 32}}, "required": ["deviceAccessProtocol", "deviceAccessMethod", "deviceAccessURI"]}, "DeviceManagementFileAuthLocationGetRequest21sp1": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "deviceAccessMethod": {"type": "string", "minLength": 1, "maxLength": 40}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "accessDeviceUserName": {"type": "string", "minLength": 1, "maxLength": 161}, "accessDeviceUserPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "deviceToken": {"type": "string", "minLength": 1}, "signedPassword": {"type": "string", "minLength": 1}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "realmName": {"type": "string", "minLength": 1, "maxLength": 265}, "digestHa1Complement": {"type": "string", "minLength": 32, "maxLength": 256}, "digestResponse": {"type": "string", "minLength": 32, "maxLength": 32}}, "required": ["deviceAccessProtocol", "deviceAccessMethod", "deviceAccessURI"]}, "DeviceManagementFileAuthLocationGetRequest22": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "FTPS", "SFTP", "TFTP"]}, "deviceAccessMethod": {"type": "string", "minLength": 1, "maxLength": 40}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "accessDeviceUserName": {"type": "string", "minLength": 1, "maxLength": 161}, "accessDeviceUserPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "deviceToken": {"type": "string", "minLength": 1}, "signedPassword": {"type": "string", "minLength": 1}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "realmName": {"type": "string", "minLength": 1, "maxLength": 265}, "digestHa1Complement": {"type": "string", "minLength": 32, "maxLength": 256}, "digestResponse": {"type": "string", "minLength": 32, "maxLength": 32}}, "required": ["deviceAccessProtocol", "deviceAccessMethod", "deviceAccessURI"]}, "DeviceManagementFileAuthLocationGetRequest22V2": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "FTPS", "SFTP", "TFTP"]}, "deviceAccessMethod": {"type": "string", "minLength": 1, "maxLength": 40}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "accessDeviceUserName": {"type": "string", "minLength": 1, "maxLength": 161}, "accessDeviceUserPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "deviceToken": {"type": "string", "minLength": 1}, "signedPassword": {"type": "string", "minLength": 1}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "realmName": {"type": "string", "minLength": 1, "maxLength": 265}, "digestHa1Complement": {"type": "string", "minLength": 32, "maxLength": 256}, "digestResponse": {"type": "string", "minLength": 32, "maxLength": 32}, "fileNameLookup": {"type": "boolean"}, "fileNameOnDisk": {"type": "string", "minLength": 1, "maxLength": 265}}, "required": ["deviceAccessProtocol", "deviceAccessMethod", "deviceAccessURI"]}, "EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "sortOrder": {"type": "array", "items": {"type": "string"}}, "searchCriteriaMobileSubscriberDirectoryNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDepartmentName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactMobileNetwork": {"type": "array", "items": {"type": "object", "properties": {"mobileNetworkName": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["mobileNetworkName"]}}, "searchCriteriaExactMobileDnAvailability": {"type": "object", "properties": {"available": {"type": "boolean"}}, "required": ["available"]}, "searchCriteriaModeOr": {"type": "boolean"}}, "required": ["serviceProviderId"]}, "EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "sortByMobileDirectoryNumber": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}, "searchCriteriaMobileSubscriberDirectoryNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaModeOr": {"type": "boolean"}}, "required": ["serviceProviderId"]}, "EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "EnterpriseCallCenterEnhancedReportingGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "EnterpriseCallCenterEnhancedReportingModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "reportingServer": {"type": "string", "enum": ["CCRS", "Enhanced", "Both"]}, "webStatisticSource": {"type": "string", "enum": ["CCRS", "Enhanced"]}}, "required": ["serviceProviderId"]}, "EnterpriseCallCenterGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "EnterpriseCallCenterMonitoringGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "EnterpriseEnterpriseTrunkAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "enterpriseTrunkName": {"type": "string", "minLength": 1, "maxLength": 30}, "maximumRerouteAttempts": {"type": "EnterpriseTrunkMaximumRerouteAttempts"}, "routeExhaustionAction": {"type": "EnterpriseTrunkRouteExhaustionAction"}, "routeExhaustionForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}}, "oneOf": [{"type": "object", "properties": {"orderedRouting": {"type": "object", "properties": {"trunkGroup": {"type": "array", "items": {"type": "string"}}, "orderingAlgorithm": {"type": "EnterpriseTrunkOrderingAlgorithm"}}, "required": ["orderingAlgorithm"]}}, "required": ["orderedRouting"]}, {"type": "object", "properties": {"priorityWeightedRouting": {"type": "object", "properties": {"maximumRerouteAttemptsWithinPriority": {"type": "EnterpriseTrunkMaximumRerouteAttempts"}, "priorityWeightedTrunkGroup": {"type": "array", "items": {"type": "string"}}}, "required": ["maximumRerouteAttemptsWithinPriority"]}}, "required": ["priorityWeightedRouting"]}], "required": ["serviceProviderId", "enterpriseTrunkName", "maximumRerouteAttempts", "routeExhaustionAction"]}, "EnterpriseEnterpriseTrunkGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "enterpriseTrunkName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "enterpriseTrunkName"]}, "EnterpriseEnterpriseTrunkGetRequest21": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "enterpriseTrunkName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "enterpriseTrunkName"]}, "EnterprisePhoneDirectoryGetListRequest": {"type": "object", "properties": {"enterpriseId": {"type": "string", "minLength": 1, "maxLength": 30}, "isExtendedInfoRequested": {"type": "boolean"}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupLocationCode": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 15}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaMobilePhoneNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaYahooId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserGroup": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}}, "required": ["enterpriseId", "isExtendedInfoRequested"]}, "EnterprisePhoneDirectoryGetListRequest17": {"type": "object", "properties": {"enterpriseId": {"type": "string", "minLength": 1, "maxLength": 30}, "isExtendedInfoRequested": {"type": "boolean"}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupLocationCode": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 15}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaMobilePhoneNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaYahooId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserGroup": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}}, "required": ["enterpriseId", "isExtendedInfoRequested"]}, "EnterprisePhoneDirectoryGetListRequest17sp3": {"type": "object", "properties": {"enterpriseId": {"type": "string", "minLength": 1, "maxLength": 30}, "isExtendedInfoRequested": {"type": "boolean"}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupLocationCode": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 15}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaMobilePhoneNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaYahooId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserGroup": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaImpId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 196}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["enterpriseId", "isExtendedInfoRequested"]}, "EnterprisePhoneDirectoryGetPagedListRequest": {"type": "object", "properties": {"enterpriseId": {"type": "string", "minLength": 1, "maxLength": 30}, "isExtendedInfoRequested": {"type": "boolean"}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupLocationCode": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 15}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaMobilePhoneNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaYahooId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserGroup": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaImpId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 196}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["enterpriseId", "isExtendedInfoRequested", "responsePagingControl"]}, "EnterpriseSessionAdmissionControlGroupAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "maxSession": {"type": "integer", "minimum": 0.0}, "maxUserOriginatingSessions": {"type": "integer", "minimum": 0.0}, "maxUserTerminatingSessions": {"type": "integer", "minimum": 0.0}, "reservedSession": {"type": "integer", "minimum": 0.0}, "reservedUserOriginatingSessions": {"type": "integer", "minimum": 0.0}, "reservedUserTerminatingSessions": {"type": "integer", "minimum": 0.0}, "becomeDefaultGroup": {"type": "boolean"}, "countIntraSACGroupSessions": {"type": "boolean"}, "devices": {"type": "array", "items": {"type": "string"}}}, "required": ["serviceProviderId", "name", "maxSession", "reservedSession", "becomeDefaultGroup", "countIntraSACGroupSessions"]}, "EnterpriseSessionAdmissionControlGroupGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "name"]}, "EnterpriseSessionAdmissionControlGroupGetRequest19sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "name"]}, "EnterpriseSessionAdmissionControlGroupGetRequest21sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "name"]}, "EnterpriseVoiceVPNGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "GroupAccessDeviceFileGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceFileGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName", "fileType"]}, "GroupAccessDeviceFileGetRequest14sp8": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["serviceProviderId", "groupId", "deviceName", "fileFormat"]}, "GroupAccessDeviceFileGetRequest16sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["serviceProviderId", "groupId", "deviceName", "fileFormat"]}, "GroupAccessDeviceFileModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileSource": {"type": "string", "enum": ["Default", "Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}}, "required": ["serviceProviderId", "groupId", "deviceName", "fileType"]}, "GroupAccessDeviceGetAvailableDetailListRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "isMusicOnHold": {"type": "boolean"}, "onlyVideoCapable": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "isMusicOnHold", "onlyVideoCapable"]}, "GroupAccessDeviceGetPagedSortedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "searchCriteriaDeviceName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 40}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceMACAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 12}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceNetAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactDeviceType": {"type": "array", "items": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}}, "searchCriteriaAccessDeviceVersion": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 1024}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaModeOr": {"type": "boolean"}, "getVisualDeviceManagementAPIDevicesOnly": {"type": "boolean"}}, "oneOf": [{"type": "object", "properties": {"sortByDeviceName": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDeviceName"]}, {"type": "object", "properties": {"sortByDeviceType": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDeviceType"]}, {"type": "object", "properties": {"sortByDeviceNetAddress": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDeviceNetAddress"]}, {"type": "object", "properties": {"sortByDeviceMACAddress": {"type": "object", "properties": {"isAscending": {"type": "boolean"}, "isCaseSensitive": {"type": "boolean"}}, "required": ["isAscending", "isCaseSensitive"]}}, "required": ["sortByDeviceMACAddress"]}], "required": ["serviceProviderId", "groupId"]}, "GroupAccessDeviceGetRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceGetRequest14sp3": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceGetRequest14sp6": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAccessDeviceGetRequest16": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceName"]}, "GroupAdminGetPolicyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "GroupAdminGetPolicyRequest14sp1": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "GroupAdminGetPolicyRequest16sp1": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "GroupAdminGetPolicyRequest16sp2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "GroupAdminGetPolicyRequest17": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "GroupAdminGetPolicyRequest17sp3": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "GroupAnnouncementFileGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "announcementFileKey": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "mediaFileType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "required": ["name", "mediaFileType"]}}, "required": ["serviceProviderId", "groupId", "announcementFileKey"]}, "GroupAutoAttendantAddInstanceRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["name", "callingLineIdLastName", "callingLineIdFirstName"]}, "enableVideo": {"type": "boolean"}, "businessHours": {"type": "string", "minLength": 1, "maxLength": 40}, "holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "extensionDialingScope": {"type": "string", "enum": ["Enterprise", "Group", "Department"]}, "nameDialingScope": {"type": "string", "enum": ["Enterprise", "Group", "Department"]}, "nameDialingEntries": {"type": "string", "enum": ["LastName + FirstName", "LastName + FirstName or FirstName + LastName"]}, "businessHoursMenu": {"type": "object", "properties": {"announcementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "enableFirstMenuLevelExtensionDialing": {"type": "boolean"}, "keyConfiguration": {"type": "array", "items": {"type": "object", "properties": {"key": {"type": "string", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, "entry": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 20}, "action": {"type": "string", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}, "required": ["action"]}}, "required": ["key", "entry"]}}}, "required": ["announcementSelection", "enableFirstMenuLevelExtensionDialing"]}, "afterHoursMenu": {"type": "object", "properties": {"announcementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "enableFirstMenuLevelExtensionDialing": {"type": "boolean"}, "keyConfiguration": {"type": "array", "items": {"type": "object", "properties": {"key": {"type": "string", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, "entry": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 20}, "action": {"type": "string", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}, "required": ["action"]}}, "required": ["key", "entry"]}}}, "required": ["announcementSelection", "enableFirstMenuLevelExtensionDialing"]}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "enableVideo", "extensionDialingScope", "nameDialingScope", "nameDialingEntries"]}, "GroupAutoAttendantAddInstanceRequest16": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["name", "callingLineIdLastName", "callingLineIdFirstName"]}, "enableVideo": {"type": "boolean"}, "businessHours": {"type": "string", "minLength": 1, "maxLength": 40}, "holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "extensionDialingScope": {"type": "string", "enum": ["Enterprise", "Group", "Department"]}, "nameDialingScope": {"type": "string", "enum": ["Enterprise", "Group", "Department"]}, "nameDialingEntries": {"type": "string", "enum": ["LastName + FirstName", "LastName + FirstName or FirstName + LastName"]}, "businessHoursMenu": {"type": "object", "properties": {"announcementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "enableFirstMenuLevelExtensionDialing": {"type": "boolean"}, "keyConfiguration": {"type": "array", "items": {"type": "object", "properties": {"key": {"type": "string", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, "entry": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 20}, "action": {"type": "string", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}, "required": ["action"]}}, "required": ["key", "entry"]}}}, "required": ["announcementSelection", "enableFirstMenuLevelExtensionDialing"]}, "afterHoursMenu": {"type": "object", "properties": {"announcementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "enableFirstMenuLevelExtensionDialing": {"type": "boolean"}, "keyConfiguration": {"type": "array", "items": {"type": "object", "properties": {"key": {"type": "string", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, "entry": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 20}, "action": {"type": "string", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}, "required": ["action"]}}, "required": ["key", "entry"]}}}, "required": ["announcementSelection", "enableFirstMenuLevelExtensionDialing"]}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "enableVideo", "extensionDialingScope", "nameDialingScope", "nameDialingEntries"]}, "GroupAutoAttendantAddInstanceRequest17sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["name", "callingLineIdLastName", "callingLineIdFirstName"]}, "enableVideo": {"type": "boolean"}, "businessHours": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "holidaySchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "extensionDialingScope": {"type": "string", "enum": ["Enterprise", "Group", "Department"]}, "nameDialingScope": {"type": "string", "enum": ["Enterprise", "Group", "Department"]}, "nameDialingEntries": {"type": "string", "enum": ["LastName + FirstName", "LastName + FirstName or FirstName + LastName"]}, "businessHoursMenu": {"type": "object", "properties": {"announcementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "enableFirstMenuLevelExtensionDialing": {"type": "boolean"}, "keyConfiguration": {"type": "array", "items": {"type": "object", "properties": {"key": {"type": "string", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, "entry": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 20}, "action": {"type": "string", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}, "required": ["action"]}}, "required": ["key", "entry"]}}}, "required": ["announcementSelection", "enableFirstMenuLevelExtensionDialing"]}, "afterHoursMenu": {"type": "object", "properties": {"announcementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "enableFirstMenuLevelExtensionDialing": {"type": "boolean"}, "keyConfiguration": {"type": "array", "items": {"type": "object", "properties": {"key": {"type": "string", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, "entry": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 20}, "action": {"type": "string", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}, "required": ["action"]}}, "required": ["key", "entry"]}}}, "required": ["announcementSelection", "enableFirstMenuLevelExtensionDialing"]}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "enableVideo", "extensionDialingScope", "nameDialingScope", "nameDialingEntries"]}, "GroupAutoAttendantGetInstanceRequest14": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupAutoAttendantGetInstanceRequest16": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupAutoAttendantGetInstanceRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupAutoAttendantGetInstanceRequest17sp1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupAutoAttendantModifyInstanceRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}}, "enableVideo": {"type": "boolean"}, "businessHours": {"type": "string", "minLength": 1, "maxLength": 40}, "holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "extensionDialingScope": {"type": "string", "enum": ["Enterprise", "Group", "Department"]}, "nameDialingScope": {"type": "string", "enum": ["Enterprise", "Group", "Department"]}, "nameDialingEntries": {"type": "string", "enum": ["LastName + FirstName", "LastName + FirstName or FirstName + LastName"]}, "businessHoursMenu": {"type": "object", "properties": {"announcementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "enableFirstMenuLevelExtensionDialing": {"type": "boolean"}, "keyConfiguration": {"type": "array", "items": {"type": "object", "properties": {"key": {"type": "string", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, "entry": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 20}, "action": {"type": "string", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "submenuId": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["action"]}}, "required": ["key", "entry"]}}}}, "afterHoursMenu": {"type": "object", "properties": {"announcementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "enableFirstMenuLevelExtensionDialing": {"type": "boolean"}, "keyConfiguration": {"type": "array", "items": {"type": "object", "properties": {"key": {"type": "string", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, "entry": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 20}, "action": {"type": "string", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "submenuId": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["action"]}}, "required": ["key", "entry"]}}}}}, "required": ["serviceUserId"]}, "GroupAutoAttendantModifyInstanceRequest16": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}}, "enableVideo": {"type": "boolean"}, "businessHours": {"type": "string", "minLength": 1, "maxLength": 40}, "holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "extensionDialingScope": {"type": "string", "enum": ["Enterprise", "Group", "Department"]}, "nameDialingScope": {"type": "string", "enum": ["Enterprise", "Group", "Department"]}, "nameDialingEntries": {"type": "string", "enum": ["LastName + FirstName", "LastName + FirstName or FirstName + LastName"]}, "businessHoursMenu": {"type": "object", "properties": {"announcementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "enableFirstMenuLevelExtensionDialing": {"type": "boolean"}, "keyConfiguration": {"type": "array", "items": {"type": "object", "properties": {"key": {"type": "string", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, "entry": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 20}, "action": {"type": "string", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "submenuId": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["action"]}}, "required": ["key", "entry"]}}}}, "afterHoursMenu": {"type": "object", "properties": {"announcementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "enableFirstMenuLevelExtensionDialing": {"type": "boolean"}, "keyConfiguration": {"type": "array", "items": {"type": "object", "properties": {"key": {"type": "string", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, "entry": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 20}, "action": {"type": "string", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "submenuId": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["action"]}}, "required": ["key", "entry"]}}}}}, "required": ["serviceUserId"]}, "GroupBroadWorksAnywhereGetInstanceRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupBroadWorksMobilityGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupBroadWorksMobilityGetRequest19sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupBroadWorksMobilityGetRequest21sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupBroadWorksMobilityGetRequest21sp1V2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupBroadWorksMobilityGetRequest22": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupBroadWorksMobilityGetRequest22V2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupBroadWorksMobilityGetRequest22V3": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallCenterAddInstanceRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {}}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "huntAfterNoAnswer": {"type": "boolean"}, "noAnswerNumberOfRings": {"type": "integer", "minimum": 1.0, "maximum": 20.0}, "forwardAfterTimeout": {"type": "boolean"}, "forwardTimeoutSeconds": {"type": "integer", "minimum": 0.0, "maximum": 7200.0}, "forwardToPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "enableVideo": {"type": "boolean"}, "queueLength": {"type": "integer", "minimum": 0.0, "maximum": 50.0}, "allowAgentLogoff": {"type": "boolean"}, "playMusicOnHold": {"type": "boolean"}, "playComfortMessage": {"type": "boolean"}, "timeBetweenComfortMessagesSeconds": {"type": "integer", "minimum": 10.0, "maximum": 600.0}, "enableGuardTimer": {"type": "boolean"}, "guardTimerSeconds": {"type": "integer", "minimum": 1.0, "maximum": 25.0}, "agentUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "allowCallWaitingForAgents": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "policy", "huntAfterNoAnswer", "noAnswerNumberOfRings", "forwardAfterTimeout", "forwardTimeoutSeconds", "enableVideo", "queueLength", "allowAgentLogoff", "playMusicOnHold", "playComfortMessage", "timeBetweenComfortMessagesSeconds", "enableGuardTimer", "guardTimerSeconds", "allowCallWaitingForAgents"]}, "GroupCallCenterAddInstanceRequest14sp3": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {}}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "huntAfterNoAnswer": {"type": "boolean"}, "noAnswerNumberOfRings": {"type": "integer", "minimum": 1.0, "maximum": 20.0}, "forwardAfterTimeout": {"type": "boolean"}, "forwardTimeoutSeconds": {"type": "integer", "minimum": 0.0, "maximum": 7200.0}, "forwardToPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "enableVideo": {"type": "boolean"}, "queueLength": {"type": "integer", "minimum": 0.0, "maximum": 50.0}, "allowAgentLogoff": {"type": "boolean"}, "playMusicOnHold": {"type": "boolean"}, "playComfortMessage": {"type": "boolean"}, "timeBetweenComfortMessagesSeconds": {"type": "integer", "minimum": 10.0, "maximum": 600.0}, "enableGuardTimer": {"type": "boolean"}, "guardTimerSeconds": {"type": "integer", "minimum": 1.0, "maximum": 25.0}, "agentUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "allowCallWaitingForAgents": {"type": "boolean"}, "allowCallsToAgentsInWrapUp": {"type": "boolean"}, "enableCallQueueWhenNoAgentsAvailable": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "policy", "huntAfterNoAnswer", "noAnswerNumberOfRings", "forwardAfterTimeout", "forwardTimeoutSeconds", "enableVideo", "queueLength", "allowAgentLogoff", "playMusicOnHold", "playComfortMessage", "timeBetweenComfortMessagesSeconds", "enableGuardTimer", "guardTimerSeconds", "allowCallWaitingForAgents", "allowCallsToAgentsInWrapUp", "enableCallQueueWhenNoAgentsAvailable"]}, "GroupCallCenterAddInstanceRequest14sp9": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {}}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "huntAfterNoAnswer": {"type": "boolean"}, "noAnswerNumberOfRings": {"type": "integer", "minimum": 1.0, "maximum": 20.0}, "forwardAfterTimeout": {"type": "boolean"}, "forwardTimeoutSeconds": {"type": "integer", "minimum": 0.0, "maximum": 7200.0}, "forwardToPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "enableVideo": {"type": "boolean"}, "queueLength": {"type": "integer", "minimum": 0.0, "maximum": 50.0}, "allowAgentLogoff": {"type": "boolean"}, "playMusicOnHold": {"type": "boolean"}, "playComfortMessage": {"type": "boolean"}, "timeBetweenComfortMessagesSeconds": {"type": "integer", "minimum": 10.0, "maximum": 600.0}, "enableGuardTimer": {"type": "boolean"}, "guardTimerSeconds": {"type": "integer", "minimum": 1.0, "maximum": 25.0}, "agentUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "allowCallWaitingForAgents": {"type": "boolean"}, "allowCallsToAgentsInWrapUp": {"type": "boolean"}, "enableCallQueueWhenNoAgentsAvailable": {"type": "boolean"}, "statisticsSource": {"type": "string", "enum": ["None", "Application Server", "Call Center Reporting Server"]}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "policy", "huntAfterNoAnswer", "noAnswerNumberOfRings", "forwardAfterTimeout", "forwardTimeoutSeconds", "enableVideo", "queueLength", "allowAgentLogoff", "playMusicOnHold", "playComfortMessage", "timeBetweenComfortMessagesSeconds", "enableGuardTimer", "guardTimerSeconds", "allowCallWaitingForAgents", "allowCallsToAgentsInWrapUp", "enableCallQueueWhenNoAgentsAvailable", "statisticsSource"]}, "GroupCallCenterAddInstanceRequest16": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {}}, "type": {"type": "string", "enum": ["Basic", "Standard", "Premium"]}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "enableVideo": {"type": "boolean"}, "queueLength": {"type": "integer", "minimum": 0.0, "maximum": 525.0}, "reportingServerName": {"type": "string", "minLength": 1, "maxLength": 80}, "allowCallerToDialEscapeDigit": {"type": "boolean"}, "escapeDigit": {"type": "string"}, "resetCallStatisticsUponEntryInQueue": {"type": "boolean"}, "allowAgentLogoff": {"type": "boolean"}, "allowCallWaitingForAgents": {"type": "boolean"}, "allowCallsToAgentsInWrapUp": {"type": "boolean"}, "overrideAgentWrapUpTime": {"type": "boolean"}, "wrapUpSeconds": {"type": "integer", "minimum": 1.0, "maximum": 3600.0}, "forceDeliveryOfCalls": {"type": "boolean"}, "forceDeliveryWaitTimeSeconds": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "externalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "internalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "playRingingWhenOfferingCall": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "type", "policy", "enableVideo", "queueLength", "allowCallerToDialEscapeDigit", "escapeDigit", "allowAgentLogoff", "allowCallWaitingForAgents", "externalPreferredAudioCodec", "internalPreferredAudioCodec", "playRingingWhenOfferingCall"]}, "GroupCallCenterAddInstanceRequest17": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {}}, "type": {"type": "string", "enum": ["Basic", "Standard", "Premium"]}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "enableVideo": {"type": "boolean"}, "queueLength": {"type": "integer", "minimum": 0.0, "maximum": 525.0}, "reportingServerName": {"type": "string", "minLength": 1, "maxLength": 80}, "allowCallerToDialEscapeDigit": {"type": "boolean"}, "escapeDigit": {"type": "string"}, "resetCallStatisticsUponEntryInQueue": {"type": "boolean"}, "allowAgentLogoff": {"type": "boolean"}, "allowCallWaitingForAgents": {"type": "boolean"}, "allowCallsToAgentsInWrapUp": {"type": "boolean"}, "overrideAgentWrapUpTime": {"type": "boolean"}, "wrapUpSeconds": {"type": "integer", "minimum": 1.0, "maximum": 3600.0}, "forceDeliveryOfCalls": {"type": "boolean"}, "forceDeliveryWaitTimeSeconds": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "enableAutomaticStateChangeForAgents": {"type": "boolean"}, "agentStateAfterCall": {"type": "string", "enum": ["Available", "Unavailable", "Wrap-Up"]}, "agentUnavailableCode": {"type": "string", "minLength": 1, "maxLength": 10}, "externalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "internalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "playRingingWhenOfferingCall": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "type", "policy", "enableVideo", "queueLength", "allowCallerToDialEscapeDigit", "escapeDigit", "allowAgentLogoff", "allowCallWaitingForAgents", "externalPreferredAudioCodec", "internalPreferredAudioCodec", "playRingingWhenOfferingCall"]}, "GroupCallCenterAddInstanceRequest17sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {}}, "type": {"type": "string", "enum": ["Basic", "Standard", "Premium"]}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "enableVideo": {"type": "boolean"}, "queueLength": {"type": "integer", "minimum": 0.0, "maximum": 525.0}, "enableReporting": {"type": "boolean"}, "reportingServerName": {"type": "string", "minLength": 1, "maxLength": 80}, "allowCallerToDialEscapeDigit": {"type": "boolean"}, "escapeDigit": {"type": "string"}, "resetCallStatisticsUponEntryInQueue": {"type": "boolean"}, "allowAgentLogoff": {"type": "boolean"}, "allowCallWaitingForAgents": {"type": "boolean"}, "allowCallsToAgentsInWrapUp": {"type": "boolean"}, "overrideAgentWrapUpTime": {"type": "boolean"}, "wrapUpSeconds": {"type": "integer", "minimum": 1.0, "maximum": 3600.0}, "forceDeliveryOfCalls": {"type": "boolean"}, "forceDeliveryWaitTimeSeconds": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "enableAutomaticStateChangeForAgents": {"type": "boolean"}, "agentStateAfterCall": {"type": "string", "enum": ["Available", "Unavailable", "Wrap-Up"]}, "agentUnavailableCode": {"type": "string", "minLength": 1, "maxLength": 10}, "externalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "internalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "playRingingWhenOfferingCall": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "type", "policy", "enableVideo", "queueLength", "allowCallerToDialEscapeDigit", "escapeDigit", "allowAgentLogoff", "allowCallWaitingForAgents", "externalPreferredAudioCodec", "internalPreferredAudioCodec", "playRingingWhenOfferingCall"]}, "GroupCallCenterAddInstanceRequest17sp3": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {}}, "type": {"type": "string", "enum": ["Basic", "Standard", "Premium"]}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "enableVideo": {"type": "boolean"}, "queueLength": {"type": "integer", "minimum": 0.0, "maximum": 525.0}, "enableReporting": {"type": "boolean"}, "reportingServerName": {"type": "string", "minLength": 1, "maxLength": 80}, "allowCallerToDialEscapeDigit": {"type": "boolean"}, "escapeDigit": {"type": "string"}, "resetCallStatisticsUponEntryInQueue": {"type": "boolean"}, "allowAgentLogoff": {"type": "boolean"}, "allowCallWaitingForAgents": {"type": "boolean"}, "allowCallsToAgentsInWrapUp": {"type": "boolean"}, "overrideAgentWrapUpTime": {"type": "boolean"}, "wrapUpSeconds": {"type": "integer", "minimum": 1.0, "maximum": 3600.0}, "forceDeliveryOfCalls": {"type": "boolean"}, "forceDeliveryWaitTimeSeconds": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "enableAutomaticStateChangeForAgents": {"type": "boolean"}, "agentStateAfterCall": {"type": "string", "enum": ["Available", "Unavailable", "Wrap-Up"]}, "agentUnavailableCode": {"type": "string", "minLength": 1, "maxLength": 10}, "externalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "internalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "playRingingWhenOfferingCall": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "type", "policy", "enableVideo", "queueLength", "allowCallerToDialEscapeDigit", "escapeDigit", "resetCallStatisticsUponEntryInQueue", "allowAgentLogoff", "allowCallWaitingForAgents", "externalPreferredAudioCodec", "internalPreferredAudioCodec", "playRingingWhenOfferingCall"]}, "GroupCallCenterAddInstanceRequest19": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {}}, "type": {"type": "string", "enum": ["Basic", "Standard", "Premium"]}, "routingType": {"type": "string", "enum": ["Priority Based", "Skill Based"]}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "enableVideo": {"type": "boolean"}, "queueLength": {"type": "integer", "minimum": 0.0, "maximum": 525.0}, "enableReporting": {"type": "boolean"}, "allowCallerToDialEscapeDigit": {"type": "boolean"}, "escapeDigit": {"type": "string"}, "resetCallStatisticsUponEntryInQueue": {"type": "boolean"}, "allowAgentLogoff": {"type": "boolean"}, "allowCallWaitingForAgents": {"type": "boolean"}, "allowCallsToAgentsInWrapUp": {"type": "boolean"}, "overrideAgentWrapUpTime": {"type": "boolean"}, "wrapUpSeconds": {"type": "integer", "minimum": 1.0, "maximum": 3600.0}, "forceDeliveryOfCalls": {"type": "boolean"}, "forceDeliveryWaitTimeSeconds": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "enableAutomaticStateChangeForAgents": {"type": "boolean"}, "agentStateAfterCall": {"type": "string", "enum": ["Available", "Unavailable", "Wrap-Up"]}, "agentUnavailableCode": {"type": "string", "minLength": 1, "maxLength": 10}, "externalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "internalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "playRingingWhenOfferingCall": {"type": "boolean"}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "type", "policy", "enableVideo", "queueLength", "allowCallerToDialEscapeDigit", "escapeDigit", "resetCallStatisticsUponEntryInQueue", "allowAgentLogoff", "allowCallWaitingForAgents", "externalPreferredAudioCodec", "internalPreferredAudioCodec", "playRingingWhenOfferingCall"]}, "GroupCallCenterAgentUnavailableCodeSettingsGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallCenterBouncedCallGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterComfortMessageBypassGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterComfortMessageBypassGetRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterComfortMessageBypassModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "isActive": {"type": "boolean"}, "callWaitingAgeThresholdSeconds": {"type": "CallCenterComfortMessageBypassThresholdSeconds"}, "playAnnouncementAfterRinging": {"type": "boolean"}, "ringTimeBeforePlayingAnnouncementSeconds": {"type": "CallCenterRingTimeBeforePlayingComfortMessageBypassAnnouncementSeconds"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}}, "required": ["serviceUserId"]}, "GroupCallCenterComfortMessageBypassModifyRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "isActive": {"type": "boolean"}, "callWaitingAgeThresholdSeconds": {"type": "CallCenterComfortMessageBypassThresholdSeconds"}, "playAnnouncementAfterRinging": {"type": "boolean"}, "ringTimeBeforePlayingAnnouncementSeconds": {"type": "CallCenterRingTimeBeforePlayingComfortMessageBypassAnnouncementSeconds"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "audioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}}, "required": ["serviceUserId"]}, "GroupCallCenterEnhancedGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterEnhancedModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "overrideAgentWrapUpTime": {"type": "boolean"}, "wrapUpSeconds": {"type": "integer", "minimum": 1.0, "maximum": 3600.0}}, "required": ["serviceUserId"]}, "GroupCallCenterEnhancedReportingGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallCenterEnhancedReportingModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "reportingServer": {"type": "string", "enum": ["CCRS", "Enhanced", "Both"]}, "webStatisticSource": {"type": "string", "enum": ["CCRS", "Enhanced"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallCenterForcedForwardingGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterForcedForwardingGetRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterForcedForwardingModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "isActive": {"type": "boolean"}, "forwardToPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "allowEnableViaFAC": {"type": "boolean"}, "playAnnouncementBeforeForwarding": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}}, "required": ["serviceUserId"]}, "GroupCallCenterGetAnnouncementRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetAnnouncementRequest14sp6": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetAnnouncementRequest16": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetAnnouncementRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetAnnouncementRequest17sp4": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetAvailableUserListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaExactUserGroup": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallCenterGetDNISAnnouncementRequest": {"type": "object", "properties": {"dnisKey": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId", "name"]}}, "required": ["dnisKey"]}, "GroupCallCenterGetDNISAnnouncementRequest17sp4": {"type": "object", "properties": {"dnisKey": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId", "name"]}}, "required": ["dnisKey"]}, "GroupCallCenterGetDNISAnnouncementRequest19": {"type": "object", "properties": {"dnisKey": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId", "name"]}}, "required": ["dnisKey"]}, "GroupCallCenterGetDNISAnnouncementRequest20": {"type": "object", "properties": {"dnisKey": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId", "name"]}}, "required": ["dnisKey"]}, "GroupCallCenterGetInstanceRequest14": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetInstanceRequest14sp3": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetInstanceRequest14sp9": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetInstanceRequest16": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetInstanceRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetInstanceRequest17sp1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetInstanceRequest17sp3": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetInstanceRequest19": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetInstanceRequest19sp1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetInstanceStatisticsReportingRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetInstanceStatisticsReportingRequest16": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetInstanceStatisticsRequest13mp8": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallCenterGetSupervisorListRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterHolidayServiceGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterHolidayServiceGetRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterHolidayServiceGetRequest17sp1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterHolidayServiceModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "string", "enum": ["None", "Busy", "Transfer"]}, "holidaySchedule": {"type": "string", "minLength": 1, "maxLength": 40}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "playAnnouncementBeforeAction": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}}, "required": ["serviceUserId"]}, "GroupCallCenterHolidayServiceModifyRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "string", "enum": ["None", "Busy", "Transfer"]}, "holidaySchedule": {"type": "string", "minLength": 1, "maxLength": 40}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "playAnnouncementBeforeAction": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "audioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}}, "required": ["serviceUserId"]}, "GroupCallCenterHolidayServiceModifyRequest17sp1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "string", "enum": ["None", "Busy", "Transfer"]}, "holidaySchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "playAnnouncementBeforeAction": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "audioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}}, "required": ["serviceUserId"]}, "GroupCallCenterModifyAnnouncementRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "entranceMessageSelection": {"type": "CallCenterAnnouncementSelection"}, "entranceMessageAudioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "entranceMessageVideoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "periodicComfortMessageSelection": {"type": "CallCenterAnnouncementSelection"}, "periodicComfortMessageAudioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "periodicComfortMessageVideoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "onHoldMessageSelection": {"type": "CallCenterAnnouncementSelection"}, "onHoldMessageAudioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "onHoldMessageVideoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}, "required": ["serviceUserId"]}, "GroupCallCenterModifyAnnouncementRequest14sp6": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "entranceMessageSelection": {"type": "CallCenterAnnouncementSelection"}, "entranceMessageAudioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "entranceMessageVideoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "periodicComfortMessageSelection": {"type": "CallCenterAnnouncementSelection"}, "periodicComfortMessageAudioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "periodicComfortMessageVideoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "onHoldSource": {"type": "object", "properties": {"audioFilePreferredCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "messageSourceSelection": {"type": "CallCenterAnnouncementSelection"}, "customSource": {"type": "object", "properties": {"audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}}}}, "onHoldUseAlternateSourceForInternalCalls": {"type": "boolean"}, "onHoldInternalSource": {"type": "object", "properties": {"audioFilePreferredCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "messageSourceSelection": {"type": "CallCenterAnnouncementSelection"}, "customSource": {"type": "object", "properties": {"audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}}}}}, "required": ["serviceUserId"]}, "GroupCallCenterModifyAnnouncementRequest16": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "playEntranceMessage": {"type": "boolean"}, "mandatoryEntranceMessage": {"type": "boolean"}, "entranceAudioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "entranceMessageAudioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "entranceVideoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "entranceMessageVideoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "playPeriodicComfortMessage": {"type": "boolean"}, "timeBetweenComfortMessagesSeconds": {"type": "integer", "minimum": 10.0, "maximum": 600.0}, "periodicComfortAudioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "periodicComfortMessageAudioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "periodicComfortVideoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "periodicComfortMessageVideoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "enableMediaOnHoldForQueuedCalls": {"type": "boolean"}, "mediaOnHoldSource": {"type": "object", "properties": {"audioMessageSourceSelection": {"type": "string", "enum": ["Default", "URL", "Custom", "External"]}, "audioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "externalAudioSource": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}, "videoMessageSourceSelection": {"type": "string", "enum": ["Default", "URL", "Custom", "External"]}, "videoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "externalVideoSource": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}}, "mediaOnHoldUseAlternateSourceForInternalCalls": {"type": "boolean"}, "mediaOnHoldInternalSource": {"type": "object", "properties": {"audioMessageSourceSelection": {"type": "string", "enum": ["Default", "URL", "Custom", "External"]}, "audioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "externalAudioSource": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}, "videoMessageSourceSelection": {"type": "string", "enum": ["Default", "URL", "Custom", "External"]}, "videoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "externalVideoSource": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}}}, "required": ["serviceUserId"]}, "GroupCallCenterModifyDNISAnnouncementRequest": {"type": "object", "properties": {"dnisKey": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId", "name"]}, "playEntranceMessage": {"type": "boolean"}, "mandatoryEntranceMessage": {"type": "boolean"}, "entranceAudioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "entranceMessageAudioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "entranceMessageAudioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "entranceVideoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "entranceMessageVideoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "entranceMessageVideoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "playPeriodicComfortMessage": {"type": "boolean"}, "timeBetweenComfortMessagesSeconds": {"type": "integer", "minimum": 10.0, "maximum": 600.0}, "periodicComfortAudioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "periodicComfortMessageAudioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "periodicComfortMessageAudioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "periodicComfortVideoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "periodicComfortMessageVideoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "periodicComfortMessageVideoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "enableMediaOnHoldForQueuedCalls": {"type": "boolean"}, "mediaOnHoldSource": {"type": "CallCenterMediaOnHoldSourceModify17"}, "playWhisperMessage": {"type": "boolean"}, "whisperAudioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "whisperMessageAudioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "whisperMessageAudioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "whisperVideoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "whisperMessageVideoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "whisperMessageVideoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "estimatedWaitMessageOptionsModify": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "operatingMode": {"type": "string", "enum": ["Position", "Time"]}, "playPositionHighVolume": {"type": "boolean"}, "playTimeHighVolume": {"type": "boolean"}, "maximumPositions": {"type": "integer", "minimum": 1.0, "maximum": 100.0}, "maximumWaitingMinutes": {"type": "integer", "minimum": 1.0, "maximum": 100.0}, "defaultCallHandlingMinutes": {"type": "integer", "minimum": 1.0, "maximum": 100.0}, "playUpdatedEWM": {"type": "boolean"}, "timeBetweenEWMUpdatesSeconds": {"type": "integer", "minimum": 10.0, "maximum": 600.0}}}}, "required": ["dnisKey"]}, "GroupCallCenterModifyInstanceRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "huntAfterNoAnswer": {"type": "boolean"}, "noAnswerNumberOfRings": {"type": "integer", "minimum": 1.0, "maximum": 20.0}, "forwardAfterTimeout": {"type": "boolean"}, "forwardTimeoutSeconds": {"type": "integer", "minimum": 0.0, "maximum": 7200.0}, "forwardToPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "enableVideo": {"type": "boolean"}, "queueLength": {"type": "integer", "minimum": 0.0, "maximum": 50.0}, "allowAgentLogoff": {"type": "boolean"}, "playMusicOnHold": {"type": "boolean"}, "playComfortMessage": {"type": "boolean"}, "timeBetweenComfortMessagesSeconds": {"type": "integer", "minimum": 10.0, "maximum": 600.0}, "enableGuardTimer": {"type": "boolean"}, "guardTimerSeconds": {"type": "integer", "minimum": 1.0, "maximum": 25.0}, "agentUserIdList": {"type": "object", "properties": {"userId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["userId"]}, "allowCallWaitingForAgents": {"type": "boolean"}, "allowCallsToAgentsInWrapUp": {"type": "boolean"}, "enableCallQueueWhenNoAgentsAvailable": {"type": "boolean"}, "statisticsSource": {"type": "string", "enum": ["None", "Application Server", "Call Center Reporting Server"]}}, "required": ["serviceUserId"]}, "GroupCallCenterModifyInstanceRequest16": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}}, "type": {"type": "string", "enum": ["Basic", "Standard", "Premium"]}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "enableVideo": {"type": "boolean"}, "queueLength": {"type": "integer", "minimum": 0.0, "maximum": 525.0}, "reportingServerName": {"type": "string", "minLength": 1, "maxLength": 80}, "allowCallerToDialEscapeDigit": {"type": "boolean"}, "escapeDigit": {"type": "string"}, "resetCallStatisticsUponEntryInQueue": {"type": "boolean"}, "allowAgentLogoff": {"type": "boolean"}, "allowCallWaitingForAgents": {"type": "boolean"}, "allowCallsToAgentsInWrapUp": {"type": "boolean"}, "overrideAgentWrapUpTime": {"type": "boolean"}, "wrapUpSeconds": {"type": "integer", "minimum": 1.0, "maximum": 3600.0}, "forceDeliveryOfCalls": {"type": "boolean"}, "forceDeliveryWaitTimeSeconds": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "enableAutomaticStateChangeForAgents": {"type": "boolean"}, "agentStateAfterCall": {"type": "string", "enum": ["Available", "Unavailable", "Wrap-Up"]}, "agentUnavailableCode": {"type": "string", "minLength": 1, "maxLength": 10}, "externalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "internalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "playRingingWhenOfferingCall": {"type": "boolean"}}, "required": ["serviceUserId"]}, "GroupCallCenterModifyInstanceRequest17sp1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}}, "type": {"type": "string", "enum": ["Basic", "Standard", "Premium"]}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "enableVideo": {"type": "boolean"}, "queueLength": {"type": "integer", "minimum": 0.0, "maximum": 525.0}, "enableReporting": {"type": "boolean"}, "reportingServerName": {"type": "string", "minLength": 1, "maxLength": 80}, "allowCallerToDialEscapeDigit": {"type": "boolean"}, "escapeDigit": {"type": "string"}, "resetCallStatisticsUponEntryInQueue": {"type": "boolean"}, "allowAgentLogoff": {"type": "boolean"}, "allowCallWaitingForAgents": {"type": "boolean"}, "allowCallsToAgentsInWrapUp": {"type": "boolean"}, "overrideAgentWrapUpTime": {"type": "boolean"}, "wrapUpSeconds": {"type": "integer", "minimum": 1.0, "maximum": 3600.0}, "forceDeliveryOfCalls": {"type": "boolean"}, "forceDeliveryWaitTimeSeconds": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "enableAutomaticStateChangeForAgents": {"type": "boolean"}, "agentStateAfterCall": {"type": "string", "enum": ["Available", "Unavailable", "Wrap-Up"]}, "agentUnavailableCode": {"type": "string", "minLength": 1, "maxLength": 10}, "externalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "internalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "playRingingWhenOfferingCall": {"type": "boolean"}}, "required": ["serviceUserId"]}, "GroupCallCenterModifyInstanceRequest19": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}}, "type": {"type": "string", "enum": ["Basic", "Standard", "Premium"]}, "routingType": {"type": "string", "enum": ["Priority Based", "Skill Based"]}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "enableVideo": {"type": "boolean"}, "queueLength": {"type": "integer", "minimum": 0.0, "maximum": 525.0}, "enableReporting": {"type": "boolean"}, "allowCallerToDialEscapeDigit": {"type": "boolean"}, "escapeDigit": {"type": "string"}, "resetCallStatisticsUponEntryInQueue": {"type": "boolean"}, "allowAgentLogoff": {"type": "boolean"}, "allowCallWaitingForAgents": {"type": "boolean"}, "allowCallsToAgentsInWrapUp": {"type": "boolean"}, "overrideAgentWrapUpTime": {"type": "boolean"}, "wrapUpSeconds": {"type": "integer", "minimum": 1.0, "maximum": 3600.0}, "forceDeliveryOfCalls": {"type": "boolean"}, "forceDeliveryWaitTimeSeconds": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "enableAutomaticStateChangeForAgents": {"type": "boolean"}, "agentStateAfterCall": {"type": "string", "enum": ["Available", "Unavailable", "Wrap-Up"]}, "agentUnavailableCode": {"type": "string", "minLength": 1, "maxLength": 10}, "externalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "internalPreferredAudioCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "playRingingWhenOfferingCall": {"type": "boolean"}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId"]}, "GroupCallCenterModifyInstanceStatisticsReportingRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "clearTodayStatistics": {"type": "boolean"}, "generateDailyReport": {"type": "boolean"}, "collectionPeriodMinutes": {"type": "CallCenterStatisticsCollectionPeriodMinutes"}, "reportingEmailAddress1": {"type": "string", "minLength": 1, "maxLength": 80}, "reportingEmailAddress2": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceUserId"]}, "GroupCallCenterModifyInstanceStatisticsReportingRequest14sp9": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "generateDailyReport": {"type": "boolean"}, "collectionPeriodMinutes": {"type": "CallCenterStatisticsCollectionPeriodMinutes"}, "reportingEmailAddress1": {"type": "string", "minLength": 1, "maxLength": 80}, "reportingEmailAddress2": {"type": "string", "minLength": 1, "maxLength": 80}, "statisticsSource": {"type": "string", "enum": ["None", "Application Server", "Call Center Reporting Server"]}}, "required": ["serviceUserId"]}, "GroupCallCenterModifySupervisorListRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "reportingServerURL": {"type": "string", "minLength": 1, "maxLength": 256}, "supervisorUserIdList": {"type": "object", "properties": {"userId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["userId"]}}, "required": ["serviceUserId"]}, "GroupCallCenterNightServiceGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterNightServiceGetRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterNightServiceModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "string", "enum": ["None", "Busy", "Transfer"]}, "businessHours": {"type": "string", "minLength": 1, "maxLength": 40}, "forceNightService": {"type": "boolean"}, "allowManualOverrideViaFAC": {"type": "boolean"}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "playAnnouncementBeforeAction": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "manualAnnouncementMode": {"type": "string", "enum": ["Normal Announcement", "Manual Announcement"]}, "manualAudioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "manualAudioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "manualVideoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "manualVideoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}}, "required": ["serviceUserId"]}, "GroupCallCenterNightServiceModifyRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "string", "enum": ["None", "Busy", "Transfer"]}, "businessHours": {"type": "string", "minLength": 1, "maxLength": 40}, "forceNightService": {"type": "boolean"}, "allowManualOverrideViaFAC": {"type": "boolean"}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "playAnnouncementBeforeAction": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "audioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "manualAnnouncementMode": {"type": "string", "enum": ["Normal Announcement", "Manual Announcement"]}, "manualAudioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "manualAudioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "manualAudioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "manualVideoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "manualVideoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "manualVideoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}}, "required": ["serviceUserId"]}, "GroupCallCenterOverflowGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterOverflowModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "string", "enum": ["Busy", "Transfer", "Ringing"]}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "overflowAfterTimeout": {"type": "boolean"}, "timeoutSeconds": {"type": "integer", "minimum": 0.0, "maximum": 7200.0}, "playAnnouncementBeforeOverflowProcessing": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}}, "required": ["serviceUserId"]}, "GroupCallCenterStrandedCallGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterStrandedCallGetRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterStrandedCallModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "CallCenterStrandedCallProcessingAction"}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}}, "required": ["serviceUserId"]}, "GroupCallCenterStrandedCallModifyRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "CallCenterStrandedCallProcessingAction"}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "audioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}}, "required": ["serviceUserId"]}, "GroupCallCenterStrandedCallUnavailableGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterStrandedCallUnavailableModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "conditionPolicyOnNumberOfAgentsWithSpecifiedUnavailableCode": {"type": "boolean"}, "numberOfAgentsWithSpecifiedUnavailableCode": {"type": "CallCenterStrandedCallUnavailableNumberOfAgents"}, "agentsUnavailableCode": {"type": "string", "minLength": 1, "maxLength": 10}, "action": {"type": "CallCenterStrandedCallUnavailableProcessingAction"}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "audioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}}, "required": ["serviceUserId"]}, "GroupCallCenterSupervisorReportingGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCallCenterSupervisorReportingModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "reportingServerName": {"type": "string", "minLength": 1, "maxLength": 80}, "supervisorUserIdList": {"type": "object", "properties": {"userId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["userId"]}}, "required": ["serviceUserId"]}, "GroupCallingLineIdGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallingLineIdModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useGroupNumber": {"type": "boolean"}, "useGroupName": {"type": "boolean"}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallParkAddInstanceRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 80}, "userId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupCallParkGetInstanceRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupCallParkGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest14sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest14sp4": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest14sp7": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest15": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest15sp2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest16": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest16sp2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest17": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest17sp3": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest17sp4": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest18": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest18sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest19sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingGetPolicyRequest21sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingModifyPolicyRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useGroupSetting": {"type": "boolean"}, "useMaxSimultaneousCalls": {"type": "boolean"}, "maxSimultaneousCalls": {"type": "integer", "minimum": 1.0, "maximum": 500.0}, "useMaxSimultaneousVideoCalls": {"type": "boolean"}, "maxSimultaneousVideoCalls": {"type": "integer", "minimum": 1.0, "maximum": 500.0}, "useMaxCallTimeForAnsweredCalls": {"type": "boolean"}, "maxCallTimeForAnsweredCallsMinutes": {"type": "integer", "minimum": 5.0, "maximum": 2880.0}, "useMaxCallTimeForUnansweredCalls": {"type": "boolean"}, "maxCallTimeForUnansweredCallsMinutes": {"type": "integer", "minimum": 1.0, "maximum": 60.0}, "mediaPolicySelection": {"type": "string", "enum": ["Use Uncompressed Codec", "Use Supported Media Set", "No Restrictions"]}, "supportedMediaSetName": {"type": "string", "minLength": 1, "maxLength": 80}, "networkUsageSelection": {"type": "string", "enum": ["Force All Calls", "Force All Except Extension and Location Calls", "Do Not Force Enterprise and Group Calls"]}, "enforceGroupCallingLineIdentityRestriction": {"type": "boolean"}, "allowEnterpriseGroupCallTypingForPrivateDialingPlan": {"type": "boolean"}, "allowEnterpriseGroupCallTypingForPublicDialingPlan": {"type": "boolean"}, "overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan": {"type": "boolean"}, "enableEnterpriseExtensionDialing": {"type": "boolean"}, "useMaxConcurrentRedirectedCalls": {"type": "boolean"}, "maxConcurrentRedirectedCalls": {"type": "integer", "minimum": 1.0, "maximum": 32.0}, "useMaxFindMeFollowMeDepth": {"type": "boolean"}, "maxFindMeFollowMeDepth": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "maxRedirectionDepth": {"type": "integer", "minimum": 1.0, "maximum": 15.0}, "useMaxConcurrentFindMeFollowMeInvocations": {"type": "boolean"}, "maxConcurrentFindMeFollowMeInvocations": {"type": "integer", "minimum": 1.0, "maximum": 32.0}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingModifyPolicyRequest14sp7": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useGroupCLIDSetting": {"type": "boolean"}, "useGroupMediaSetting": {"type": "boolean"}, "useGroupCallLimitsSetting": {"type": "boolean"}, "useGroupTranslationRoutingSetting": {"type": "boolean"}, "useMaxSimultaneousCalls": {"type": "boolean"}, "maxSimultaneousCalls": {"type": "integer", "minimum": 1.0, "maximum": 500.0}, "useMaxSimultaneousVideoCalls": {"type": "boolean"}, "maxSimultaneousVideoCalls": {"type": "integer", "minimum": 1.0, "maximum": 500.0}, "useMaxCallTimeForAnsweredCalls": {"type": "boolean"}, "maxCallTimeForAnsweredCallsMinutes": {"type": "integer", "minimum": 5.0, "maximum": 2880.0}, "useMaxCallTimeForUnansweredCalls": {"type": "boolean"}, "maxCallTimeForUnansweredCallsMinutes": {"type": "integer", "minimum": 1.0, "maximum": 60.0}, "mediaPolicySelection": {"type": "string", "enum": ["Use Uncompressed Codec", "Use Supported Media Set", "No Restrictions"]}, "supportedMediaSetName": {"type": "string", "minLength": 1, "maxLength": 80}, "networkUsageSelection": {"type": "string", "enum": ["Force All Calls", "Force All Except Extension and Location Calls", "Do Not Force Enterprise and Group Calls"]}, "enforceGroupCallingLineIdentityRestriction": {"type": "boolean"}, "allowEnterpriseGroupCallTypingForPrivateDialingPlan": {"type": "boolean"}, "allowEnterpriseGroupCallTypingForPublicDialingPlan": {"type": "boolean"}, "overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan": {"type": "boolean"}, "enableEnterpriseExtensionDialing": {"type": "boolean"}, "useMaxConcurrentRedirectedCalls": {"type": "boolean"}, "maxConcurrentRedirectedCalls": {"type": "integer", "minimum": 1.0, "maximum": 32.0}, "useMaxFindMeFollowMeDepth": {"type": "boolean"}, "maxFindMeFollowMeDepth": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "maxRedirectionDepth": {"type": "integer", "minimum": 1.0, "maximum": 15.0}, "useMaxConcurrentFindMeFollowMeInvocations": {"type": "boolean"}, "maxConcurrentFindMeFollowMeInvocations": {"type": "integer", "minimum": 1.0, "maximum": 32.0}, "clidPolicy": {"type": "string", "enum": ["Use DN", "Use Configurable CLID", "Use Group CLID"]}, "emergencyClidPolicy": {"type": "string", "enum": ["Use DN", "Use Configurable CLID", "Use Group CLID"]}, "allowAlternateNumbersForRedirectingIdentity": {"type": "boolean"}, "useGroupName": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId"]}, "GroupCallProcessingModifyPolicyRequest15": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useGroupSetting": {"type": "boolean"}, "useMaxSimultaneousCalls": {"type": "boolean"}, "maxSimultaneousCalls": {"type": "integer", "minimum": 1.0, "maximum": 500.0}, "useMaxSimultaneousVideoCalls": {"type": "boolean"}, "maxSimultaneousVideoCalls": {"type": "integer", "minimum": 1.0, "maximum": 500.0}, "useMaxCallTimeForAnsweredCalls": {"type": "boolean"}, "maxCallTimeForAnsweredCallsMinutes": {"type": "integer", "minimum": 5.0, "maximum": 2880.0}, "useMaxCallTimeForUnansweredCalls": {"type": "boolean"}, "maxCallTimeForUnansweredCallsMinutes": {"type": "integer", "minimum": 1.0, "maximum": 60.0}, "mediaPolicySelection": {"type": "string", "enum": ["Use Uncompressed Codec", "Use Supported Media Set", "No Restrictions"]}, "supportedMediaSetName": {"type": "string", "minLength": 1, "maxLength": 80}, "networkUsageSelection": {"type": "string", "enum": ["Force All Calls", "Force All Except Extension and Location Calls", "Do Not Force Enterprise and Group Calls"]}, "enforceGroupCallingLineIdentityRestriction": {"type": "boolean"}, "allowEnterpriseGroupCallTypingForPrivateDialingPlan": {"type": "boolean"}, "allowEnterpriseGroupCallTypingForPublicDialingPlan": {"type": "boolean"}, "overrideCLIDRestrictionForPrivateCallCategory": {"type": "boolean"}, "useEnterpriseCLIDForPrivateCallCategory": {"type": "boolean"}, "enableEnterpriseExtensionDialing": {"type": "boolean"}, "useMaxConcurrentRedirectedCalls": {"type": "boolean"}, "maxConcurrentRedirectedCalls": {"type": "integer", "minimum": 1.0, "maximum": 32.0}, "useMaxFindMeFollowMeDepth": {"type": "boolean"}, "maxFindMeFollowMeDepth": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "maxRedirectionDepth": {"type": "integer", "minimum": 1.0, "maximum": 15.0}, "useMaxConcurrentFindMeFollowMeInvocations": {"type": "boolean"}, "maxConcurrentFindMeFollowMeInvocations": {"type": "integer", "minimum": 1.0, "maximum": 32.0}}, "required": ["serviceProviderId", "groupId"]}, "GroupCollaborateBridgeAddInstanceRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["name", "callingLineIdLastName", "callingLineIdFirstName"]}, "maximumBridgeParticipants": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 3.0, "maximum": 999999.0}}, "required": ["quantity"]}]}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}, "maxCollaborateRoomParticipants": {"type": "integer", "minimum": 3.0, "maximum": 30.0}, "supportOutdial": {"type": "boolean"}, "collaborateOwnerUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "maximumBridgeParticipants", "maxCollaborateRoomParticipants", "supportOutdial"]}, "GroupCollaborateBridgeGetInstanceRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupCollaborateBridgeModifyInstanceRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}}, "maximumBridgeParticipants": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 3.0, "maximum": 999999.0}}, "required": ["quantity"]}]}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}, "maxCollaborateRoomParticipants": {"type": "integer", "minimum": 3.0, "maximum": 30.0}, "supportOutdial": {"type": "boolean"}, "collaborateOwnerUserIdList": {"type": "object", "properties": {"userId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["userId"]}}, "required": ["serviceUserId"]}, "GroupCustomContactDirectoryAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "userId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupCustomContactDirectoryGetAvailableUserListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaExactUserGroup": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupCustomContactDirectoryGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupCustomContactDirectoryModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "newName": {"type": "string", "minLength": 1, "maxLength": 40}, "userIdList": {"type": "object", "properties": {"userId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["userId"]}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupCustomRingbackGroupGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupCustomRingbackGroupModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "isActive": {"type": "boolean"}, "audioSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}}, "required": ["serviceProviderId", "groupId"]}, "GroupDepartmentGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "includeEnterpriseDepartments": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "includeEnterpriseDepartments"]}, "GroupDeviceManagementEventGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "eventQueueType": {"type": "string", "enum": ["Completed", "In Progress Or Pending"]}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaExactDeviceManagementEventStatusInProgressOrPending": {"type": "object", "properties": {"dmEventStatusInProgressOrPending": {"type": "string", "enum": ["Pending", "Queued", "In Progress", "Process On Other Host", "Stale"]}}, "required": ["dmEventStatusInProgressOrPending"]}, "searchCriteriaExactDeviceManagementEventStatusCompleted": {"type": "object", "properties": {"dmEventStatusCompleted": {"type": "string", "enum": ["Canceled", "Completed"]}}, "required": ["dmEventStatusCompleted"]}, "searchCriteriaExactDeviceManagementEventAction": {"type": "object", "properties": {"dmEventAction": {"type": "string", "enum": ["Delete", "Download", "Rebuild", "Reset", "Upload"]}}, "required": ["dmEventAction"]}, "searchCriteriaExactDeviceManagementEventLevel": {"type": "object", "properties": {"dmEventLevel": {"type": "string", "enum": ["Device", "Device Type", "Device Type Group", "Group", "User", "Device Type Service Provider", "Service Provider"]}}, "required": ["dmEventLevel"]}, "searchCriteriaExactDeviceManagementEventType": {"type": "object", "properties": {"dmEventType": {"type": "string", "enum": ["Automatic", "Manual"]}}, "required": ["dmEventType"]}, "searchCriteriaDeviceManagementEventAdditionalInfo": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 0, "maxLength": 256}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceManagementEventLoginId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId"]}, "GroupDeviceTypeFileGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceType"]}, "GroupDeviceTypeFileGetListRequest14sp8": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceType"]}, "GroupDeviceTypeFileGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "deviceType", "fileType"]}, "GroupDeviceTypeFileGetRequest14sp8": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["serviceProviderId", "groupId", "deviceType", "fileFormat"]}, "GroupDeviceTypeFileModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileSource": {"type": "string", "enum": ["Default", "Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}}, "required": ["serviceProviderId", "groupId", "deviceType", "fileType"]}, "GroupDialPlanPolicyGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupDirectoryNumberHuntingGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupDnGetAssignmentListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactDnDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaExactDnActivation": {"type": "object", "properties": {"activated": {"type": "boolean"}}, "required": ["activated"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupEnterpriseTrunkAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "enterpriseTrunkName": {"type": "string", "minLength": 1, "maxLength": 30}, "maximumRerouteAttempts": {"type": "EnterpriseTrunkMaximumRerouteAttempts"}, "routeExhaustionAction": {"type": "EnterpriseTrunkRouteExhaustionAction"}, "routeExhaustionForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}}, "oneOf": [{"type": "object", "properties": {"orderedRouting": {"type": "object", "properties": {"trunkGroup": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 30}}, "orderingAlgorithm": {"type": "EnterpriseTrunkOrderingAlgorithm"}}, "required": ["orderingAlgorithm"]}}, "required": ["orderedRouting"]}, {"type": "object", "properties": {"priorityWeightedRouting": {"type": "object", "properties": {"maximumRerouteAttemptsWithinPriority": {"type": "EnterpriseTrunkMaximumRerouteAttempts"}, "priorityWeightedTrunkGroup": {"type": "array", "items": {"type": "string"}}}, "required": ["maximumRerouteAttemptsWithinPriority"]}}, "required": ["priorityWeightedRouting"]}], "required": ["serviceProviderId", "groupId", "enterpriseTrunkName", "maximumRerouteAttempts", "routeExhaustionAction"]}, "GroupEnterpriseTrunkGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "enterpriseTrunkName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "enterpriseTrunkName"]}, "GroupEnterpriseTrunkGetRequest21": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "enterpriseTrunkName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "enterpriseTrunkName"]}, "GroupExtensionLengthGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupExtensionLengthModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "extensionLength": {"type": "integer", "minimum": 2.0, "maximum": 6.0}}, "required": ["serviceProviderId", "groupId"]}, "GroupFeatureAccessCodeGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupFeatureAccessCodeGetRequest20": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupFeatureAccessCodeModifyListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "oneOf": [{"type": "object", "properties": {"featureAccessCode": {"type": "array", "items": {"type": "object", "properties": {"featureAccessCodeName": {"type": "string", "minLength": 1}, "mainCode": {"type": "string", "minLength": 1, "maxLength": 5}, "alternateCode": {"type": "string", "minLength": 1, "maxLength": 5}}, "required": ["featureAccessCodeName"]}}}}, {"type": "object", "properties": {"restoreDefaultCodes": {"type": "boolean"}}}], "required": ["serviceProviderId", "groupId"]}, "GroupFeatureAccessCodeModifyRequest20": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useFeatureAccessCodeLevel": {"type": "string", "enum": ["Service Provider", "Group"]}}, "oneOf": [{"type": "object", "properties": {"restoreDefaultCodes": {"type": "boolean"}}}, {"type": "object", "properties": {"featureAccessCode": {"type": "array", "items": {"type": "object", "properties": {"featureAccessCodeName": {"type": "string", "minLength": 1}, "mainCode": {"type": "string", "minLength": 1, "maxLength": 5}, "alternateCode": {"type": "string", "minLength": 1, "maxLength": 5}}, "required": ["featureAccessCodeName"]}}}}], "required": ["serviceProviderId", "groupId"]}, "GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "alertingGroupName": {"type": "FindMeFollowMeAlertingGroupName"}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["serviceUserId", "alertingGroupName", "criteriaName"]}, "GroupFindMeFollowMeGetInstanceRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupFlexibleSeatingHostAddInstanceRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["name", "callingLineIdLastName", "callingLineIdFirstName"]}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile"]}, "GroupFlexibleSeatingHostGetInstanceRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupFlexibleSeatingHostModifyInstanceRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contactList": {"type": "object", "properties": {"contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}}, "required": ["contact"]}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId"]}, "GroupGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupGetRequest14sp7": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupGroupPagingGetInstanceRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupGroupPagingGetInstanceRequest17sp3": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupHolidayScheduleAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "holiday01": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday02": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday03": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday04": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday05": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday06": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday07": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday08": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday09": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday10": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday11": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday12": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday13": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday14": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday15": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday16": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday17": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday18": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday19": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday20": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}}, "required": ["serviceProviderId", "groupId", "holidayScheduleName"]}, "GroupHolidayScheduleDeleteRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "holidayScheduleName"]}, "GroupHolidayScheduleGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupHolidayScheduleGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "holidayScheduleName"]}, "GroupHolidayScheduleModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "newHolidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "holiday01": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday02": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday03": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday04": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday05": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday06": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday07": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday08": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday09": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday10": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday11": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday12": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday13": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday14": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday15": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday16": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday17": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday18": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday19": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday20": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}}, "required": ["serviceProviderId", "groupId", "holidayScheduleName"]}, "GroupHuntGroupAddInstanceRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["name", "callingLineIdLastName", "callingLineIdFirstName"]}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "huntAfterNoAnswer": {"type": "boolean"}, "noAnswerNumberOfRings": {"type": "integer", "minimum": 1.0, "maximum": 20.0}, "forwardAfterTimeout": {"type": "boolean"}, "forwardTimeoutSeconds": {"type": "integer", "minimum": 0.0, "maximum": 7200.0}, "forwardToPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "agentUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "allowCallWaitingForAgents": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "policy", "huntAfterNoAnswer", "noAnswerNumberOfRings", "forwardAfterTimeout", "forwardTimeoutSeconds", "allowCallWaitingForAgents"]}, "GroupHuntGroupAddInstanceRequest17sp1V1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["name", "callingLineIdLastName", "callingLineIdFirstName"]}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "huntAfterNoAnswer": {"type": "boolean"}, "noAnswerNumberOfRings": {"type": "integer", "minimum": 1.0, "maximum": 20.0}, "forwardAfterTimeout": {"type": "boolean"}, "forwardTimeoutSeconds": {"type": "integer", "minimum": 0.0, "maximum": 7200.0}, "forwardToPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "agentUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "allowCallWaitingForAgents": {"type": "boolean"}, "allowMembersToControlGroupBusy": {"type": "boolean"}, "enableGroupBusy": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "policy", "huntAfterNoAnswer", "noAnswerNumberOfRings", "forwardAfterTimeout", "forwardTimeoutSeconds", "allowCallWaitingForAgents", "allowMembersToControlGroupBusy", "enableGroupBusy"]}, "GroupHuntGroupAddInstanceRequest17sp3": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["name", "callingLineIdLastName", "callingLineIdFirstName"]}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "huntAfterNoAnswer": {"type": "boolean"}, "noAnswerNumberOfRings": {"type": "integer", "minimum": 1.0, "maximum": 20.0}, "forwardAfterTimeout": {"type": "boolean"}, "forwardTimeoutSeconds": {"type": "integer", "minimum": 0.0, "maximum": 7200.0}, "forwardToPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "agentUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "allowCallWaitingForAgents": {"type": "boolean"}, "useSystemHuntGroupCLIDSetting": {"type": "boolean"}, "includeHuntGroupNameInCLID": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "policy", "huntAfterNoAnswer", "noAnswerNumberOfRings", "forwardAfterTimeout", "forwardTimeoutSeconds", "allowCallWaitingForAgents", "useSystemHuntGroupCLIDSetting", "includeHuntGroupNameInCLID"]}, "GroupHuntGroupAddInstanceRequest17sp4": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["name", "callingLineIdLastName", "callingLineIdFirstName"]}, "policy": {"type": "string", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, "huntAfterNoAnswer": {"type": "boolean"}, "noAnswerNumberOfRings": {"type": "integer", "minimum": 1.0, "maximum": 20.0}, "forwardAfterTimeout": {"type": "boolean"}, "forwardTimeoutSeconds": {"type": "integer", "minimum": 0.0, "maximum": 7200.0}, "forwardToPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "agentUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "allowCallWaitingForAgents": {"type": "boolean"}, "useSystemHuntGroupCLIDSetting": {"type": "boolean"}, "includeHuntGroupNameInCLID": {"type": "boolean"}, "enableNotReachableForwarding": {"type": "boolean"}, "notReachableForwardToPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "makeBusyWhenNotReachable": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "policy", "huntAfterNoAnswer", "noAnswerNumberOfRings", "forwardAfterTimeout", "forwardTimeoutSeconds", "allowCallWaitingForAgents", "useSystemHuntGroupCLIDSetting", "includeHuntGroupNameInCLID", "enableNotReachableForwarding", "makeBusyWhenNotReachable"]}, "GroupHuntGroupGetInstanceRequest14": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupHuntGroupGetInstanceRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupHuntGroupGetInstanceRequest17sp1V1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupHuntGroupGetInstanceRequest17sp3": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupHuntGroupGetInstanceRequest17sp4": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupHuntGroupGetInstanceRequest19sp1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupInstantGroupCallGetInstanceRequest14": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupInstantGroupCallGetInstanceRequest17": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupInterceptGroupGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupInterceptGroupGetRequest16": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupInterceptGroupModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "isActive": {"type": "boolean"}, "announcementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "playNewPhoneNumber": {"type": "boolean"}, "newPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "transferOnZeroToPhoneNumber": {"type": "boolean"}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupMeetMeConferencingAddInstanceRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["name", "callingLineIdLastName", "callingLineIdFirstName"]}, "allocatedPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}}, "required": ["quantity"]}]}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}, "allowIndividualOutDial": {"type": "boolean"}, "operatorNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "conferenceHostUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "allocatedPorts", "allowIndividualOutDial"]}, "GroupMeetMeConferencingAddInstanceRequest18": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["name", "callingLineIdLastName", "callingLineIdFirstName"]}, "allocatedPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}}, "required": ["quantity"]}]}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}, "allowIndividualOutDial": {"type": "boolean"}, "operatorNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "conferenceHostUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "playWarningPrompt": {"type": "boolean"}, "conferenceEndWarningPromptMinutes": {"type": "MeetMeConferencingConferenceEndWarningPromptMinutes"}, "enableMaxConferenceDuration": {"type": "boolean"}, "maxConferenceDurationMinutes": {"type": "MeetMeConferencingConferenceDuration"}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "allocatedPorts", "allowIndividualOutDial", "playWarningPrompt", "conferenceEndWarningPromptMinutes", "enableMaxConferenceDuration", "maxConferenceDurationMinutes"]}, "GroupMeetMeConferencingGetInstanceRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupMeetMeConferencingGetInstanceRequest17sp3": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupMeetMeConferencingGetInstanceRequest17sp4": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupMeetMeConferencingGetInstanceRequest18": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupMeetMeConferencingGetInstanceRequest19": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupMusicOnHoldAddInstanceRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "department": {"type": "object", "properties": {}}, "isActiveDuringCallHold": {"type": "boolean"}, "isActiveDuringCallPark": {"type": "boolean"}, "messageSelection": {"type": "string", "enum": ["System", "External", "Custom"]}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}, "required": ["serviceProviderId", "groupId", "department", "isActiveDuringCallHold", "isActiveDuringCallPark", "messageSelection"]}, "GroupMusicOnHoldAddInstanceRequest14sp4": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "department": {"type": "object", "properties": {}}, "isActiveDuringCallHold": {"type": "boolean"}, "isActiveDuringCallPark": {"type": "boolean"}, "isActiveDuringBusyCampOn": {"type": "boolean"}, "messageSelection": {"type": "string", "enum": ["System", "External", "Custom"]}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}, "required": ["serviceProviderId", "groupId", "department", "isActiveDuringCallHold", "isActiveDuringCallPark", "isActiveDuringBusyCampOn", "messageSelection"]}, "GroupMusicOnHoldAddInstanceRequest14sp6": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "department": {"type": "object", "properties": {}}, "isActiveDuringCallHold": {"type": "boolean"}, "isActiveDuringCallPark": {"type": "boolean"}, "isActiveDuringBusyCampOn": {"type": "boolean"}, "source": {"type": "object", "properties": {"audioFilePreferredCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "messageSourceSelection": {"type": "string", "enum": ["System", "External", "Custom"]}, "customSource": {"type": "object", "properties": {"audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}}, "externalSource": {"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}}, "required": ["audioFilePreferredCodec", "messageSourceSelection"]}, "useAlternateSourceForInternalCalls": {"type": "boolean"}, "internalSource": {"type": "object", "properties": {"audioFilePreferredCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "messageSourceSelection": {"type": "string", "enum": ["System", "External", "Custom"]}, "customSource": {"type": "object", "properties": {"audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}}, "externalSource": {"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}}, "required": ["audioFilePreferredCodec", "messageSourceSelection"]}}, "required": ["serviceProviderId", "groupId", "department", "isActiveDuringCallHold", "isActiveDuringCallPark", "isActiveDuringBusyCampOn", "source", "useAlternateSourceForInternalCalls"]}, "GroupMusicOnHoldAddInstanceRequest16": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "department": {"type": "object", "properties": {}}, "isActiveDuringCallHold": {"type": "boolean"}, "isActiveDuringCallPark": {"type": "boolean"}, "isActiveDuringBusyCampOn": {"type": "boolean"}, "source": {"type": "object", "properties": {"audioFilePreferredCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "messageSourceSelection": {"type": "string", "enum": ["System", "External", "Custom"]}, "customSource": {"type": "object", "properties": {"audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "externalSource": {"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}}, "required": ["audioFilePreferredCodec", "messageSourceSelection"]}, "useAlternateSourceForInternalCalls": {"type": "boolean"}, "internalSource": {"type": "object", "properties": {"audioFilePreferredCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "messageSourceSelection": {"type": "string", "enum": ["System", "External", "Custom"]}, "customSource": {"type": "object", "properties": {"audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "externalSource": {"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}}, "required": ["audioFilePreferredCodec", "messageSourceSelection"]}}, "required": ["serviceProviderId", "groupId", "department", "isActiveDuringCallHold", "isActiveDuringCallPark", "isActiveDuringBusyCampOn", "source", "useAlternateSourceForInternalCalls"]}, "GroupMusicOnHoldGetInstanceRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "department": {"type": "object", "properties": {}}}, "required": ["serviceProviderId", "groupId"]}, "GroupMusicOnHoldGetInstanceRequest14sp4": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "department": {"type": "object", "properties": {}}}, "required": ["serviceProviderId", "groupId"]}, "GroupMusicOnHoldGetInstanceRequest14sp6": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "department": {"type": "object", "properties": {}}}, "required": ["serviceProviderId", "groupId"]}, "GroupMusicOnHoldGetInstanceRequest16": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "department": {"type": "object", "properties": {}}}, "required": ["serviceProviderId", "groupId"]}, "GroupMusicOnHoldModifyInstanceRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "department": {"type": "object", "properties": {}}, "isActiveDuringCallHold": {"type": "boolean"}, "isActiveDuringCallPark": {"type": "boolean"}, "isActiveDuringBusyCampOn": {"type": "boolean"}, "messageSelection": {"type": "string", "enum": ["System", "External", "Custom"]}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupMusicOnHoldModifyInstanceRequest14sp6": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "department": {"type": "object", "properties": {}}, "isActiveDuringCallHold": {"type": "boolean"}, "isActiveDuringCallPark": {"type": "boolean"}, "isActiveDuringBusyCampOn": {"type": "boolean"}, "source": {"type": "object", "properties": {"audioFilePreferredCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "messageSourceSelection": {"type": "string", "enum": ["System", "External", "Custom"]}, "customSource": {"type": "object", "properties": {"audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}}, "externalSource": {"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}}}, "useAlternateSourceForInternalCalls": {"type": "boolean"}, "internalSource": {"type": "object", "properties": {"audioFilePreferredCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "messageSourceSelection": {"type": "string", "enum": ["System", "External", "Custom"]}, "customSource": {"type": "object", "properties": {"audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}}, "externalSource": {"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}}}}, "required": ["serviceProviderId", "groupId"]}, "GroupMusicOnHoldModifyInstanceRequest16": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "department": {"type": "object", "properties": {}}, "isActiveDuringCallHold": {"type": "boolean"}, "isActiveDuringCallPark": {"type": "boolean"}, "isActiveDuringBusyCampOn": {"type": "boolean"}, "source": {"type": "object", "properties": {"audioFilePreferredCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "messageSourceSelection": {"type": "string", "enum": ["System", "External", "Custom"]}, "customSource": {"type": "object", "properties": {"audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "externalSource": {"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}}}, "useAlternateSourceForInternalCalls": {"type": "boolean"}, "internalSource": {"type": "object", "properties": {"audioFilePreferredCodec": {"type": "string", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB"]}, "messageSourceSelection": {"type": "string", "enum": ["System", "External", "Custom"]}, "customSource": {"type": "object", "properties": {"audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "externalSource": {"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}}}}, "required": ["serviceProviderId", "groupId"]}, "GroupPasswordRulesGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupPhoneDirectoryGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "isExtendedInfoRequested": {"type": "boolean"}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupLocationCode": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 15}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaMobilePhoneNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaYahooId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserGroup": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}}, "required": ["serviceProviderId", "groupId", "isExtendedInfoRequested"]}, "GroupPhoneDirectoryGetListRequest17": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "isExtendedInfoRequested": {"type": "boolean"}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupLocationCode": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 15}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaMobilePhoneNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaYahooId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserGroup": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}}, "required": ["serviceProviderId", "groupId", "isExtendedInfoRequested"]}, "GroupPhoneDirectoryGetListRequest17sp3": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "isExtendedInfoRequested": {"type": "boolean"}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupLocationCode": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 15}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaMobilePhoneNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaYahooId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserGroup": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaImpId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 196}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId", "isExtendedInfoRequested"]}, "GroupPhoneDirectoryGetPagedListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "isExtendedInfoRequested": {"type": "boolean"}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaGroupLocationCode": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 15}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExtension": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 20}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaMobilePhoneNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaEmailAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 80}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaYahooId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 50}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserGroup": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}, "searchCriteriaUserId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaImpId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 196}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId", "groupId", "isExtendedInfoRequested", "responsePagingControl"]}, "GroupPolicyGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupPolicyGetRequest14sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupPolicyGetRequest14sp4": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupPortalPasscodeRulesGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupRoutePointForcedForwardingGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupRoutePointForcedForwardingModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "isActive": {"type": "boolean"}, "forwardToPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "playAnnouncementBeforeForwarding": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "audioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}}, "required": ["serviceUserId"]}, "GroupRoutePointGetAnnouncementRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupRoutePointGetAnnouncementRequest19": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupRoutePointGetAnnouncementRequest20": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupRoutePointGetDNISAnnouncementRequest": {"type": "object", "properties": {"dnisKey": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId", "name"]}}, "required": ["dnisKey"]}, "GroupRoutePointGetDNISAnnouncementRequest19": {"type": "object", "properties": {"dnisKey": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId", "name"]}}, "required": ["dnisKey"]}, "GroupRoutePointGetDNISAnnouncementRequest20": {"type": "object", "properties": {"dnisKey": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId", "name"]}}, "required": ["dnisKey"]}, "GroupRoutePointGetInstanceRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupRoutePointHolidayServiceGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupRoutePointHolidayServiceGetRequest17sp1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupRoutePointHolidayServiceModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "string", "enum": ["None", "Busy", "Transfer"]}, "holidaySchedule": {"type": "string", "minLength": 1, "maxLength": 40}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "playAnnouncementBeforeAction": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "audioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}}, "required": ["serviceUserId"]}, "GroupRoutePointHolidayServiceModifyRequest17sp1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "string", "enum": ["None", "Busy", "Transfer"]}, "holidaySchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "playAnnouncementBeforeAction": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "audioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}}, "required": ["serviceUserId"]}, "GroupRoutePointModifyAnnouncementRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "mediaOnHoldSource": {"type": "CallCenterMediaOnHoldSourceModify17"}}, "required": ["serviceUserId"]}, "GroupRoutePointModifyDNISAnnouncementRequest": {"type": "object", "properties": {"dnisKey": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId", "name"]}, "mediaOnHoldSource": {"type": "CallCenterMediaOnHoldSourceModify17"}}, "required": ["dnisKey"]}, "GroupRoutePointNightServiceGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupRoutePointNightServiceGetRequest17sp1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupRoutePointNightServiceModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "string", "enum": ["None", "Busy", "Transfer"]}, "businessHours": {"type": "string", "minLength": 1, "maxLength": 40}, "forceNightService": {"type": "boolean"}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "playAnnouncementBeforeAction": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "audioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "manualAnnouncementMode": {"type": "string", "enum": ["Normal Announcement", "Manual Announcement"]}, "manualAudioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "manualAudioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "manualAudioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "manualVideoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "manualVideoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "manualVideoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}}, "required": ["serviceUserId"]}, "GroupRoutePointNightServiceModifyRequest17sp1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "string", "enum": ["None", "Busy", "Transfer"]}, "businessHours": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "forceNightService": {"type": "boolean"}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "playAnnouncementBeforeAction": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "audioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "manualAnnouncementMode": {"type": "string", "enum": ["Normal Announcement", "Manual Announcement"]}, "manualAudioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "manualAudioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "manualAudioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "manualVideoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "manualVideoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "manualVideoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}}, "required": ["serviceUserId"]}, "GroupRoutePointOverflowGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupRoutePointOverflowModifyRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "action": {"type": "string", "enum": ["Busy", "Transfer", "Ringing"]}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "overflowAfterTimeout": {"type": "boolean"}, "timeoutSeconds": {"type": "integer", "minimum": 0.0, "maximum": 7200.0}, "playAnnouncementBeforeOverflowProcessing": {"type": "boolean"}, "audioMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "audioFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}, "videoMessageSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoUrlList": {"type": "object", "properties": {"url1": {"type": "string", "minLength": 1, "maxLength": 256}, "url2": {"type": "string", "minLength": 1, "maxLength": 256}, "url3": {"type": "string", "minLength": 1, "maxLength": 256}, "url4": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoFileList": {"type": "object", "properties": {"file1": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file2": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file3": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "file4": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}}}, "required": ["serviceUserId"]}, "GroupScheduleGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["serviceProviderId", "groupId"]}, "GroupServiceInstancePrivacyGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupSessionAdmissionControlGroupAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "maxSession": {"type": "integer", "minimum": 0.0}, "maxUserOriginatingSessions": {"type": "integer", "minimum": 0.0}, "maxUserTerminatingSessions": {"type": "integer", "minimum": 0.0}, "reservedSession": {"type": "integer", "minimum": 0.0}, "reservedUserOriginatingSessions": {"type": "integer", "minimum": 0.0}, "reservedUserTerminatingSessions": {"type": "integer", "minimum": 0.0}, "becomeDefaultGroup": {"type": "boolean"}, "countIntraSACGroupSessions": {"type": "boolean"}, "devices": {"type": "array", "items": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}}}, "required": ["serviceProviderId", "groupId", "name", "maxSession", "reservedSession", "becomeDefaultGroup", "countIntraSACGroupSessions"]}, "GroupSessionAdmissionControlGroupGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupSessionAdmissionControlGroupGetRequest19sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupSessionAdmissionControlGroupGetRequest21sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "name"]}, "GroupSpeedDial100GetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupTimeScheduleAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "timeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "timeInterval01": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval02": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval03": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval04": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval05": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval06": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval07": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval08": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval09": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval10": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval11": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval12": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval13": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval14": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval15": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval16": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval17": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval18": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval19": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval20": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}}, "required": ["serviceProviderId", "groupId", "timeScheduleName"]}, "GroupTimeScheduleDeleteRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "timeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "timeScheduleName"]}, "GroupTimeScheduleGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupTimeScheduleGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "timeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "timeScheduleName"]}, "GroupTimeScheduleModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "timeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "newTimeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "timeInterval01": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval02": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval03": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval04": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval05": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval06": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval07": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval08": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval09": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval10": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval11": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval12": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval13": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval14": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval15": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval16": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval17": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval18": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval19": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval20": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}}, "required": ["serviceProviderId", "groupId", "timeScheduleName"]}, "GroupTrunkGroupAddInstanceRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {}}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "maxActiveCalls", "requireAuthentication"]}, "GroupTrunkGroupAddInstanceRequest14sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {}}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupId": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupId": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["serviceProviderId", "groupId", "serviceUserId", "serviceInstanceProfile", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "unreachableDestinationTrapInitialCalls", "unreachableDestinationTrapOffsetCalls", "invitationTimeout", "requireAuthentication"]}, "GroupTrunkGroupAddInstanceRequest14sp4": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUser": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}}, "required": ["userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName", "linePort"]}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "unreachableDestinationTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["serviceProviderId", "groupId", "name", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "unreachableDestinationTrapInitialCalls", "unreachableDestinationTrapOffsetCalls", "invitationTimeout", "requireAuthentication"]}, "GroupTrunkGroupAddInstanceRequest14sp9": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUser": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}}, "required": ["userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName", "linePort"]}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "unreachableDestinationTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "usePilotUserCallingLineIdentity": {"type": "boolean"}, "usePilotUserChargeNumber": {"type": "boolean"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["serviceProviderId", "groupId", "name", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "unreachableDestinationTrapInitialCalls", "unreachableDestinationTrapOffsetCalls", "invitationTimeout", "requireAuthentication", "includeTrunkGroupIdentity", "includeDtgIdentity", "enableNetworkAddressIdentity", "allowUnscreenedCalls", "allowUnscreenedEmergencyCalls", "usePilotUserCallingLineIdentity", "usePilotUserChargeNumber"]}, "GroupTrunkGroupAddInstanceRequest14sp9A": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUser": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}}, "required": ["userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName", "linePort"]}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "unreachableDestinationTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "pilotUserCallingLineIdentityPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserChargeNumberPolicy": {"type": "TrunkGroupPilotUserChargeNumberUsagePolicy"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["serviceProviderId", "groupId", "name", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "unreachableDestinationTrapInitialCalls", "unreachableDestinationTrapOffsetCalls", "invitationTimeout", "requireAuthentication", "includeTrunkGroupIdentity", "includeDtgIdentity", "enableNetworkAddressIdentity", "allowUnscreenedCalls", "allowUnscreenedEmergencyCalls", "pilotUserCallingLineIdentityPolicy", "pilotUserChargeNumberPolicy"]}, "GroupTrunkGroupAddInstanceRequest15": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUser": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}}, "required": ["userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName", "linePort"]}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["serviceProviderId", "groupId", "name", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "invitationTimeout", "requireAuthentication"]}, "GroupTrunkGroupAddInstanceRequest15sp2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUser": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}}, "required": ["userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName", "linePort"]}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "pilotUserCallingLineIdentityPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserChargeNumberPolicy": {"type": "TrunkGroupPilotUserChargeNumberUsagePolicy"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["serviceProviderId", "groupId", "name", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "invitationTimeout", "requireAuthentication", "includeTrunkGroupIdentity", "includeDtgIdentity", "enableNetworkAddressIdentity", "allowUnscreenedCalls", "allowUnscreenedEmergencyCalls", "pilotUserCallingLineIdentityPolicy", "pilotUserChargeNumberPolicy"]}, "GroupTrunkGroupAddInstanceRequest17": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUser": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}}, "required": ["userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName", "linePort"]}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "pilotUserCallingLineIdentityPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserChargeNumberPolicy": {"type": "TrunkGroupPilotUserChargeNumberUsagePolicy"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "peeringDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "routeToPeeringDomain": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "name", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "invitationTimeout", "requireAuthentication", "includeTrunkGroupIdentity", "includeDtgIdentity", "enableNetworkAddressIdentity", "allowUnscreenedCalls", "allowUnscreenedEmergencyCalls", "pilotUserCallingLineIdentityPolicy", "pilotUserChargeNumberPolicy", "routeToPeeringDomain"]}, "GroupTrunkGroupAddInstanceRequest17sp3": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUser": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}}, "required": ["userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName", "linePort"]}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "pilotUserCallingLineIdentityPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserChargeNumberPolicy": {"type": "TrunkGroupPilotUserChargeNumberUsagePolicy"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "peeringDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "routeToPeeringDomain": {"type": "boolean"}, "prefixEnabled": {"type": "boolean"}, "prefix": {"type": "TrunkGroupPrefix"}, "statefulReroutingEnabled": {"type": "boolean"}, "sendContinuousOptionsMessage": {"type": "boolean"}, "continuousOptionsSendingIntervalSeconds": {"type": "TrunkGroupContinuousOptionsSendingIntervalSeconds"}, "failureOptionsSendingIntervalSeconds": {"type": "TrunkGroupFailureOptionsSendingIntervalSeconds"}, "failureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "successThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdWindowSeconds": {"type": "TrunkGroupFailureThresholdWindowSeconds"}}, "required": ["serviceProviderId", "groupId", "name", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "invitationTimeout", "requireAuthentication", "includeTrunkGroupIdentity", "includeDtgIdentity", "enableNetworkAddressIdentity", "allowUnscreenedCalls", "allowUnscreenedEmergencyCalls", "pilotUserCallingLineIdentityPolicy", "pilotUserChargeNumberPolicy", "routeToPeeringDomain", "prefixEnabled", "statefulReroutingEnabled", "sendContinuousOptionsMessage", "continuousOptionsSendingIntervalSeconds", "failureOptionsSendingIntervalSeconds", "failureThresholdCounter", "successThresholdCounter", "inviteFailureThresholdCounter", "inviteFailureThresholdWindowSeconds"]}, "GroupTrunkGroupAddInstanceRequest17sp4": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUser": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName", "linePort"]}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "allowTerminationToTrunkGroupIdentity": {"type": "boolean"}, "allowTerminationToDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentityForNetworkCalls": {"type": "boolean"}, "includeOtgIdentityForNetworkCalls": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "pilotUserCallingLineIdentityPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserChargeNumberPolicy": {"type": "TrunkGroupPilotUserChargeNumberUsagePolicy"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "peeringDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "routeToPeeringDomain": {"type": "boolean"}, "prefixEnabled": {"type": "boolean"}, "prefix": {"type": "TrunkGroupPrefix"}, "statefulReroutingEnabled": {"type": "boolean"}, "sendContinuousOptionsMessage": {"type": "boolean"}, "continuousOptionsSendingIntervalSeconds": {"type": "TrunkGroupContinuousOptionsSendingIntervalSeconds"}, "failureOptionsSendingIntervalSeconds": {"type": "TrunkGroupFailureOptionsSendingIntervalSeconds"}, "failureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "successThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdWindowSeconds": {"type": "TrunkGroupFailureThresholdWindowSeconds"}, "pilotUserCallingLineAssertedIdentityPolicy": {"type": "string", "enum": ["All Originating Calls", "Unscreened Originating Calls"]}, "useSystemCallingLineAssertedIdentityPolicy": {"type": "boolean"}}, "required": ["serviceProviderId", "groupId", "name", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "invitationTimeout", "requireAuthentication", "allowTerminationToTrunkGroupIdentity", "allowTerminationToDtgIdentity", "includeTrunkGroupIdentity", "includeDtgIdentity", "includeTrunkGroupIdentityForNetworkCalls", "includeOtgIdentityForNetworkCalls", "enableNetworkAddressIdentity", "allowUnscreenedCalls", "allowUnscreenedEmergencyCalls", "pilotUserCallingLineIdentityPolicy", "pilotUserChargeNumberPolicy", "routeToPeeringDomain", "prefixEnabled", "statefulReroutingEnabled", "sendContinuousOptionsMessage", "continuousOptionsSendingIntervalSeconds", "failureOptionsSendingIntervalSeconds", "failureThresholdCounter", "successThresholdCounter", "inviteFailureThresholdCounter", "inviteFailureThresholdWindowSeconds", "pilotUserCallingLineAssertedIdentityPolicy", "useSystemCallingLineAssertedIdentityPolicy"]}, "GroupTrunkGroupAddInstanceRequest19": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUser": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName", "linePort"]}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "allowTerminationToTrunkGroupIdentity": {"type": "boolean"}, "allowTerminationToDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentityForNetworkCalls": {"type": "boolean"}, "includeOtgIdentityForNetworkCalls": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "pilotUserCallingLineIdentityPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserChargeNumberPolicy": {"type": "TrunkGroupPilotUserChargeNumberUsagePolicy"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "peeringDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "routeToPeeringDomain": {"type": "boolean"}, "prefixEnabled": {"type": "boolean"}, "prefix": {"type": "TrunkGroupPrefix"}, "statefulReroutingEnabled": {"type": "boolean"}, "sendContinuousOptionsMessage": {"type": "boolean"}, "continuousOptionsSendingIntervalSeconds": {"type": "TrunkGroupContinuousOptionsSendingIntervalSeconds"}, "failureOptionsSendingIntervalSeconds": {"type": "TrunkGroupFailureOptionsSendingIntervalSeconds"}, "failureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "successThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdWindowSeconds": {"type": "TrunkGroupFailureThresholdWindowSeconds"}, "pilotUserCallingLineAssertedIdentityPolicy": {"type": "string", "enum": ["All Originating Calls", "Unscreened Originating Calls"]}, "useSystemCallingLineAssertedIdentityPolicy": {"type": "boolean"}, "pilotUserCallOptimizationPolicy": {"type": "TrunkGroupPilotUserCallOptimizationPolicy"}}, "required": ["serviceProviderId", "groupId", "name", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "invitationTimeout", "requireAuthentication", "allowTerminationToTrunkGroupIdentity", "allowTerminationToDtgIdentity", "includeTrunkGroupIdentity", "includeDtgIdentity", "includeTrunkGroupIdentityForNetworkCalls", "includeOtgIdentityForNetworkCalls", "enableNetworkAddressIdentity", "allowUnscreenedCalls", "allowUnscreenedEmergencyCalls", "pilotUserCallingLineIdentityPolicy", "pilotUserChargeNumberPolicy", "routeToPeeringDomain", "prefixEnabled", "statefulReroutingEnabled", "sendContinuousOptionsMessage", "continuousOptionsSendingIntervalSeconds", "failureOptionsSendingIntervalSeconds", "failureThresholdCounter", "successThresholdCounter", "inviteFailureThresholdCounter", "inviteFailureThresholdWindowSeconds", "pilotUserCallingLineAssertedIdentityPolicy", "useSystemCallingLineAssertedIdentityPolicy", "pilotUserCallOptimizationPolicy"]}, "GroupTrunkGroupAddInstanceRequest19sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUser": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName", "linePort"]}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "allowTerminationToTrunkGroupIdentity": {"type": "boolean"}, "allowTerminationToDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentityForNetworkCalls": {"type": "boolean"}, "includeOtgIdentityForNetworkCalls": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "pilotUserCallingLineIdentityForExternalCallsPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserChargeNumberPolicy": {"type": "TrunkGroupPilotUserChargeNumberUsagePolicy"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "peeringDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "routeToPeeringDomain": {"type": "boolean"}, "prefixEnabled": {"type": "boolean"}, "prefix": {"type": "TrunkGroupPrefix"}, "statefulReroutingEnabled": {"type": "boolean"}, "sendContinuousOptionsMessage": {"type": "boolean"}, "continuousOptionsSendingIntervalSeconds": {"type": "TrunkGroupContinuousOptionsSendingIntervalSeconds"}, "failureOptionsSendingIntervalSeconds": {"type": "TrunkGroupFailureOptionsSendingIntervalSeconds"}, "failureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "successThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdWindowSeconds": {"type": "TrunkGroupFailureThresholdWindowSeconds"}, "pilotUserCallingLineAssertedIdentityPolicy": {"type": "string", "enum": ["All Originating Calls", "Unscreened Originating Calls"]}, "useSystemCallingLineAssertedIdentityPolicy": {"type": "boolean"}, "pilotUserCallOptimizationPolicy": {"type": "TrunkGroupPilotUserCallOptimizationPolicy"}, "clidSourceForScreenedCallsPolicy": {"type": "TrunkGroupCLIDSourceForScreenedCallsPolicy"}, "useSystemCLIDSourceForScreenedCallsPolicy": {"type": "boolean"}, "userLookupPolicy": {"type": "string", "enum": ["Basic", "Extended", "Basic Lookup Prefer From"]}, "useSystemUserLookupPolicy": {"type": "boolean"}, "pilotUserCallingLineIdentityForEmergencyCallsPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserNetworkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "name", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "invitationTimeout", "requireAuthentication", "allowTerminationToTrunkGroupIdentity", "allowTerminationToDtgIdentity", "includeTrunkGroupIdentity", "includeDtgIdentity", "includeTrunkGroupIdentityForNetworkCalls", "includeOtgIdentityForNetworkCalls", "enableNetworkAddressIdentity", "allowUnscreenedCalls", "allowUnscreenedEmergencyCalls", "pilotUserCallingLineIdentityForExternalCallsPolicy", "pilotUserChargeNumberPolicy", "routeToPeeringDomain", "prefixEnabled", "statefulReroutingEnabled", "sendContinuousOptionsMessage", "continuousOptionsSendingIntervalSeconds", "failureOptionsSendingIntervalSeconds", "failureThresholdCounter", "successThresholdCounter", "inviteFailureThresholdCounter", "inviteFailureThresholdWindowSeconds", "pilotUserCallingLineAssertedIdentityPolicy", "useSystemCallingLineAssertedIdentityPolicy", "pilotUserCallOptimizationPolicy", "clidSourceForScreenedCallsPolicy", "useSystemCLIDSourceForScreenedCallsPolicy", "userLookupPolicy", "useSystemUserLookupPolicy", "pilotUserCallingLineIdentityForEmergencyCallsPolicy"]}, "GroupTrunkGroupAddInstanceRequest20sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUser": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName", "linePort"]}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "allowTerminationToTrunkGroupIdentity": {"type": "boolean"}, "allowTerminationToDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentityForNetworkCalls": {"type": "boolean"}, "includeOtgIdentityForNetworkCalls": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "pilotUserCallingLineIdentityForExternalCallsPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserChargeNumberPolicy": {"type": "TrunkGroupPilotUserChargeNumberUsagePolicy"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "peeringDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "routeToPeeringDomain": {"type": "boolean"}, "prefixEnabled": {"type": "boolean"}, "prefix": {"type": "TrunkGroupPrefix"}, "statefulReroutingEnabled": {"type": "boolean"}, "sendContinuousOptionsMessage": {"type": "boolean"}, "continuousOptionsSendingIntervalSeconds": {"type": "TrunkGroupContinuousOptionsSendingIntervalSeconds"}, "failureOptionsSendingIntervalSeconds": {"type": "TrunkGroupFailureOptionsSendingIntervalSeconds"}, "failureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "successThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdWindowSeconds": {"type": "TrunkGroupFailureThresholdWindowSeconds"}, "pilotUserCallingLineAssertedIdentityPolicy": {"type": "string", "enum": ["All Originating Calls", "Unscreened Originating Calls"]}, "useSystemCallingLineAssertedIdentityPolicy": {"type": "boolean"}, "pilotUserCallOptimizationPolicy": {"type": "TrunkGroupPilotUserCallOptimizationPolicy"}, "clidSourceForScreenedCallsPolicy": {"type": "TrunkGroupCLIDSourceForScreenedCallsPolicy"}, "useSystemCLIDSourceForScreenedCallsPolicy": {"type": "boolean"}, "userLookupPolicy": {"type": "string", "enum": ["Basic", "Extended", "Basic Lookup Prefer From"]}, "useSystemUserLookupPolicy": {"type": "boolean"}, "pilotUserCallingLineIdentityForEmergencyCallsPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserNetworkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "groupId", "name", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "invitationTimeout", "requireAuthentication", "allowTerminationToTrunkGroupIdentity", "allowTerminationToDtgIdentity", "includeTrunkGroupIdentity", "includeDtgIdentity", "includeTrunkGroupIdentityForNetworkCalls", "includeOtgIdentityForNetworkCalls", "enableNetworkAddressIdentity", "allowUnscreenedCalls", "allowUnscreenedEmergencyCalls", "pilotUserCallingLineIdentityForExternalCallsPolicy", "pilotUserChargeNumberPolicy", "routeToPeeringDomain", "prefixEnabled", "statefulReroutingEnabled", "sendContinuousOptionsMessage", "continuousOptionsSendingIntervalSeconds", "failureOptionsSendingIntervalSeconds", "failureThresholdCounter", "successThresholdCounter", "inviteFailureThresholdCounter", "inviteFailureThresholdWindowSeconds", "pilotUserCallingLineAssertedIdentityPolicy", "useSystemCallingLineAssertedIdentityPolicy", "pilotUserCallOptimizationPolicy", "clidSourceForScreenedCallsPolicy", "useSystemCLIDSourceForScreenedCallsPolicy", "userLookupPolicy", "useSystemUserLookupPolicy", "pilotUserCallingLineIdentityForEmergencyCallsPolicy"]}, "GroupTrunkGroupAddInstanceRequest21": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUser": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName", "linePort"]}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "allowTerminationToTrunkGroupIdentity": {"type": "boolean"}, "allowTerminationToDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentityForNetworkCalls": {"type": "boolean"}, "includeOtgIdentityForNetworkCalls": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "pilotUserCallingLineIdentityForExternalCallsPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserChargeNumberPolicy": {"type": "TrunkGroupPilotUserChargeNumberUsagePolicy"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "peeringDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "routeToPeeringDomain": {"type": "boolean"}, "prefixEnabled": {"type": "boolean"}, "prefix": {"type": "TrunkGroupPrefix"}, "statefulReroutingEnabled": {"type": "boolean"}, "sendContinuousOptionsMessage": {"type": "boolean"}, "continuousOptionsSendingIntervalSeconds": {"type": "TrunkGroupContinuousOptionsSendingIntervalSeconds"}, "failureOptionsSendingIntervalSeconds": {"type": "TrunkGroupFailureOptionsSendingIntervalSeconds"}, "failureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "successThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdWindowSeconds": {"type": "TrunkGroupFailureThresholdWindowSeconds"}, "pilotUserCallingLineAssertedIdentityPolicy": {"type": "string", "enum": ["All Originating Calls", "Unscreened Originating Calls"]}, "useSystemCallingLineAssertedIdentityPolicy": {"type": "boolean"}, "pilotUserCallOptimizationPolicy": {"type": "TrunkGroupPilotUserCallOptimizationPolicy"}, "clidSourceForScreenedCallsPolicy": {"type": "TrunkGroupCLIDSourceForScreenedCallsPolicy"}, "useSystemCLIDSourceForScreenedCallsPolicy": {"type": "boolean"}, "userLookupPolicy": {"type": "string", "enum": ["Basic", "Extended", "Basic Lookup Prefer From"]}, "useSystemUserLookupPolicy": {"type": "boolean"}, "pilotUserCallingLineIdentityForEmergencyCallsPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserNetworkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}, "implicitRegistrationSetSupportPolicy": {"type": "TrunkGroupImplicitRegistrationSetSupportPolicy"}, "useSystemImplicitRegistrationSetSupportPolicy": {"type": "boolean"}, "sipIdentityForPilotAndProxyTrunkModesPolicy": {"type": "TrunkGroupSIPIdentityForPilotAndProxyTrunkModesPolicy"}, "useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy": {"type": "boolean"}, "useSystemSupportConnectedIdentityPolicy": {"type": "boolean"}, "supportConnectedIdentityPolicy": {"type": "TrunkGroupSupportConnectedIdentityPolicy"}}, "required": ["serviceProviderId", "groupId", "name", "maxActiveCalls", "enableBursting", "capacityExceededTrapInitialCalls", "capacityExceededTrapOffsetCalls", "invitationTimeout", "requireAuthentication", "allowTerminationToTrunkGroupIdentity", "allowTerminationToDtgIdentity", "includeTrunkGroupIdentity", "includeDtgIdentity", "includeTrunkGroupIdentityForNetworkCalls", "includeOtgIdentityForNetworkCalls", "enableNetworkAddressIdentity", "allowUnscreenedCalls", "allowUnscreenedEmergencyCalls", "pilotUserCallingLineIdentityForExternalCallsPolicy", "pilotUserChargeNumberPolicy", "routeToPeeringDomain", "prefixEnabled", "statefulReroutingEnabled", "sendContinuousOptionsMessage", "continuousOptionsSendingIntervalSeconds", "failureOptionsSendingIntervalSeconds", "failureThresholdCounter", "successThresholdCounter", "inviteFailureThresholdCounter", "inviteFailureThresholdWindowSeconds", "pilotUserCallingLineAssertedIdentityPolicy", "useSystemCallingLineAssertedIdentityPolicy", "pilotUserCallOptimizationPolicy", "clidSourceForScreenedCallsPolicy", "useSystemCLIDSourceForScreenedCallsPolicy", "userLookupPolicy", "useSystemUserLookupPolicy", "pilotUserCallingLineIdentityForEmergencyCallsPolicy", "implicitRegistrationSetSupportPolicy", "useSystemImplicitRegistrationSetSupportPolicy", "sipIdentityForPilotAndProxyTrunkModesPolicy", "useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy", "useSystemSupportConnectedIdentityPolicy", "supportConnectedIdentityPolicy"]}, "GroupTrunkGroupDeleteInstanceRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceProviderId", "groupId", "serviceUserId"]}, "GroupTrunkGroupGetInstanceListRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "onlyTrunkGroupsWithDevice": {"type": "boolean"}}, "oneOf": [{"type": "object", "properties": {"groupDepartmentName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["groupDepartmentName"]}, {"type": "object", "properties": {"includeEnterpriseTrunkGroups": {"type": "boolean"}}, "required": ["includeEnterpriseTrunkGroups"]}], "required": ["serviceProviderId", "groupId"]}, "GroupTrunkGroupGetInstanceRequest14": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupTrunkGroupGetInstanceRequest14sp1": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupTrunkGroupGetInstanceRequest14sp4": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest14sp5": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest14sp9": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest14sp9A": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest15": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest15sp2": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest17": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest17sp3": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest17sp4": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest17sp4V2": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest19": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest19sp1": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest19sp1V2": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest19V2": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest20sp1": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceRequest21": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupGetInstanceUserListRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaUserLastName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaUserFirstName": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 30}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDn": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 23}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaExactUserDepartment": {"type": "object", "properties": {"departmentKey": {"type": "object", "properties": {}}}, "required": ["departmentKey"]}}, "required": ["serviceUserId"]}, "GroupTrunkGroupGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupTrunkGroupGetRequest14sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupTrunkGroupGetRequest14sp9": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupTrunkGroupModifyInstanceRequest14": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "serviceInstanceProfile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 6}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}}}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupId": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupId": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["serviceUserId"]}, "GroupTrunkGroupModifyInstanceRequest14sp4": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "newName": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "unreachableDestinationTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserIdList": {"type": "object", "properties": {"userId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["userId"]}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "usePilotUserCallingLineIdentity": {"type": "boolean"}, "usePilotUserChargeNumber": {"type": "boolean"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupModifyInstanceRequest14sp9A": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "newName": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "unreachableDestinationTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserIdList": {"type": "object", "properties": {"userId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["userId"]}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "pilotUserCallingLineIdentityPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserChargeNumberPolicy": {"type": "TrunkGroupPilotUserChargeNumberUsagePolicy"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupModifyInstanceRequest15": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "newName": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserIdList": {"type": "object", "properties": {"userId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["userId"]}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "allowTerminationToTrunkGroupIdentity": {"type": "boolean"}, "allowTerminationToDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentityForNetworkCalls": {"type": "boolean"}, "includeOtgIdentityForNetworkCalls": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "pilotUserCallingLineIdentityPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserChargeNumberPolicy": {"type": "TrunkGroupPilotUserChargeNumberUsagePolicy"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "peeringDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "routeToPeeringDomain": {"type": "boolean"}, "prefixEnabled": {"type": "boolean"}, "prefix": {"type": "TrunkGroupPrefix"}, "statefulReroutingEnabled": {"type": "boolean"}, "sendContinuousOptionsMessage": {"type": "boolean"}, "continuousOptionsSendingIntervalSeconds": {"type": "TrunkGroupContinuousOptionsSendingIntervalSeconds"}, "failureOptionsSendingIntervalSeconds": {"type": "TrunkGroupFailureOptionsSendingIntervalSeconds"}, "failureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "successThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdWindowSeconds": {"type": "TrunkGroupFailureThresholdWindowSeconds"}, "pilotUserCallingLineAssertedIdentityPolicy": {"type": "string", "enum": ["All Originating Calls", "Unscreened Originating Calls"]}, "useSystemCallingLineAssertedIdentityPolicy": {"type": "boolean"}, "pilotUserCallOptimizationPolicy": {"type": "TrunkGroupPilotUserCallOptimizationPolicy"}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupModifyInstanceRequest19sp1": {"type": "object", "properties": {"trunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "newName": {"type": "string", "minLength": 1, "maxLength": 30}, "pilotUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "department": {"type": "object", "properties": {}}, "accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "maxActiveCalls": {"type": "integer", "minimum": 1.0}, "maxIncomingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "maxOutgoingCalls": {"type": "integer", "minimum": 1.0, "maximum": 999999.0}, "enableBursting": {"type": "boolean"}, "burstingMaxActiveCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxIncomingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "burstingMaxOutgoingCalls": {"type": "integer", "minimum": 0.0, "maximum": 999999.0}, "capacityExceededAction": {"type": "string", "enum": ["Forward", "Reroute"]}, "capacityExceededForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "capacityExceededRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "capacityExceededTrapInitialCalls": {"type": "integer", "minimum": 0.0}, "capacityExceededTrapOffsetCalls": {"type": "integer", "minimum": 0.0}, "unreachableDestinationAction": {"type": "TrunkGroupUnreachableDestinationAction"}, "unreachableDestinationForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "unreachableDestinationRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "invitationTimeout": {"type": "integer", "minimum": 1.0, "maximum": 255.0}, "requireAuthentication": {"type": "boolean"}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "sipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "hostedUserIdList": {"type": "object", "properties": {"userId": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["userId"]}, "trunkGroupIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "otgDtgIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "allowTerminationToTrunkGroupIdentity": {"type": "boolean"}, "allowTerminationToDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentity": {"type": "boolean"}, "includeDtgIdentity": {"type": "boolean"}, "includeTrunkGroupIdentityForNetworkCalls": {"type": "boolean"}, "includeOtgIdentityForNetworkCalls": {"type": "boolean"}, "enableNetworkAddressIdentity": {"type": "boolean"}, "allowUnscreenedCalls": {"type": "boolean"}, "allowUnscreenedEmergencyCalls": {"type": "boolean"}, "pilotUserCallingLineIdentityForExternalCallsPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "pilotUserChargeNumberPolicy": {"type": "TrunkGroupPilotUserChargeNumberUsagePolicy"}, "callForwardingAlwaysAction": {"type": "TrunkGroupCallForwardingAlwaysAction"}, "callForwardingAlwaysForwardAddress": {"type": "string", "minLength": 1, "maxLength": 161}, "callForwardingAlwaysRerouteTrunkGroupKey": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId", "name"]}, "peeringDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "routeToPeeringDomain": {"type": "boolean"}, "prefixEnabled": {"type": "boolean"}, "prefix": {"type": "TrunkGroupPrefix"}, "statefulReroutingEnabled": {"type": "boolean"}, "sendContinuousOptionsMessage": {"type": "boolean"}, "continuousOptionsSendingIntervalSeconds": {"type": "TrunkGroupContinuousOptionsSendingIntervalSeconds"}, "failureOptionsSendingIntervalSeconds": {"type": "TrunkGroupFailureOptionsSendingIntervalSeconds"}, "failureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "successThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdCounter": {"type": "TrunkGroupThresholdCounter"}, "inviteFailureThresholdWindowSeconds": {"type": "TrunkGroupFailureThresholdWindowSeconds"}, "pilotUserCallingLineAssertedIdentityPolicy": {"type": "string", "enum": ["All Originating Calls", "Unscreened Originating Calls"]}, "useSystemCallingLineAssertedIdentityPolicy": {"type": "boolean"}, "pilotUserCallOptimizationPolicy": {"type": "TrunkGroupPilotUserCallOptimizationPolicy"}, "clidSourceForScreenedCallsPolicy": {"type": "TrunkGroupCLIDSourceForScreenedCallsPolicy"}, "useSystemCLIDSourceForScreenedCallsPolicy": {"type": "boolean"}, "userLookupPolicy": {"type": "string", "enum": ["Basic", "Extended", "Basic Lookup Prefer From"]}, "useSystemUserLookupPolicy": {"type": "boolean"}, "pilotUserCallingLineIdentityForEmergencyCallsPolicy": {"type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy"}, "implicitRegistrationSetSupportPolicy": {"type": "TrunkGroupImplicitRegistrationSetSupportPolicy"}, "useSystemImplicitRegistrationSetSupportPolicy": {"type": "boolean"}, "sipIdentityForPilotAndProxyTrunkModesPolicy": {"type": "TrunkGroupSIPIdentityForPilotAndProxyTrunkModesPolicy"}, "useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy": {"type": "boolean"}, "useSystemSupportConnectedIdentityPolicy": {"type": "boolean"}, "supportConnectedIdentityPolicy": {"type": "TrunkGroupSupportConnectedIdentityPolicy"}, "useSystemOptionsMessageResponseStatusCodes": {"type": "boolean"}, "deleteOptionsMessageResponseStatusCode": {"type": "array", "items": {"type": "string", "minLength": 3, "maxLength": 40}}}, "required": ["trunkGroupKey"]}, "GroupTrunkGroupModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "maxActiveCalls": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 0.0}}, "required": ["quantity"]}]}, "burstingMaxActiveCalls": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 0.0}}, "required": ["quantity"]}]}}, "required": ["serviceProviderId", "groupId"]}, "GroupTrunkGroupUserCreationTaskAddRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "taskName": {"type": "TrunkGroupUserCreationTaskName"}, "userIdFormat": {"type": "TrunkGroupUserCreationUserIdFormat"}, "userIdDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "populateExtension": {"type": "boolean"}, "linePortFormat": {"type": "TrunkGroupUserCreationSIPURIFormat"}, "linePortDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "populateContact": {"type": "boolean"}, "contactFormat": {"type": "TrunkGroupUserCreationSIPURIFormat"}, "contactDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "servicePackName": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 80}}, "userService": {"type": "array", "items": {"type": "string", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}}}, "oneOf": [{"type": "object", "properties": {"userPhoneNumbers": {"type": "object", "properties": {"phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "dnRange": {"type": "array", "items": {"type": "object", "properties": {"minPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "maxPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["minPhoneNumber", "maxPhoneNumber"]}}}}}, "required": ["userPhoneNumbers"]}, {"type": "object", "properties": {"userExtensions": {"type": "object", "properties": {"extension": {"type": "array", "items": {"type": "string", "minLength": 2, "maxLength": 6}}, "extensionRange": {"type": "array", "items": {"type": "object", "properties": {"minExtension": {"type": "string", "minLength": 2, "maxLength": 6}, "maxExtension": {"type": "string", "minLength": 2, "maxLength": 6}}, "required": ["minExtension", "maxExtension"]}}}}}, "required": ["userExtensions"]}], "required": ["serviceUserId", "taskName", "userIdFormat", "userIdDomain", "populateExtension", "linePortFormat", "linePortDomain", "populateContact"]}, "GroupTrunkGroupUserCreationTaskDeleteRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "taskName": {"type": "TrunkGroupUserCreationTaskName"}}, "required": ["serviceUserId", "taskName"]}, "GroupTrunkGroupUserCreationTaskGetListRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["serviceUserId"]}, "GroupTrunkGroupUserCreationTaskGetRequest": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "taskName": {"type": "TrunkGroupUserCreationTaskName"}}, "required": ["serviceUserId", "taskName"]}, "GroupVoiceMessagingGroupGetPasscodeRulesRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupVoiceMessagingGroupGetVoicePortalBrandingRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupVoiceMessagingGroupGetVoicePortalRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupVoiceMessagingGroupGetVoicePortalRequest15": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupVoiceMessagingGroupGetVoicePortalRequest17": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId", "groupId"]}, "GroupVoiceMessagingGroupModifyPasscodeRulesRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "useRuleLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "disallowRepeatedDigits": {"type": "boolean"}, "disallowUserNumber": {"type": "boolean"}, "disallowReversedUserNumber": {"type": "boolean"}, "disallowOldPasscode": {"type": "boolean"}, "disallowReversedOldPasscode": {"type": "boolean"}, "minCodeLength": {"type": "integer", "minimum": 2.0, "maximum": 15.0}, "maxCodeLength": {"type": "integer", "minimum": 3.0, "maximum": 30.0}, "disableLoginAfterMaxFailedLoginAttempts": {"type": "boolean"}, "maxFailedLoginAttempts": {"type": "integer", "minimum": 2.0, "maximum": 10.0}, "expirePassword": {"type": "boolean"}, "passcodeExpiresDays": {"type": "integer", "minimum": 15.0, "maximum": 180.0}, "sendLoginDisabledNotifyEmail": {"type": "boolean"}, "loginDisabledNotifyEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceProviderId", "groupId"]}, "GroupVoiceMessagingGroupModifyVoicePortalBrandingRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "voicePortalGreetingSelection": {"type": "string", "enum": ["Default", "Branded"]}, "voicePortalGreetingFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "voiceMessagingGreetingSelection": {"type": "string", "enum": ["Default", "Branded"]}, "voiceMessagingGreetingFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}, "required": ["serviceProviderId", "groupId"]}, "LoginRequest13mp10": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "signedPassword": {"type": "string", "minLength": 1}}, "required": ["userId"]}, "LoginRequest14sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "signedPassword": {"type": "string", "minLength": 1}, "plainTextPassword": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userId"]}, "LoginRequest22V4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "signedPassword": {"type": "string", "minLength": 1}}, "required": ["userId"]}, "ResellerGetRequest": {"type": "object", "properties": {"resellerId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["resellerId"]}, "ResellerGetRequest22": {"type": "object", "properties": {"resellerId": {"type": "string", "minLength": 1, "maxLength": 36}}, "required": ["resellerId"]}, "ServiceProviderAccessDeviceFileGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "deviceName"]}, "ServiceProviderAccessDeviceFileGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "deviceName", "fileType"]}, "ServiceProviderAccessDeviceFileGetRequest14sp8": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["serviceProviderId", "deviceName", "fileFormat"]}, "ServiceProviderAccessDeviceFileGetRequest16sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["serviceProviderId", "deviceName", "fileFormat"]}, "ServiceProviderAccessDeviceFileModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileSource": {"type": "string", "enum": ["Default", "Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}}, "required": ["serviceProviderId", "deviceName", "fileType"]}, "ServiceProviderAccessDeviceGetRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "deviceName"]}, "ServiceProviderAccessDeviceGetRequest14sp3": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "deviceName"]}, "ServiceProviderAccessDeviceGetRequest14sp6": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "deviceName"]}, "ServiceProviderAccessDeviceGetRequest16": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "deviceName"]}, "ServiceProviderAdminGetPolicyRequest14": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "ServiceProviderAdminGetPolicyRequest16sp1": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "ServiceProviderAdminGetPolicyRequest16sp2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "ServiceProviderAdminGetPolicyRequest17": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "ServiceProviderAdminGetPolicyRequest17sp1": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "ServiceProviderAdminGetPolicyRequest17sp3": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "ServiceProviderAnswerConfirmationGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderAnswerConfirmationModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "announcementMessageSelection": {"type": "string", "enum": ["System", "Custom"]}, "confirmationMessageAudioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "confirmationTimoutSeconds": {"type": "integer", "minimum": 2.0, "maximum": 30.0}}, "required": ["serviceProviderId"]}, "ServiceProviderBroadWorksMobilityGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderBroadWorksMobilityGetRequest19sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderBroadWorksMobilityGetRequest21sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderBroadWorksMobilityGetRequest21sp1V2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderBroadWorksMobilityGetRequest22": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderBroadWorksMobilityGetRequest22V2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "mobileSubscriberDirectoryNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest14sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest14sp4": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest14sp7": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest15": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest15sp2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest16": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest16sp2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest17": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest17sp3": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest17sp4": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest18sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest19sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingGetPolicyRequest21sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderCallProcessingModifyPolicyRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "useMaxSimultaneousCalls": {"type": "boolean"}, "maxSimultaneousCalls": {"type": "integer", "minimum": 1.0, "maximum": 500.0}, "useMaxSimultaneousVideoCalls": {"type": "boolean"}, "maxSimultaneousVideoCalls": {"type": "integer", "minimum": 1.0, "maximum": 500.0}, "useMaxCallTimeForAnsweredCalls": {"type": "boolean"}, "maxCallTimeForAnsweredCallsMinutes": {"type": "integer", "minimum": 5.0, "maximum": 2880.0}, "useMaxCallTimeForUnansweredCalls": {"type": "boolean"}, "maxCallTimeForUnansweredCallsMinutes": {"type": "integer", "minimum": 1.0, "maximum": 60.0}, "mediaPolicySelection": {"type": "string", "enum": ["Use Uncompressed Codec", "Use Supported Media Set", "No Restrictions"]}, "supportedMediaSetName": {"type": "string", "minLength": 1, "maxLength": 80}, "networkUsageSelection": {"type": "string", "enum": ["Force All Calls", "Force All Except Extension and Location Calls", "Do Not Force Enterprise and Group Calls"]}, "enforceGroupCallingLineIdentityRestriction": {"type": "boolean"}, "allowEnterpriseGroupCallTypingForPrivateDialingPlan": {"type": "boolean"}, "allowEnterpriseGroupCallTypingForPublicDialingPlan": {"type": "boolean"}, "overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan": {"type": "boolean"}, "enableEnterpriseExtensionDialing": {"type": "boolean"}, "enforceEnterpriseCallingLineIdentityRestriction": {"type": "boolean"}, "useSettingLevel": {"type": "string", "enum": ["System", "Service Provider"]}, "conferenceURI": {"type": "string", "minLength": 1, "maxLength": 161}, "useMaxConcurrentRedirectedCalls": {"type": "boolean"}, "maxConcurrentRedirectedCalls": {"type": "integer", "minimum": 1.0, "maximum": 32.0}, "useMaxFindMeFollowMeDepth": {"type": "boolean"}, "maxFindMeFollowMeDepth": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "maxRedirectionDepth": {"type": "integer", "minimum": 1.0, "maximum": 15.0}, "useMaxConcurrentFindMeFollowMeInvocations": {"type": "boolean"}, "maxConcurrentFindMeFollowMeInvocations": {"type": "integer", "minimum": 1.0, "maximum": 32.0}, "clidPolicy": {"type": "string", "enum": ["Use DN", "Use Configurable CLID"]}, "emergencyClidPolicy": {"type": "string", "enum": ["Use DN", "Use Configurable CLID"]}, "allowAlternateNumbersForRedirectingIdentity": {"type": "boolean"}}, "required": ["serviceProviderId"]}, "ServiceProviderCommunicationBarringProfileAddRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "originatingDefaultAction": {"type": "string", "enum": ["Allow", "Allow Timed", "Block", "Authorization Code", "Authorization Code Timed", "Treatment", "Transfer"]}, "originatingDefaultTreatmentId": {"type": "string", "minLength": 1, "maxLength": 40}, "originatingDefaultTransferNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "originatingDefaultCallTimeout": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}, "originatingRule": {"type": "array", "items": {"type": "object", "properties": {"action": {"type": "string", "enum": ["Allow", "Allow Timed", "Block", "Authorization Code", "Authorization Code Timed", "Treatment", "Transfer"]}, "treatmentId": {"type": "string", "minLength": 1, "maxLength": 40}, "transferNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "callTimeoutSeconds": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}, "timeSchedule": {"type": "string", "minLength": 1, "maxLength": 40}, "holidaySchedule": {"type": "string", "minLength": 1, "maxLength": 40}, "priority": {"type": "xs:float", "minimum": 0.0, "maximum": 1000000.0}}, "oneOf": [{"type": "object", "properties": {"criteria": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["criteria"]}, {"type": "object", "properties": {"digitPatternCriteria": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["digitPatternCriteria"]}], "required": ["action", "priority"]}}, "redirectingDefaultAction": {"type": "string", "enum": ["Allow", "Allow Timed", "Block"]}, "redirectingDefaultCallTimeout": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}, "redirectingRule": {"type": "array", "items": {"type": "object", "properties": {"action": {"type": "string", "enum": ["Allow", "Allow Timed", "Block"]}, "callTimeoutSeconds": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}, "timeSchedule": {"type": "string", "minLength": 1, "maxLength": 40}, "holidaySchedule": {"type": "string", "minLength": 1, "maxLength": 40}, "priority": {"type": "xs:float", "minimum": 0.0, "maximum": 1000000.0}}, "oneOf": [{"type": "object", "properties": {"criteria": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["criteria"]}, {"type": "object", "properties": {"digitPatternCriteria": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["digitPatternCriteria"]}], "required": ["action", "priority"]}}, "incomingDefaultAction": {"type": "string", "enum": ["Allow", "Allow Timed", "Block"]}, "incomingDefaultCallTimeout": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}, "incomingRule": {"type": "array", "items": {"type": "object", "properties": {"digitPatternCriteria": {"type": "string", "minLength": 1, "maxLength": 40}, "action": {"type": "string", "enum": ["Allow", "Allow Timed", "Block"]}, "callTimeoutSeconds": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}, "timeSchedule": {"type": "string", "minLength": 1, "maxLength": 40}, "holidaySchedule": {"type": "string", "minLength": 1, "maxLength": 40}, "priority": {"type": "xs:float", "minimum": 0.0, "maximum": 1000000.0}}, "required": ["digitPatternCriteria", "action", "priority"]}}, "becomeDefault": {"type": "boolean"}}, "required": ["serviceProviderId", "name", "originatingDefaultAction", "redirectingDefaultAction", "incomingDefaultAction", "becomeDefault"]}, "ServiceProviderCommunicationBarringProfileGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceProviderId", "name"]}, "ServiceProviderDeviceManagementEventGetListRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "eventQueueType": {"type": "string", "enum": ["Completed", "In Progress Or Pending"]}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaExactDeviceManagementEventStatusInProgressOrPending": {"type": "object", "properties": {"dmEventStatusInProgressOrPending": {"type": "string", "enum": ["Pending", "Queued", "In Progress", "Process On Other Host", "Stale"]}}, "required": ["dmEventStatusInProgressOrPending"]}, "searchCriteriaExactDeviceManagementEventStatusCompleted": {"type": "object", "properties": {"dmEventStatusCompleted": {"type": "string", "enum": ["Canceled", "Completed"]}}, "required": ["dmEventStatusCompleted"]}, "searchCriteriaExactDeviceManagementEventAction": {"type": "object", "properties": {"dmEventAction": {"type": "string", "enum": ["Delete", "Download", "Rebuild", "Reset", "Upload"]}}, "required": ["dmEventAction"]}, "searchCriteriaExactDeviceManagementEventLevel": {"type": "object", "properties": {"dmEventLevel": {"type": "string", "enum": ["Device", "Device Type", "Device Type Group", "Group", "User", "Device Type Service Provider", "Service Provider"]}}, "required": ["dmEventLevel"]}, "searchCriteriaExactDeviceManagementEventType": {"type": "object", "properties": {"dmEventType": {"type": "string", "enum": ["Automatic", "Manual"]}}, "required": ["dmEventType"]}, "searchCriteriaDeviceManagementEventAdditionalInfo": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 0, "maxLength": 256}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceManagementEventLoginId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["serviceProviderId"]}, "ServiceProviderDialPlanPolicyGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderEnhancedCallLogsGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderFeatureAccessCodeGetListRequest20": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderFeatureAccessCodeModifyListRequest20": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "featureAccessCode": {"type": "array", "items": {"type": "object", "properties": {"featureAccessCodeName": {"type": "string", "minLength": 1}, "mainCode": {"type": "string", "minLength": 1, "maxLength": 5}, "alternateCode": {"type": "string", "minLength": 1, "maxLength": 5}}, "required": ["featureAccessCodeName"]}}}, "required": ["serviceProviderId"]}, "ServiceProviderGetRequest13mp2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderGetRequest17sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderGetRequest22": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderInCallServiceActivationGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderInCallServiceActivationModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "activationDigits": {"type": "string", "minLength": 1, "maxLength": 8}}, "required": ["serviceProviderId"]}, "ServiceProviderPasswordRulesGetRequest13mp2": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderPasswordRulesModifyRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "rulesApplyTo": {"type": "string", "enum": ["Administrator", "Administrator and User", "Group Administrator and User External Authentication"]}, "allowWebAddExternalAuthenticationUsers": {"type": "boolean"}, "disallowUserId": {"type": "boolean"}, "disallowOldPassword": {"type": "boolean"}, "disallowReversedOldPassword": {"type": "boolean"}, "restrictMinDigits": {"type": "boolean"}, "minDigits": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "restrictMinUpperCaseLetters": {"type": "boolean"}, "minUpperCaseLetters": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "restrictMinLowerCaseLetters": {"type": "boolean"}, "minLowerCaseLetters": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "restrictMinNonAlphanumericCharacters": {"type": "boolean"}, "minNonAlphanumericCharacters": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "minLength": {"type": "integer", "minimum": 3.0, "maximum": 40.0}, "maxFailedLoginAttempts": {"type": "integer", "minimum": 0.0, "maximum": 10.0}, "passwordExpiresDays": {"type": "integer", "minimum": 0.0, "maximum": 199.0}, "sendLoginDisabledNotifyEmail": {"type": "boolean"}, "loginDisabledNotifyEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "disallowRulesModification": {"type": "boolean"}}, "required": ["serviceProviderId"]}, "ServiceProviderPortalPasscodeRulesGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderServicePackMigrationTaskGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "taskName": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceProviderId", "taskName"]}, "ServiceProviderTrunkGroupGetRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderTrunkGroupGetRequest14sp1": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderVoiceMessagingGroupGetPasscodeRulesRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, "ServiceProviderVoiceMessagingGroupModifyPasscodeRulesRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "disallowRepeatedDigits": {"type": "boolean"}, "disallowUserNumber": {"type": "boolean"}, "disallowReversedUserNumber": {"type": "boolean"}, "disallowOldPasscode": {"type": "boolean"}, "disallowReversedOldPasscode": {"type": "boolean"}, "minCodeLength": {"type": "integer", "minimum": 2.0, "maximum": 15.0}, "maxCodeLength": {"type": "integer", "minimum": 3.0, "maximum": 30.0}, "disableLoginAfterMaxFailedLoginAttempts": {"type": "boolean"}, "maxFailedLoginAttempts": {"type": "integer", "minimum": 2.0, "maximum": 10.0}, "expirePassword": {"type": "boolean"}, "passcodeExpiresDays": {"type": "integer", "minimum": 15.0, "maximum": 180.0}, "sendLoginDisabledNotifyEmail": {"type": "boolean"}, "loginDisabledNotifyEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceProviderId"]}, "ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequest": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "voicePortalGreetingSelection": {"type": "string", "enum": ["Default", "Branded"]}, "voicePortalGreetingFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "voiceMessagingGreetingSelection": {"type": "string", "enum": ["Default", "Branded"]}, "voiceMessagingGreetingFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}, "required": ["serviceProviderId"]}, "SystemAccessDeviceFileGetListRequest": {"type": "object", "properties": {"deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceName"]}, "SystemAccessDeviceFileGetRequest": {"type": "object", "properties": {"deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceName", "fileType"]}, "SystemAccessDeviceFileGetRequest14sp8": {"type": "object", "properties": {"deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["deviceName", "fileFormat"]}, "SystemAccessDeviceFileGetRequest16sp1": {"type": "object", "properties": {"deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["deviceName", "fileFormat"]}, "SystemAccessDeviceFileModifyRequest": {"type": "object", "properties": {"deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "fileType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileSource": {"type": "string", "enum": ["Default", "Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}}, "required": ["deviceName", "fileType"]}, "SystemAccessDeviceGetRequest": {"type": "object", "properties": {"deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceName"]}, "SystemAccessDeviceGetRequest14sp3": {"type": "object", "properties": {"deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceName"]}, "SystemAccessDeviceGetRequest14sp6": {"type": "object", "properties": {"deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceName"]}, "SystemAccessDeviceGetRequest16": {"type": "object", "properties": {"deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceName"]}, "SystemAdviceOfChargeGetRequest": {"type": "object", "properties": {}}, "SystemAdviceOfChargeModifyRequest": {"type": "object", "properties": {"delayBetweenNotificationSeconds": {"type": "AdviceOfChargeDelayBetweenNotificationSeconds"}, "incomingAocHandling": {"type": "AdviceOfChargeIncomingAocHandling"}, "costInformationSource": {"type": "string", "minLength": 1, "maxLength": 80}}}, "SystemASRParametersGetRequest": {"type": "object", "properties": {}}, "SystemASRParametersGetRequest14sp5": {"type": "object", "properties": {}}, "SystemASRParametersModifyRequest": {"type": "object", "properties": {"maxTransmissions": {"type": "ASRMaxTransmissions"}, "retransmissionDelayMilliSeconds": {"type": "ASRRetransmissionDelayMilliSeconds"}, "listeningPort": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "sourceAddress": {"type": "string", "minLength": 1, "maxLength": 80}}}, "SystemAutomaticCallbackGetRequest": {"type": "object", "properties": {}}, "SystemAutomaticCallbackGetRequest15": {"type": "object", "properties": {}}, "SystemAutomaticCallbackGetRequest15sp2": {"type": "object", "properties": {}}, "SystemAutomaticCallbackModifyRequest": {"type": "object", "properties": {"monitorMinutes": {"type": "AutomaticCallbackMonitorMinutes"}, "waitBetweenRetryOriginatorMinutes": {"type": "integer", "minimum": 1.0, "maximum": 15.0}, "maxMonitorsPerOriginator": {"type": "AutomaticCallbackMaxMonitorsPerOriginator"}, "maxCallbackRings": {"type": "AutomaticCallbackMaxCallbackRings"}, "maxRetryOriginatorMinutes": {"type": "integer", "minimum": 180.0, "maximum": 360.0}}}, "SystemAutomaticCollectCallGetRequest": {"type": "object", "properties": {}}, "SystemBCCTAddOCIInterfaceAddressRequest": {"type": "object", "properties": {"interfaceNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["interfaceNetAddress"]}, "SystemBCCTDeleteOCIInterfaceAddressRequest": {"type": "object", "properties": {"interfaceNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["interfaceNetAddress"]}, "SystemBCCTGetOCIInterfaceAddressListRequest": {"type": "object", "properties": {}}, "SystemBroadWorksMobilityGetRequest": {"type": "object", "properties": {}}, "SystemBroadWorksMobilityGetRequest17sp4": {"type": "object", "properties": {}}, "SystemBroadWorksMobilityGetRequest19sp1": {"type": "object", "properties": {}}, "SystemBroadWorksMobilityGetRequest21": {"type": "object", "properties": {}}, "SystemBroadWorksMobilityGetRequest21sp1": {"type": "object", "properties": {}}, "SystemBroadWorksMobilityGetRequest21sp1V2": {"type": "object", "properties": {}}, "SystemBroadWorksMobilityGetRequest22": {"type": "object", "properties": {}}, "SystemBroadWorksMobilityGetRequest22V2": {"type": "object", "properties": {}}, "SystemBroadWorksMobilityModifyRequest": {"type": "object", "properties": {"enableLocationServices": {"type": "boolean"}, "enableMSRNLookup": {"type": "boolean"}, "enableMobileStateChecking": {"type": "boolean"}, "denyCallOriginations": {"type": "boolean"}, "denyCallTerminations": {"type": "boolean"}, "imrnTimeoutMilliseconds": {"type": "integer", "minimum": 100.0, "maximum": 60000.0}, "scfSignalingIPAddress": {"type": "string", "minLength": 1, "maxLength": 39}, "scfSignalingPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}}}, "SystemBroadWorksMobilityModifyRequest17sp4": {"type": "object", "properties": {"enableLocationServices": {"type": "boolean"}, "enableMSRNLookup": {"type": "boolean"}, "enableMobileStateChecking": {"type": "boolean"}, "denyCallOriginations": {"type": "boolean"}, "denyCallTerminations": {"type": "boolean"}, "imrnTimeoutMilliseconds": {"type": "integer", "minimum": 100.0, "maximum": 60000.0}, "scfSignalingNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "scfSignalingPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "refreshPeriodSeconds": {"type": "integer", "minimum": 10.0, "maximum": 1800.0}, "maxConsecutiveFailures": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "maxResponseWaitTimeMilliseconds": {"type": "integer", "minimum": 100.0, "maximum": 10000.0}, "enableAnnouncementSuppression": {"type": "boolean"}}}, "SystemBroadWorksMobilityServiceAccessCodeAddRequest": {"type": "object", "properties": {"serviceAccessCode": {"type": "string", "minLength": 1, "maxLength": 10}, "countryCode": {"type": "string", "maxLength": 3}, "description": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["serviceAccessCode", "countryCode"]}, "SystemBroadWorksMobilityServiceAccessCodeDeleteRequest": {"type": "object", "properties": {"countryCode": {"type": "string", "maxLength": 3}, "serviceAccessCode": {"type": "string", "minLength": 1, "maxLength": 10}}, "required": ["countryCode", "serviceAccessCode"]}, "SystemBroadWorksMobilityServiceAccessCodeGetListRequest": {"type": "object", "properties": {}}, "SystemBroadWorksMobilityServiceAccessCodeModifyRequest": {"type": "object", "properties": {"countryCode": {"type": "string", "maxLength": 3}, "serviceAccessCode": {"type": "string", "minLength": 1, "maxLength": 10}, "description": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["countryCode", "serviceAccessCode"]}, "SystemBusyLampFieldGetRequest": {"type": "object", "properties": {}}, "SystemBwDiameterBaseDataGetRequest": {"type": "object", "properties": {}}, "SystemBwDiameterBaseDataGetRequest17sp3": {"type": "object", "properties": {}}, "SystemBwDiameterPeerAddRequest": {"type": "object", "properties": {"instance": {"type": "BwDiameterPeerInstance"}, "identity": {"type": "string", "minLength": 1, "maxLength": 80}, "ipAddress": {"type": "string", "minLength": 1, "maxLength": 39}, "port": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "enabled": {"type": "boolean"}}, "required": ["instance", "identity", "port", "enabled"]}, "SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequest": {"type": "object", "properties": {}}, "SystemCallCenterGetRequest": {"type": "object", "properties": {}}, "SystemCallCenterGetRequest14sp9": {"type": "object", "properties": {}}, "SystemCallCenterGetRequest16": {"type": "object", "properties": {}}, "SystemCallCenterGetRequest17": {"type": "object", "properties": {}}, "SystemCallCenterGetRequest17sp4": {"type": "object", "properties": {}}, "SystemCallCenterGetRequest19": {"type": "object", "properties": {}}, "SystemCallCenterReportingServerGetListRequest": {"type": "object", "properties": {}}, "SystemCallingNameRetrievalGetRequest14": {"type": "object", "properties": {}}, "SystemCallingNameRetrievalGetRequest16sp1": {"type": "object", "properties": {}}, "SystemCallingNameRetrievalGetRequest17sp4": {"type": "object", "properties": {}}, "SystemCallingNameRetrievalGetRequest20": {"type": "object", "properties": {}}, "SystemCallingNameRetrievalModifyRequest": {"type": "object", "properties": {"queryTimerMilliSeconds": {"type": "integer", "minimum": 500.0, "maximum": 5000.0}, "serverNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "serverPort": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "serverTransportProtocol": {"type": "string", "enum": ["UDP", "TCP", "Unspecified"]}}}, "SystemCallingNameRetrievalModifyRequest16sp1": {"type": "object", "properties": {"triggerCNAMQueriesForAllNetworkCalls": {"type": "boolean"}, "triggerCNAMQueriesForGroupAndEnterpriseCalls": {"type": "boolean"}, "queryProtocol": {"type": "string", "enum": ["Sip", "Soap"]}, "queryTimeoutMilliseconds": {"type": "integer", "minimum": 100.0, "maximum": 10000.0}, "sipExternalDatabaseNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "sipExternalDatabasePort": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "sipExternalDatabaseTransport": {"type": "string", "enum": ["UDP", "TCP", "Unspecified"]}, "soapExternalDatabaseNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "soapSupportsDNSSRV": {"type": "boolean"}, "callingNameSource": {"type": "string", "enum": ["Presentation Identity", "Asserted Identity"]}}}, "SystemCallProcessingGetPolicyRequest14": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest14sp1": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest14sp4": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest14sp7": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest15": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest15sp2": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest16": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest16sp2": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest17": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest17sp3": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest17sp4": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest18sp1": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest19sp1": {"type": "object", "properties": {}}, "SystemCallProcessingGetPolicyRequest21sp1": {"type": "object", "properties": {}}, "SystemCallProcessingModifyPolicyRequest14": {"type": "object", "properties": {"useMaxSimultaneousCalls": {"type": "boolean"}, "maxSimultaneousCalls": {"type": "integer", "minimum": 1.0, "maximum": 500.0}, "useMaxSimultaneousVideoCalls": {"type": "boolean"}, "maxSimultaneousVideoCalls": {"type": "integer", "minimum": 1.0, "maximum": 500.0}, "useMaxCallTimeForAnsweredCalls": {"type": "boolean"}, "maxCallTimeForAnsweredCallsMinutes": {"type": "integer", "minimum": 5.0, "maximum": 2880.0}, "useMaxCallTimeForUnansweredCalls": {"type": "boolean"}, "maxCallTimeForUnansweredCallsMinutes": {"type": "integer", "minimum": 1.0, "maximum": 60.0}, "mediaPolicySelection": {"type": "string", "enum": ["Use Uncompressed Codec", "Use Supported Media Set", "No Restrictions"]}, "supportedMediaSetName": {"type": "string", "minLength": 1, "maxLength": 80}, "networkUsageSelection": {"type": "string", "enum": ["Force All Calls", "Force All Except Extension and Location Calls", "Do Not Force Enterprise and Group Calls"]}, "enforceGroupCallingLineIdentityRestriction": {"type": "boolean"}, "enforceEnterpriseCallingLineIdentityRestriction": {"type": "boolean"}, "allowEnterpriseGroupCallTypingForPrivateDialingPlan": {"type": "boolean"}, "allowEnterpriseGroupCallTypingForPublicDialingPlan": {"type": "boolean"}, "overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan": {"type": "boolean"}, "enableEnterpriseExtensionDialing": {"type": "boolean"}, "conferenceURI": {"type": "string", "minLength": 1, "maxLength": 161}, "maxConferenceParties": {"type": "integer", "minimum": 4.0, "maximum": 15.0}, "useMaxConcurrentRedirectedCalls": {"type": "boolean"}, "maxConcurrentRedirectedCalls": {"type": "integer", "minimum": 1.0, "maximum": 32.0}, "useMaxFindMeFollowMeDepth": {"type": "boolean"}, "maxFindMeFollowMeDepth": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "maxRedirectionDepth": {"type": "integer", "minimum": 1.0, "maximum": 15.0}, "useMaxConcurrentFindMeFollowMeInvocations": {"type": "boolean"}, "maxConcurrentFindMeFollowMeInvocations": {"type": "integer", "minimum": 1.0, "maximum": 32.0}, "clidPolicy": {"type": "string", "enum": ["Use DN", "Use Configurable CLID"]}, "emergencyClidPolicy": {"type": "string", "enum": ["Use DN", "Use Configurable CLID"]}, "allowAlternateNumbersForRedirectingIdentity": {"type": "boolean"}}}, "SystemCallProcessingPolicyProfileAddRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "assignedSubscriberType": {"type": "array", "items": {"type": "string", "enum": ["User", "Trunk Group Pilot User", "Auto Attendant", "BroadWorks Anywhere", "Call Center", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Instant Group Call", "Meet-Me Conferencing", "Route Point", "Voice Portal", "VoiceXML"]}}}, "required": ["name"]}, "SystemCallProcessingPolicyProfileAddRequest20": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "assignedSubscriberType": {"type": "array", "items": {"type": "string", "enum": ["User", "Trunk Group Pilot User", "Auto Attendant", "BroadWorks Anywhere", "Call Center", "Find-me/Follow-me", "Group Paging", "Flexible Seating Host", "Hunt Group", "Instant Group Call", "Meet-Me Conferencing", "Route Point", "Voice Portal", "VoiceXML"]}}}, "required": ["name"]}, "SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileCallCenterProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileCollaborateProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileGetRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["name"]}, "SystemCallProcessingPolicyProfileGetRequest20": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["name"]}, "SystemCallProcessingPolicyProfileGroupPagingProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileInstantGroupCallProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileModifyRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "newName": {"type": "string", "minLength": 1, "maxLength": 40}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "assignedSubscriberTypeList": {"type": "object", "properties": {"subscriberType": {"type": "array", "items": {"type": "string", "enum": ["User", "Trunk Group Pilot User", "Auto Attendant", "BroadWorks Anywhere", "Call Center", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Instant Group Call", "Meet-Me Conferencing", "Route Point", "Voice Portal", "VoiceXML"]}}}, "required": ["subscriberType"]}}, "required": ["name"]}, "SystemCallProcessingPolicyProfileModifyRequest20": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "newName": {"type": "string", "minLength": 1, "maxLength": 40}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "assignedSubscriberTypeList": {"type": "object", "properties": {"subscriberType": {"type": "array", "items": {"type": "string", "enum": ["User", "Trunk Group Pilot User", "Auto Attendant", "BroadWorks Anywhere", "Call Center", "Find-me/Follow-me", "Group Paging", "Flexible Seating Host", "Hunt Group", "Instant Group Call", "Meet-Me Conferencing", "Route Point", "Voice Portal", "VoiceXML"]}}}, "required": ["subscriberType"]}}, "required": ["name"]}, "SystemCallProcessingPolicyProfileRoutePointProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V2": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileUserProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileUserProfileGetRequest21sp1": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileUserProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileUserProfileGetRequest22V2": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22": {"type": "object", "properties": {"callProcessingPolicyProfileName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["callProcessingPolicyProfileName"]}, "SystemCallRecordingAddPlatformRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "port": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "mediaStream": {"type": "string", "enum": ["Dual", "Single"]}, "transportType": {"type": "string", "enum": ["UDP", "TCP", "Unspecified"]}, "description": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["name", "netAddress", "port", "mediaStream", "transportType"]}, "SystemCallRecordingAddPlatformRequest19": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "port": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "mediaStream": {"type": "string", "enum": ["Dual", "Single"]}, "transportType": {"type": "string", "enum": ["UDP", "TCP", "Unspecified"]}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "schemaVersion": {"type": "string", "enum": ["1.0", "2.0", "3.0"]}}, "required": ["name", "netAddress", "port", "mediaStream", "transportType", "schemaVersion"]}, "SystemCallRecordingAddPlatformRequest20": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "port": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "mediaStream": {"type": "string", "enum": ["Dual", "Single"]}, "transportType": {"type": "string", "enum": ["UDP", "TCP", "Unspecified"]}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "schemaVersion": {"type": "string", "enum": ["1.0", "2.0", "3.0"]}, "supportVideoRecording": {"type": "boolean"}, "resellerId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["name", "netAddress", "mediaStream", "transportType", "schemaVersion", "supportVideoRecording"]}, "SystemCallRecordingGetPlatformListRequest": {"type": "object", "properties": {}}, "SystemCallRecordingGetPlatformListRequest20sp1": {"type": "object", "properties": {}}, "SystemCallRecordingGetPlatformListRequest22": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"excludeReseller": {"type": "boolean"}}}, {"type": "object", "properties": {"resellerId": {"type": "string", "minLength": 1, "maxLength": 30}}}]}, "SystemCallRecordingGetPlatformUsageRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["name"]}, "SystemCallRecordingGetRequest": {"type": "object", "properties": {}}, "SystemCallRecordingGetRequest22": {"type": "object", "properties": {}}, "SystemCallRecordingModifyPlatformRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "port": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "mediaStream": {"type": "string", "enum": ["Dual", "Single"]}, "transportType": {"type": "string", "enum": ["UDP", "TCP", "Unspecified"]}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "schemaVersion": {"type": "string", "enum": ["1.0", "2.0", "3.0"]}, "supportVideoRecording": {"type": "boolean"}}, "oneOf": [{"type": "object", "properties": {"becomeSystemDefault": {"type": "boolean"}}}, {"type": "object", "properties": {"becomeResellerDefault": {"type": "string", "minLength": 1, "maxLength": 30}}}], "required": ["name"]}, "SystemCallRecordingModifyRequest": {"type": "object", "properties": {"continueCallAfterRecordingFailure": {"type": "boolean"}, "refreshPeriodSeconds": {"type": "integer", "minimum": 10.0, "maximum": 300.0}, "maxConsecutiveFailures": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "maxResponseWaitTimeMilliseconds": {"type": "RecordingMaxResponseWaitTimeMilliseconds"}, "continueCallAfterVideoRecordingFailure": {"type": "boolean"}}}, "SystemCollaborateGetRequest": {"type": "object", "properties": {}}, "SystemCollaborateGetRequest20sp1": {"type": "object", "properties": {}}, "SystemCollaborateModifyRequest": {"type": "object", "properties": {"collaborateRoomIdLength": {"type": "integer", "minimum": 4.0, "maximum": 15.0}, "instantRoomIdleTimeoutSeconds": {"type": "integer", "minimum": 1.0, "maximum": 3600.0}, "collaborateRoomMaximumDurationMinutes": {"type": "integer", "minimum": 1.0, "maximum": 7200.0}, "supportOutdial": {"type": "boolean"}, "maxCollaborateRoomParticipants": {"type": "integer", "minimum": 3.0, "maximum": 30.0}, "collaborateActiveTalkerRefreshIntervalSeconds": {"type": "integer", "minimum": 1.0, "maximum": 5.0}, "terminateCollaborateAfterGracePeriod": {"type": "boolean"}, "collaborateGracePeriod": {"type": "object", "properties": {"hours": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "minutes": {"type": "integer"}}, "required": ["hours", "minutes"]}, "enableActiveCollaborateNotification": {"type": "boolean"}, "collaborateFromAddress": {"type": "string", "minLength": 1, "maxLength": 80}}}, "SystemCollaborateModifyRequest20sp1": {"type": "object", "properties": {"collaborateRoomIdLength": {"type": "integer", "minimum": 4.0, "maximum": 15.0}, "instantRoomIdleTimeoutSeconds": {"type": "integer", "minimum": 60.0, "maximum": 18000.0}, "collaborateRoomMaximumDurationMinutes": {"type": "integer", "minimum": 1.0, "maximum": 7200.0}, "supportOutdial": {"type": "boolean"}, "maxCollaborateRoomParticipants": {"type": "integer", "minimum": 3.0, "maximum": 30.0}, "collaborateActiveTalkerRefreshIntervalSeconds": {"type": "integer", "minimum": 1.0, "maximum": 5.0}, "terminateCollaborateAfterGracePeriod": {"type": "boolean"}, "collaborateGracePeriod": {"type": "object", "properties": {"hours": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "minutes": {"type": "integer"}}, "required": ["hours", "minutes"]}, "enableActiveCollaborateNotification": {"type": "boolean"}, "collaborateFromAddress": {"type": "string", "minLength": 1, "maxLength": 80}}}, "SystemCommunicationBarringCriteriaAddRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "matchCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}, "matchAlternateCallIndicator": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}, "matchVirtualOnNetCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}, "matchPublicNetwork": {"type": "boolean"}, "matchPrivateNetwork": {"type": "boolean"}, "matchLocalCategory": {"type": "boolean"}, "matchNationalCategory": {"type": "boolean"}, "matchInterlataCategory": {"type": "boolean"}, "matchIntralataCategory": {"type": "boolean"}, "matchInternationalCategory": {"type": "boolean"}, "matchPrivateCategory": {"type": "boolean"}, "matchEmergencyCategory": {"type": "boolean"}, "matchOtherCategory": {"type": "boolean"}, "matchInterNetwork": {"type": "boolean"}, "matchInterHostingNE": {"type": "boolean"}, "matchInterAS": {"type": "boolean"}, "matchIntraAS": {"type": "boolean"}, "matchChargeCalls": {"type": "boolean"}, "matchNoChargeCalls": {"type": "boolean"}, "matchGroupCalls": {"type": "boolean"}, "matchEnterpriseCalls": {"type": "boolean"}, "matchNetworkCalls": {"type": "boolean"}, "matchNetworkURLCalls": {"type": "boolean"}, "matchRepairCalls": {"type": "boolean"}, "matchEmergencyCalls": {"type": "boolean"}, "matchInternalCalls": {"type": "boolean"}, "timeSchedule": {"type": "string", "minLength": 1, "maxLength": 40}, "holidaySchedule": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["name", "matchPublicNetwork", "matchPrivateNetwork", "matchLocalCategory", "matchNationalCategory", "matchInterlataCategory", "matchIntralataCategory", "matchInternationalCategory", "matchPrivateCategory", "matchEmergencyCategory", "matchOtherCategory", "matchInterNetwork", "matchInterHostingNE", "matchInterAS", "matchIntraAS", "matchChargeCalls", "matchNoChargeCalls", "matchGroupCalls", "matchEnterpriseCalls", "matchNetworkCalls", "matchNetworkURLCalls", "matchRepairCalls", "matchEmergencyCalls", "matchInternalCalls"]}, "SystemCommunicationBarringCriteriaGetRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["name"]}, "SystemCommunicationBarringCriteriaGetRequest17": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["name"]}, "SystemCommunicationBarringProfileAddRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "originatingDefaultAction": {"type": "string", "enum": ["Allow", "Allow Timed", "Block", "Authorization Code", "Authorization Code Timed", "Treatment", "Transfer"]}, "originatingDefaultTreatmentId": {"type": "string", "minLength": 1, "maxLength": 40}, "originatingDefaultTransferNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "originatingDefaultCallTimeout": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}, "originatingRule": {"type": "array", "items": {"type": "object", "properties": {"criteria": {"type": "string", "minLength": 1, "maxLength": 40}, "action": {"type": "string", "enum": ["Allow", "Allow Timed", "Block", "Authorization Code", "Authorization Code Timed", "Treatment", "Transfer"]}, "treatmentId": {"type": "string", "minLength": 1, "maxLength": 40}, "transferNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "callTimeoutSeconds": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}}, "required": ["criteria", "action"]}}, "redirectingDefaultAction": {"type": "string", "enum": ["Allow", "Allow Timed", "Block"]}, "redirectingDefaultCallTimeout": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}, "redirectingRule": {"type": "array", "items": {"type": "object", "properties": {"criteria": {"type": "string", "minLength": 1, "maxLength": 40}, "action": {"type": "string", "enum": ["Allow", "Allow Timed", "Block"]}, "callTimeoutSeconds": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}}, "required": ["criteria", "action"]}}}, "required": ["name", "originatingDefaultAction", "redirectingDefaultAction"]}, "SystemCommunicationBarringProfileAddRequest17sp1": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "originatingDefaultAction": {"type": "string", "enum": ["Allow", "Allow Timed", "Block", "Authorization Code", "Authorization Code Timed", "Treatment", "Transfer"]}, "originatingDefaultTreatmentId": {"type": "string", "minLength": 1, "maxLength": 40}, "originatingDefaultTransferNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "originatingDefaultCallTimeout": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}, "originatingRule": {"type": "array", "items": {"type": "object", "properties": {"criteria": {"type": "string", "minLength": 1, "maxLength": 40}, "action": {"type": "string", "enum": ["Allow", "Allow Timed", "Block", "Authorization Code", "Authorization Code Timed", "Treatment", "Transfer"]}, "treatmentId": {"type": "string", "minLength": 1, "maxLength": 40}, "transferNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "callTimeoutSeconds": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}}, "required": ["criteria", "action"]}}, "redirectingDefaultAction": {"type": "string", "enum": ["Allow", "Allow Timed", "Block"]}, "redirectingDefaultCallTimeout": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}, "redirectingRule": {"type": "array", "items": {"type": "object", "properties": {"criteria": {"type": "string", "minLength": 1, "maxLength": 40}, "action": {"type": "string", "enum": ["Allow", "Allow Timed", "Block"]}, "callTimeoutSeconds": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}}, "required": ["criteria", "action"]}}, "incomingDefaultAction": {"type": "string", "enum": ["Allow", "Allow Timed", "Block"]}, "incomingDefaultCallTimeout": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}, "incomingRule": {"type": "array", "items": {"type": "object", "properties": {"digitPatternCriteria": {"type": "string", "minLength": 1, "maxLength": 40}, "action": {"type": "string", "enum": ["Allow", "Allow Timed", "Block"]}, "callTimeoutSeconds": {"type": "integer", "minimum": 60.0, "maximum": 86400.0}, "timeSchedule": {"type": "string", "minLength": 1, "maxLength": 40}, "holidaySchedule": {"type": "string", "minLength": 1, "maxLength": 40}, "priority": {"type": "xs:float", "minimum": 0.0, "maximum": 1000000.0}}, "required": ["digitPatternCriteria", "action", "priority"]}}}, "required": ["name", "originatingDefaultAction", "redirectingDefaultAction", "incomingDefaultAction"]}, "SystemCommunicationBarringProfileGetRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["name"]}, "SystemCommunicationBarringProfileGetRequest16": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["name"]}, "SystemCommunicationBarringProfileGetRequest17sp1": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["name"]}, "SystemConfigurableTreatmentGetRequest": {"type": "object", "properties": {"treatmentId": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["treatmentId"]}, "SystemCPEConfigAddFileServerRequest": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "ftpHostNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "ftpUserId": {"type": "string", "minLength": 1, "maxLength": 30}, "ftpUserPassword": {"type": "string", "minLength": 1, "maxLength": 40}, "cpeFileDirectory": {"type": "string", "minLength": 1, "maxLength": 256}, "passiveFTP": {"type": "boolean"}}, "required": ["deviceType", "ftpHostNetAddress", "ftpUserId", "ftpUserPassword"]}, "SystemCPEConfigGetFileServerListRequest": {"type": "object", "properties": {}}, "SystemCPEConfigModifyFileServerRequest": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "ftpHostNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "ftpUserId": {"type": "string", "minLength": 1, "maxLength": 30}, "ftpUserPassword": {"type": "string", "minLength": 1, "maxLength": 40}, "cpeFileDirectory": {"type": "string", "minLength": 1, "maxLength": 256}, "passiveFTP": {"type": "boolean"}}, "required": ["deviceType"]}, "SystemCPEConfigParametersGetRequest": {"type": "object", "properties": {}}, "SystemCPEConfigParametersGetRequest14sp6": {"type": "object", "properties": {}}, "SystemCPEConfigParametersGetRequest20": {"type": "object", "properties": {}}, "SystemCPEConfigParametersModifyRequest": {"type": "object", "properties": {"enableIPDeviceManagement": {"type": "boolean"}, "ftpConnectTimeoutSeconds": {"type": "integer", "minimum": 1.0, "maximum": 600.0}, "ftpFileTransferTimeoutSeconds": {"type": "integer", "minimum": 1.0, "maximum": 600.0}, "pauseBetweenFileRebuildMilliseconds": {"type": "integer", "minimum": 0.0, "maximum": 10000.0}, "maxBusyTimeMinutes": {"type": "integer", "minimum": 1.0, "maximum": 1440.0}, "deviceAccessAppServerClusterName": {"type": "string", "minLength": 1, "maxLength": 80}}, "oneOf": [{"type": "object", "properties": {"fileRebuildImmediate": {"type": "integer"}}, "required": ["fileRebuildImmediate"]}, {"type": "object", "properties": {"fileRebuildDaily": {"type": "object", "properties": {"startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startHour", "startMinute"]}}, "required": ["fileRebuildDaily"]}, {"type": "object", "properties": {"fileRebuildHourly": {"type": "object", "properties": {"startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startMinute"]}}, "required": ["fileRebuildHourly"]}]}, "SystemCPEConfigParametersModifyRequest20": {"type": "object", "properties": {"enableIPDeviceManagement": {"type": "boolean"}, "ftpConnectTimeoutSeconds": {"type": "integer", "minimum": 1.0, "maximum": 600.0}, "ftpFileTransferTimeoutSeconds": {"type": "integer", "minimum": 1.0, "maximum": 600.0}, "pauseBetweenFileRebuildMilliseconds": {"type": "integer", "minimum": 0.0, "maximum": 10000.0}, "maxBusyTimeMinutes": {"type": "integer", "minimum": 1.0, "maximum": 1440.0}, "deviceAccessAppServerClusterName": {"type": "string", "minLength": 1, "maxLength": 80}}}, "SystemCrInterfaceGetRequest": {"type": "object", "properties": {}}, "SystemDeviceManagementEventGetListRequest": {"type": "object", "properties": {"eventQueueType": {"type": "string", "enum": ["Completed", "In Progress Or Pending"]}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaExactDeviceManagementEventStatusInProgressOrPending": {"type": "object", "properties": {"dmEventStatusInProgressOrPending": {"type": "string", "enum": ["Pending", "Queued", "In Progress", "Process On Other Host", "Stale"]}}, "required": ["dmEventStatusInProgressOrPending"]}, "searchCriteriaExactDeviceManagementEventStatusCompleted": {"type": "object", "properties": {"dmEventStatusCompleted": {"type": "string", "enum": ["Canceled", "Completed"]}}, "required": ["dmEventStatusCompleted"]}, "searchCriteriaExactDeviceManagementEventAction": {"type": "object", "properties": {"dmEventAction": {"type": "string", "enum": ["Delete", "Download", "Rebuild", "Reset", "Upload"]}}, "required": ["dmEventAction"]}, "searchCriteriaExactDeviceManagementEventLevel": {"type": "object", "properties": {"dmEventLevel": {"type": "string", "enum": ["Device", "Device Type", "Device Type Group", "Group", "User", "Device Type Service Provider", "Service Provider"]}}, "required": ["dmEventLevel"]}, "searchCriteriaExactDeviceManagementEventType": {"type": "object", "properties": {"dmEventType": {"type": "string", "enum": ["Automatic", "Manual"]}}, "required": ["dmEventType"]}, "searchCriteriaDeviceManagementEventAdditionalInfo": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 0, "maxLength": 256}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaDeviceManagementEventLoginId": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}}, "SystemDeviceManagementTagAddRequest": {"type": "object", "properties": {"tagName": {"type": "string", "minLength": 1, "maxLength": 64}, "tagValue": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"systemDefaultTagSet": {"type": "boolean"}}, "required": ["systemDefaultTagSet"]}, {"type": "object", "properties": {"tagSetName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["tagSetName"]}], "required": ["tagName"]}, "SystemDeviceManagementTagAddRequest21sp2": {"type": "object", "properties": {"tagName": {"type": "string", "minLength": 1, "maxLength": 64}, "isTagValueEncrypted": {"type": "boolean"}}, "anyOf": [{"oneOf": [{"type": "object", "properties": {"systemDefaultTagSet": {"type": "boolean"}}, "required": ["systemDefaultTagSet"]}, {"type": "object", "properties": {"tagSetName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["tagSetName"]}]}, {"oneOf": [{"type": "object", "properties": {"tagValue": {"type": "string", "minLength": 1, "maxLength": 256}}}, {"type": "object", "properties": {"tagValueToEncrypt": {"type": "string", "minLength": 1, "maxLength": 256}}}]}], "required": ["tagName", "isTagValueEncrypted"]}, "SystemDeviceTypeGetAvailableListRequest": {"type": "object", "properties": {"allowConference": {"type": "boolean"}, "allowMusicOnHold": {"type": "boolean"}, "onlyConference": {"type": "boolean"}, "onlyVideoCapable": {"type": "boolean"}, "onlyOptionalIpAddress": {"type": "boolean"}}, "required": ["allowConference", "allowMusicOnHold", "onlyConference", "onlyVideoCapable", "onlyOptionalIpAddress"]}, "SystemDeviceTypeGetAvailableListRequest14sp1": {"type": "object", "properties": {"allowConference": {"type": "boolean"}, "allowMusicOnHold": {"type": "boolean"}, "onlyConference": {"type": "boolean"}, "onlyVideoCapable": {"type": "boolean"}, "onlyOptionalIpAddress": {"type": "boolean"}}, "required": ["allowConference", "allowMusicOnHold", "onlyConference", "onlyVideoCapable", "onlyOptionalIpAddress"]}, "SystemDeviceTypeGetAvailableListRequest14sp3": {"type": "object", "properties": {"allowConference": {"type": "boolean"}, "allowMusicOnHold": {"type": "boolean"}, "onlyConference": {"type": "boolean"}, "onlyVideoCapable": {"type": "boolean"}, "onlyOptionalIpAddress": {"type": "boolean"}}, "required": ["allowConference", "allowMusicOnHold", "onlyConference", "onlyVideoCapable", "onlyOptionalIpAddress"]}, "SystemDeviceTypeGetRequest": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemDeviceTypeGetRequest14sp3": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemDeviceTypeGetRequest14sp6": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemDeviceTypeGetRequest16": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemDeviceTypeGetRequest16sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemDeviceTypeGetRequest18": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemDeviceTypeGetRequest19": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemDeviceTypeGetRequest21sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemDeviceTypeGetRequest22": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemDialPlanPolicyGetRequest": {"type": "object", "properties": {}}, "SystemDnGetUtilizationRequest": {"type": "object", "properties": {"phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["phoneNumber"]}, "SystemDomainGetListRequest22": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"excludeReseller": {"type": "boolean"}}}, {"type": "object", "properties": {"resellerId": {"type": "string", "minLength": 1, "maxLength": 30}}}]}, "SystemEnhancedCallLogsGetRequest": {"type": "object", "properties": {}}, "SystemEnhancedCallLogsGetRequest17sp4": {"type": "object", "properties": {}}, "SystemEnhancedCallLogsGetRequest20sp1": {"type": "object", "properties": {}}, "SystemEnhancedCallLogsGetRequest22": {"type": "object", "properties": {}}, "SystemEnhancedCallLogsModifyRequest": {"type": "object", "properties": {"isSendEnabled": {"type": "boolean"}, "server1NetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "server1SendPort": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "server1RetrievePort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "server2NetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "server2SendPort": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "server2RetrievePort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "sharedSecret": {"type": "string", "minLength": 1, "maxLength": 80}, "retransmissionDelayMilliSeconds": {"type": "integer", "minimum": 200.0, "maximum": 5000.0}, "maxTransmissions": {"type": "integer", "minimum": 1.0, "maximum": 5.0}, "soapTimeoutSeconds": {"type": "integer", "minimum": 1.0, "maximum": 120.0}, "useDBS": {"type": "boolean"}, "maxNonPagedResponseSize": {"type": "integer", "minimum": 100.0, "maximum": 1000.0}, "eclQueryApplicationURL": {"type": "string", "minLength": 1, "maxLength": 256}, "eclQueryDataRepositoryURL": {"type": "string", "minLength": 1, "maxLength": 256}}}, "SystemExpensiveCallTypeGetListRequest": {"type": "object", "properties": {}}, "SystemExternalAuthenticationAddACLEntryRequest": {"type": "object", "properties": {"netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "description": {"type": "NetworkACLEntryDescription"}}, "required": ["netAddress"]}, "SystemExternalAuthenticationDeleteACLEntryRequest": {"type": "object", "properties": {"netAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["netAddress"]}, "SystemExternalAuthenticationModifyACLEntryRequest": {"type": "object", "properties": {"netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "description": {"type": "NetworkACLEntryDescription"}}, "required": ["netAddress"]}, "SystemFeatureAccessCodeGetListRequest20": {"type": "object", "properties": {}}, "SystemFeatureAccessCodeModifyListRequest20": {"type": "object", "properties": {"featureAccessCode": {"type": "array", "items": {"type": "object", "properties": {"featureAccessCodeName": {"type": "string", "minLength": 1}, "mainCode": {"type": "string", "minLength": 1, "maxLength": 5}, "alternateCode": {"type": "string", "minLength": 1, "maxLength": 5}}, "required": ["featureAccessCodeName"]}}}}, "SystemFileRepositoryDeviceAddRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "rootDirectory": {"type": "string", "minLength": 1, "maxLength": 256}, "port": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}}, "oneOf": [{"type": "object", "properties": {"protocolWebDAV": {"type": "object", "properties": {"secure": {"type": "boolean"}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["secure", "netAddress"]}}, "required": ["protocolWebDAV"]}, {"type": "object", "properties": {"protocolFTP": {"type": "object", "properties": {"ftpPassive": {"type": "boolean"}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["ftpPassive", "netAddress"]}}, "required": ["protocolFTP"]}], "required": ["name"]}, "SystemFileRepositoryDeviceAddRequest16": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "rootDirectory": {"type": "string", "minLength": 1, "maxLength": 256}, "port": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}}, "oneOf": [{"type": "object", "properties": {"protocolWebDAV": {"type": "object", "properties": {"secure": {"type": "boolean"}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["secure", "netAddress"]}}, "required": ["protocolWebDAV"]}, {"type": "object", "properties": {"protocolFTP": {"type": "object", "properties": {"ftpPassive": {"type": "boolean"}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "ftpRemoteVerification": {"type": "boolean"}}, "required": ["ftpPassive", "netAddress", "ftpRemoteVerification"]}}, "required": ["protocolFTP"]}], "required": ["name"]}, "SystemFileRepositoryDeviceGetRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["name"]}, "SystemFileRepositoryDeviceGetRequest16": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["name"]}, "SystemFileRepositoryDeviceGetRequest20": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["name"]}, "SystemFileRepositoryDeviceModifyRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "rootDirectory": {"type": "string", "minLength": 1, "maxLength": 256}, "secure": {"type": "boolean"}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "ftpPassive": {"type": "boolean"}, "protocol": {"type": "string", "enum": ["WebDAV", "FTP"]}, "port": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "ftpRemoteVerification": {"type": "boolean"}}, "required": ["name"]}, "SystemGeographicRedundancyUnreachableFromPrimaryGetUserListRequest": {"type": "object", "properties": {}}, "SystemGetRegistrationContactListRequest": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "searchCriteriaRegistrationURI": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 1024}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "searchCriteriaSIPContact": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 1020}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}, "endpointType": {"type": "string", "enum": ["Primary", "Shared Call Appearance", "Video Add On"]}, "expired": {"type": "boolean"}}, "oneOf": [{"type": "object", "properties": {"resellerId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["resellerId"]}, {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["serviceProviderId"]}, {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, {"type": "object", "properties": {"linePort": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["linePort"]}, {"type": "object", "properties": {"svcProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["svcProviderId", "groupId"]}]}, "SystemHolidayScheduleAddRequest": {"type": "object", "properties": {"holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "holiday01": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday02": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday03": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday04": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday05": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday06": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday07": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday08": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday09": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday10": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday11": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday12": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday13": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday14": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday15": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday16": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday17": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday18": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday19": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday20": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}}, "required": ["holidayScheduleName"]}, "SystemHolidayScheduleDeleteRequest": {"type": "object", "properties": {"holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["holidayScheduleName"]}, "SystemHolidayScheduleGetListRequest": {"type": "object", "properties": {}}, "SystemHolidayScheduleGetRequest": {"type": "object", "properties": {"holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["holidayScheduleName"]}, "SystemHolidayScheduleModifyRequest": {"type": "object", "properties": {"holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "newHolidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "holiday01": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday02": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday03": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday04": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday05": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday06": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday07": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday08": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday09": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday10": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday11": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday12": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday13": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday14": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday15": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday16": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday17": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday18": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday19": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday20": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}}, "required": ["holidayScheduleName"]}, "SystemHuntGroupGetRequest": {"type": "object", "properties": {}}, "SystemInCallServiceActivationGetRequest": {"type": "object", "properties": {}}, "SystemInCallServiceActivationModifyRequest": {"type": "object", "properties": {"defaultActivationDigits": {"type": "string", "minLength": 1, "maxLength": 8}}}, "SystemIntegratedIMPGetRequest": {"type": "object", "properties": {}}, "SystemLanguageAddRequest": {"type": "object", "properties": {"language": {"type": "string", "minLength": 1, "maxLength": 40}, "locale": {"type": "string", "maxLength": 5}, "encoding": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["language", "locale", "encoding"]}, "SystemLanguageModifyRequest": {"type": "object", "properties": {"language": {"type": "string", "minLength": 1, "maxLength": 40}, "becomeDefaultLanguage": {"type": "boolean"}, "locale": {"type": "string", "maxLength": 5}, "encoding": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["language"]}, "SystemLicensingGetRequest": {"type": "object", "properties": {}}, "SystemLicensingGetRequest14sp3": {"type": "object", "properties": {}}, "SystemLocationBasedCallingRestrictionsGetRequest": {"type": "object", "properties": {}}, "SystemMailParametersGetRequest": {"type": "object", "properties": {}}, "SystemMaliciousCallTraceGetUserListRequest": {"type": "object", "properties": {}}, "SystemMediaAddRequest": {"type": "object", "properties": {"mediaName": {"type": "MediaName"}, "codecName": {"type": "CodecName"}, "mediaType": {"type": "string", "enum": ["Audio", "Video", "Image"]}, "bandwidthEnforcementType": {"type": "MediaBandwidthEnforcementType"}, "mediaBandwidth": {"type": "MediaBandwidthBitsPerSecond"}}, "required": ["mediaName", "codecName", "mediaType", "bandwidthEnforcementType"]}, "SystemMeetMeConferencingGetRequest": {"type": "object", "properties": {}}, "SystemMeetMeConferencingGetRequest17sp3": {"type": "object", "properties": {}}, "SystemMeetMeConferencingGetRequest18": {"type": "object", "properties": {}}, "SystemMigratedUsersGetListRequest": {"type": "object", "properties": {}}, "SystemNetworkClassOfServiceGetRequest": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["name"]}, "SystemNetworkServerSyncParametersGetRequest": {"type": "object", "properties": {}}, "SystemNetworkServerSyncParametersGetRequest14sp2": {"type": "object", "properties": {}}, "SystemNetworkServerSyncParametersGetRequest16": {"type": "object", "properties": {}}, "SystemNetworkSynchingServerAddRequest": {"type": "object", "properties": {"netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "port": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "description": {"type": "NetworkServerDescription"}}, "required": ["netAddress"]}, "SystemNetworkSynchingServerAddRequest22": {"type": "object", "properties": {"netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "port": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "description": {"type": "NetworkServerDescription"}, "order": {"type": "NetworkServerOrder"}}, "required": ["netAddress", "port", "order"]}, "SystemNetworkSynchingServerModifyRequest": {"type": "object", "properties": {"netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "port": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "description": {"type": "NetworkServerDescription"}, "becomePreferred": {"type": "boolean"}, "order": {"type": "NetworkServerOrder"}}, "required": ["netAddress"]}, "SystemNumberActivationGetRequest": {"type": "object", "properties": {}}, "SystemNumberActivationModifyRequest": {"type": "object", "properties": {"useNumberActivation": {"type": "boolean"}}}, "SystemOCICallControlApplicationAddRequest": {"type": "object", "properties": {"applicationId": {"type": "string", "minLength": 1, "maxLength": 80}, "enableSystemWide": {"type": "boolean"}, "description": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["applicationId", "enableSystemWide"]}, "SystemOCICallControlApplicationAddRequest14sp9": {"type": "object", "properties": {"applicationId": {"type": "string", "minLength": 1, "maxLength": 80}, "enableSystemWide": {"type": "boolean"}, "notificationTimeoutSeconds": {"type": "integer", "minimum": 2.0, "maximum": 30.0}, "description": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["applicationId", "enableSystemWide", "notificationTimeoutSeconds"]}, "SystemOCIReportingParametersGetRequest": {"type": "object", "properties": {}}, "SystemOCIReportingParametersGetRequest14sp1": {"type": "object", "properties": {}}, "SystemOutgoingCallingPlanGetRequest": {"type": "object", "properties": {}}, "SystemPasswordRulesGetRequest13mp2": {"type": "object", "properties": {}}, "SystemPasswordRulesModifyRequest": {"type": "object", "properties": {"rulesApplyTo": {"type": "string", "enum": ["System, Provisioning Administrator", "System, Provisioning, Service Provider Administrator", "Administrator and User"]}, "allowWebAddExternalAuthenticationUsers": {"type": "boolean"}, "disallowUserId": {"type": "boolean"}, "disallowOldPassword": {"type": "boolean"}, "disallowReversedOldPassword": {"type": "boolean"}, "restrictMinDigits": {"type": "boolean"}, "minDigits": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "restrictMinUpperCaseLetters": {"type": "boolean"}, "minUpperCaseLetters": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "restrictMinLowerCaseLetters": {"type": "boolean"}, "minLowerCaseLetters": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "restrictMinNonAlphanumericCharacters": {"type": "boolean"}, "minNonAlphanumericCharacters": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "minLength": {"type": "integer", "minimum": 3.0, "maximum": 40.0}, "maxFailedLoginAttempts": {"type": "integer", "minimum": 0.0, "maximum": 10.0}, "passwordExpiresDays": {"type": "integer", "minimum": 0.0, "maximum": 199.0}, "sendLoginDisabledNotifyEmail": {"type": "boolean"}, "loginDisabledNotifyEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "disallowRulesModification": {"type": "boolean"}}}, "SystemPerformanceMeasurementReportingAddFileServerRequest": {"type": "object", "properties": {"ftpHostNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "ftpUserId": {"type": "string", "minLength": 1, "maxLength": 30}, "ftpUserPassword": {"type": "string", "minLength": 1, "maxLength": 40}, "passiveFTP": {"type": "boolean"}}, "required": ["ftpHostNetAddress", "ftpUserId", "ftpUserPassword"]}, "SystemPerformanceMeasurementReportingDeleteFileServerRequest": {"type": "object", "properties": {"ftpHostNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["ftpHostNetAddress"]}, "SystemPerformanceMeasurementReportingGetFileServerListRequest": {"type": "object", "properties": {}}, "SystemPerformanceMeasurementReportingGetRequest": {"type": "object", "properties": {}}, "SystemPerformanceMeasurementReportingGetRequest22": {"type": "object", "properties": {}}, "SystemPerformanceMeasurementReportingModifyFileServerRequest": {"type": "object", "properties": {"ftpHostNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "passiveFTP": {"type": "boolean"}}, "required": ["ftpHostNetAddress"]}, "SystemPolicyGetDefaultRequest14": {"type": "object", "properties": {}}, "SystemPolicyGetDefaultRequest14sp1": {"type": "object", "properties": {}}, "SystemPolicyGetDefaultRequest14sp4": {"type": "object", "properties": {}}, "SystemPolicyGetDefaultRequest16sp1": {"type": "object", "properties": {}}, "SystemPolicyGetDefaultRequest16sp2": {"type": "object", "properties": {}}, "SystemPolicyGetDefaultRequest17": {"type": "object", "properties": {}}, "SystemPolicyGetDefaultRequest17sp1": {"type": "object", "properties": {}}, "SystemPolicyGetDefaultRequest17sp3": {"type": "object", "properties": {}}, "SystemPortalPasscodeRulesGetRequest": {"type": "object", "properties": {}}, "SystemProvisioningValidationGetRequest": {"type": "object", "properties": {}}, "SystemRedundancyParametersGetRequest": {"type": "object", "properties": {}}, "SystemSecurityClassificationGetRequest": {"type": "object", "properties": {}}, "SystemSelectiveServicesGetRequest": {"type": "object", "properties": {}}, "SystemSelectiveServicesGetRequest18sp1": {"type": "object", "properties": {}}, "SystemSessionAdmissionControlGetRequest": {"type": "object", "properties": {}}, "SystemSessionAdmissionControlGetRequest21sp1": {"type": "object", "properties": {}}, "SystemSessionAdmissionControlGetRequest22": {"type": "object", "properties": {}}, "SystemSessionAuditGetRequest": {"type": "object", "properties": {}}, "SystemSessionAuditGetRequest14sp3": {"type": "object", "properties": {}}, "SystemSessionAuditModifyRequest": {"type": "object", "properties": {"isActive": {"type": "boolean"}, "intervalSeconds": {"type": "SessionAuditIntervalSeconds"}, "timeoutPeriodSeconds": {"type": "SessionAuditTimeoutPeriodSeconds"}}}, "SystemShInterfaceParametersGetRequest": {"type": "object", "properties": {}}, "SystemShInterfaceParametersModifyRequest": {"type": "object", "properties": {"hssRealm": {"type": "string", "minLength": 1, "maxLength": 80}, "requestTimeoutSeconds": {"type": "ShInterfaceRequestTimeoutSeconds"}, "publicIdentityRefreshDelaySeconds": {"type": "ShInterfacePublicIdentityRefreshDelaySeconds"}}}, "SystemSIPAddACLEntryRequest14": {"type": "object", "properties": {"netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "transportProtocol": {"type": "string", "enum": ["UDP", "TCP", "All"]}, "description": {"type": "NetworkACLEntryDescription"}}, "required": ["netAddress", "transportProtocol"]}, "SystemSIPDeleteACLEntryRequest": {"type": "object", "properties": {"netAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["netAddress"]}, "SystemSIPDeviceTypeAddRequest": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "authenticationOverride": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "Check Sync"]}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}}, "required": ["enableMonitoring", "configType", "systemFileName", "deviceFileFormat"]}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMusicOnHoldDevice", "authenticationOverride", "RFC3264Hold", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "useBusinessTrunkingContact", "staticRegistrationCapable"]}, "SystemSIPDeviceTypeAddRequest14sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "authenticationOverride": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "Check Sync"]}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}}, "required": ["enableMonitoring", "configType", "systemFileName", "deviceFileFormat"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMusicOnHoldDevice", "authenticationOverride", "RFC3264Hold", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "useBusinessTrunkingContact", "staticRegistrationCapable", "earlyMediaSupport"]}, "SystemSIPDeviceTypeAddRequest14sp2": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "Check Sync"]}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}}, "required": ["enableMonitoring", "configType", "systemFileName", "deviceFileFormat"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMusicOnHoldDevice", "RFC3264Hold", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "useBusinessTrunkingContact", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode"]}, "SystemSIPDeviceTypeAddRequest14sp3": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "Check Sync"]}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}}, "required": ["enableMonitoring", "configType", "systemFileName", "deviceFileFormat"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "tdmOverlay": {"type": "boolean"}, "supportsBroadWorksINFOForCallWaiting": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "RFC3264Hold", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "useBusinessTrunkingContact", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "tdmOverlay", "supportsBroadWorksINFOForCallWaiting"]}, "SystemSIPDeviceTypeAddRequest14sp6": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "Check Sync"]}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring", "configType"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "tdmOverlay": {"type": "boolean"}, "supportsBroadWorksINFOForCallWaiting": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "RFC3264Hold", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "useBusinessTrunkingContact", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "tdmOverlay", "supportsBroadWorksINFOForCallWaiting"]}, "SystemSIPDeviceTypeAddRequest15": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "Check Sync"]}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring", "configType"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "tdmOverlay": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "RFC3264Hold", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "useBusinessTrunkingContact", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "tdmOverlay", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide"]}, "SystemSIPDeviceTypeAddRequest16": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "Check Sync"]}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring", "configType"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "RFC3264Hold", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "useBusinessTrunkingContact", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable"]}, "SystemSIPDeviceTypeAddRequest16sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "RFC3264Hold", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "useBusinessTrunkingContact", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable"]}, "SystemSIPDeviceTypeAddRequest17": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "RFC3264Hold", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId"]}, "SystemSIPDeviceTypeAddRequest17sp4": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "RFC3264Hold", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy"]}, "SystemSIPDeviceTypeAddRequest18": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enable3G4GContinuity": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "RFC3264Hold", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enable3G4GContinuity", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption"]}, "SystemSIPDeviceTypeAddRequest18sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enable3G4GContinuity": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enable3G4GContinuity", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption"]}, "SystemSIPDeviceTypeAddRequest18sp1V2": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enable3G4GContinuity": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enable3G4GContinuity", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398"]}, "SystemSIPDeviceTypeAddRequest19": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enable3G4GContinuity": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enable3G4GContinuity", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering"]}, "SystemSIPDeviceTypeAddRequest19sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enable3G4GContinuity": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enable3G4GContinuity", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "bypassMediaTreatment"]}, "SystemSIPDeviceTypeAddRequest20": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enable3G4GContinuity": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enable3G4GContinuity", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "supportClientSessionInfo", "supportCallInfoConferenceSubscriptionURI", "supportRemotePartyInfo", "supportVisualDeviceManagement", "bypassMediaTreatment"]}, "SystemSIPDeviceTypeAddRequest20sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI", "macInCert"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enable3G4GContinuity": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enable3G4GContinuity", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "supportClientSessionInfo", "supportCallInfoConferenceSubscriptionURI", "supportRemotePartyInfo", "supportVisualDeviceManagement", "bypassMediaTreatment"]}, "SystemSIPDeviceTypeAddRequest21": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enhancedForICS": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "supports3G4GContinuity": {"type": "boolean"}, "publishesOwnPresence": {"type": "boolean"}, "supportCauseParameter": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enhancedForICS", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "supportClientSessionInfo", "supportCallInfoConferenceSubscriptionURI", "supportRemotePartyInfo", "supportVisualDeviceManagement", "bypassMediaTreatment", "supports3G4GContinuity", "publishesOwnPresence", "supportCauseParameter"]}, "SystemSIPDeviceTypeAddRequest21sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enhancedForICS": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "supports3G4GContinuity": {"type": "boolean"}, "publishesOwnPresence": {"type": "boolean"}, "supportCauseParameter": {"type": "boolean"}, "locationNetwork": {"type": "string", "enum": ["Fixed", "Mobile"]}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enhancedForICS", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "supportClientSessionInfo", "supportCallInfoConferenceSubscriptionURI", "supportRemotePartyInfo", "supportVisualDeviceManagement", "bypassMediaTreatment", "supports3G4GContinuity", "publishesOwnPresence", "supportCauseParameter", "locationNetwork"]}, "SystemSIPDeviceTypeAddRequest21sp1V2": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI", "macInCert"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enhancedForICS": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "supports3G4GContinuity": {"type": "boolean"}, "publishesOwnPresence": {"type": "boolean"}, "supportCauseParameter": {"type": "boolean"}, "locationNetwork": {"type": "string", "enum": ["Fixed", "Mobile"]}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enhancedForICS", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "supportClientSessionInfo", "supportCallInfoConferenceSubscriptionURI", "supportRemotePartyInfo", "supportVisualDeviceManagement", "bypassMediaTreatment", "supports3G4GContinuity", "publishesOwnPresence", "supportCauseParameter", "locationNetwork"]}, "SystemSIPDeviceTypeAddRequest22": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI", "macInCert"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enhancedForICS": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "supports3G4GContinuity": {"type": "boolean"}, "publishesOwnPresence": {"type": "boolean"}, "supportCauseParameter": {"type": "boolean"}, "locationNetwork": {"type": "string", "enum": ["Fixed", "Mobile"]}, "resellerId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enhancedForICS", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "supportClientSessionInfo", "supportCallInfoConferenceSubscriptionURI", "supportRemotePartyInfo", "supportVisualDeviceManagement", "bypassMediaTreatment", "supports3G4GContinuity", "publishesOwnPresence", "supportCauseParameter", "locationNetwork"]}, "SystemSIPDeviceTypeAddRequest22V10": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "FTPS", "SFTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "allowSpCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}, "enableDeviceActivation": {"type": "boolean"}, "deviceModel": {"type": "string", "minLength": 1, "maxLength": 40}, "supportLinks": {"type": "string", "enum": ["Not Supported", "Support Links from Devices", "Support Link to Device"]}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "allowSpCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI", "macInCert", "enableDeviceActivation", "supportLinks"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["SIP Authentication", "Certificate-based Authentication", "Disabled"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync", "ResetString"]}, "resetString": {"type": "string", "minLength": 1, "maxLength": 80}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enhancedForICS": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagementRedirectLink": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "supports3G4GContinuity": {"type": "boolean"}, "publishesOwnPresence": {"type": "boolean"}, "supportCauseParameter": {"type": "boolean"}, "locationNetwork": {"type": "string", "enum": ["Fixed", "Mobile"]}, "resellerId": {"type": "string", "minLength": 1, "maxLength": 36}, "allowTerminationBasedOnICSI": {"type": "boolean"}, "roamingMode": {"type": "string", "enum": ["CDMA", "GSM", "None"]}, "supportVisualDeviceManagementAPI": {"type": "boolean"}, "deviceCategory": {"type": "string", "enum": ["Generic", "Hosted", "Client Applications", "SIP Trunking", "Local Gateway"]}, "verstatInPAIHeader": {"type": "boolean"}, "verstatInFromHeader": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enhancedForICS", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "supportClientSessionInfo", "supportCallInfoConferenceSubscriptionURI", "supportRemotePartyInfo", "supportVisualDeviceManagementRedirectLink", "bypassMediaTreatment", "supports3G4GContinuity", "publishesOwnPresence", "supportCauseParameter", "locationNetwork", "allowTerminationBasedOnICSI", "roamingMode"]}, "SystemSIPDeviceTypeAddRequest22V2": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI", "macInCert"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enhancedForICS": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "supports3G4GContinuity": {"type": "boolean"}, "publishesOwnPresence": {"type": "boolean"}, "supportCauseParameter": {"type": "boolean"}, "locationNetwork": {"type": "string", "enum": ["Fixed", "Mobile"]}, "allowTerminationBasedOnICSI": {"type": "boolean"}, "roamingMode": {"type": "string", "enum": ["CDMA", "GSM", "None"]}, "resellerId": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enhancedForICS", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "supportClientSessionInfo", "supportCallInfoConferenceSubscriptionURI", "supportRemotePartyInfo", "supportVisualDeviceManagement", "bypassMediaTreatment", "supports3G4GContinuity", "publishesOwnPresence", "supportCauseParameter", "locationNetwork", "allowTerminationBasedOnICSI", "roamingMode"]}, "SystemSIPDeviceTypeAddRequest22V3": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "allowSpCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "allowSpCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI", "macInCert"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enhancedForICS": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "supports3G4GContinuity": {"type": "boolean"}, "publishesOwnPresence": {"type": "boolean"}, "supportCauseParameter": {"type": "boolean"}, "locationNetwork": {"type": "string", "enum": ["Fixed", "Mobile"]}, "resellerId": {"type": "string", "minLength": 1, "maxLength": 30}, "allowTerminationBasedOnICSI": {"type": "boolean"}, "roamingMode": {"type": "string", "enum": ["CDMA", "GSM", "None"]}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enhancedForICS", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "supportClientSessionInfo", "supportCallInfoConferenceSubscriptionURI", "supportRemotePartyInfo", "supportVisualDeviceManagement", "bypassMediaTreatment", "supports3G4GContinuity", "publishesOwnPresence", "supportCauseParameter", "locationNetwork", "allowTerminationBasedOnICSI", "roamingMode"]}, "SystemSIPDeviceTypeAddRequest22V5": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "FTPS", "SFTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "allowSpCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}, "enableDeviceActivation": {"type": "boolean"}, "deviceModel": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "allowSpCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI", "macInCert", "enableDeviceActivation"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enhancedForICS": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "supports3G4GContinuity": {"type": "boolean"}, "publishesOwnPresence": {"type": "boolean"}, "supportCauseParameter": {"type": "boolean"}, "locationNetwork": {"type": "string", "enum": ["Fixed", "Mobile"]}, "resellerId": {"type": "string", "minLength": 1, "maxLength": 36}, "allowTerminationBasedOnICSI": {"type": "boolean"}, "roamingMode": {"type": "string", "enum": ["CDMA", "GSM", "None"]}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enhancedForICS", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "supportClientSessionInfo", "supportCallInfoConferenceSubscriptionURI", "supportRemotePartyInfo", "supportVisualDeviceManagement", "bypassMediaTreatment", "supports3G4GContinuity", "publishesOwnPresence", "supportCauseParameter", "locationNetwork", "allowTerminationBasedOnICSI", "roamingMode"]}, "SystemSIPDeviceTypeAddRequest23": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "FTPS", "SFTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "allowSpCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "allowSpCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI", "macInCert"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enhancedForICS": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "supports3G4GContinuity": {"type": "boolean"}, "publishesOwnPresence": {"type": "boolean"}, "supportCauseParameter": {"type": "boolean"}, "locationNetwork": {"type": "string", "enum": ["Fixed", "Mobile"]}, "resellerId": {"type": "string", "minLength": 1, "maxLength": 36}, "allowTerminationBasedOnICSI": {"type": "boolean"}, "roamingMode": {"type": "string", "enum": ["CDMA", "GSM", "None"]}, "supportCallingPartyCategoryInOutboundFromHeader": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enhancedForICS", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "supportClientSessionInfo", "supportCallInfoConferenceSubscriptionURI", "supportRemotePartyInfo", "supportVisualDeviceManagement", "bypassMediaTreatment", "supports3G4GContinuity", "publishesOwnPresence", "supportCauseParameter", "locationNetwork", "allowTerminationBasedOnICSI", "roamingMode", "supportCallingPartyCategoryInOutboundFromHeader"]}, "SystemSIPDeviceTypeAddRequest23V2": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "numberOfPorts": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}, "profile": {"type": "string", "enum": ["Non-intelligent Device Addressing", "Non-intelligent Proxy Addressing", "Intelligent Device Addressing", "Intelligent Proxy Addressing"]}, "registrationCapable": {"type": "boolean"}, "isConferenceDevice": {"type": "boolean"}, "isMobilityManagerDevice": {"type": "boolean"}, "isMusicOnHoldDevice": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "configType": {"type": "string", "enum": ["2 File Configuration", "3 File Configuration", "SNAP"]}, "systemFileName": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceFileFormat": {"type": "string", "minLength": 1, "maxLength": 265}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "FTPS", "SFTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "allowSpCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessURI": {"type": "string", "minLength": 1, "maxLength": 256}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}, "enableDeviceActivation": {"type": "boolean"}, "deviceModel": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceAccessProtocol", "tagMode", "allowDeviceProfileCustomTagSet", "allowGroupCustomTagSet", "allowSpCustomTagSet", "sendEmailUponResetFailure", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI", "macInCert", "enableDeviceActivation"]}}, "required": ["enableMonitoring"]}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enhancedForICS": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "deviceTypeConfigurationOption": {"type": "string", "enum": ["Not Supported", "Device Management", "Legacy"]}, "supportRFC3398": {"type": "boolean"}, "staticLineOrdering": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "supports3G4GContinuity": {"type": "boolean"}, "publishesOwnPresence": {"type": "boolean"}, "supportCauseParameter": {"type": "boolean"}, "locationNetwork": {"type": "string", "enum": ["Fixed", "Mobile"]}, "resellerId": {"type": "string", "minLength": 1, "maxLength": 36}, "allowTerminationBasedOnICSI": {"type": "boolean"}, "roamingMode": {"type": "string", "enum": ["CDMA", "GSM", "None"]}, "supportCallingPartyCategoryInOutboundFromHeader": {"type": "boolean"}}, "required": ["deviceType", "numberOfPorts", "profile", "registrationCapable", "isConferenceDevice", "isMobilityManagerDevice", "isMusicOnHoldDevice", "holdNormalization", "holdAnnouncementMethod", "isTrusted", "E164Capable", "routeAdvance", "forwardingOverride", "wirelessIntegration", "isVideoCapable", "PBXIntegration", "staticRegistrationCapable", "earlyMediaSupport", "authenticateRefer", "autoConfigSoftClient", "authenticationMode", "requiresBroadWorksDigitCollection", "requiresBroadWorksCallWaitingTone", "requiresMWISubscription", "useHistoryInfoHeaderOnAccessSide", "adviceOfChargeCapable", "supportCallCenterMIMEType", "trunkMode", "addPCalledPartyId", "supportIdentityInUpdateAndReInvite", "unscreenedPresentationIdentityPolicy", "enhancedForICS", "supportEmergencyDisconnectControl", "deviceTypeConfigurationOption", "supportRFC3398", "staticLineOrdering", "supportClientSessionInfo", "supportCallInfoConferenceSubscriptionURI", "supportRemotePartyInfo", "supportVisualDeviceManagement", "bypassMediaTreatment", "supports3G4GContinuity", "publishesOwnPresence", "supportCauseParameter", "locationNetwork", "allowTerminationBasedOnICSI", "roamingMode", "supportCallingPartyCategoryInOutboundFromHeader"]}, "SystemSIPDeviceTypeFileAddRequest": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "remoteFileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "fileCategory": {"type": "string", "enum": ["Static", "Dynamic Group", "Dynamic Profile"]}, "allowFileCustomization": {"type": "boolean"}, "fileSource": {"type": "string", "enum": ["Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceType", "fileType", "fileFormat", "remoteFileFormat", "fileCategory", "allowFileCustomization", "fileSource", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}, "SystemSIPDeviceTypeFileAddRequest14sp8": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "remoteFileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "fileCategory": {"type": "string", "enum": ["Static", "Dynamic Group", "Dynamic Profile"]}, "allowFileCustomization": {"type": "boolean"}, "fileSource": {"type": "string", "enum": ["Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceType", "fileFormat", "remoteFileFormat", "fileCategory", "allowFileCustomization", "fileSource", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}, "SystemSIPDeviceTypeFileAddRequest16sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "remoteFileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "fileCategory": {"type": "string", "enum": ["Static", "Dynamic Group", "Dynamic Profile"]}, "fileCustomization": {"type": "string", "enum": ["Disallow", "Administrator", "Administrator and User"]}, "fileSource": {"type": "string", "enum": ["Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceType", "fileFormat", "remoteFileFormat", "fileCategory", "fileCustomization", "fileSource", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI"]}, "SystemSIPDeviceTypeFileAddRequest18": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "remoteFileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "fileCategory": {"type": "string", "enum": ["Static", "Dynamic Group", "Dynamic Profile"]}, "fileCustomization": {"type": "string", "enum": ["Disallow", "Administrator", "Administrator and User"]}, "fileSource": {"type": "string", "enum": ["Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}, "allowHttp": {"type": "boolean"}, "allowHttps": {"type": "boolean"}, "allowTftp": {"type": "boolean"}, "enableCaching": {"type": "boolean"}}, "required": ["deviceType", "fileFormat", "remoteFileFormat", "fileCategory", "fileCustomization", "fileSource", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI", "allowHttp", "allowHttps", "allowTftp", "enableCaching"]}, "SystemSIPDeviceTypeFileAddRequest19": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "remoteFileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "fileCategory": {"type": "string", "enum": ["Static", "Dynamic Group", "Dynamic Profile"]}, "fileCustomization": {"type": "string", "enum": ["Disallow", "Administrator", "Administrator and User"]}, "fileSource": {"type": "string", "enum": ["Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}, "allowHttp": {"type": "boolean"}, "allowHttps": {"type": "boolean"}, "allowTftp": {"type": "boolean"}, "enableCaching": {"type": "boolean"}, "allowUploadFromDevice": {"type": "boolean"}}, "required": ["deviceType", "fileFormat", "remoteFileFormat", "fileCategory", "fileCustomization", "fileSource", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI", "allowHttp", "allowHttps", "allowTftp", "enableCaching", "allowUploadFromDevice"]}, "SystemSIPDeviceTypeFileAddRequest20": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "remoteFileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "fileCategory": {"type": "string", "enum": ["Static", "Dynamic Group", "Dynamic Profile"]}, "fileCustomization": {"type": "string", "enum": ["Disallow", "Administrator", "Administrator and User"]}, "fileSource": {"type": "string", "enum": ["Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}, "allowHttp": {"type": "boolean"}, "allowHttps": {"type": "boolean"}, "allowTftp": {"type": "boolean"}, "enableCaching": {"type": "boolean"}, "allowUploadFromDevice": {"type": "boolean"}, "defaultExtendedFileCaptureMode": {"type": "boolean"}}, "required": ["deviceType", "fileFormat", "remoteFileFormat", "fileCategory", "fileCustomization", "fileSource", "useHttpDigestAuthentication", "macBasedFileAuthentication", "userNamePasswordFileAuthentication", "macInNonRequestURI", "allowHttp", "allowHttps", "allowTftp", "enableCaching", "allowUploadFromDevice"]}, "SystemSIPDeviceTypeFileDeleteRequest": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType", "fileType"]}, "SystemSIPDeviceTypeFileGetListRequest": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeFileGetRequest": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType", "fileType"]}, "SystemSIPDeviceTypeFileGetRequest14sp8": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["deviceType", "fileFormat"]}, "SystemSIPDeviceTypeFileGetRequest16sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["deviceType", "fileFormat"]}, "SystemSIPDeviceTypeFileGetRequest18": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["deviceType", "fileFormat"]}, "SystemSIPDeviceTypeFileGetRequest19": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["deviceType", "fileFormat"]}, "SystemSIPDeviceTypeFileGetRequest20": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}}, "required": ["deviceType", "fileFormat"]}, "SystemSIPDeviceTypeFileModifyRequest": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileType": {"type": "string", "minLength": 1, "maxLength": 40}, "allowFileCustomization": {"type": "boolean"}, "fileSource": {"type": "string", "enum": ["Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceType", "fileType"]}, "SystemSIPDeviceTypeFileModifyRequest14sp8": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "fileFormat": {"type": "string", "minLength": 1, "maxLength": 128}, "allowFileCustomization": {"type": "boolean"}, "fileSource": {"type": "string", "enum": ["Manual", "Custom"]}, "uploadFile": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"fileContent": {"type": "string"}}, "required": ["fileContent"]}]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}, "required": ["deviceType", "fileFormat"]}, "SystemSIPDeviceTypeGetRequest": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest14sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest14sp2": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest14sp3": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest14sp6": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest15": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest16": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest16sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest17": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest17sp4": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest18": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest18sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest18sp1V2": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest19": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest19sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest20": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest20sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest21": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest21sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest21sp1V2": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest22": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest22V13": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest22V2": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest22V3": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest22V4": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest22V5": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest22V6": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest22V7": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest22V8": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeGetRequest23": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeModifyRequest": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "isObsolete": {"type": "boolean"}, "registrationCapable": {"type": "boolean"}, "authenticationOverride": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "Check Sync"]}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}}}}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeModifyRequest14sp2": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "isObsolete": {"type": "boolean"}, "registrationCapable": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "Check Sync"]}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}}}}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "tdmOverlay": {"type": "boolean"}, "supportsBroadWorksINFOForCallWaiting": {"type": "boolean"}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeModifyRequest15": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "isObsolete": {"type": "boolean"}, "registrationCapable": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "Check Sync"]}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 30}, "password": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}}}}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "tdmOverlay": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeModifyRequest16": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "isObsolete": {"type": "boolean"}, "registrationCapable": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "Check Sync"]}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "allowSpCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}}}}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeModifyRequest16sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "isObsolete": {"type": "boolean"}, "registrationCapable": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "useBusinessTrunkingContact": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "allowSpCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}}}}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeModifyRequest17": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "isObsolete": {"type": "boolean"}, "registrationCapable": {"type": "boolean"}, "RFC3264Hold": {"type": "boolean"}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "allowSpCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}}}}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enable3G4GContinuity": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeModifyRequest18sp1": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "isObsolete": {"type": "boolean"}, "registrationCapable": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "allowSpCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}}}}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enable3G4GContinuity": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "supportRFC3398": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "allowTerminationBasedOnICSI": {"type": "boolean"}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeModifyRequest21": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "isObsolete": {"type": "boolean"}, "registrationCapable": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "allowSpCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}}}}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled", "Enabled With Web Portal Credentials"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enhancedForICS": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "supportRFC3398": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "supports3G4GContinuity": {"type": "boolean"}, "publishesOwnPresence": {"type": "boolean"}, "supportCauseParameter": {"type": "boolean"}, "locationNetwork": {"type": "string", "enum": ["Fixed", "Mobile"]}, "roamingMode": {"type": "string", "enum": ["CDMA", "GSM", "None"]}}, "required": ["deviceType"]}, "SystemSIPDeviceTypeModifyRequest22": {"type": "object", "properties": {"deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "isObsolete": {"type": "boolean"}, "registrationCapable": {"type": "boolean"}, "holdNormalization": {"type": "string", "enum": ["Unspecified Address", "Inactive", "Rfc3264"]}, "holdAnnouncementMethod": {"type": "string", "enum": ["Inactive", "Bandwidth Attributes"]}, "isTrusted": {"type": "boolean"}, "E164Capable": {"type": "boolean"}, "routeAdvance": {"type": "boolean"}, "forwardingOverride": {"type": "boolean"}, "wirelessIntegration": {"type": "boolean"}, "webBasedConfigURL": {"type": "string", "minLength": 1, "maxLength": 80}, "isVideoCapable": {"type": "boolean"}, "PBXIntegration": {"type": "boolean"}, "staticRegistrationCapable": {"type": "boolean"}, "cpeDeviceOptions": {"type": "object", "properties": {"enableMonitoring": {"type": "boolean"}, "deviceManagementDeviceTypeOptions": {"type": "object", "properties": {"deviceAccessProtocol": {"type": "string", "enum": ["Http", "Https", "FTP", "TFTP"]}, "tagMode": {"type": "string", "enum": ["None", "System", "System And Custom"]}, "tagSet": {"type": "string", "minLength": 1, "maxLength": 30}, "allowDeviceProfileCustomTagSet": {"type": "boolean"}, "allowGroupCustomTagSet": {"type": "boolean"}, "allowSpCustomTagSet": {"type": "boolean"}, "sendEmailUponResetFailure": {"type": "boolean"}, "deviceAccessNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "deviceAccessPort": {"type": "integer", "minimum": 1.0, "maximum": 65535.0}, "deviceAccessContext": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultDeviceLanguage": {"type": "string", "minLength": 1, "maxLength": 40}, "defaultDeviceEncoding": {"type": "string", "minLength": 1, "maxLength": 40}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHttpDigestAuthentication": {"type": "boolean"}, "macBasedFileAuthentication": {"type": "boolean"}, "userNamePasswordFileAuthentication": {"type": "boolean"}, "macInNonRequestURI": {"type": "boolean"}, "macInCert": {"type": "boolean"}, "macFormatInNonRequestURI": {"type": "string", "minLength": 1, "maxLength": 256}}}}}, "earlyMediaSupport": {"type": "string", "enum": ["No Early Media", "RTP - Session", "RTP - Early Session"]}, "authenticateRefer": {"type": "boolean"}, "autoConfigSoftClient": {"type": "boolean"}, "authenticationMode": {"type": "string", "enum": ["Enabled", "Disabled"]}, "requiresBroadWorksDigitCollection": {"type": "boolean"}, "requiresBroadWorksCallWaitingTone": {"type": "boolean"}, "requiresMWISubscription": {"type": "boolean"}, "useHistoryInfoHeaderOnAccessSide": {"type": "boolean"}, "adviceOfChargeCapable": {"type": "boolean"}, "resetEvent": {"type": "string", "enum": ["Resync", "CheckSync"]}, "supportCallCenterMIMEType": {"type": "boolean"}, "trunkMode": {"type": "string", "enum": ["Pilot", "Proxy", "User"]}, "addPCalledPartyId": {"type": "boolean"}, "supportIdentityInUpdateAndReInvite": {"type": "boolean"}, "unscreenedPresentationIdentityPolicy": {"type": "string", "enum": ["Profile Presentation Identity", "Unscreened Presentation Identity", "Unscreened Presentation Identity With Profile Domain"]}, "enhancedForICS": {"type": "boolean"}, "supportEmergencyDisconnectControl": {"type": "boolean"}, "supportRFC3398": {"type": "boolean"}, "supportClientSessionInfo": {"type": "boolean"}, "supportCallInfoConferenceSubscriptionURI": {"type": "boolean"}, "supportRemotePartyInfo": {"type": "boolean"}, "supportVisualDeviceManagement": {"type": "boolean"}, "bypassMediaTreatment": {"type": "boolean"}, "supports3G4GContinuity": {"type": "boolean"}, "publishesOwnPresence": {"type": "boolean"}, "supportCauseParameter": {"type": "boolean"}, "locationNetwork": {"type": "string", "enum": ["Fixed", "Mobile"]}, "allowTerminationBasedOnICSI": {"type": "boolean"}, "roamingMode": {"type": "string", "enum": ["CDMA", "GSM", "None"]}}, "required": ["deviceType"]}, "SystemSIPModifyACLEntryRequest": {"type": "object", "properties": {"netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "transportProtocol": {"type": "string", "enum": ["UDP", "TCP", "All"]}, "description": {"type": "NetworkACLEntryDescription"}}, "required": ["netAddress"]}, "SystemSMDIAddACLEntryRequest": {"type": "object", "properties": {"netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "description": {"type": "NetworkACLEntryDescription"}}, "required": ["netAddress"]}, "SystemSMDIDeleteACLEntryRequest": {"type": "object", "properties": {"netAddress": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["netAddress"]}, "SystemSMDIModifyACLEntryRequest": {"type": "object", "properties": {"netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "description": {"type": "NetworkACLEntryDescription"}}, "required": ["netAddress"]}, "SystemSMPPGetRequest": {"type": "object", "properties": {}}, "SystemSpeedDial100GetRequest": {"type": "object", "properties": {}}, "SystemSubscriberGetCallProcessingParametersRequest": {"type": "object", "properties": {}}, "SystemSubscriberGetCallProcessingParametersRequest14sp3": {"type": "object", "properties": {}}, "SystemSubscriberGetCallProcessingParametersRequest14sp7": {"type": "object", "properties": {}}, "SystemSubscriberGetCallProcessingParametersRequest15": {"type": "object", "properties": {}}, "SystemSubscriberGetCallProcessingParametersRequest15sp2": {"type": "object", "properties": {}}, "SystemSubscriberGetCallProcessingParametersRequest17": {"type": "object", "properties": {}}, "SystemSubscriberGetCallProcessingParametersRequest17sp3": {"type": "object", "properties": {}}, "SystemSubscriberGetCallProcessingParametersRequest17sp4": {"type": "object", "properties": {}}, "SystemSubscriberGetProvisioningParametersRequest": {"type": "object", "properties": {}}, "SystemSubscriberModifyCallProcessingParametersRequest": {"type": "object", "properties": {"userCallingLineIdSelection": {"type": "string", "enum": ["Disable All", "Enable All", "Enable All Except Emergency", "Enable Emergency Only"]}, "isExtendedCallingLineIdActive": {"type": "boolean"}, "isRingTimeOutActive": {"type": "boolean"}, "ringTimeoutSeconds": {"type": "integer", "minimum": 1.0, "maximum": 180.0}, "allowEmergencyRemoteOfficeOriginations": {"type": "boolean"}, "maxNoAnswerNumberOfRings": {"type": "integer", "minimum": 6.0, "maximum": 20.0}}}, "SystemSystemVoicePortalAddRequest": {"type": "object", "properties": {"systemVoicePortalId": {"type": "string", "minLength": 1, "maxLength": 161}, "name": {"type": "string", "minLength": 1, "maxLength": 80}, "callingLineIdName": {"type": "string", "minLength": 1, "maxLength": 80}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "publicUserIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "networkVoicePortalNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "allowIdentificationByPhoneNumberOrVoiceMailAliasesOnLogin": {"type": "boolean"}, "useVoicePortalWizard": {"type": "boolean"}, "useVoicePortalDefaultGreeting": {"type": "boolean"}, "voicePortalGreetingFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}, "useVoiceMessagingDefaultGreeting": {"type": "boolean"}, "voiceMessagingGreetingFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}, "required": ["systemVoicePortalId", "name", "callingLineIdName", "language", "timeZone", "allowIdentificationByPhoneNumberOrVoiceMailAliasesOnLogin", "useVoicePortalWizard", "useVoicePortalDefaultGreeting", "useVoiceMessagingDefaultGreeting"]}, "SystemSystemVoicePortalGetRequest": {"type": "object", "properties": {"systemVoicePortalId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["systemVoicePortalId"]}, "SystemSystemVoicePortalGetRequest21sp1": {"type": "object", "properties": {"systemVoicePortalId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["systemVoicePortalId"]}, "SystemThirdPartyEmergencyCallingGetRequest": {"type": "object", "properties": {}}, "SystemThirdPartyIMPGetRequest": {"type": "object", "properties": {}}, "SystemThirdPartyVoiceMailSupportGetRequest": {"type": "object", "properties": {}}, "SystemTimeScheduleAddRequest": {"type": "object", "properties": {"timeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "timeInterval01": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval02": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval03": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval04": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval05": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval06": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval07": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval08": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval09": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval10": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval11": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval12": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval13": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval14": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval15": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval16": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval17": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval18": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval19": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval20": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}}, "required": ["timeScheduleName"]}, "SystemTimeScheduleDeleteRequest": {"type": "object", "properties": {"timeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["timeScheduleName"]}, "SystemTimeScheduleGetListRequest": {"type": "object", "properties": {}}, "SystemTimeScheduleGetRequest": {"type": "object", "properties": {"timeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["timeScheduleName"]}, "SystemTimeScheduleModifyRequest": {"type": "object", "properties": {"timeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "newTimeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "timeInterval01": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval02": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval03": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval04": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval05": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval06": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval07": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval08": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval09": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval10": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval11": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval12": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval13": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval14": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval15": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval16": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval17": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval18": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval19": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval20": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}}, "required": ["timeScheduleName"]}, "SystemTreatmentMappingCallBlockingServiceGetListRequest19sp1": {"type": "object", "properties": {}}, "SystemTrunkGroupGetRequest": {"type": "object", "properties": {}}, "SystemTrunkGroupGetRequest19sp1": {"type": "object", "properties": {}}, "SystemTrunkGroupGetRequest21": {"type": "object", "properties": {}}, "SystemTrunkGroupGetRequest22": {"type": "object", "properties": {}}, "SystemTrunkGroupGetRequest23": {"type": "object", "properties": {}}, "SystemTrunkGroupUserCreationTaskGetListRequest": {"type": "object", "properties": {}}, "SystemVoiceMessagingGroupGetPasscodeRulesRequest14": {"type": "object", "properties": {}}, "SystemVoiceMessagingGroupGetRequest14": {"type": "object", "properties": {}}, "SystemVoiceMessagingGroupGetRequest16": {"type": "object", "properties": {}}, "SystemVoiceMessagingGroupGetRequest20": {"type": "object", "properties": {}}, "SystemVoiceMessagingGroupGetVoicePortalMenusRequest14": {"type": "object", "properties": {"getDefaultMenuKeys": {"type": "boolean"}}, "required": ["getDefaultMenuKeys"]}, "SystemVoiceMessagingGroupGetVoicePortalMenusRequest18": {"type": "object", "properties": {"getDefaultMenuKeys": {"type": "boolean"}}, "required": ["getDefaultMenuKeys"]}, "SystemVoiceMessagingGroupGetVoicePortalMenusRequest18sp1": {"type": "object", "properties": {"getDefaultMenuKeys": {"type": "boolean"}}, "required": ["getDefaultMenuKeys"]}, "SystemVoiceMessagingGroupGetVoicePortalMenusRequest19": {"type": "object", "properties": {"getDefaultMenuKeys": {"type": "boolean"}}, "required": ["getDefaultMenuKeys"]}, "SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1": {"type": "object", "properties": {"getDefaultMenuKeys": {"type": "boolean"}}, "required": ["getDefaultMenuKeys"]}, "SystemVoiceMessagingGroupGetVoicePortalMenusRequest20": {"type": "object", "properties": {"getDefaultMenuKeys": {"type": "boolean"}}, "required": ["getDefaultMenuKeys"]}, "SystemVoiceMessagingGroupModifyPasscodeRulesRequest": {"type": "object", "properties": {"disallowRepeatedDigits": {"type": "boolean"}, "disallowUserNumber": {"type": "boolean"}, "disallowReversedUserNumber": {"type": "boolean"}, "disallowOldPasscode": {"type": "boolean"}, "disallowReversedOldPasscode": {"type": "boolean"}, "minCodeLength": {"type": "integer", "minimum": 2.0, "maximum": 15.0}, "maxCodeLength": {"type": "integer", "minimum": 3.0, "maximum": 30.0}, "disableLoginAfterMaxFailedLoginAttempts": {"type": "boolean"}, "maxFailedLoginAttempts": {"type": "integer", "minimum": 2.0, "maximum": 10.0}, "expirePassword": {"type": "boolean"}, "passcodeExpiresDays": {"type": "integer", "minimum": 15.0, "maximum": 180.0}, "sendLoginDisabledNotifyEmail": {"type": "boolean"}, "loginDisabledNotifyEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultPassword": {"type": "string", "minLength": 1, "maxLength": 60}}}, "SystemVoiceMessagingGroupModifyRequest": {"type": "object", "properties": {"realDeleteForImap": {"type": "boolean"}, "useDnInMailBody": {"type": "boolean"}, "useShortSubjectLine": {"type": "boolean"}, "maxGreetingLengthMinutes": {"type": "integer", "minimum": 1.0, "maximum": 5.0}, "maxMessageLengthMinutes": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "maxMailboxLengthMinutes": {"type": "integer", "enum": ["10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "200", "300", "400", "500", "600", "700", "800", "900"]}, "doesMessageAge": {"type": "boolean"}, "holdPeriodDays": {"type": "integer", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "15", "30", "60"]}, "mailServerNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "mailServerProtocol": {"type": "string", "enum": ["POP3", "IMAP"]}, "defaultDeliveryFromAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultNotificationFromAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "defaultVoicePortalLockoutFromAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "useOutgoingMWIOnSMDI": {"type": "boolean"}, "mwiDelayInSeconds": {"type": "integer", "minimum": 0.0, "maximum": 300.0}, "voicePortalScope": {"type": "string", "enum": ["Service Provider", "System"]}, "networkWideMessaging": {"type": "boolean"}, "useExternalRouting": {"type": "boolean"}, "defaultExternalRoutingAddress": {"type": "string", "minLength": 1, "maxLength": 161}}}, "SystemVoiceMessagingGroupModifyVoicePortalMenusRequest": {"type": "object", "properties": {"useVoicePortalCustomization": {"type": "boolean"}, "voicePortalMainMenuKeys": {"type": "object", "properties": {"voiceMessaging": {"type": "string"}, "commPilotExpressProfile": {"type": "string"}, "personalizedName": {"type": "string"}, "callForwardingOptions": {"type": "string"}, "voicePortalCalling": {"type": "string"}, "hoteling": {"type": "string"}, "passcode": {"type": "string"}, "exitVoicePortal": {"type": "string"}, "repeatMenu": {"type": "string"}, "externalRouting": {"type": "string"}}}, "voiceMessagingMenuKeys": {"type": "object", "properties": {"playMessages": {"type": "string"}, "changeBusyGreeting": {"type": "string"}, "changeNoAnswerGreeting": {"type": "string"}, "changeExtendedAwayGreeting": {"type": "string"}, "composeMessage": {"type": "string"}, "deleteAllMessages": {"type": "string"}, "passcode": {"type": "string"}, "personalizedName": {"type": "string"}, "messageDeposit": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "playGreetingMenuKeys": {"type": "object", "properties": {"skipBackward": {"type": "string"}, "pauseOrResume": {"type": "string"}, "skipForward": {"type": "string"}, "jumpToBegin": {"type": "string"}, "jumpToEnd": {"type": "string"}}}, "changeBusyOrNoAnswerGreetingMenuKeys": {"type": "object", "properties": {"recordNewGreeting": {"type": "string"}, "listenToCurrentGreeting": {"type": "string"}, "revertToSystemDefaultGreeting": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "changeExtendedAwayGreetingMenuKeys": {"type": "object", "properties": {"activateExtendedAwayGreeting": {"type": "string"}, "deactivateExtendedAwayGreeting": {"type": "string"}, "recordNewGreeting": {"type": "string"}, "listenToCurrentGreeting": {"type": "string"}, "enableMessageDeposit": {"type": "string"}, "disableMessageDeposit": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "recordNewGreetingOrPersonalizedNameMenuKeys": {"type": "object", "properties": {"endRecording": {"type": "string"}}}, "deleteAllMessagesMenuKeys": {"type": "object", "properties": {"confirmDeletion": {"type": "string"}, "cancelDeletion": {"type": "string"}}}, "commPilotExpressProfileMenuKeys": {"type": "object", "properties": {"activateAvailableInOfficeProfile": {"type": "string"}, "activateAvailableOutOfOfficeProfile": {"type": "string"}, "activateBusyProfile": {"type": "string"}, "activateUnavailableProfile": {"type": "string"}, "noProfile": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "personalizedNameMenuKeys": {"type": "object", "properties": {"recordNewPersonalizedName": {"type": "string"}, "listenToCurrentPersonalizedName": {"type": "string"}, "deletePersonalizedName": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "callForwardingOptionsMenuKeys": {"type": "object", "properties": {"activateCallForwarding": {"type": "string"}, "deactivateCallForwarding": {"type": "string"}, "changeCallForwardingDestination": {"type": "string"}, "listenToCallForwardingStatus": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "changeCallForwardingDestinationMenuKeys": {"type": "object", "properties": {"finishEnteringNewDestinationNumber": {"type": "string"}}}, "voicePortalCallingMenuKeys": {"type": "object", "properties": {"endCurrentCallAndGoBackToPreviousMenu": {"type": "VoicePortalDigitSequence"}, "returnToPreviousMenu": {"type": "string"}}}, "hotelingMenuKeys": {"type": "object", "properties": {"checkHostStatus": {"type": "string"}, "associateWithHost": {"type": "string"}, "disassociateFromHost": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "passcodeMenuKeys": {"type": "object", "properties": {"finishEnteringOrReenteringPasscode": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}}}, "playMessagesMenuKeys": {"type": "object", "properties": {"saveMessage": {"type": "string"}, "deleteMessage": {"type": "string"}, "playMessage": {"type": "string"}, "previousMessage": {"type": "string"}, "playEnvelope": {"type": "string"}, "nextMessage": {"type": "string"}, "callbackCaller": {"type": "string"}, "composeMessage": {"type": "string"}, "replyMessage": {"type": "string"}, "forwardMessage": {"type": "string"}, "additionalMessageOptions": {"type": "string"}, "personalizedName": {"type": "string"}, "passcode": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "playMessageMenuKeys": {"type": "object", "properties": {"skipBackward": {"type": "string"}, "pauseOrResume": {"type": "string"}, "skipForward": {"type": "string"}, "jumpToBegin": {"type": "string"}, "jumpToEnd": {"type": "string"}}}, "additionalMessageOptionsMenuKeys": {"type": "object", "properties": {"saveMessage": {"type": "string"}, "deleteMessage": {"type": "string"}, "playEnvelope": {"type": "string"}, "callbackCaller": {"type": "string"}, "composeMessage": {"type": "string"}, "replyMessage": {"type": "string"}, "forwardMessage": {"type": "string"}, "personalizedName": {"type": "string"}, "passcode": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "forwardOrComposeMessageMenuKeys": {"type": "object", "properties": {"sendToPerson": {"type": "string"}, "sendToAllGroupMembers": {"type": "string"}, "sendToDistributionList": {"type": "string"}, "changeCurrentIntroductionOrMessage": {"type": "string"}, "listenToCurrentIntroductionOrMessage": {"type": "string"}, "setOrClearUrgentIndicator": {"type": "string"}, "setOrClearConfidentialIndicator": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "replyMessageMenuKeys": {"type": "object", "properties": {"sendReplyToCaller": {"type": "string"}, "changeCurrentReply": {"type": "string"}, "listenToCurrentReply": {"type": "string"}, "setOrClearUrgentIndicator": {"type": "string"}, "setOrClearConfidentialIndicator": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "sendToDistributionListMenuKeys": {"type": "object", "properties": {"sendMessageToSelectedDistributionList": {"type": "string"}, "selectDistributionList": {"type": "string"}, "reviewSelectedDistributionList": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "selectDistributionListMenuKeys": {"type": "object", "properties": {"returnToPreviousMenu": {"type": "string"}, "repeatMenuOrFinishEnteringDistributionListNumber": {"type": "string"}}}, "reviewSelectedDistributionListMenuKeys": {"type": "object", "properties": {"interruptPlaybackAndReturnToPreviousMenu": {"type": "string"}}}, "sendMessageToSelectedDistributionListMenuKeys": {"type": "object", "properties": {"confirmSendingToDistributionList": {"type": "string"}, "cancelSendingToDistributionList": {"type": "string"}}}, "sendToAllGroupMembersMenuKeys": {"type": "object", "properties": {"confirmSendingToEntireGroup": {"type": "string"}, "cancelSendingToEntireGroup": {"type": "string"}}}, "sendToPersonMenuKeys": {"type": "object", "properties": {"confirmSendingMessage": {"type": "string"}, "cancelSendingMessage": {"type": "string"}, "finishEnteringNumberWhereToSendMessageTo": {"type": "string"}, "finishForwardingOrSendingMessage": {"type": "string"}}}, "changeCurrentIntroductionOrMessageOrReplyMenuKeys": {"type": "object", "properties": {"endRecording": {"type": "string"}}}, "voicePortalLoginMenuKeys": {"type": "object", "properties": {"accessUsingOtherMailboxId": {"type": "VoicePortalDigitSequence"}}}, "faxMessagingMenuKeys": {"type": "object", "properties": {"saveFaxMessageAndSkipToNext": {"type": "string"}, "previousFaxMessage": {"type": "string"}, "playEnvelope": {"type": "string"}, "nextFaxMessage": {"type": "string"}, "deleteFaxMessage": {"type": "string"}, "printFaxMessage": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}}}, "messageDepositMenuKeys": {"type": "object", "properties": {"enableMessageDeposit": {"type": "string"}, "disableMessageDeposit": {"type": "string"}, "listenToMessageDepositStatus": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "disableMessageDepositMenuKeys": {"type": "object", "properties": {"disconnectAfterGreeting": {"type": "string"}, "forwardAfterGreeting": {"type": "string"}, "changeForwardingDestination": {"type": "string"}, "returnToPreviousMenu": {"type": "string"}, "repeatMenu": {"type": "string"}}}, "greetingOnlyForwardingDestinationMenuKeys": {"type": "object", "properties": {"greetingOnlyForwardingDestination": {"type": "string"}}}}}, "SystemZoneCallingRestrictionsNetAddressAddListRequest": {"type": "object", "properties": {"zoneName": {"type": "string", "minLength": 1, "maxLength": 80}, "netAddress": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 39}}, "netAddressRange": {"type": "array", "items": {"type": "object", "properties": {"minIpAddress": {"type": "string", "minLength": 1, "maxLength": 39}, "maxIpAddress": {"type": "string", "minLength": 1, "maxLength": 39}}, "required": ["minIpAddress", "maxIpAddress"]}}}, "required": ["zoneName"]}, "SystemZoneCallingRestrictionsNetAddressDeleteListRequest": {"type": "object", "properties": {"zoneName": {"type": "string", "minLength": 1, "maxLength": 80}, "netAddress": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 39}}, "netAddressRange": {"type": "array", "items": {"type": "object", "properties": {"minIpAddress": {"type": "string", "minLength": 1, "maxLength": 39}, "maxIpAddress": {"type": "string", "minLength": 1, "maxLength": 39}}, "required": ["minIpAddress", "maxIpAddress"]}}}, "required": ["zoneName"]}, "SystemZoneCallingRestrictionsNetAddressGetListRequest": {"type": "object", "properties": {"zoneName": {"type": "string", "minLength": 1, "maxLength": 80}, "responseSizeLimit": {"type": "integer", "minimum": 1.0}, "searchCriteriaZoneIPAddress": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 39}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["zoneName"]}, "SystemZoneCallingRestrictionsZoneAddRequest": {"type": "object", "properties": {"zoneName": {"type": "string", "minLength": 1, "maxLength": 80}, "physicalLocation": {"type": "string", "minLength": 1, "maxLength": 1024}}, "required": ["zoneName"]}, "SystemZoneCallingRestrictionsZoneDeleteRequest": {"type": "object", "properties": {"zoneName": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["zoneName"]}, "SystemZoneCallingRestrictionsZoneGetListRequest": {"type": "object", "properties": {}}, "SystemZoneCallingRestrictionsZoneModifyRequest": {"type": "object", "properties": {"zoneName": {"type": "string", "minLength": 1, "maxLength": 80}, "physicalLocation": {"type": "string", "minLength": 1, "maxLength": 1024}}, "required": ["zoneName"]}, "UserAddRequest14": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 6}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "title": {"type": "string", "minLength": 1, "maxLength": 50}, "pagerPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "mobilePhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "emailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "yahooId": {"type": "string", "minLength": 1, "maxLength": 50}, "addressLocation": {"type": "string", "minLength": 1, "maxLength": 80}, "address": {"type": "object", "properties": {"addressLine1": {"type": "string", "minLength": 1, "maxLength": 80}, "addressLine2": {"type": "string", "minLength": 1, "maxLength": 80}, "city": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvince": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvinceDisplayName": {"type": "string", "minLength": 1, "maxLength": 50}, "zipOrPostalCode": {"type": "string", "minLength": 1, "maxLength": 50}, "country": {"type": "string", "minLength": 1, "maxLength": 50}}}}, "oneOf": [{"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}}, {"type": "object", "properties": {"trunkGroupDeviceEndpoint": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}}, "required": ["name", "linePort"]}}}], "required": ["serviceProviderId", "groupId", "userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName"]}, "UserAddRequest14sp9": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "title": {"type": "string", "minLength": 1, "maxLength": 50}, "pagerPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "mobilePhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "emailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "yahooId": {"type": "string", "minLength": 1, "maxLength": 50}, "addressLocation": {"type": "string", "minLength": 1, "maxLength": 80}, "address": {"type": "object", "properties": {"addressLine1": {"type": "string", "minLength": 1, "maxLength": 80}, "addressLine2": {"type": "string", "minLength": 1, "maxLength": 80}, "city": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvince": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvinceDisplayName": {"type": "string", "minLength": 1, "maxLength": 50}, "zipOrPostalCode": {"type": "string", "minLength": 1, "maxLength": 50}, "country": {"type": "string", "minLength": 1, "maxLength": 50}}}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}, "officeZoneName": {"type": "string", "minLength": 1, "maxLength": 40}, "primaryZoneName": {"type": "string", "minLength": 1, "maxLength": 80}}, "oneOf": [{"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}}, {"type": "object", "properties": {"trunkAddressing": {"type": "object", "properties": {"trunkGroupDeviceEndpoint": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}}, "required": ["name", "linePort"]}, "enterpriseTrunkName": {"type": "string", "minLength": 1, "maxLength": 30}, "alternateTrunkIdentity": {"type": "string", "minLength": 1, "maxLength": 80}}}}}], "required": ["serviceProviderId", "groupId", "userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName"]}, "UserAddRequest17sp4": {"type": "object", "properties": {"serviceProviderId": {"type": "string", "minLength": 1, "maxLength": 30}, "groupId": {"type": "string", "minLength": 1, "maxLength": 30}, "userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "nameDialingName": {"type": "object", "properties": {"nameDialingLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "nameDialingFirstName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["nameDialingLastName", "nameDialingFirstName"]}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "password": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "alias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}, "title": {"type": "string", "minLength": 1, "maxLength": 50}, "pagerPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "mobilePhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "emailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "yahooId": {"type": "string", "minLength": 1, "maxLength": 50}, "addressLocation": {"type": "string", "minLength": 1, "maxLength": 80}, "address": {"type": "object", "properties": {"addressLine1": {"type": "string", "minLength": 1, "maxLength": 80}, "addressLine2": {"type": "string", "minLength": 1, "maxLength": 80}, "city": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvince": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvinceDisplayName": {"type": "string", "minLength": 1, "maxLength": 50}, "zipOrPostalCode": {"type": "string", "minLength": 1, "maxLength": 50}, "country": {"type": "string", "minLength": 1, "maxLength": 50}}}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}, "alternateUserId": {"type": "array", "items": {"type": "object", "properties": {"alternateUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "description": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["alternateUserId"]}}}, "oneOf": [{"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}}, {"type": "object", "properties": {"trunkAddressing": {"type": "object", "properties": {"trunkGroupDeviceEndpoint": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}}, "required": ["name", "linePort"]}, "enterpriseTrunkName": {"type": "string", "minLength": 1, "maxLength": 30}, "alternateTrunkIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "alternateTrunkIdentityDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "physicalLocation": {"type": "string", "minLength": 1, "maxLength": 1024}}}}}], "required": ["serviceProviderId", "groupId", "userId", "lastName", "firstName", "callingLineIdLastName", "callingLineIdFirstName"]}, "UserAlternateNumbersGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserAnnouncementFileGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "announcementFileKey": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "mediaFileType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "required": ["name", "mediaFileType"]}}, "required": ["userId", "announcementFileKey"]}, "UserBasicCallLogsGetListRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "callLogType": {"type": "string", "enum": ["Placed", "Received", "Missed"]}}, "required": ["userId"]}, "UserBroadWorksAnywhereAddSelectiveCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}, "timeSchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "fromDnCriteria": {"type": "object", "properties": {"fromDnCriteriaSelection": {"type": "string", "enum": ["Any", "Specified Only"]}, "includeAnonymousCallers": {"type": "boolean"}, "includeUnavailableCallers": {"type": "boolean"}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["fromDnCriteriaSelection", "includeAnonymousCallers", "includeUnavailableCallers"]}}, "required": ["userId", "phoneNumber", "criteriaName", "fromDnCriteria"]}, "UserBroadWorksAnywhereGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserBroadWorksAnywhereGetSelectiveCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["userId", "phoneNumber", "criteriaName"]}, "UserBroadworksMobilityAddMobileIdentityUsingSharedCallAppearanceRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["accessDevice", "linePort"]}, "mobileNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "description": {"type": "string", "minLength": 1, "maxLength": 40}, "isPrimary": {"type": "boolean"}, "enableAlerting": {"type": "boolean"}, "alertAgentCalls": {"type": "boolean"}, "alertClickToDialCalls": {"type": "boolean"}, "alertGroupPagingCalls": {"type": "boolean"}, "useMobilityCallingLineID": {"type": "boolean"}, "enableDiversionInhibitor": {"type": "boolean"}, "requireAnswerConfirmation": {"type": "boolean"}, "broadworksCallControl": {"type": "boolean"}, "useSettingLevel": {"type": "string", "enum": ["Group", "User"]}, "denyCallOriginations": {"type": "boolean"}, "denyCallTerminations": {"type": "boolean"}, "devicesToRing": {"type": "string", "enum": ["Fixed", "Mobile", "Both"]}, "includeSharedCallAppearance": {"type": "boolean"}, "includeBroadworksAnywhere": {"type": "boolean"}, "includeExecutiveAssistant": {"type": "boolean"}, "mobileNumberAlerted": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "enableCallAnchoring": {"type": "boolean"}, "timeSchedule": {"type": "object", "properties": {"scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "scheduleLevel": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["scheduleKey", "scheduleLevel"]}, "holidaySchedule": {"type": "object", "properties": {"scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "scheduleLevel": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["scheduleKey", "scheduleLevel"]}, "enableDirectRouting": {"type": "boolean"}, "markCDRAsEnterpriseGroupCalls": {"type": "boolean"}}, "required": ["userId", "accessDeviceEndpoint", "mobileNumber", "isPrimary", "enableAlerting", "alertAgentCalls", "alertClickToDialCalls", "alertGroupPagingCalls", "useMobilityCallingLineID", "enableDiversionInhibitor", "requireAnswerConfirmation", "broadworksCallControl", "useSettingLevel", "denyCallOriginations", "denyCallTerminations", "devicesToRing", "includeSharedCallAppearance", "includeBroadworksAnywhere", "includeExecutiveAssistant", "enableCallAnchoring", "enableDirectRouting", "markCDRAsEnterpriseGroupCalls"]}, "UserBroadWorksMobilityGetRequest21": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserBroadWorksMobilityMobileIdentityAddRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "mobileNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "description": {"type": "string", "minLength": 1, "maxLength": 40}, "isPrimary": {"type": "boolean"}, "enableAlerting": {"type": "boolean"}, "alertAgentCalls": {"type": "boolean"}, "alertClickToDialCalls": {"type": "boolean"}, "alertGroupPagingCalls": {"type": "boolean"}, "useMobilityCallingLineID": {"type": "boolean"}, "enableDiversionInhibitor": {"type": "boolean"}, "requireAnswerConfirmation": {"type": "boolean"}, "broadworksCallControl": {"type": "boolean"}, "useSettingLevel": {"type": "string", "enum": ["Group", "User"]}, "denyCallOriginations": {"type": "boolean"}, "denyCallTerminations": {"type": "boolean"}, "devicesToRing": {"type": "string", "enum": ["Fixed", "Mobile", "Both"]}, "includeSharedCallAppearance": {"type": "boolean"}, "includeBroadworksAnywhere": {"type": "boolean"}, "includeExecutiveAssistant": {"type": "boolean"}, "mobileNumberAlerted": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "enableCallAnchoring": {"type": "boolean"}, "timeSchedule": {"type": "object", "properties": {"scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "scheduleLevel": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["scheduleKey", "scheduleLevel"]}, "holidaySchedule": {"type": "object", "properties": {"scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "scheduleLevel": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["scheduleKey", "scheduleLevel"]}}, "required": ["userId", "mobileNumber", "isPrimary", "enableAlerting", "alertAgentCalls", "alertClickToDialCalls", "alertGroupPagingCalls", "useMobilityCallingLineID", "enableDiversionInhibitor", "requireAnswerConfirmation", "broadworksCallControl", "useSettingLevel", "denyCallOriginations", "denyCallTerminations", "devicesToRing", "includeSharedCallAppearance", "includeBroadworksAnywhere", "includeExecutiveAssistant", "enableCallAnchoring"]}, "UserBroadWorksMobilityMobileIdentityAddRequest21sp1": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "mobileNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "description": {"type": "string", "minLength": 1, "maxLength": 40}, "isPrimary": {"type": "boolean"}, "enableAlerting": {"type": "boolean"}, "alertAgentCalls": {"type": "boolean"}, "alertClickToDialCalls": {"type": "boolean"}, "alertGroupPagingCalls": {"type": "boolean"}, "useMobilityCallingLineID": {"type": "boolean"}, "enableDiversionInhibitor": {"type": "boolean"}, "requireAnswerConfirmation": {"type": "boolean"}, "broadworksCallControl": {"type": "boolean"}, "useSettingLevel": {"type": "string", "enum": ["Group", "User"]}, "denyCallOriginations": {"type": "boolean"}, "denyCallTerminations": {"type": "boolean"}, "devicesToRing": {"type": "string", "enum": ["Fixed", "Mobile", "Both"]}, "includeSharedCallAppearance": {"type": "boolean"}, "includeBroadworksAnywhere": {"type": "boolean"}, "includeExecutiveAssistant": {"type": "boolean"}, "mobileNumberAlerted": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "enableCallAnchoring": {"type": "boolean"}, "timeSchedule": {"type": "object", "properties": {"scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "scheduleLevel": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["scheduleKey", "scheduleLevel"]}, "holidaySchedule": {"type": "object", "properties": {"scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "scheduleLevel": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["scheduleKey", "scheduleLevel"]}, "enableDirectRouting": {"type": "boolean"}, "markCDRAsEnterpriseGroupCalls": {"type": "boolean"}}, "oneOf": [{"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}, {"type": "object", "properties": {"outboundAlternateNumber": {"type": "string", "minLength": 1, "maxLength": 161}}}], "required": ["userId", "mobileNumber", "isPrimary", "enableAlerting", "alertAgentCalls", "alertClickToDialCalls", "alertGroupPagingCalls", "useMobilityCallingLineID", "enableDiversionInhibitor", "requireAnswerConfirmation", "broadworksCallControl", "useSettingLevel", "denyCallOriginations", "denyCallTerminations", "devicesToRing", "includeSharedCallAppearance", "includeBroadworksAnywhere", "includeExecutiveAssistant", "enableCallAnchoring", "enableDirectRouting", "markCDRAsEnterpriseGroupCalls"]}, "UserBroadWorksMobilityMobileIdentityAddRequest22": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "mobileNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "description": {"type": "string", "minLength": 1, "maxLength": 40}, "isPrimary": {"type": "boolean"}, "enableAlerting": {"type": "boolean"}, "alertAgentCalls": {"type": "boolean"}, "alertClickToDialCalls": {"type": "boolean"}, "alertGroupPagingCalls": {"type": "boolean"}, "useMobilityCallingLineID": {"type": "boolean"}, "enableDiversionInhibitor": {"type": "boolean"}, "requireAnswerConfirmation": {"type": "boolean"}, "broadworksCallControl": {"type": "boolean"}, "useSettingLevel": {"type": "string", "enum": ["Group", "User"]}, "denyCallOriginations": {"type": "boolean"}, "denyCallTerminations": {"type": "boolean"}, "devicesToRing": {"type": "string", "enum": ["Fixed", "Mobile", "Both"]}, "includeSharedCallAppearance": {"type": "boolean"}, "includeBroadworksAnywhere": {"type": "boolean"}, "includeExecutiveAssistant": {"type": "boolean"}, "mobileNumberAlerted": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "enableCallAnchoring": {"type": "boolean"}, "timeSchedule": {"type": "object", "properties": {"scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "scheduleLevel": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["scheduleKey", "scheduleLevel"]}, "holidaySchedule": {"type": "object", "properties": {"scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "scheduleLevel": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["scheduleKey", "scheduleLevel"]}, "enableDirectRouting": {"type": "boolean"}, "markCDRAsEnterpriseGroupCalls": {"type": "boolean"}, "useMobilityConnectedIdentity": {"type": "boolean"}, "networkTranslationIndex": {"type": "string", "minLength": 1, "maxLength": 128}}, "oneOf": [{"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}, {"type": "object", "properties": {"outboundAlternateNumber": {"type": "string", "minLength": 1, "maxLength": 161}}}], "required": ["userId", "mobileNumber", "isPrimary", "enableAlerting", "alertAgentCalls", "alertClickToDialCalls", "alertGroupPagingCalls", "useMobilityCallingLineID", "enableDiversionInhibitor", "requireAnswerConfirmation", "broadworksCallControl", "useSettingLevel", "denyCallOriginations", "denyCallTerminations", "devicesToRing", "includeSharedCallAppearance", "includeBroadworksAnywhere", "includeExecutiveAssistant", "enableCallAnchoring", "enableDirectRouting", "markCDRAsEnterpriseGroupCalls", "useMobilityConnectedIdentity"]}, "UserBroadWorksMobilityMobileIdentityConsolidatedAddRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "mobileNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "description": {"type": "string", "minLength": 1, "maxLength": 40}, "isPrimary": {"type": "boolean"}, "enableAlerting": {"type": "boolean"}, "alertAgentCalls": {"type": "boolean"}, "alertClickToDialCalls": {"type": "boolean"}, "alertGroupPagingCalls": {"type": "boolean"}, "useMobilityCallingLineID": {"type": "boolean"}, "enableDiversionInhibitor": {"type": "boolean"}, "requireAnswerConfirmation": {"type": "boolean"}, "broadworksCallControl": {"type": "boolean"}, "useSettingLevel": {"type": "string", "enum": ["Group", "User"]}, "denyCallOriginations": {"type": "boolean"}, "denyCallTerminations": {"type": "boolean"}, "devicesToRing": {"type": "string", "enum": ["Fixed", "Mobile", "Both"]}, "includeSharedCallAppearance": {"type": "boolean"}, "includeBroadworksAnywhere": {"type": "boolean"}, "includeExecutiveAssistant": {"type": "boolean"}, "mobileNumberAlerted": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}, "enableCallAnchoring": {"type": "boolean"}, "timeSchedule": {"type": "object", "properties": {"scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "scheduleLevel": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["scheduleKey", "scheduleLevel"]}, "holidaySchedule": {"type": "object", "properties": {"scheduleKey": {"type": "object", "properties": {"scheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["scheduleName", "scheduleType"]}, "scheduleLevel": {"type": "string", "enum": ["Service Provider", "Group", "User"]}}, "required": ["scheduleKey", "scheduleLevel"]}, "enableDirectRouting": {"type": "boolean"}, "markCDRAsEnterpriseGroupCalls": {"type": "boolean"}}, "oneOf": [{"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "privateIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}, "isActive": {"type": "boolean"}, "allowOrigination": {"type": "boolean"}, "allowTermination": {"type": "boolean"}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "protocol": {"type": "string", "minLength": 1, "maxLength": 20}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "port": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "outboundProxyServerNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "stunServerNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "serialNumber": {"type": "string", "minLength": 1, "maxLength": 80}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "physicalLocation": {"type": "string", "minLength": 1, "maxLength": 1024}, "transportProtocol": {"type": "string", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, "useCustomUserNamePassword": {"type": "boolean"}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHotline": {"type": "boolean"}, "hotlineContact": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["accessDevice", "linePort", "isActive", "allowOrigination", "allowTermination"]}}}, {"type": "object", "properties": {"outboundAlternateNumber": {"type": "string", "minLength": 1, "maxLength": 161}}}], "required": ["userId", "mobileNumber", "isPrimary", "enableAlerting", "alertAgentCalls", "alertClickToDialCalls", "alertGroupPagingCalls", "useMobilityCallingLineID", "enableDiversionInhibitor", "requireAnswerConfirmation", "broadworksCallControl", "useSettingLevel", "denyCallOriginations", "denyCallTerminations", "devicesToRing", "includeSharedCallAppearance", "includeBroadworksAnywhere", "includeExecutiveAssistant", "enableCallAnchoring", "enableDirectRouting", "markCDRAsEnterpriseGroupCalls"]}, "UserBroadWorksMobilityMobileIdentityGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "mobileNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["userId", "mobileNumber"]}, "UserBroadWorksMobilityMobileIdentityGetRequest21sp1": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "mobileNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["userId", "mobileNumber"]}, "UserBroadWorksMobilityMobileIdentityGetRequest21sp1V2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "mobileNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["userId", "mobileNumber"]}, "UserBroadWorksMobilityMobileIdentityGetRequest22": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "mobileNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["userId", "mobileNumber"]}, "UserBroadWorksMobilityMobileIdentityGetRequest22V2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "mobileNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["userId", "mobileNumber"]}, "UserBusyLampFieldGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallCenterGetListRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallCenterGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallCenterGetRequest16": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallCenterGetRequest17": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallCenterGetRequest17sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallCenterModifyAvailabilityListRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "callCenterAvailability": {"type": "array", "items": {"type": "string"}}}, "required": ["userId"]}, "UserCallCenterModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "agentACDState": {"type": "string", "enum": ["Sign-In", "Sign-Out", "Available", "Unavailable", "Wrap-Up"]}, "agentUnavailableCode": {"type": "string", "minLength": 1, "maxLength": 10}, "useDefaultGuardTimer": {"type": "boolean"}, "enableGuardTimer": {"type": "boolean"}, "guardTimerSeconds": {"type": "integer", "minimum": 1.0, "maximum": 25.0}, "useSystemDefaultUnavailableSettings": {"type": "boolean"}, "forceAgentUnavailableOnDNDActivation": {"type": "boolean"}, "forceUnavailableOnPersonalCalls": {"type": "boolean"}, "forceAgentUnavailableOnBouncedCallLimit": {"type": "boolean"}, "numberConsecutiveBouncedCallsToForceAgentUnavailable": {"type": "integer", "minimum": 1.0, "maximum": 5.0}, "makeOutgoingCallsAsCallCenter": {"type": "boolean"}, "outgoingCallDNIS": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId", "name"]}, "callCenterAvailability": {"type": "array", "items": {"type": "string"}}}, "required": ["userId"]}, "UserCallCenterModifyRequest17sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "agentACDState": {"type": "string", "enum": ["Sign-In", "Sign-Out", "Available", "Unavailable", "Wrap-Up"]}, "agentThresholdProfileName": {"type": "string", "minLength": 1, "maxLength": 40}, "agentUnavailableCode": {"type": "string", "minLength": 1, "maxLength": 10}, "useDefaultGuardTimer": {"type": "boolean"}, "enableGuardTimer": {"type": "boolean"}, "guardTimerSeconds": {"type": "integer", "minimum": 1.0, "maximum": 25.0}, "useSystemDefaultUnavailableSettings": {"type": "boolean"}, "forceAgentUnavailableOnDNDActivation": {"type": "boolean"}, "forceAgentUnavailableOnPersonalCalls": {"type": "boolean"}, "forceAgentUnavailableOnBouncedCallLimit": {"type": "boolean"}, "numberConsecutiveBouncedCallsToForceAgentUnavailable": {"type": "integer", "minimum": 1.0, "maximum": 5.0}, "forceAgentUnavailableOnNotReachable": {"type": "boolean"}, "makeOutgoingCallsAsCallCenter": {"type": "boolean"}, "outgoingCallDNIS": {"type": "object", "properties": {"serviceUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["serviceUserId", "name"]}, "callCenterAvailability": {"type": "array", "items": {"type": "string"}}}, "required": ["userId"]}, "UserCallCenterMonitoringGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallForwardingSelectiveAddCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}, "timeSchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "forwardToNumberSelection": {"type": "string", "enum": ["Forward To Default Number", "Forward To Specified Number"]}, "forwardToPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "fromDnCriteria": {"type": "object", "properties": {"fromDnCriteriaSelection": {"type": "string", "enum": ["Any", "Specified Only"]}, "includeAnonymousCallers": {"type": "boolean"}, "includeUnavailableCallers": {"type": "boolean"}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["fromDnCriteriaSelection", "includeAnonymousCallers", "includeUnavailableCallers"]}}, "required": ["userId", "criteriaName", "forwardToNumberSelection", "fromDnCriteria"]}, "UserCallForwardingSelectiveGetCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["userId", "criteriaName"]}, "UserCallForwardingSelectiveGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallingPartyCategoryGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallingPartyCategoryModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "category": {"type": "string", "enum": ["Special", "Hospital", "Hotel", "Prison", "Payphone", "Ordinary"]}}, "required": ["userId"]}, "UserCallLogsClearRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallNotifyAddCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}, "timeSchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "fromDnCriteria": {"type": "object", "properties": {"fromDnCriteriaSelection": {"type": "string", "enum": ["Any", "Specified Only"]}, "includeAnonymousCallers": {"type": "boolean"}, "includeUnavailableCallers": {"type": "boolean"}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["fromDnCriteriaSelection", "includeAnonymousCallers", "includeUnavailableCallers"]}}, "required": ["userId", "criteriaName", "fromDnCriteria"]}, "UserCallNotifyGetCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["userId", "criteriaName"]}, "UserCallPoliciesGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallProcessingGetPolicyRequest14": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallProcessingGetPolicyRequest14sp1": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallProcessingGetPolicyRequest14sp7": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallProcessingGetPolicyRequest16": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallProcessingGetPolicyRequest16sp2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallProcessingGetPolicyRequest17": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallProcessingGetPolicyRequest17sp3": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallProcessingGetPolicyRequest17sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallProcessingGetPolicyRequest18": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallProcessingGetPolicyRequest19sp1": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallProcessingGetPolicyRequest21sp1": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallProcessingModifyPolicyRequest14": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "useUserSetting": {"type": "boolean"}, "useMaxSimultaneousCalls": {"type": "boolean"}, "maxSimultaneousCalls": {"type": "integer", "minimum": 1.0, "maximum": 500.0}, "useMaxSimultaneousVideoCalls": {"type": "boolean"}, "maxSimultaneousVideoCalls": {"type": "integer", "minimum": 1.0, "maximum": 500.0}, "useMaxCallTimeForAnsweredCalls": {"type": "boolean"}, "maxCallTimeForAnsweredCallsMinutes": {"type": "integer", "minimum": 5.0, "maximum": 2880.0}, "useMaxCallTimeForUnansweredCalls": {"type": "boolean"}, "maxCallTimeForUnansweredCallsMinutes": {"type": "integer", "minimum": 1.0, "maximum": 60.0}, "mediaPolicySelection": {"type": "string", "enum": ["Use Uncompressed Codec", "Use Supported Media Set", "No Restrictions"]}, "supportedMediaSetName": {"type": "string", "minLength": 1, "maxLength": 80}, "useMaxConcurrentRedirectedCalls": {"type": "boolean"}, "maxConcurrentRedirectedCalls": {"type": "integer", "minimum": 1.0, "maximum": 32.0}, "useMaxFindMeFollowMeDepth": {"type": "boolean"}, "maxFindMeFollowMeDepth": {"type": "integer", "minimum": 1.0, "maximum": 10.0}, "maxRedirectionDepth": {"type": "integer", "minimum": 1.0, "maximum": 15.0}, "useMaxConcurrentFindMeFollowMeInvocations": {"type": "boolean"}, "maxConcurrentFindMeFollowMeInvocations": {"type": "integer", "minimum": 1.0, "maximum": 32.0}}, "required": ["userId"]}, "UserCallRecordingGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallRecordingGetRequest20": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallTransferGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCallWaitingGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserChargeNumberGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserCollaborateBridgeGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserConsolidatedModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "deleteExistingDevices": {"type": "boolean"}, "unassignPhoneNumbers": {"type": "string", "enum": ["Group", "Service Provider"]}, "addPhoneNumberToGroup": {"type": "boolean"}, "newUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "nameDialingName": {"type": "object", "properties": {"nameDialingLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "nameDialingFirstName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["nameDialingLastName", "nameDialingFirstName"]}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "alternateUserIdList": {"type": "object", "properties": {"alternateUserId": {"type": "array", "items": {"type": "object", "properties": {"alternateUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "description": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["alternateUserId"]}}}, "required": ["alternateUserId"]}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "oldPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "newPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}, "endpoint": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "privateIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "contactList": {"type": "object", "properties": {"contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}}, "required": ["contact"]}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "protocol": {"type": "string", "minLength": 1, "maxLength": 20}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "port": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "outboundProxyServerNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "stunServerNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "serialNumber": {"type": "string", "minLength": 1, "maxLength": 80}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "physicalLocation": {"type": "string", "minLength": 1, "maxLength": 1024}, "transportProtocol": {"type": "string", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, "useCustomUserNamePassword": {"type": "boolean"}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHotline": {"type": "boolean"}, "hotlineContact": {"type": "string", "minLength": 1, "maxLength": 161}}}}, "required": ["accessDeviceEndpoint"]}, {"type": "object", "properties": {"trunkAddressing": {"type": "object", "properties": {"trunkGroupDeviceEndpoint": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contactList": {"type": "object", "properties": {"contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}}, "required": ["contact"]}}}, "enterpriseTrunkName": {"type": "string", "minLength": 1, "maxLength": 30}, "alternateTrunkIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "alternateTrunkIdentityDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "physicalLocation": {"type": "string", "minLength": 1, "maxLength": 1024}}}}, "required": ["trunkAddressing"]}]}, "sharedCallAppearanceAccessDeviceEndpointList": {"type": "object", "properties": {"sharedCallAppearanceAccessDeviceEndpoint": {"type": "array", "items": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "privateIdentity": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}, "isActive": {"type": "boolean"}, "allowOrigination": {"type": "boolean"}, "allowTermination": {"type": "boolean"}, "deviceType": {"type": "string", "minLength": 1, "maxLength": 40}, "protocol": {"type": "string", "minLength": 1, "maxLength": 20}, "netAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "port": {"type": "integer", "minimum": 1025.0, "maximum": 65535.0}, "outboundProxyServerNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "stunServerNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "macAddress": {"type": "string", "minLength": 1, "maxLength": 12}, "serialNumber": {"type": "string", "minLength": 1, "maxLength": 80}, "description": {"type": "string", "minLength": 1, "maxLength": 80}, "physicalLocation": {"type": "string", "minLength": 1, "maxLength": 1024}, "transportProtocol": {"type": "string", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, "useCustomUserNamePassword": {"type": "boolean"}, "accessDeviceCredentials": {"type": "object", "properties": {"userName": {"type": "string", "minLength": 1, "maxLength": 161}, "password": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userName", "password"]}, "useHotline": {"type": "boolean"}, "hotlineContact": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["accessDevice", "linePort", "isActive", "allowOrigination", "allowTermination"]}}}, "required": ["sharedCallAppearanceAccessDeviceEndpoint"]}, "title": {"type": "string", "minLength": 1, "maxLength": 50}, "pagerPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "mobilePhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "emailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "yahooId": {"type": "string", "minLength": 1, "maxLength": 50}, "addressLocation": {"type": "string", "minLength": 1, "maxLength": 80}, "address": {"type": "object", "properties": {"addressLine1": {"type": "string", "minLength": 1, "maxLength": 80}, "addressLine2": {"type": "string", "minLength": 1, "maxLength": 80}, "city": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvince": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvinceDisplayName": {"type": "string", "minLength": 1, "maxLength": 50}, "zipOrPostalCode": {"type": "string", "minLength": 1, "maxLength": 50}, "country": {"type": "string", "minLength": 1, "maxLength": 50}}}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}, "userServiceList": {"type": "object", "properties": {"userServiceServiceName": {"type": "array", "items": {"type": "object", "properties": {"userServiceName": {"type": "string", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, "authorizedQuantity": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}}, "required": ["userServiceName"]}}}, "required": ["userServiceServiceName"]}, "servicePackList": {"type": "object", "properties": {"servicePack": {"type": "array", "items": {"type": "object", "properties": {"servicePackName": {"type": "string", "minLength": 1, "maxLength": 80}, "authorizedQuantity": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"unlimited": {"type": "boolean"}}, "required": ["unlimited"]}, {"type": "object", "properties": {"quantity": {"type": "integer", "minimum": 1.0}}, "required": ["quantity"]}]}}, "required": ["servicePackName"]}}}, "required": ["servicePack"]}, "thirdPartyVoiceMailServerSelection": {"type": "string", "enum": ["Group Mail Server", "User Specific Mail Server"]}, "thirdPartyVoiceMailServerUserServer": {"type": "string", "minLength": 1, "maxLength": 161}, "thirdPartyVoiceMailServerMailboxIdType": {"type": "string", "enum": ["User Or Group Phone Number", "URL"]}, "thirdPartyVoiceMailMailboxURL": {"type": "string", "minLength": 1, "maxLength": 161}, "sipAuthenticationUserName": {"type": "string", "minLength": 1, "maxLength": 80}, "newSipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "OldSipAuthenticationPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "newPasscode": {"type": "string", "minLength": 1, "maxLength": 30}, "oldPasscode": {"type": "string", "minLength": 1, "maxLength": 30}, "impPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "newUserExternalId": {"type": "string", "maxLength": 36}}, "required": ["userId"]}, "UserCustomRingbackUserAddCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}, "timeSchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "fromDnCriteria": {"type": "object", "properties": {"fromDnCriteriaSelection": {"type": "string", "enum": ["Any", "Specified Only"]}, "includeAnonymousCallers": {"type": "boolean"}, "includeUnavailableCallers": {"type": "boolean"}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["fromDnCriteriaSelection", "includeAnonymousCallers", "includeUnavailableCallers"]}, "audioSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "callWaitingAudioSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "callWaitingAudioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "callWaitingVideoSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "callWaitingVideoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}}, "required": ["userId", "criteriaName", "fromDnCriteria", "audioSelection", "videoSelection"]}, "UserCustomRingbackUserGetCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["userId", "criteriaName"]}, "UserCustomRingbackUserGetCriteriaRequest15sp2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["userId", "criteriaName"]}, "UserCustomRingbackUserGetCriteriaRequest20": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["userId", "criteriaName"]}, "UserCustomRingbackUserModifyCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}, "newCriteriaName": {"type": "string", "minLength": 1, "maxLength": 50}, "timeSchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "fromDnCriteria": {"type": "object", "properties": {"fromDnCriteriaSelection": {"type": "string", "enum": ["Any", "Specified Only"]}, "includeAnonymousCallers": {"type": "boolean"}, "includeUnavailableCallers": {"type": "boolean"}, "phoneNumberList": {"type": "object", "properties": {"phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["phoneNumber"]}}}, "audioSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "audioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "videoSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "videoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "callWaitingAudioSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "callWaitingAudioFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}, "callWaitingVideoSelection": {"type": "string", "enum": ["File", "URL", "Default"]}, "callWaitingVideoFile": {"type": "object", "properties": {"file": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "url": {"type": "string", "minLength": 1, "maxLength": 256}}}}, "required": ["userId", "criteriaName"]}, "UserDevicePoliciesGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserDevicePoliciesGetRequest19sp1": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserDevicePoliciesGetRequest20": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserDirectedCallPickupWithBargeInGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserEnhancedCallLogsGetListRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "callLogType": {"type": "string", "enum": ["Placed", "Received", "Missed"]}, "startingOffset": {"type": "integer", "minimum": 0.0, "maximum": 9999.0}, "numCalls": {"type": "integer", "minimum": 1.0, "maximum": 10000.0}}, "required": ["userId", "startingOffset", "numCalls"]}, "UserEnhancedCallLogsGetListRequest14sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "callLogType": {"type": "string", "enum": ["Placed", "Received", "Missed"]}, "startingOffset": {"type": "integer", "minimum": 0.0, "maximum": 9999.0}, "numCalls": {"type": "integer", "minimum": 1.0, "maximum": 10000.0}}, "required": ["userId", "startingOffset", "numCalls"]}, "UserEnhancedCallLogsGetListRequest16": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "callLogType": {"type": "string", "enum": ["Placed", "Received", "Missed"]}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}}, "required": ["userId"]}, "UserEnhancedCallLogsGetListRequest17sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "callLogType": {"type": "string", "enum": ["Placed", "Received", "Missed", "ReceivedOrMissed"]}, "dateTimeRange": {"type": "object", "properties": {"startDateTime": {"type": "xs:dateTime"}, "endDateTime": {"type": "xs:dateTime"}}, "required": ["startDateTime", "endDateTime"]}, "numberFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"includeBasicCallType": {"type": "array", "items": {"type": "string", "enum": ["Group", "Enterprise", "Network", "Network URL", "Repair", "Emergency"]}}}, "required": ["includeBasicCallType"]}, {"type": "object", "properties": {"includeCallCategory": {"type": "array", "items": {"type": "string", "enum": ["Local", "National", "Interlata", "Intralata", "International", "Private", "Emergency", "Other"]}}}, "required": ["includeCallCategory"]}, {"type": "object", "properties": {"includeConfigurableCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["includeConfigurableCallType"]}, {"type": "object", "properties": {"searchCriteriaDialedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaDialedNumber"]}, {"type": "object", "properties": {"searchCriteriaCalledNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaCalledNumber"]}, {"type": "object", "properties": {"searchCriteriaNetworkTranslatedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaNetworkTranslatedNumber"]}, {"type": "object", "properties": {"searchCriteriaCallingPresentationNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaCallingPresentationNumber"]}]}, "redirectedNumberFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"redirectedCall": {"type": "object", "properties": {"redirectedCall": {"type": "boolean"}, "redirectType": {"type": "array", "items": {"type": "string", "enum": ["Automatic Hold/Retrieve", "Call Forward Always", "Call Forward Busy", "Call Forward No Answer", "Call Forward Not Reachable", "Call Forward Selective", "Call Park", "Call Pickup", "Deflection", "Directed Call Pickup", "Distribution from Call Center", "Distribution from Hunt Group", "Distribution from Route Point", "Do Not Disturb", "Fax Deposit", "Group Night Forwarding", "Sequential Ring", "Series Completion", "Simultaneous Ring", "Third Party Deflection", "Third Party Voice Mail Support", "Transfer Consult", "Trunk Group Forward Capacity Exceeded", "Trunk Group Forward Unreachable", "Trunk Group Forward Unconditional", "Voice Mail Transfer", "Voice Messaging", "Find-me/Follow-me"]}}}, "required": ["redirectedCall"]}}, "required": ["redirectedCall"]}, {"type": "object", "properties": {"includeServiceInvocationBasicCallType": {"type": "array", "items": {"type": "string", "enum": ["Group", "Enterprise", "Network", "Network URL", "Repair", "Emergency"]}}}, "required": ["includeServiceInvocationBasicCallType"]}, {"type": "object", "properties": {"includeServiceInvocationCallCategory": {"type": "array", "items": {"type": "string", "enum": ["Local", "National", "Interlata", "Intralata", "International", "Private", "Emergency", "Other"]}}}, "required": ["includeServiceInvocationCallCategory"]}, {"type": "object", "properties": {"includeServiceInvocationConfigurableCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["includeServiceInvocationConfigurableCallType"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationDialedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationDialedNumber"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationCalledNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationCalledNumber"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationNetworkTranslatedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationNetworkTranslatedNumber"]}]}, "accountAuthorizationCodeFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"callsWithCodes": {"type": "boolean"}}, "required": ["callsWithCodes"]}, {"type": "object", "properties": {"accountAuthorizationCode": {"type": "string", "minLength": 2, "maxLength": 14}}, "required": ["accountAuthorizationCode"]}]}, "subscriberType": {"type": "string", "enum": ["Auto Attendant", "BroadWorks Anywhere Portal", "Call Center", "Hunt Group", "Route Point", "User", "Find-me/Follow-me"]}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}}, "required": ["userId", "dateTimeRange"]}, "UserEnhancedCallLogsGetListRequest17sp4V2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "callLogType": {"type": "string", "enum": ["Placed", "Received", "Missed", "ReceivedOrMissed"]}, "dateTimeRange": {"type": "object", "properties": {"startDateTime": {"type": "xs:dateTime"}, "endDateTime": {"type": "xs:dateTime"}}, "required": ["startDateTime", "endDateTime"]}, "numberFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"includeBasicCallType": {"type": "array", "items": {"type": "string", "enum": ["Group", "Enterprise", "Network", "Network URL", "Repair", "Emergency"]}}}, "required": ["includeBasicCallType"]}, {"type": "object", "properties": {"includeCallCategory": {"type": "array", "items": {"type": "string", "enum": ["Local", "National", "Interlata", "Intralata", "International", "Private", "Emergency", "Other"]}}}, "required": ["includeCallCategory"]}, {"type": "object", "properties": {"includeConfigurableCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["includeConfigurableCallType"]}, {"type": "object", "properties": {"searchCriteriaDialedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaDialedNumber"]}, {"type": "object", "properties": {"searchCriteriaCalledNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaCalledNumber"]}, {"type": "object", "properties": {"searchCriteriaNetworkTranslatedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaNetworkTranslatedNumber"]}, {"type": "object", "properties": {"searchCriteriaCallingPresentationNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaCallingPresentationNumber"]}]}, "redirectedNumberFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"redirectedCall": {"type": "object", "properties": {"redirectedCall": {"type": "boolean"}, "redirectType": {"type": "array", "items": {"type": "string", "enum": ["Automatic Hold/Retrieve", "Call Forward Always", "Call Forward Busy", "Call Forward No Answer", "Call Forward Not Reachable", "Call Forward Selective", "Call Park", "Call Pickup", "Deflection", "Directed Call Pickup", "Distribution from Call Center", "Distribution from Hunt Group", "Distribution from Route Point", "Do Not Disturb", "Fax Deposit", "Group Night Forwarding", "Sequential Ring", "Series Completion", "Simultaneous Ring", "Third Party Deflection", "Third Party Voice Mail Support", "Transfer Consult", "Trunk Group Forward Capacity Exceeded", "Trunk Group Forward Unreachable", "Trunk Group Forward Unconditional", "Voice Mail Transfer", "Voice Messaging", "Find-me/Follow-me"]}}}, "required": ["redirectedCall"]}}, "required": ["redirectedCall"]}, {"type": "object", "properties": {"includeServiceInvocationBasicCallType": {"type": "array", "items": {"type": "string", "enum": ["Group", "Enterprise", "Network", "Network URL", "Repair", "Emergency"]}}}, "required": ["includeServiceInvocationBasicCallType"]}, {"type": "object", "properties": {"includeServiceInvocationCallCategory": {"type": "array", "items": {"type": "string", "enum": ["Local", "National", "Interlata", "Intralata", "International", "Private", "Emergency", "Other"]}}}, "required": ["includeServiceInvocationCallCategory"]}, {"type": "object", "properties": {"includeServiceInvocationConfigurableCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["includeServiceInvocationConfigurableCallType"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationDialedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationDialedNumber"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationCalledNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationCalledNumber"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationNetworkTranslatedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationNetworkTranslatedNumber"]}]}, "accountAuthorizationCodeFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"callsWithCodes": {"type": "boolean"}}, "required": ["callsWithCodes"]}, {"type": "object", "properties": {"accountAuthorizationCode": {"type": "string", "minLength": 2, "maxLength": 14}}, "required": ["accountAuthorizationCode"]}]}, "callAuthorizationCodeFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"callsWithCodes": {"type": "boolean"}}, "required": ["callsWithCodes"]}, {"type": "object", "properties": {"authorizationCode": {"type": "string", "minLength": 2, "maxLength": 14}}, "required": ["authorizationCode"]}]}, "subscriberType": {"type": "string", "enum": ["Auto Attendant", "BroadWorks Anywhere Portal", "Call Center", "Hunt Group", "Route Point", "User", "Find-me/Follow-me"]}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}}, "required": ["userId", "dateTimeRange"]}, "UserEnhancedCallLogsGetListRequest20": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "callLogType": {"type": "string", "enum": ["Placed", "Received", "Missed", "ReceivedOrMissed"]}, "dateTimeRange": {"type": "object", "properties": {"startDateTime": {"type": "xs:dateTime"}, "endDateTime": {"type": "xs:dateTime"}}, "required": ["startDateTime", "endDateTime"]}, "numberFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"includeBasicCallType": {"type": "array", "items": {"type": "string", "enum": ["Group", "Enterprise", "Network", "Network URL", "Repair", "Emergency"]}}}, "required": ["includeBasicCallType"]}, {"type": "object", "properties": {"includeCallCategory": {"type": "array", "items": {"type": "string", "enum": ["Local", "National", "Interlata", "Intralata", "International", "Private", "Emergency", "Other"]}}}, "required": ["includeCallCategory"]}, {"type": "object", "properties": {"includeConfigurableCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["includeConfigurableCallType"]}, {"type": "object", "properties": {"searchCriteriaDialedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaDialedNumber"]}, {"type": "object", "properties": {"searchCriteriaCalledNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaCalledNumber"]}, {"type": "object", "properties": {"searchCriteriaNetworkTranslatedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaNetworkTranslatedNumber"]}, {"type": "object", "properties": {"searchCriteriaCallingPresentationNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaCallingPresentationNumber"]}]}, "redirectedNumberFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"redirectedCall": {"type": "object", "properties": {"redirectedCall": {"type": "boolean"}, "redirectType": {"type": "array", "items": {"type": "string", "enum": ["Automatic Hold/Retrieve", "Call Forward Always", "Call Forward Busy", "Call Forward No Answer", "Call Forward Not Reachable", "Call Forward Selective", "Call Park", "Call Pickup", "Deflection", "Directed Call Pickup", "Distribution from Call Center", "Distribution from Hunt Group", "Distribution from Route Point", "Do Not Disturb", "Fax Deposit", "Group Night Forwarding", "Sequential Ring", "Series Completion", "Simultaneous Ring", "Third Party Deflection", "Third Party Voice Mail Support", "Transfer Consult", "Trunk Group Forward Capacity Exceeded", "Trunk Group Forward Unreachable", "Trunk Group Forward Unconditional", "Voice Mail Transfer", "Voice Messaging", "Find-me/Follow-me"]}}}, "required": ["redirectedCall"]}}, "required": ["redirectedCall"]}, {"type": "object", "properties": {"includeServiceInvocationBasicCallType": {"type": "array", "items": {"type": "string", "enum": ["Group", "Enterprise", "Network", "Network URL", "Repair", "Emergency"]}}}, "required": ["includeServiceInvocationBasicCallType"]}, {"type": "object", "properties": {"includeServiceInvocationCallCategory": {"type": "array", "items": {"type": "string", "enum": ["Local", "National", "Interlata", "Intralata", "International", "Private", "Emergency", "Other"]}}}, "required": ["includeServiceInvocationCallCategory"]}, {"type": "object", "properties": {"includeServiceInvocationConfigurableCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["includeServiceInvocationConfigurableCallType"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationDialedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationDialedNumber"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationCalledNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationCalledNumber"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationNetworkTranslatedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationNetworkTranslatedNumber"]}]}, "accountAuthorizationCodeFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"callsWithCodes": {"type": "boolean"}}, "required": ["callsWithCodes"]}, {"type": "object", "properties": {"accountAuthorizationCode": {"type": "string", "minLength": 2, "maxLength": 14}}, "required": ["accountAuthorizationCode"]}]}, "callAuthorizationCodeFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"callsWithCodes": {"type": "boolean"}}, "required": ["callsWithCodes"]}, {"type": "object", "properties": {"authorizationCode": {"type": "string", "minLength": 2, "maxLength": 14}}, "required": ["authorizationCode"]}]}, "subscriberType": {"type": "string", "enum": ["Auto Attendant", "BroadWorks Anywhere Portal", "Call Center", "Find-me/Follow-me", "Flexible Seating Host", "Hunt Group", "Route Point", "User", "VoiceXML"]}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}}, "required": ["userId", "dateTimeRange"]}, "UserEnhancedCallLogsGetListRequest20sp1": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "callLogType": {"type": "string", "enum": ["Placed", "Received", "Missed", "ReceivedOrMissed"]}, "dateTimeRange": {"type": "object", "properties": {"startDateTime": {"type": "xs:dateTime"}, "endDateTime": {"type": "xs:dateTime"}}, "required": ["startDateTime", "endDateTime"]}, "numberFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"includeBasicCallType": {"type": "array", "items": {"type": "string", "enum": ["Group", "Enterprise", "Network", "Network URL", "Repair", "Emergency"]}}}, "required": ["includeBasicCallType"]}, {"type": "object", "properties": {"includeCallCategory": {"type": "array", "items": {"type": "string", "enum": ["Local", "National", "Interlata", "Intralata", "International", "Private", "Emergency", "Other"]}}}, "required": ["includeCallCategory"]}, {"type": "object", "properties": {"includeConfigurableCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["includeConfigurableCallType"]}, {"type": "object", "properties": {"searchCriteriaDialedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaDialedNumber"]}, {"type": "object", "properties": {"searchCriteriaCalledNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaCalledNumber"]}, {"type": "object", "properties": {"searchCriteriaNetworkTranslatedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaNetworkTranslatedNumber"]}, {"type": "object", "properties": {"searchCriteriaCallingPresentationNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaCallingPresentationNumber"]}]}, "redirectedNumberFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"redirectedCall": {"type": "object", "properties": {"redirectedCall": {"type": "boolean"}, "redirectType": {"type": "array", "items": {"type": "string", "enum": ["Automatic Hold/Retrieve", "Call Forward Always", "Call Forward Always Secondary", "Call Forward Busy", "Call Forward No Answer", "Call Forward Not Reachable", "Call Forward Selective", "Call Park", "Call Pickup", "Deflection", "Directed Call Pickup", "Distribution from Call Center", "Distribution from Hunt Group", "Distribution from Route Point", "Do Not Disturb", "Fax Deposit", "Group Night Forwarding", "Sequential Ring", "Series Completion", "Simultaneous Ring", "Third Party Deflection", "Third Party Voice Mail Support", "Transfer Consult", "Trunk Group Forward Capacity Exceeded", "Trunk Group Forward Unreachable", "Trunk Group Forward Unconditional", "Voice Mail Transfer", "Voice Messaging", "Find-me/Follow-me", "Personal Assistant"]}}}, "required": ["redirectedCall"]}}, "required": ["redirectedCall"]}, {"type": "object", "properties": {"includeServiceInvocationBasicCallType": {"type": "array", "items": {"type": "string", "enum": ["Group", "Enterprise", "Network", "Network URL", "Repair", "Emergency"]}}}, "required": ["includeServiceInvocationBasicCallType"]}, {"type": "object", "properties": {"includeServiceInvocationCallCategory": {"type": "array", "items": {"type": "string", "enum": ["Local", "National", "Interlata", "Intralata", "International", "Private", "Emergency", "Other"]}}}, "required": ["includeServiceInvocationCallCategory"]}, {"type": "object", "properties": {"includeServiceInvocationConfigurableCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["includeServiceInvocationConfigurableCallType"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationDialedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationDialedNumber"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationCalledNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationCalledNumber"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationNetworkTranslatedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationNetworkTranslatedNumber"]}]}, "accountAuthorizationCodeFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"callsWithCodes": {"type": "boolean"}}, "required": ["callsWithCodes"]}, {"type": "object", "properties": {"accountAuthorizationCode": {"type": "string", "minLength": 2, "maxLength": 14}}, "required": ["accountAuthorizationCode"]}]}, "callAuthorizationCodeFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"callsWithCodes": {"type": "boolean"}}, "required": ["callsWithCodes"]}, {"type": "object", "properties": {"authorizationCode": {"type": "string", "minLength": 2, "maxLength": 14}}, "required": ["authorizationCode"]}]}, "subscriberType": {"type": "string", "enum": ["Auto Attendant", "BroadWorks Anywhere Portal", "Call Center", "Find-me/Follow-me", "Flexible Seating Host", "Hunt Group", "Route Point", "User", "VoiceXML"]}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}}, "required": ["userId", "dateTimeRange"]}, "UserEnhancedCallLogsGetListRequest21": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "callLogType": {"type": "string", "enum": ["Placed", "Received", "Missed", "ReceivedOrMissed"]}, "dateTimeRange": {"type": "object", "properties": {"startDateTime": {"type": "xs:dateTime"}, "endDateTime": {"type": "xs:dateTime"}}, "required": ["startDateTime", "endDateTime"]}, "numberFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"includeBasicCallType": {"type": "array", "items": {"type": "string", "enum": ["Group", "Enterprise", "Network", "Network URL", "Repair", "Emergency"]}}}, "required": ["includeBasicCallType"]}, {"type": "object", "properties": {"includeCallCategory": {"type": "array", "items": {"type": "string", "enum": ["Local", "National", "Interlata", "Intralata", "International", "Private", "Emergency", "Other"]}}}, "required": ["includeCallCategory"]}, {"type": "object", "properties": {"includeConfigurableCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["includeConfigurableCallType"]}, {"type": "object", "properties": {"searchCriteriaDialedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaDialedNumber"]}, {"type": "object", "properties": {"searchCriteriaCalledNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaCalledNumber"]}, {"type": "object", "properties": {"searchCriteriaNetworkTranslatedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaNetworkTranslatedNumber"]}, {"type": "object", "properties": {"searchCriteriaCallingPresentationNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaCallingPresentationNumber"]}]}, "redirectedNumberFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"redirectedCall": {"type": "object", "properties": {"redirectedCall": {"type": "boolean"}, "redirectType": {"type": "array", "items": {"type": "string", "enum": ["Automatic Hold/Retrieve", "Call Forward Always", "Call Forward Busy", "Call Forward No Answer", "Call Forward Not Reachable", "Call Forward Selective", "Call Park", "Call Pickup", "Deflection", "Directed Call Pickup", "Distribution from Call Center", "Distribution from Hunt Group", "Distribution from Route Point", "Do Not Disturb", "Fax Deposit", "Group Night Forwarding", "Sequential Ring", "Series Completion", "Simultaneous Ring", "Third Party Deflection", "Third Party Voice Mail Support", "Transfer Consult", "Trunk Group Forward Capacity Exceeded", "Trunk Group Forward Unreachable", "Trunk Group Forward Unconditional", "Voice Mail Transfer", "Voice Messaging", "Find-me/Follow-me", "Personal Assistant"]}}}, "required": ["redirectedCall"]}}, "required": ["redirectedCall"]}, {"type": "object", "properties": {"includeServiceInvocationBasicCallType": {"type": "array", "items": {"type": "string", "enum": ["Group", "Enterprise", "Network", "Network URL", "Repair", "Emergency"]}}}, "required": ["includeServiceInvocationBasicCallType"]}, {"type": "object", "properties": {"includeServiceInvocationCallCategory": {"type": "array", "items": {"type": "string", "enum": ["Local", "National", "Interlata", "Intralata", "International", "Private", "Emergency", "Other"]}}}, "required": ["includeServiceInvocationCallCategory"]}, {"type": "object", "properties": {"includeServiceInvocationConfigurableCallType": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 40}}}, "required": ["includeServiceInvocationConfigurableCallType"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationDialedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationDialedNumber"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationCalledNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationCalledNumber"]}, {"type": "object", "properties": {"searchCriteriaServiceInvocationNetworkTranslatedNumber": {"type": "array", "items": {"type": "object", "properties": {"mode": {"type": "string", "enum": ["Starts With", "Contains", "Equal To"]}, "value": {"type": "string", "minLength": 1, "maxLength": 161}, "isCaseInsensitive": {"type": "boolean"}}, "required": ["mode", "value", "isCaseInsensitive"]}}}, "required": ["searchCriteriaServiceInvocationNetworkTranslatedNumber"]}]}, "accountAuthorizationCodeFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"callsWithCodes": {"type": "boolean"}}, "required": ["callsWithCodes"]}, {"type": "object", "properties": {"accountAuthorizationCode": {"type": "string", "minLength": 2, "maxLength": 14}}, "required": ["accountAuthorizationCode"]}]}, "callAuthorizationCodeFilter": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"callsWithCodes": {"type": "boolean"}}, "required": ["callsWithCodes"]}, {"type": "object", "properties": {"authorizationCode": {"type": "string", "minLength": 2, "maxLength": 14}}, "required": ["authorizationCode"]}]}, "subscriberType": {"type": "string", "enum": ["Auto Attendant", "BroadWorks Anywhere Portal", "Call Center", "Find-me/Follow-me", "Flexible Seating Host", "Hunt Group", "Route Point", "User", "VoiceXML"]}, "responsePagingControl": {"type": "object", "properties": {"responseStartIndex": {"type": "integer", "minimum": 1.0}, "responsePageSize": {"type": "integer", "minimum": 1.0, "maximum": 2000.0}}, "required": ["responseStartIndex", "responsePageSize"]}}, "required": ["userId", "dateTimeRange"]}, "UserExecutiveGetFilteringSelectiveCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["userId", "criteriaName"]}, "UserFaxMessagingGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserFaxMessagingGetRequest17": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserFeatureAccessCodeGetListRequest20": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserFlexibleSeatingGuestGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserFlexibleSeatingGuestModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "isActive": {"type": "boolean"}, "enableAssociationLimit": {"type": "boolean"}, "associationLimitHours": {"type": "integer", "minimum": 1.0, "maximum": 999.0}, "unlockPhonePINCode": {"type": "string", "minLength": 4, "maxLength": 10}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contactList": {"type": "object", "properties": {"contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}}, "required": ["contact"]}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}}, "hostUserId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetLoginInfoRequest": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, {"type": "object", "properties": {"phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["phoneNumber"]}]}, "UserGetLoginInfoRequest21sp1": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, {"type": "object", "properties": {"phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["phoneNumber"]}, {"type": "object", "properties": {"linePort": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["linePort"]}]}, "UserGetLoginInfoRequest22": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, {"type": "object", "properties": {"phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["phoneNumber"]}, {"type": "object", "properties": {"linePort": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["linePort"]}]}, "UserGetLoginInfoRequest22V2": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, {"type": "object", "properties": {"phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["phoneNumber"]}, {"type": "object", "properties": {"linePort": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["linePort"]}]}, "UserGetLoginInfoRequest22V3": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}}, "required": ["phoneNumber"]}, {"type": "object", "properties": {"linePort": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["linePort"]}, {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "loginRole": {"type": "string", "enum": ["Administrator", "User"]}}, "required": ["userId"]}]}, "UserGetRequest14": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest14sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest14sp9": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest15sp2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest17": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest17sp3": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest17sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest18": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest19": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest20": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest21": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest21sp1": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest21sp1V2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest22": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest22V2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserGetRequest22V3": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserHolidayScheduleAddRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "holiday01": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday02": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday03": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday04": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday05": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday06": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday07": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday08": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday09": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday10": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday11": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday12": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday13": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday14": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday15": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday16": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday17": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday18": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday19": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday20": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}}, "required": ["userId", "holidayScheduleName"]}, "UserHolidayScheduleDeleteRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userId", "holidayScheduleName"]}, "UserHolidayScheduleGetListRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserHolidayScheduleGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userId", "holidayScheduleName"]}, "UserHolidayScheduleModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "holidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "newHolidayScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "holiday01": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday02": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday03": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday04": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday05": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday06": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday07": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday08": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday09": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday10": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday11": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday12": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday13": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday14": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday15": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday16": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday17": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday18": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday19": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}, "holiday20": {"type": "object", "properties": {"holidayName": {"type": "string", "minLength": 1, "maxLength": 40}, "startDate": {"type": "string"}, "endDate": {"type": "string"}}, "required": ["holidayName", "startDate"]}}, "required": ["userId", "holidayScheduleName"]}, "UserHotelingGuestGetRequest14": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserHotelingGuestGetRequest14sp2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserHotelingHostGetRequest14": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserHotelingHostGetRequest14sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserInterceptUserGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserInterceptUserGetRequest16": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserInterceptUserModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "isActive": {"type": "boolean"}, "announcementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "playNewPhoneNumber": {"type": "boolean"}, "newPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "transferOnZeroToPhoneNumber": {"type": "boolean"}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["userId"]}, "UserMeetMeConferencingAddConferenceRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "bridgeId": {"type": "string", "minLength": 1, "maxLength": 161}, "title": {"type": "MeetMeConferencingConferenceTitle"}, "estimatedParticipants": {"type": "MeetMeConferencingNumberOfParticipants"}, "accountCode": {"type": "MeetMeConferencingConferenceAccountCode"}, "muteAllAttendeesOnEntry": {"type": "boolean"}, "endConferenceOnModeratorExit": {"type": "boolean"}, "moderatorRequired": {"type": "boolean"}, "attendeeNotification": {"type": "MeetMeConferencingConferenceAttendeeNotification"}, "conferenceSchedule": {"type": "MeetMeConferencingConferenceSchedule"}}, "oneOf": [{"type": "object", "properties": {"restrictParticipants": {"type": "boolean"}}, "required": ["restrictParticipants"]}, {"type": "object", "properties": {"maxParticipants": {"type": "MeetMeConferencingNumberOfParticipants"}}, "required": ["maxParticipants"]}], "required": ["userId", "bridgeId", "title", "muteAllAttendeesOnEntry", "endConferenceOnModeratorExit", "moderatorRequired", "attendeeNotification", "conferenceSchedule"]}, "UserMeetMeConferencingAddConferenceRequest19": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "bridgeId": {"type": "string", "minLength": 1, "maxLength": 161}, "title": {"type": "MeetMeConferencingConferenceTitle"}, "estimatedParticipants": {"type": "MeetMeConferencingNumberOfParticipants"}, "accountCode": {"type": "MeetMeConferencingConferenceAccountCode"}, "muteAllAttendeesOnEntry": {"type": "boolean"}, "endConferenceOnModeratorExit": {"type": "boolean"}, "moderatorRequired": {"type": "boolean"}, "requireSecurityPin": {"type": "boolean"}, "allowUniqueIdentifier": {"type": "boolean"}, "attendeeNotification": {"type": "MeetMeConferencingConferenceAttendeeNotification"}, "conferenceSchedule": {"type": "MeetMeConferencingConferenceSchedule"}}, "oneOf": [{"type": "object", "properties": {"restrictParticipants": {"type": "boolean"}}, "required": ["restrictParticipants"]}, {"type": "object", "properties": {"maxParticipants": {"type": "MeetMeConferencingNumberOfParticipants"}}, "required": ["maxParticipants"]}], "required": ["userId", "bridgeId", "title", "muteAllAttendeesOnEntry", "endConferenceOnModeratorExit", "moderatorRequired", "requireSecurityPin", "allowUniqueIdentifier", "attendeeNotification", "conferenceSchedule"]}, "UserMeetMeConferencingGetConferenceGreetingRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "conferenceKey": {"type": "object", "properties": {"bridgeId": {"type": "string", "minLength": 1, "maxLength": 161}, "conferenceId": {"type": "string", "minLength": 6, "maxLength": 12}}, "required": ["bridgeId", "conferenceId"]}}, "required": ["userId", "conferenceKey"]}, "UserMeetMeConferencingGetConferenceRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "conferenceKey": {"type": "object", "properties": {"bridgeId": {"type": "string", "minLength": 1, "maxLength": 161}, "conferenceId": {"type": "string", "minLength": 6, "maxLength": 12}}, "required": ["bridgeId", "conferenceId"]}}, "required": ["userId", "conferenceKey"]}, "UserMeetMeConferencingGetConferenceRequest19": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "conferenceKey": {"type": "object", "properties": {"bridgeId": {"type": "string", "minLength": 1, "maxLength": 161}, "conferenceId": {"type": "string", "minLength": 6, "maxLength": 12}}, "required": ["bridgeId", "conferenceId"]}}, "required": ["userId", "conferenceKey"]}, "UserMeetMeConferencingGetConferenceRequest20": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "conferenceKey": {"type": "object", "properties": {"bridgeId": {"type": "string", "minLength": 1, "maxLength": 161}, "conferenceId": {"type": "string", "minLength": 6, "maxLength": 12}}, "required": ["bridgeId", "conferenceId"]}}, "required": ["userId", "conferenceKey"]}, "UserMeetMeConferencingModifyConferenceGreetingRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "conferenceKey": {"type": "object", "properties": {"bridgeId": {"type": "string", "minLength": 1, "maxLength": 161}, "conferenceId": {"type": "string", "minLength": 6, "maxLength": 12}}, "required": ["bridgeId", "conferenceId"]}, "playEntranceGreeting": {"type": "boolean"}, "entranceGreetingFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}, "mediaType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description", "mediaType"]}}, "required": ["userId", "conferenceKey"]}, "UserModifyRequest14": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 6}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "oldPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "newPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}, "endpoint": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}, {"type": "object", "properties": {"trunkGroupDeviceEndpoint": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}}, "required": ["name", "linePort"]}}, "required": ["trunkGroupDeviceEndpoint"]}]}, "title": {"type": "string", "minLength": 1, "maxLength": 50}, "pagerPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "mobilePhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "emailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "yahooId": {"type": "string", "minLength": 1, "maxLength": 50}, "addressLocation": {"type": "string", "minLength": 1, "maxLength": 80}, "address": {"type": "object", "properties": {"addressLine1": {"type": "string", "minLength": 1, "maxLength": 80}, "addressLine2": {"type": "string", "minLength": 1, "maxLength": 80}, "city": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvince": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvinceDisplayName": {"type": "string", "minLength": 1, "maxLength": 50}, "zipOrPostalCode": {"type": "string", "minLength": 1, "maxLength": 50}, "country": {"type": "string", "minLength": 1, "maxLength": 50}}}}, "required": ["userId"]}, "UserModifyRequest14sp9": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 6}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "oldPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "newPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}, "endpoint": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}, {"type": "object", "properties": {"trunkAddressing": {"type": "object", "properties": {"trunkGroupDeviceEndpoint": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}}, "required": ["name", "linePort"]}, "enterpriseTrunkName": {"type": "string", "minLength": 1, "maxLength": 30}, "alternateTrunkIdentity": {"type": "string", "minLength": 1, "maxLength": 80}}}}, "required": ["trunkAddressing"]}]}, "title": {"type": "string", "minLength": 1, "maxLength": 50}, "pagerPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "mobilePhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "emailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "yahooId": {"type": "string", "minLength": 1, "maxLength": 50}, "addressLocation": {"type": "string", "minLength": 1, "maxLength": 80}, "address": {"type": "object", "properties": {"addressLine1": {"type": "string", "minLength": 1, "maxLength": 80}, "addressLine2": {"type": "string", "minLength": 1, "maxLength": 80}, "city": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvince": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvinceDisplayName": {"type": "string", "minLength": 1, "maxLength": 50}, "zipOrPostalCode": {"type": "string", "minLength": 1, "maxLength": 50}, "country": {"type": "string", "minLength": 1, "maxLength": 50}}}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userId"]}, "UserModifyRequest16": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "oldPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "newPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}, "endpoint": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["accessDeviceEndpoint"]}, {"type": "object", "properties": {"trunkAddressing": {"type": "object", "properties": {"trunkGroupDeviceEndpoint": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 40}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}}, "required": ["name", "linePort"]}, "enterpriseTrunkName": {"type": "string", "minLength": 1, "maxLength": 30}, "alternateTrunkIdentity": {"type": "string", "minLength": 1, "maxLength": 80}}}}, "required": ["trunkAddressing"]}]}, "title": {"type": "string", "minLength": 1, "maxLength": 50}, "pagerPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "mobilePhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "emailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "yahooId": {"type": "string", "minLength": 1, "maxLength": 50}, "addressLocation": {"type": "string", "minLength": 1, "maxLength": 80}, "address": {"type": "object", "properties": {"addressLine1": {"type": "string", "minLength": 1, "maxLength": 80}, "addressLine2": {"type": "string", "minLength": 1, "maxLength": 80}, "city": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvince": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvinceDisplayName": {"type": "string", "minLength": 1, "maxLength": 50}, "zipOrPostalCode": {"type": "string", "minLength": 1, "maxLength": 50}, "country": {"type": "string", "minLength": 1, "maxLength": 50}}}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}, "officeZoneName": {"type": "string", "minLength": 1, "maxLength": 40}, "primaryZoneName": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["userId"]}, "UserModifyRequest17sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "lastName": {"type": "string", "minLength": 1, "maxLength": 30}, "firstName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "callingLineIdFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "nameDialingName": {"type": "object", "properties": {"nameDialingLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "nameDialingFirstName": {"type": "string", "minLength": 1, "maxLength": 30}}, "required": ["nameDialingLastName", "nameDialingFirstName"]}, "hiraganaLastName": {"type": "string", "minLength": 1, "maxLength": 30}, "hiraganaFirstName": {"type": "string", "minLength": 1, "maxLength": 30}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "extension": {"type": "string", "minLength": 2, "maxLength": 20}, "callingLineIdPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 23}, "oldPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "newPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "department": {"type": "object", "properties": {}}, "language": {"type": "string", "minLength": 1, "maxLength": 40}, "timeZone": {"type": "string", "minLength": 1, "maxLength": 127}, "sipAliasList": {"type": "object", "properties": {"sipAlias": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["sipAlias"]}, "endpoint": {"type": "object", "properties": {}, "oneOf": [{"type": "object", "properties": {"accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contactList": {"type": "object", "properties": {"contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}}, "required": ["contact"]}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}}}, "required": ["accessDeviceEndpoint"]}, {"type": "object", "properties": {"trunkAddressing": {"type": "object", "properties": {"trunkGroupDeviceEndpoint": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 30}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contactList": {"type": "object", "properties": {"contact": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 1020}}}, "required": ["contact"]}}}, "enterpriseTrunkName": {"type": "string", "minLength": 1, "maxLength": 30}, "alternateTrunkIdentity": {"type": "string", "minLength": 1, "maxLength": 80}, "alternateTrunkIdentityDomain": {"type": "string", "minLength": 1, "maxLength": 80}, "physicalLocation": {"type": "string", "minLength": 1, "maxLength": 1024}}}}, "required": ["trunkAddressing"]}]}, "title": {"type": "string", "minLength": 1, "maxLength": 50}, "pagerPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "mobilePhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "emailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "yahooId": {"type": "string", "minLength": 1, "maxLength": 50}, "addressLocation": {"type": "string", "minLength": 1, "maxLength": 80}, "address": {"type": "object", "properties": {"addressLine1": {"type": "string", "minLength": 1, "maxLength": 80}, "addressLine2": {"type": "string", "minLength": 1, "maxLength": 80}, "city": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvince": {"type": "string", "minLength": 1, "maxLength": 50}, "stateOrProvinceDisplayName": {"type": "string", "minLength": 1, "maxLength": 50}, "zipOrPostalCode": {"type": "string", "minLength": 1, "maxLength": 50}, "country": {"type": "string", "minLength": 1, "maxLength": 50}}}, "networkClassOfService": {"type": "string", "minLength": 1, "maxLength": 40}, "officeZoneName": {"type": "string", "minLength": 1, "maxLength": 40}, "primaryZoneName": {"type": "string", "minLength": 1, "maxLength": 80}, "impId": {"type": "string", "minLength": 1, "maxLength": 196}, "impPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "alternateUserIdList": {"type": "object", "properties": {"alternateUserId": {"type": "array", "items": {"type": "object", "properties": {"alternateUserId": {"type": "string", "minLength": 1, "maxLength": 161}, "description": {"type": "string", "minLength": 1, "maxLength": 80}}, "required": ["alternateUserId"]}}}, "required": ["alternateUserId"]}}, "required": ["userId"]}, "UserMusicOnHoldUserGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserMusicOnHoldUserModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "source": {"type": "object", "properties": {"messageSourceSelection": {"type": "string", "enum": ["Group", "Custom"]}, "customSource": {"type": "object", "properties": {"audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}}}}, "useAlternateSourceForInternalCalls": {"type": "boolean"}, "internalSource": {"type": "object", "properties": {"messageSourceSelection": {"type": "string", "enum": ["Group", "Custom"]}, "customSource": {"type": "object", "properties": {"audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}}}}}, "required": ["userId"]}, "UserPersonalAssistantGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserPriorityAlertAddCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}, "timeSchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "fromDnCriteria": {"type": "object", "properties": {"fromDnCriteriaSelection": {"type": "string", "enum": ["Any External", "Specified Only"]}, "includeAnonymousCallers": {"type": "boolean"}, "includeUnavailableCallers": {"type": "boolean"}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["fromDnCriteriaSelection", "includeAnonymousCallers", "includeUnavailableCallers"]}}, "required": ["userId", "criteriaName", "fromDnCriteria"]}, "UserPriorityAlertGetCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["userId", "criteriaName"]}, "UserPrivacyGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserPushNotificationGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserScheduleGetListRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "scheduleType": {"type": "string", "enum": ["Holiday", "Time"]}}, "required": ["userId"]}, "UserSecurityClassificationGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserSelectiveCallAcceptanceAddCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}, "timeSchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "fromDnCriteria": {"type": "object", "properties": {"fromDnCriteriaSelection": {"type": "string", "enum": ["Any", "Specified Only"]}, "includeAnonymousCallers": {"type": "boolean"}, "includeUnavailableCallers": {"type": "boolean"}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["fromDnCriteriaSelection", "includeAnonymousCallers", "includeUnavailableCallers"]}}, "required": ["userId", "criteriaName", "fromDnCriteria"]}, "UserSelectiveCallAcceptanceGetCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["userId", "criteriaName"]}, "UserSelectiveCallRejectionAddCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}, "timeSchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "fromDnCriteria": {"type": "object", "properties": {"fromDnCriteriaSelection": {"type": "string", "enum": ["Any", "Specified Only"]}, "includeAnonymousCallers": {"type": "boolean"}, "includeUnavailableCallers": {"type": "boolean"}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["fromDnCriteriaSelection", "includeAnonymousCallers", "includeUnavailableCallers"]}}, "required": ["userId", "criteriaName", "fromDnCriteria"]}, "UserSelectiveCallRejectionGetCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["userId", "criteriaName"]}, "UserSelectiveCallRejectionGetCriteriaRequest16": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["userId", "criteriaName"]}, "UserSelectiveCallRejectionModifyCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}, "newCriteriaName": {"type": "string", "minLength": 1, "maxLength": 50}, "timeSchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "fromDnCriteria": {"type": "object", "properties": {"fromDnCriteriaSelection": {"type": "string", "enum": ["Any", "Specified Only"]}, "includeAnonymousCallers": {"type": "boolean"}, "includeUnavailableCallers": {"type": "boolean"}, "phoneNumberList": {"type": "object", "properties": {"phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["phoneNumber"]}}}, "holidaySchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "blacklisted": {"type": "boolean"}}, "required": ["userId", "criteriaName"]}, "UserSequentialRingAddCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}, "timeSchedule": {"type": "object", "properties": {"type": {"type": "string", "enum": ["Service Provider", "Group", "User"]}, "name": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["type", "name"]}, "fromDnCriteria": {"type": "object", "properties": {"fromDnCriteriaSelection": {"type": "string", "enum": ["Any", "Specified Only"]}, "includeAnonymousCallers": {"type": "boolean"}, "includeUnavailableCallers": {"type": "boolean"}, "phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["fromDnCriteriaSelection", "includeAnonymousCallers", "includeUnavailableCallers"]}}, "required": ["userId", "criteriaName", "fromDnCriteria"]}, "UserSequentialRingGetCriteriaRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "criteriaName": {"type": "string", "minLength": 1, "maxLength": 50}}, "required": ["userId", "criteriaName"]}, "UserSequentialRingGetRequest13mp16": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserSharedCallAppearanceAddEndpointRequest14": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}}, "required": ["userId", "accessDeviceEndpoint"]}, "UserSharedCallAppearanceAddEndpointRequest14sp2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}, "contact": {"type": "string", "minLength": 1, "maxLength": 1020}, "pathHeader": {"type": "string", "minLength": 1, "maxLength": 1024}, "portNumber": {"type": "integer", "minimum": 1.0, "maximum": 1024.0}}, "required": ["accessDevice", "linePort"]}, "isActive": {"type": "boolean"}, "allowOrigination": {"type": "boolean"}, "allowTermination": {"type": "boolean"}}, "required": ["userId", "accessDeviceEndpoint", "isActive", "allowOrigination", "allowTermination"]}, "UserSharedCallAppearanceGetEndpointRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "accessDeviceEndpoint": {"type": "object", "properties": {"accessDevice": {"type": "object", "properties": {"deviceLevel": {"type": "string", "enum": ["System", "Service Provider", "Group"]}, "deviceName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["deviceLevel", "deviceName"]}, "linePort": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["accessDevice", "linePort"]}}, "required": ["userId", "accessDeviceEndpoint"]}, "UserSharedCallAppearanceGetRequest14": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserSharedCallAppearanceGetRequest14sp2": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserSimultaneousRingFamilyAddPhoneNumberRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "answerConfirmationRequired": {"type": "boolean"}}, "required": ["userId", "phoneNumber", "answerConfirmationRequired"]}, "UserSimultaneousRingFamilyDeletePhoneNumberRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId", "phoneNumber"]}, "UserSimultaneousRingFamilyGetPhoneNumberRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId", "phoneNumber"]}, "UserSimultaneousRingFamilyGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserSimultaneousRingFamilyGetRequest14sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserSimultaneousRingFamilyModifyPhoneNumberRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "answerConfirmationRequired": {"type": "boolean"}}, "required": ["userId", "phoneNumber"]}, "UserSimultaneousRingFamilyModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "isActive": {"type": "boolean"}, "incomingCalls": {"type": "string", "enum": ["Do not Ring if on a Call", "Ring for all Incoming Calls"]}, "simRingPhoneNumberList": {"type": "object", "properties": {"phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["phoneNumber"]}}, "required": ["userId"]}, "UserSimultaneousRingFamilyModifyRequest14sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "isActive": {"type": "boolean"}, "incomingCalls": {"type": "string", "enum": ["Do not Ring if on a Call", "Ring for all Incoming Calls"]}}, "required": ["userId"]}, "UserSimultaneousRingPersonalAddPhoneNumberRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "answerConfirmationRequired": {"type": "boolean"}}, "required": ["userId", "phoneNumber", "answerConfirmationRequired"]}, "UserSimultaneousRingPersonalDeletePhoneNumberRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId", "phoneNumber"]}, "UserSimultaneousRingPersonalGetPhoneNumberRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId", "phoneNumber"]}, "UserSimultaneousRingPersonalGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserSimultaneousRingPersonalGetRequest14sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserSimultaneousRingPersonalModifyPhoneNumberRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "phoneNumber": {"type": "string", "minLength": 1, "maxLength": 161}, "answerConfirmationRequired": {"type": "boolean"}}, "required": ["userId", "phoneNumber"]}, "UserSimultaneousRingPersonalModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "isActive": {"type": "boolean"}, "incomingCalls": {"type": "string", "enum": ["Do not Ring if on a Call", "Ring for all Incoming Calls"]}, "simRingPhoneNumberList": {"type": "object", "properties": {"phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 161}}}, "required": ["phoneNumber"]}}, "required": ["userId"]}, "UserSimultaneousRingPersonalModifyRequest14sp4": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "isActive": {"type": "boolean"}, "incomingCalls": {"type": "string", "enum": ["Do not Ring if on a Call", "Ring for all Incoming Calls"]}}, "required": ["userId"]}, "UserSpeedDial100GetListRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserThirdPartyVoiceMailSupportGetRequest13mp16": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserTimeScheduleAddRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "timeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "timeInterval01": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval02": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval03": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval04": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval05": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval06": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval07": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval08": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval09": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval10": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval11": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval12": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval13": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval14": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval15": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval16": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval17": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval18": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval19": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval20": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}}, "required": ["userId", "timeScheduleName"]}, "UserTimeScheduleDeleteRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "timeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userId", "timeScheduleName"]}, "UserTimeScheduleGetListRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserTimeScheduleGetRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "timeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}}, "required": ["userId", "timeScheduleName"]}, "UserTimeScheduleModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "timeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "newTimeScheduleName": {"type": "string", "minLength": 1, "maxLength": 40}, "timeInterval01": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval02": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval03": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval04": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval05": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval06": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval07": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval08": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval09": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval10": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval11": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval12": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval13": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval14": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval15": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval16": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval17": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval18": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval19": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}, "timeInterval20": {"type": "object", "properties": {"startDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "startHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "startMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}, "endDayOfWeek": {"type": "string", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, "endHour": {"type": "integer", "minimum": 0.0, "maximum": 23.0}, "endMinute": {"type": "integer", "minimum": 0.0, "maximum": 59.0}}, "required": ["startDayOfWeek", "startHour", "startMinute", "endDayOfWeek", "endHour", "endMinute"]}}, "required": ["userId", "timeScheduleName"]}, "UserVideoAddOnGetRequest14": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserVideoAddOnGetRequest19": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserVoiceMessagingUserGetAdvancedVoiceManagementRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserVoiceMessagingUserGetGreetingRequest13mp16": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserVoiceMessagingUserGetGreetingRequest16": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserVoiceMessagingUserGetVoiceManagementRequest13mp8": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserVoiceMessagingUserGetVoicePortalPasswordInfoRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserVoiceMessagingUserGetVoicePortalRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}}, "required": ["userId"]}, "UserVoiceMessagingUserModifyGreetingRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "busyAnnouncementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "busyPersonalAudioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "busyPersonalVideoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "noAnswerAnnouncementSelection": {"type": "string", "enum": ["Default", "Personal", "Alternate01", "Alternate02", "Alternate03"]}, "noAnswerPersonalAudioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "noAnswerPersonalVideoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "noAnswerAlternateGreeting01": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}}, "noAnswerAlternateGreeting02": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}}, "noAnswerAlternateGreeting03": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "audioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}, "videoFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}}, "noAnswerNumberOfRings": {"type": "integer", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}}, "required": ["userId"]}, "UserVoiceMessagingUserModifyRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "mailServerSelection": {"type": "VoiceMessagingUserMailServerSelection"}, "groupMailServerEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "groupMailServerUserId": {"type": "VoiceMessagingMailServerUserId"}, "groupMailServerPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "personalMailServerNetAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "personalMailServerProtocol": {"type": "string", "enum": ["POP3", "IMAP"]}, "personalMailServerRealDeleteForImap": {"type": "boolean"}, "personalMailServerEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "personalMailServerUserId": {"type": "VoiceMessagingMailServerUserId"}, "personalMailServerPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "voiceMessagingDistributionList": {"type": "array", "items": {"type": "string"}}, "busyAnnouncementSelection": {"type": "string", "enum": ["Default", "Personal"]}, "busyPersonalAudioFile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "mediaFileType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}, "level": {"type": "string", "enum": ["Group", "User"]}}, "required": ["name", "mediaFileType", "level"]}, "busyPersonalVideoFile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "mediaFileType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}, "level": {"type": "string", "enum": ["Group", "User"]}}, "required": ["name", "mediaFileType", "level"]}, "noAnswerAnnouncementSelection": {"type": "string", "enum": ["Default", "Personal", "Alternate01", "Alternate02", "Alternate03"]}, "noAnswerPersonalAudioFile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "mediaFileType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}, "level": {"type": "string", "enum": ["Group", "User"]}}, "required": ["name", "mediaFileType", "level"]}, "noAnswerPersonalVideoFile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "mediaFileType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}, "level": {"type": "string", "enum": ["Group", "User"]}}, "required": ["name", "mediaFileType", "level"]}, "noAnswerAlternateGreeting01": {"type": "VoiceMessagingAlternateNoAnswerGreetingModify20"}, "noAnswerAlternateGreeting02": {"type": "VoiceMessagingAlternateNoAnswerGreetingModify20"}, "noAnswerAlternateGreeting03": {"type": "VoiceMessagingAlternateNoAnswerGreetingModify20"}, "extendedAwayEnabled": {"type": "boolean"}, "extendedAwayDisableMessageDeposit": {"type": "boolean"}, "extendedAwayAudioFile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "mediaFileType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}, "level": {"type": "string", "enum": ["Group", "User"]}}, "required": ["name", "mediaFileType", "level"]}, "extendedAwayVideoFile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "mediaFileType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}, "level": {"type": "string", "enum": ["Group", "User"]}}, "required": ["name", "mediaFileType", "level"]}, "noAnswerNumberOfRings": {"type": "integer", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}, "disableMessageDeposit": {"type": "boolean"}, "disableMessageDepositAction": {"type": "string", "enum": ["Disconnect", "Forward"]}, "greetingOnlyForwardDestination": {"type": "string", "minLength": 1, "maxLength": 161}, "outgoingSMDIMWIisActive": {"type": "boolean"}, "outgoingSMDIMWIPhoneNumberList": {"type": "object", "properties": {"phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 30}}}, "required": ["phoneNumber"]}, "voiceManagementisActive": {"type": "boolean"}, "processing": {"type": "VoiceMessagingMessageProcessing"}, "voiceMessageDeliveryEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "usePhoneMessageWaitingIndicator": {"type": "boolean"}, "sendVoiceMessageNotifyEmail": {"type": "boolean"}, "voiceMessageNotifyEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "sendCarbonCopyVoiceMessage": {"type": "boolean"}, "voiceMessageCarbonCopyEmailAddress": {"type": "string", "minLength": 1, "maxLength": 80}, "transferOnZeroToPhoneNumber": {"type": "boolean"}, "transferPhoneNumber": {"type": "string", "minLength": 1, "maxLength": 30}, "alwaysRedirectToVoiceMail": {"type": "boolean"}, "busyRedirectToVoiceMail": {"type": "boolean"}, "noAnswerRedirectToVoiceMail": {"type": "boolean"}, "outOfPrimaryZoneRedirectToVoiceMail": {"type": "boolean"}, "usePersonalizedName": {"type": "boolean"}, "voicePortalAutoLogin": {"type": "boolean"}, "personalizedNameAudioFile": {"type": "object", "properties": {"name": {"type": "string", "minLength": 1, "maxLength": 80}, "mediaFileType": {"type": "string", "enum": ["WMA", "WAV", "3GP", "MOV"]}, "level": {"type": "string", "enum": ["Group", "User"]}}, "required": ["name", "mediaFileType", "level"]}, "userMessagingAliasList": {"type": "object", "properties": {"phoneNumber": {"type": "array", "items": {"type": "string", "minLength": 1, "maxLength": 23}}}, "required": ["phoneNumber"]}}, "oneOf": [{"type": "object", "properties": {"useGroupDefaultMailServerFullMailboxLimit": {"type": "boolean"}}, "required": ["useGroupDefaultMailServerFullMailboxLimit"]}, {"type": "object", "properties": {"groupMailServerFullMailboxLimit": {"type": "integer", "enum": ["10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "200", "300", "400", "500", "600", "700", "800", "900"]}}, "required": ["groupMailServerFullMailboxLimit"]}], "required": ["userId"]}, "UserVoiceMessagingUserModifyVoicePortalPasswordRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "oldPassword": {"type": "string", "minLength": 1, "maxLength": 60}, "newPassword": {"type": "string", "minLength": 1, "maxLength": 60}}, "required": ["userId", "newPassword"]}, "UserVoiceMessagingUserModifyVoicePortalRequest": {"type": "object", "properties": {"userId": {"type": "string", "minLength": 1, "maxLength": 161}, "usePersonalizedName": {"type": "boolean"}, "voicePortalAutoLogin": {"type": "boolean"}, "personalizedNameAudioFile": {"type": "object", "properties": {"description": {"type": "string", "minLength": 1, "maxLength": 256}}, "oneOf": [{"type": "object", "properties": {"sourceFileName": {"type": "string", "minLength": 1}}, "required": ["sourceFileName"]}, {"type": "object", "properties": {"content": {"type": "string"}}, "required": ["content"]}], "required": ["description"]}}, "required": ["userId"]}}}}
[{"name": "ServiceProviderAccessDeviceAddRequest22V2", "tags": ["ServiceProvider"], "documentation": "Request to add a service provider access device.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "protocol", "required": false, "array": false, "type": "AccessDeviceProtocol", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "netAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": false, "array": false, "type": "Port1025", "type_schema": "xs:int", "minimum": 1025.0, "maximum": 65535.0}, {"name": "outboundProxyServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "stunServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "macAddress", "required": false, "array": false, "type": "AccessDeviceMACAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 12}, {"name": "serialNumber", "required": false, "array": false, "type": "AccessDeviceSerialNumber", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "AccessDeviceDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "physicalLocation", "required": false, "array": false, "type": "AccessDevicePhysicalLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "transportProtocol", "required": false, "array": false, "type": "ExtendedTransportProtocol", "type_schema": "xs:token", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, {"name": "useCustomUserNamePassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "accessDeviceCredentials", "required": false, "array": false, "type": "DeviceManagementUserNamePassword16", "schema": [[{"name": "userName", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "password", "required": true, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"choice": [[[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}], [{"name": "serviceProviderExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}, {"name": "deviceExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}]]]}]]}, {"name": "ServiceProviderAccessDeviceCustomTagAddOrModifyListRequest", "tags": ["ServiceProvider"], "documentation": "Request to add or modify a list of static configuration tag for a service provider access\n        device.  If the tag does not exist, it is added.  If the tag exists, its\n        value is updated.\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "tag", "required": true, "array": true, "type": "DeviceManagementTag", "schema": [[{"name": "tagName", "required": true, "array": false, "type": "DeviceManagementTagName", "type_schema": "xs:token", "minLength": 1, "maxLength": 64}, {"name": "tagValue", "required": false, "array": false, "type": "DeviceManagementTagValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}]]}, {"name": "ServiceProviderAccessDeviceCustomTagAddRequest", "tags": ["ServiceProvider"], "documentation": "Request to add a static configuration tag for a service provider access device.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "tagName", "required": true, "array": false, "type": "DeviceManagementTagName", "type_schema": "xs:token", "minLength": 1, "maxLength": 64}, {"name": "tagValue", "required": false, "array": false, "type": "DeviceManagementTagValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "ServiceProviderAccessDeviceCustomTagDeleteListRequest", "tags": ["ServiceProvider"], "documentation": "Request to delete static configuration tags for a service provider access device.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "tagName", "required": true, "array": true, "type": "DeviceManagementTagName", "type_schema": "xs:token", "minLength": 1, "maxLength": 64}]]}, {"name": "ServiceProviderAccessDeviceCustomTagGetListRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the list of custom configuration tags managed by the Device Management System, on a per-device profile basis.\n        The response is either ServiceProviderAccessDeviceCustomTagGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderAccessDeviceCustomTagModifyRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify a static configuration tag for a service provider access device.\n\n        The tagValueToEncrypt element can only be used by a system administrator.\n\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          tagValueToEncrypt\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "tagName", "required": true, "array": false, "type": "DeviceManagementTagName", "type_schema": "xs:token", "minLength": 1, "maxLength": 64}, {"choice": [{"name": "tagValue", "required": false, "array": false, "type": "DeviceManagementTagValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "tagValueToEncrypt", "required": false, "array": false, "type": "DeviceManagementTagValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]}]]}, {"name": "ServiceProviderAccessDeviceDeleteRequest", "tags": ["ServiceProvider"], "documentation": "Request to delete a specified service provider access device.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          deviceExternalId\n\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [{"choice": [{"name": "deviceExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}, [{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]}, {"name": "ServiceProviderAccessDeviceDeviceActivationGetRequest", "tags": ["ServiceProvider"], "documentation": "Requests the activation information for a device configured at the Service Provider level.\n        Returns a ServiceProviderAccessDeviceDeviceActivationGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderAccessDeviceDeviceActivationModifyRequest", "tags": ["ServiceProvider"], "documentation": "Activates or deactivates a device configured at the Service Provider level. It is only possible\n        for this request to activate a device which is deactivated. Trying to activate a\n        device in the activating state will result in an error response since only the DAS is\n        allowed to execute this operation.\n        Returns a SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "activateDevice", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderAccessDeviceFileGetListRequest14sp8", "tags": ["ServiceProvider"], "documentation": "Request to get the list of device files managed by the Device Management System, on a per-device profile basis.\n        The response is either ServiceProviderAccessDeviceFileGetListResponse14sp8 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderAccessDeviceFileGetRequest20", "tags": ["ServiceProvider"], "documentation": "Request to get a service provider device profile file.\n        The response is either ServiceProviderAccessDeviceFileGetResponse20 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "fileFormat", "required": true, "array": false, "type": "DeviceManagementFileFormat", "type_schema": "xs:token", "minLength": 1, "maxLength": 128}]]}, {"name": "ServiceProviderAccessDeviceFileModifyRequest14sp8", "tags": ["ServiceProvider"], "documentation": "Request to modify a specified service provider/enterprise access device file.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "fileFormat", "required": true, "array": false, "type": "DeviceManagementFileFormat", "type_schema": "xs:token", "minLength": 1, "maxLength": 128}, {"name": "fileSource", "required": false, "array": false, "type": "AccessDeviceEnhancedConfigurationMode", "type_schema": "xs:token", "enum": ["Default", "Manual", "Custom"]}, {"name": "uploadFile", "required": false, "array": false, "type": "FileResource", "schema": [[{"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "fileContent", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "extendedCaptureEnabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderAccessDeviceGenerateActivationCodeRequest", "tags": ["ServiceProvider"], "documentation": "Requests a new activation code for a device configured at the Service Provider level.\n        Returns a SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderAccessDeviceGetAvailableCustomTagListRequest", "tags": ["ServiceProvider"], "documentation": "Get the list of all available custom tags managed by the Device Management System, on a per-device profile basis.\n        The response is either ServiceProviderAccessDeviceGetAvailableCustomTagListResponse or ErrorResponse.\n        The following elements are used in AS mode and ignored in XS data mode:\n          tagSetName", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "tagSetName", "required": false, "array": false, "type": "DeviceManagementTagSetName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderAccessDeviceGetEnhancedConfigurationTypeListRequest", "tags": ["ServiceProvider"], "documentation": "Requests the list of configurable device types of devices that have already been\n        added to the service provider.\n        The response is either ServiceProviderAccessDeviceGetEnhancedConfigurationTypeListResponse\n        or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderAccessDeviceGetEnhancedConfigurationTypeRequest", "tags": ["ServiceProvider"], "documentation": "Requests the details of a specified configurable device type for a service provider.\n        The response is either ServiceProviderAccessDeviceGetEnhancedConfigurationTypeResponse\n        or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderAccessDeviceGetLinkedLeafDeviceListRequest", "tags": ["ServiceProvider"], "documentation": "Requests the list of linked leaf devices for the service provider level tree device passed in the request.\n        A tree device is a device associated with a device type that has the option\n        supportLinks set to \"Support Links from Devices\". Many leaf devices can be linked to it.\n        A leaf device is a device associated with a device type that has the option\n        supportLinks set to \"Support Link to Device\". It can be linked to only one tree device.\n        The list includes devices created at the system, service provider, and group levels.\n\n        The response is either ServiceProviderAccessDeviceGetLinkedLeafDeviceListResponse or\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderAccessDeviceGetLinkedTreeDeviceRequest", "tags": ["ServiceProvider"], "documentation": "Requests the tree device linked with the service provider level leaf device passed in the request.\n        A tree device is a device associated with a device type that has the option\n        supportLinks set to \"Support Links from Devices\". Many leaf devices can be linked to it.\n        A leaf device is a device associated with a device type that has the option\n        supportLinks set to \"Support Link to Device\". It can be linked to only one tree device.\n\n        The response is either ServiceProviderAccessDeviceGetLinkedTreeDeviceResponse or\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderAccessDeviceGetListRequest", "tags": ["ServiceProvider"], "documentation": "Requests the list of access devices in a service provider.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          serviceProviderExternalId\n\n        The response is either ServiceProviderAccessDeviceGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaDeviceName", "required": false, "array": true, "type": "SearchCriteriaDeviceName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDeviceMACAddress", "required": false, "array": true, "type": "SearchCriteriaDeviceMACAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AccessDeviceMACAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 12}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDeviceNetAddress", "required": false, "array": true, "type": "SearchCriteriaDeviceNetAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactDeviceType", "required": false, "array": false, "type": "SearchCriteriaExactDeviceType", "schema": [[{"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "searchCriteriaAccessDeviceVersion", "required": false, "array": true, "type": "SearchCriteriaAccessDeviceVersion", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserAgentHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"choice": [{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceProviderExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}]}]]}, {"name": "ServiceProviderAccessDeviceGetNativeTagsWithLogicListRequest", "tags": ["ServiceProvider"], "documentation": "Get the list of all native tags with logic managed by the Device Management System, on a per-device profile basis.\n        The response is either ServiceProviderAccessDeviceGetNativeTagsWithLogicListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderAccessDeviceGetPagedSortedListRequest", "tags": ["ServiceProvider"], "documentation": "Requests the list of service provider level access devices.\n        The response is either ServiceProviderAccessDeviceGetPagedSortedListResponse or ErrorResponse.\n        If no sortOrder is included, the response is sorted by Device Name ascending\n        by default.  If the responsePagingControl element is not provided, the paging startIndex\n        will be set to 1 by default, and the responsePageSize will be set to the maximum\n        responsePageSize by default.\n        Multiple search criteria are logically ANDed together unless the\n        searchCriteriaModeOr option is included. Then the search criteria are logically\n        ORed together.\n        The getVisualDeviceManagementAPIDevicesOnly element can only be set when CloudPBX is licenced.\n        If the getVisualDeviceManagementAPIDevicesOnly element is not set, all devices are returned with Visual Device Management API flag set to empty.\n        If the getVisualDeviceManagementAPIDevicesOnly element is set to true, only SIP devices supporting Visual Device Management API are returned.\n        If the getVisualDeviceManagementAPIDevicesOnly element is set to false, all SIP devices are returned with their current Visual Device Management API flag value.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "searchCriteriaDeviceName", "required": false, "array": true, "type": "SearchCriteriaDeviceName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDeviceMACAddress", "required": false, "array": true, "type": "SearchCriteriaDeviceMACAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AccessDeviceMACAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 12}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDeviceNetAddress", "required": false, "array": true, "type": "SearchCriteriaDeviceNetAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactDeviceType", "required": false, "array": true, "type": "SearchCriteriaExactDeviceType", "schema": [[{"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "searchCriteriaAccessDeviceVersion", "required": false, "array": true, "type": "SearchCriteriaAccessDeviceVersion", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserAgentHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "getVisualDeviceManagementAPIDevicesOnly", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"choice": [{"name": "sortByDeviceName", "required": true, "array": false, "type": "SortByDeviceName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDeviceType", "required": true, "array": false, "type": "SortByDeviceType", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDeviceNetAddress", "required": true, "array": false, "type": "SortByDeviceNetAddress", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDeviceMACAddress", "required": true, "array": false, "type": "SortByDeviceMACAddress", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]]}, {"name": "ServiceProviderAccessDeviceGetRequest24", "tags": ["ServiceProvider"], "documentation": "Requests the configuration of a specified service provider access device.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          deviceExternalId\n\n        The response is either ServiceProviderAccessDeviceGetResponse24 or ErrorResponse.", "type": "core:OCIRequest", "schema": [{"choice": [{"name": "deviceExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}, [{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]}, {"name": "ServiceProviderAccessDeviceGetUserListRequest21sp1", "tags": ["ServiceProvider"], "documentation": "Requests the list of users on a specified device.\n        The response is either ServiceProviderAccessDeviceGetUserListResponse21sp1 or ErrorResponse.\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          searchCriteriaAccessDeviceEndpointPrivateIdentity", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaLinePortUserPart", "required": false, "array": true, "type": "SearchCriteriaLinePortUserPart", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaLinePortDomain", "required": false, "array": true, "type": "SearchCriteriaLinePortDomain", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactEndpointType", "required": false, "array": false, "type": "SearchCriteriaExactEndpointType21sp1", "schema": [[{"name": "endpointType", "required": true, "array": false, "type": "EndpointType21sp1", "type_schema": "xs:token", "enum": ["Primary", "Shared Call Appearance", "Video Add On", "Public Service Identity", "Music On Hold Internal", "Flexible Seating Guest", "Mobility"]}]]}, {"name": "searchCriteriaExactUserType", "required": false, "array": false, "type": "SearchCriteriaExactUserType", "schema": [[{"name": "userType", "required": true, "array": false, "type": "UserType", "type_schema": "xs:token", "enum": ["Normal", "Auto Attendant", "BroadWorks Anywhere", "Call Center", "Collaborate Bridge", "Find-me/Follow-me", "Flexible Seating Host", "Group Paging", "Hunt Group", "Instant Group Call", "Meet-Me Conferencing", "Music On Hold", "Route Point", "Voice Messaging", "VoiceXML"]}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactPortNumber", "required": false, "array": false, "type": "SearchCriteriaExactPortNumber", "schema": [[{"name": "port", "required": true, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "searchCriteriaAccessDeviceEndpointPrivateIdentity", "required": false, "array": true, "type": "SearchCriteriaAccessDeviceEndpointPrivateIdentity", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AccessDeviceEndpointPrivateIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserHotlineContact", "required": false, "array": true, "type": "SearchCriteriaUserHotlineContact", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderAccessDeviceLinkDeviceListRequest", "tags": ["ServiceProvider"], "documentation": "Request to link one or more leaf devices to a service provider level tree device.\n        A tree device is a device associated with a device type that has the option\n        supportLinks set to \"Support Links from Devices\". Many leaf devices can be linked to it.\n        A leaf device is a device associated with a device type that has the option\n        supportLinks set to \"Support Link to Device\". It can be linked to only one tree device.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "leafDeviceKey", "required": true, "array": true, "type": "AccessDeviceKey", "schema": [[{"name": "serviceProviderId", "required": false, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": false, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "ServiceProviderAccessDeviceModifyRequest22", "tags": ["ServiceProvider"], "documentation": "Request to modify a specified service provider access device.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n         deviceExternalId", "type": "core:OCIRequest", "schema": [[{"name": "protocol", "required": false, "array": false, "type": "AccessDeviceProtocol", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "netAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": false, "array": false, "type": "Port1025", "type_schema": "xs:int", "minimum": 1025.0, "maximum": 65535.0}, {"name": "outboundProxyServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "stunServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "macAddress", "required": false, "array": false, "type": "AccessDeviceMACAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 12}, {"name": "serialNumber", "required": false, "array": false, "type": "AccessDeviceSerialNumber", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "AccessDeviceDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "physicalLocation", "required": false, "array": false, "type": "AccessDevicePhysicalLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "transportProtocol", "required": false, "array": false, "type": "ExtendedTransportProtocol", "type_schema": "xs:token", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, {"name": "useCustomUserNamePassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "accessDeviceCredentials", "required": false, "array": false, "type": "DeviceManagementUserNamePassword16", "schema": [[{"name": "userName", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "password", "required": true, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"choice": [{"name": "deviceExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}, [{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "ServiceProviderAccessDeviceModifyUserRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify attributes for line/ports assigned on the service provider device profile.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          privateIdentity", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "privateIdentity", "required": false, "array": false, "type": "AccessDeviceEndpointPrivateIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isPrimaryLinePort", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderAccessDeviceResetRequest", "tags": ["ServiceProvider"], "documentation": "Reset a specific service provider SIP device that supports the reset operation.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderAccessDeviceTagSetGetRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the custom configuration tag set defined at the access device.\n        The response is either ServiceProviderAccessDeviceTagSetGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderAccessDeviceTagSetModifyRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify a static configuration tag set.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "tagSetName", "required": false, "array": false, "type": "DeviceManagementTagSetName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderAccessDeviceUnlinkDeviceListRequest", "tags": ["ServiceProvider"], "documentation": "Request to unlink one or more leaf access devices from a tree device.\n        A leaf device is a device associated with a device type that has the option\n        supportLinks set to \"Support Link to Device\". It can be linked to only one tree device.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "leafDeviceKey", "required": true, "array": true, "type": "AccessDeviceKey", "schema": [[{"name": "serviceProviderId", "required": false, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": false, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "ServiceProviderAdminAddRequest14", "tags": ["ServiceProvider"], "documentation": "Add a service provider administrator.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "firstName", "required": false, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "lastName", "required": false, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "administratorType", "required": true, "array": false, "type": "ServiceProviderAdminType", "type_schema": "xs:token", "enum": ["Normal", "Customer", "Password Reset Only"]}]]}, {"name": "ServiceProviderAdminAlternateIdAddRequest", "tags": ["ServiceProvider"], "documentation": "Request to add an alternate admin Id to a service provider administrator.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "description", "required": false, "array": false, "type": "AlternateUserIdDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderAdminAlternateIdDeleteRequest", "tags": ["ServiceProvider"], "documentation": "Request to delete an alternate admin user id of a user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "ServiceProviderAdminAlternateIdGetListRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the admin id and the list of alternate admin ids of an admin.\n        The response is either ServiceProviderAdminAlternateIdGetListResponse or ErrorResponse.\n        The \"userId\" can be either the admin user Id or an alternate admin user Id.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "ServiceProviderAdminAlternateIdModifyRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify an alternate id of a service provider admin.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "newAlternateUserId", "required": false, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "description", "required": false, "array": false, "type": "AlternateUserIdDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderAdminDeleteRequest", "tags": ["ServiceProvider"], "documentation": "Delete a service provider administrator.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "ServiceProviderAdminGetListRequest14", "tags": ["ServiceProvider"], "documentation": "Get a list of service provider administrators.\n        The response is either a ServiceProviderAdminGetListResponse14 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderAdminGetPagedSortedListRequest", "tags": ["ServiceProvider"], "documentation": "Get a list of service provider administrators.\n        The response is either a ServiceProviderAdminGetPagedSortedListResponse or an ErrorResponse.\n        If no sortOrder is included, the response is sorted by Administrator ID ascending by default.\n        If the responsePagingControl element is not provided, the paging startIndex will be\n        set to 1 by default, and the responsePageSize will be set to the maximum\n        responsePageSize by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is\n        included. Then the search criteria are logically ORed together.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderServiceProviderAdminGetPagedSortedList", "schema": [{"choice": [{"name": "sortByAdminId", "required": true, "array": false, "type": "SortByAdminId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByAdminLastName", "required": true, "array": false, "type": "SortByAdminLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByAdminFirstName", "required": true, "array": false, "type": "SortByAdminFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaAdminId", "required": false, "array": true, "type": "SearchCriteriaAdminId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAdminLastName", "required": false, "array": true, "type": "SearchCriteriaAdminLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAdminFirstName", "required": false, "array": true, "type": "SearchCriteriaAdminFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactServiceProviderAdminType", "required": false, "array": true, "type": "SearchCriteriaExactServiceProviderAdminType", "schema": [[{"name": "type", "required": true, "array": false, "type": "ServiceProviderAdminType", "type_schema": "xs:token", "enum": ["Normal", "Customer", "Password Reset Only"]}]]}, {"name": "searchCriteriaLanguage", "required": false, "array": true, "type": "SearchCriteriaLanguage", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderAdminGetPolicyRequest20", "tags": ["ServiceProvider"], "documentation": "Requests the service provider administrator's policy settings.\n        The response is either ServiceProviderAdminGetPolicyResponse20 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "ServiceProviderAdminGetRequest22", "tags": ["ServiceProvider"], "documentation": "Get a service provider administrators profile.\n        The response is either a ServiceProviderAdminGetResponse22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "ServiceProviderAdministratorPasswordRulesGetRequest", "tags": ["ServiceProvider"], "documentation": "Requests the effective password rules setting for a service provider administrator\n        The response is either ServiceProviderAdministratorPasswordRulesGetResponse or\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderAdminModifyPolicyRequest14", "tags": ["ServiceProvider"], "documentation": "Request to modify the service provider administrator's policy settings.\n        The response is either SuccessResponse or ErrorResponse.\n        The networkPolicyAccess is only modified for the enterprise administrator.\n        The following elements are only used in AS data mode:\n            dialableCallerIDAccess\n            verifyTranslationAndroutingAccess", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "profileAccess", "required": false, "array": false, "type": "ServiceProviderAdminProfileAccess", "type_schema": "xs:token", "enum": ["Full", "Read-Only", "None"]}, {"name": "groupAccess", "required": false, "array": false, "type": "ServiceProviderAdminGroupAccess", "type_schema": "xs:token", "enum": ["Full", "Restricted from Adding or Removing Groups", "None"]}, {"name": "userAccess", "required": false, "array": false, "type": "ServiceProviderAdminUserAccess", "type_schema": "xs:token", "enum": ["Full", "Full Profile", "Read-Only Profile", "No Profile", "None"]}, {"name": "adminAccess", "required": false, "array": false, "type": "ServiceProviderAdminAdminAccess", "type_schema": "xs:token", "enum": ["Full", "Read-Only", "None"]}, {"name": "departmentAccess", "required": false, "array": false, "type": "ServiceProviderAdminDepartmentAccess", "type_schema": "xs:token", "enum": ["Full", "Read-Only", "None"]}, {"name": "accessDeviceAccess", "required": false, "array": false, "type": "ServiceProviderAdminAccessDeviceAccess", "type_schema": "xs:token", "enum": ["Full", "Associate User With Device", "Read-Only"]}, {"name": "phoneNumberExtensionAccess", "required": false, "array": false, "type": "ServiceProviderAdminPhoneNumberExtensionAccess", "type_schema": "xs:token", "enum": ["Full", "Assign To Services and Users", "Read-Only"]}, {"name": "callingLineIdNumberAccess", "required": false, "array": false, "type": "ServiceProviderAdminCallingLineIdNumberAccess", "type_schema": "xs:token", "enum": ["Full", "Read-Only"]}, {"name": "serviceAccess", "required": false, "array": false, "type": "ServiceProviderAdminServiceAccess", "type_schema": "xs:token", "enum": ["Full", "No Authorization", "Read-Only"]}, {"name": "servicePackAccess", "required": false, "array": false, "type": "ServiceProviderAdminServicePackAccess", "type_schema": "xs:token", "enum": ["Full", "None"]}, {"name": "sessionAdmissionControlAccess", "required": false, "array": false, "type": "ServiceProviderAdminSessionAdmissionControlAccess", "type_schema": "xs:token", "enum": ["Full", "Read-Only", "None"]}, {"name": "webBrandingAccess", "required": false, "array": false, "type": "ServiceProviderAdminWebBrandingAccess", "type_schema": "xs:token", "enum": ["Full", "None"]}, {"name": "officeZoneAccess", "required": false, "array": false, "type": "ServiceProviderAdminOfficeZoneAccess", "type_schema": "xs:token", "enum": ["Full", "Read-Only"]}, {"name": "communicationBarringAccess", "required": false, "array": false, "type": "ServiceProviderAdminCommunicationBarringAccess", "type_schema": "xs:token", "enum": ["Full", "Read-Only"]}, {"name": "networkPolicyAccess", "required": false, "array": false, "type": "EnterpriseAdminNetworkPolicyAccess", "type_schema": "xs:token", "enum": ["Full", "None"]}, {"name": "numberActivationAccess", "required": false, "array": false, "type": "EnterpriseAdminNumberActivationAccess", "type_schema": "xs:token", "enum": ["Full", "Read-Only", "None"]}, {"name": "dialableCallerIDAccess", "required": false, "array": false, "type": "ServiceProviderAdminDialableCallerIDAccess", "type_schema": "xs:token", "enum": ["Full", "Read-Only", "None"]}, {"name": "verifyTranslationAndRoutingAccess", "required": false, "array": false, "type": "ServiceProviderAdminVerifyTranslationAndRoutingAccess", "type_schema": "xs:token", "enum": ["Full", "None"]}]]}, {"name": "ServiceProviderAdminModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify a service provider administrator.\n        Since old password is not specified here, any password rule related to old password\n        does not apply.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "firstName", "required": false, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "lastName", "required": false, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderAnswerConfirmationGetRequest16", "tags": ["ServiceProvider"], "documentation": "Get a service provider or enterprise's answer confirmation settings.\n        The response is either a ServiceProviderAnswerConfirmationGetResponse16 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderAnswerConfirmationModifyRequest16", "tags": ["ServiceProvider"], "documentation": "Modify a service provider or enterprise's answer confirmation settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "announcementMessageSelection", "required": false, "array": false, "type": "AnswerConfirmationAnnouncementSelection", "type_schema": "xs:token", "enum": ["System", "Custom"]}, {"name": "confirmationMessageAudioFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "confirmationTimoutSeconds", "required": false, "array": false, "type": "AnswerConfirmationTimeoutSeconds", "type_schema": "xs:int", "minimum": 2.0, "maximum": 30.0}]]}, {"name": "ServiceProviderApplicationServerSetGetRequest", "tags": ["ServiceProvider"], "documentation": "Get the Application Server set for a service provider or enterprise.\n        The response is either a ServiceProviderApplicationServerSetGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderApplicationServerSetModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify the Application Server set assigned to the service provider or enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "applicationServerSetName", "required": false, "array": false, "type": "ApplicationServerSetName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderCallProcessingGetPolicyRequest22V3", "tags": ["ServiceProvider"], "documentation": "Request the service provider level data associated with Call Processing\n        Policy. The response is either a\n        ServiceProviderCallProcessingGetPolicyResponse22V3 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderCallProcessingModifyPolicyRequest15", "tags": ["ServiceProvider"], "documentation": "Modify the service provider level data associated with Call Processing\n        Policy. The response is either a SuccessResponse or an ErrorResponse.\n         The following elements are only used in AS data mode:\n           useServiceProviderDCLIDSetting\n           enableDialableCallerID\n           allowConfigurableCLIDForRedirectingIdentity\n           enterpriseCallsCLIDPolicy\n           groupCallsCLIDPolicy\n        The following elements are only used in AS data mode and ignored in XS data mode:\n           enablePhoneListLookup\n           useMaxConcurrentTerminatingAlertingRequests\n           maxConcurrentTerminatingAlertingRequests\n           includeRedirectionsInMaximumNumberOfConcurrentCalls\n           useUserPhoneNumberForGroupCallsWhenInternalCLIDUnavailable\n           useUserPhoneNumberForEnterpriseCallsWhenInternalCLIDUnavailable\n           allowMobileDNForRedirectingIdentity\n           enableGatewayRoutePolicy\n           networkCallsGatewayRouteIdentity\n           networkURLCallsGatewayRouteIdentity\n           emergencyCallsGatewayRouteIdentity\n           repairCallsGatewayRouteIdentity\n           callTypingErrorsGatewayRouteIdentity\n\n        The following elements are only used in XS data mode and ignored in AS data mode:\n           routeOverrideDomain\n           routeOverridePrefix", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useServiceProviderDCLIDSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMaxSimultaneousCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxSimultaneousCalls", "required": false, "array": false, "type": "CallProcessingMaxSimultaneousCalls19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999999.0}, {"name": "useMaxSimultaneousVideoCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxSimultaneousVideoCalls", "required": false, "array": false, "type": "CallProcessingMaxSimultaneousCalls19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999999.0}, {"name": "useMaxCallTimeForAnsweredCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxCallTimeForAnsweredCallsMinutes", "required": false, "array": false, "type": "CallProcessingMaxCallTimeForAnsweredCallsMinutes16", "type_schema": "xs:int", "minimum": 3.0, "maximum": 2880.0}, {"name": "useMaxCallTimeForUnansweredCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxCallTimeForUnansweredCallsMinutes", "required": false, "array": false, "type": "CallProcessingMaxCallTimeForUnansweredCallsMinutes19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2880.0}, {"name": "mediaPolicySelection", "required": false, "array": false, "type": "MediaPolicySelection", "type_schema": "xs:token", "enum": ["Use Uncompressed Codec", "Use Supported Media Set", "No Restrictions"]}, {"name": "supportedMediaSetName", "required": false, "array": false, "type": "MediaSetName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "networkUsageSelection", "required": false, "array": false, "type": "NetworkUsageSelection", "type_schema": "xs:token", "enum": ["Force All Calls", "Force All Except Extension and Location Calls", "Do Not Force Enterprise and Group Calls"]}, {"name": "enforceGroupCallingLineIdentityRestriction", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowEnterpriseGroupCallTypingForPrivateDialingPlan", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowEnterpriseGroupCallTypingForPublicDialingPlan", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "overrideCLIDRestrictionForPrivateCallCategory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useEnterpriseCLIDForPrivateCallCategory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableEnterpriseExtensionDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enforceEnterpriseCallingLineIdentityRestriction", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSettingLevel", "required": false, "array": false, "type": "ServiceProviderConferenceURISettingLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider"]}, {"name": "conferenceURI", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useMaxConcurrentRedirectedCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxConcurrentRedirectedCalls", "required": false, "array": false, "type": "CallProcessingMaxConcurrentRedirectedCalls19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999999.0}, {"name": "useMaxFindMeFollowMeDepth", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxFindMeFollowMeDepth", "required": false, "array": false, "type": "CallProcessingMaxFindMeFollowMeDepth19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 100.0}, {"name": "maxRedirectionDepth", "required": false, "array": false, "type": "CallProcessingMaxRedirectionDepth19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 100.0}, {"name": "useMaxConcurrentFindMeFollowMeInvocations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxConcurrentFindMeFollowMeInvocations", "required": false, "array": false, "type": "CallProcessingMaxConcurrentFindMeFollowMeInvocations19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999999.0}, {"name": "clidPolicy", "required": false, "array": false, "type": "CLIDPolicy", "type_schema": "xs:token", "enum": ["Use DN", "Use Configurable CLID"]}, {"name": "emergencyClidPolicy", "required": false, "array": false, "type": "CLIDPolicy", "type_schema": "xs:token", "enum": ["Use DN", "Use Configurable CLID"]}, {"name": "allowAlternateNumbersForRedirectingIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableDialableCallerID", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "blockCallingNameForExternalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowConfigurableCLIDForRedirectingIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enterpriseCallsCLIDPolicy", "required": false, "array": false, "type": "EnterpriseInternalCallsCLIDPolicy", "type_schema": "xs:token", "enum": ["Use Extension", "Use Location Code plus Extension", "Use External Calls Policy"]}, {"name": "groupCallsCLIDPolicy", "required": false, "array": false, "type": "EnterpriseInternalCallsCLIDPolicy", "type_schema": "xs:token", "enum": ["Use Extension", "Use Location Code plus Extension", "Use External Calls Policy"]}, {"name": "enablePhoneListLookup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMaxConcurrentTerminatingAlertingRequests", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxConcurrentTerminatingAlertingRequests", "required": false, "array": false, "type": "CallProcessingMaxConcurrentTerminatingAlertingRequests", "type_schema": "xs:int", "minimum": 1.0, "maximum": 50.0}, {"name": "includeRedirectionsInMaximumNumberOfConcurrentCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useUserPhoneNumberForGroupCallsWhenInternalCLIDUnavailable", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useUserPhoneNumberForEnterpriseCallsWhenInternalCLIDUnavailable", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "routeOverrideDomain", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "routeOverridePrefix", "required": false, "array": false, "type": "RouteOverridePrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "allowMobileDNForRedirectingIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableGatewayRoutePolicy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkCallsGatewayRouteIdentity", "required": false, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "networkURLCallsGatewayRouteIdentity", "required": false, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "emergencyCallsGatewayRouteIdentity", "required": false, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "repairCallsGatewayRouteIdentity", "required": false, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callTypingErrorsGatewayRouteIdentity", "required": false, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderCommunicationBarringCriteriaAssignListRequest", "tags": ["ServiceProvider"], "documentation": "Assign a list of Communication Barring Criteria to a service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "criteriaName", "required": false, "array": true, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCommunicationBarringCriteriaGetAssignedListRequest", "tags": ["ServiceProvider"], "documentation": "Get a list of Communication Barring Criteria assigned to a service provider.\n        The response is either a ServiceProviderCommunicationBarringCriteriaGetAssignedListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderCommunicationBarringCriteriaUnassignListRequest", "tags": ["ServiceProvider"], "documentation": "Unassign a list of Communication Barring Criteria from a service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "criteriaName", "required": false, "array": true, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCommunicationBarringDigitPatternCriteriaAddRequest", "tags": ["ServiceProvider"], "documentation": "Add a new Communication Barring Digit Pattern Criteria.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "description", "required": false, "array": false, "type": "DigitPatternCriteriaDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "matchDigitPattern", "required": false, "array": true, "type": "DigitPattern", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}]]}, {"name": "ServiceProviderCommunicationBarringDigitPatternCriteriaDeleteRequest", "tags": ["ServiceProvider"], "documentation": "Delete an existing Communication Barring Digit Pattern Criteria.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCommunicationBarringDigitPatternCriteriaGetListRequest", "tags": ["ServiceProvider"], "documentation": "Get the list of all Digit Pattern Criteria defined for the service provider.\n        The response is either a ServiceProviderCommunicationBarringDigitPatternCriteriaGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderCommunicationBarringDigitPatternCriteriaGetPatternListRequest", "tags": ["ServiceProvider"], "documentation": "Get an existing Digit Pattern Criteria.\n        The response is either a ServiceProviderCommunicationBarringDigitPatternCriteriaGetPatternListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaDigitPattern", "required": false, "array": true, "type": "SearchCriteriaDigitPattern", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DigitPattern", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderCommunicationBarringDigitPatternCriteriaGetRequest", "tags": ["ServiceProvider"], "documentation": "Get an existing Digit Pattern Criteria.\n        The response is either a ServiceProviderCommunicationBarringDigitPatternCriteriaGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCommunicationBarringDigitPatternCriteriaModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify an existing Communication Barring Digit Pattern Criteria.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "newName", "required": false, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "description", "required": false, "array": false, "type": "DigitPatternCriteriaDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "addMatchDigitPattern", "required": false, "array": true, "type": "DigitPattern", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}, {"name": "deleteMatchDigitPattern", "required": false, "array": true, "type": "DigitPattern", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}]]}, {"name": "ServiceProviderCommunicationBarringIncomingCriteriaAssignListRequest", "tags": ["ServiceProvider"], "documentation": "Assign a list of Communication Barring Incoming Criteria to a service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "criteriaName", "required": true, "array": true, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCommunicationBarringIncomingCriteriaGetAssignedListRequest", "tags": ["ServiceProvider"], "documentation": "Get a list of Communication Barring Incoming Criteria assigned to a service provider.\n        The response is either a ServiceProviderCommunicationBarringIncomingCriteriaGetAssignedListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderCommunicationBarringIncomingCriteriaUnassignListRequest", "tags": ["ServiceProvider"], "documentation": "Unassign a list of Communication Barring Incoming Criteria from a service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "criteriaName", "required": true, "array": true, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCommunicationBarringProfileAddRequest19sp1", "tags": ["ServiceProvider"], "documentation": "Add a new Communication Barring Profile.\n        The priorities for OriginatingRules, RedirectingRules, CallMeNowRules and IncomingRules are requantized to consecutive integers as part of the add.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following elements are only used in AS data mode:\n           callMeNowDefaultAction, use value \"Block\" in XS data mode\n           callMeNowDefaultCallTimeout\n           callMeNowRule\n           applyToAttendedCallTransfers, use value \"false\" in XS data mode", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CommunicationBarringProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "description", "required": false, "array": false, "type": "CommunicationBarringProfileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "originatingDefaultAction", "required": true, "array": false, "type": "CommunicationBarringOriginatingAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block", "Authorization Code", "Authorization Code Timed", "Treatment", "Transfer"]}, {"name": "originatingDefaultTreatmentId", "required": false, "array": false, "type": "TreatmentId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "originatingDefaultTransferNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "originatingDefaultCallTimeout", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "originatingRule", "required": false, "array": true, "type": "ServiceProviderCommunicationBarringHierarchicalOriginatingRule", "schema": [[{"name": "action", "required": true, "array": false, "type": "CommunicationBarringOriginatingAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block", "Authorization Code", "Authorization Code Timed", "Treatment", "Transfer"]}, {"name": "treatmentId", "required": false, "array": false, "type": "TreatmentId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "transferNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callTimeoutSeconds", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "priority", "required": true, "array": false, "type": "CommunicationBarringCriteriaPriority", "type_schema": "xs:float", "minimum": 0.0, "maximum": 1000000.0}, {"choice": [{"name": "criteria", "required": true, "array": false, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "digitPatternCriteria", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}, {"name": "redirectingDefaultAction", "required": true, "array": false, "type": "CommunicationBarringRedirectingAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block"]}, {"name": "redirectingDefaultCallTimeout", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "redirectingRule", "required": false, "array": true, "type": "ServiceProviderCommunicationBarringHierarchicalRedirectingRule", "schema": [[{"name": "action", "required": true, "array": false, "type": "CommunicationBarringRedirectingAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block"]}, {"name": "callTimeoutSeconds", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "priority", "required": true, "array": false, "type": "CommunicationBarringCriteriaPriority", "type_schema": "xs:float", "minimum": 0.0, "maximum": 1000000.0}, {"choice": [{"name": "criteria", "required": true, "array": false, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "digitPatternCriteria", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}, {"name": "callMeNowDefaultAction", "required": true, "array": false, "type": "CommunicationBarringCallMeNowAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block"]}, {"name": "callMeNowDefaultCallTimeout", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "callMeNowRule", "required": false, "array": true, "type": "ServiceProviderCommunicationBarringHierarchicalCallMeNowRule", "schema": [[{"name": "action", "required": true, "array": false, "type": "CommunicationBarringCallMeNowAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block"]}, {"name": "callTimeoutSeconds", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "priority", "required": true, "array": false, "type": "CommunicationBarringCriteriaPriority", "type_schema": "xs:float", "minimum": 0.0, "maximum": 1000000.0}, {"choice": [{"name": "criteria", "required": true, "array": false, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "digitPatternCriteria", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}, {"name": "incomingDefaultAction", "required": true, "array": false, "type": "CommunicationBarringIncomingAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block"]}, {"name": "incomingDefaultCallTimeout", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "incomingRule", "required": false, "array": true, "type": "CommunicationBarringIncomingRule19sp1", "schema": [[{"name": "action", "required": true, "array": false, "type": "CommunicationBarringIncomingAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block"]}, {"name": "callTimeoutSeconds", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "priority", "required": true, "array": false, "type": "CommunicationBarringCriteriaPriority", "type_schema": "xs:float", "minimum": 0.0, "maximum": 1000000.0}, {"choice": [{"name": "digitPatternCriteria", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "incomingCriteria", "required": true, "array": false, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}, {"name": "becomeDefault", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "applyToAttendedCallTransfers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderCommunicationBarringProfileDeleteRequest", "tags": ["ServiceProvider"], "documentation": "Deletes an existing Communication Barring Profile.  Optionally, a new default profile can be chosen if the current default profile is being deleted.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CommunicationBarringProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "defaultProfile", "required": false, "array": false, "type": "CommunicationBarringProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCommunicationBarringProfileGetAssignedGroupListRequest", "tags": ["ServiceProvider"], "documentation": "Get a list of groups within a service provider that have a given\n        Communication Barring Profile assigned.\n        The response is either a ServiceProviderCommunicationBarringProfileGetAssignedGroupListResponse\n        or an ErorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profile", "required": true, "array": false, "type": "CommunicationBarringProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupName", "required": false, "array": true, "type": "SearchCriteriaGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderCommunicationBarringProfileGetCriteriaUsageListRequest", "tags": ["ServiceProvider"], "documentation": "Get a list of Communication Barring profiles within a service provider that have a given Communication Barring Criteria assigned.\n        The response is either a ServiceProviderCommunicationBarring ProfileGetCriteriaUsageListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "criteriaName", "required": true, "array": false, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCommunicationBarringProfileGetDigitPatternCriteriaUsageListRequest", "tags": ["ServiceProvider"], "documentation": "Get the list of Profiles that use a specific Digit Pattern Criteria.\n        The response is either a ServiceProviderCommunicationBarringProfileGetDigitPatternCriteriaUsageListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCommunicationBarringProfileGetIncomingCriteriaUsageListRequest", "tags": ["ServiceProvider"], "documentation": "Get a list of Communication Barring profiles within a service provider that have a given Communication Barring Incoming Criteria assigned.\n        The response is either a ServiceProviderCommunicationBarring ProfileGetIncomingCriteriaUsageListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "criteriaName", "required": true, "array": false, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCommunicationBarringProfileGetListRequest", "tags": ["ServiceProvider"], "documentation": "Get the list of all Communication Barring Profiles.\n        The response is either a\n        ServiceProviderCommunicationBarringProfileGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderCommunicationBarringProfileGetRequest19sp1V2", "tags": ["ServiceProvider"], "documentation": "Get an existing Communication Barring Profile.\n        The response is either a ServiceProviderCommunicationBarringProfileGetResponse19sp1V2\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CommunicationBarringProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCommunicationBarringProfileModifyDefaultRequest", "tags": ["ServiceProvider"], "documentation": "Modifies the default Communication Barring Profile of a Service Provider.  If a default has been previously selected, this command will swap the default profile with the profile provided.  Selecting a nil profile will cause the service provider to not have a default Communicaton Barring Profile.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CommunicationBarringProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCommunicationBarringProfileModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify an existing Communication Barring Profile.\n        The priorities for OriginatingRules, RedirectingRules, CallMeNowRules and IncomingRules are requantized to consecutive integers as part of the modify.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following elements are only used in AS data mode:\n           callMeNowDefaultAction\n           callMeNowDefaultCallTimeout\n           callMeNowRule\n           applyToAttendedCallTransfers", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CommunicationBarringProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "newName", "required": false, "array": false, "type": "CommunicationBarringProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "description", "required": false, "array": false, "type": "CommunicationBarringProfileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "originatingDefaultAction", "required": false, "array": false, "type": "CommunicationBarringOriginatingAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block", "Authorization Code", "Authorization Code Timed", "Treatment", "Transfer"]}, {"name": "originatingDefaultTreatmentId", "required": false, "array": false, "type": "TreatmentId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "originatingDefaultTransferNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "originatingDefaultCallTimeout", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "originatingRule", "required": false, "array": false, "type": "ServiceProviderReplacementCommunicationBarringHierarchicalOriginatingRuleList", "schema": [[{"name": "rule", "required": true, "array": true, "type": "ServiceProviderCommunicationBarringHierarchicalOriginatingRule", "schema": [[{"name": "action", "required": true, "array": false, "type": "CommunicationBarringOriginatingAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block", "Authorization Code", "Authorization Code Timed", "Treatment", "Transfer"]}, {"name": "treatmentId", "required": false, "array": false, "type": "TreatmentId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "transferNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callTimeoutSeconds", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "priority", "required": true, "array": false, "type": "CommunicationBarringCriteriaPriority", "type_schema": "xs:float", "minimum": 0.0, "maximum": 1000000.0}, {"choice": [{"name": "criteria", "required": true, "array": false, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "digitPatternCriteria", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}]]}, {"name": "redirectingDefaultAction", "required": false, "array": false, "type": "CommunicationBarringRedirectingAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block"]}, {"name": "redirectingDefaultCallTimeout", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "redirectingRule", "required": false, "array": false, "type": "ServiceProviderReplacementCommunicationBarringHierarchicalRedirectingRuleList", "schema": [[{"name": "rule", "required": true, "array": true, "type": "ServiceProviderCommunicationBarringHierarchicalRedirectingRule", "schema": [[{"name": "action", "required": true, "array": false, "type": "CommunicationBarringRedirectingAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block"]}, {"name": "callTimeoutSeconds", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "priority", "required": true, "array": false, "type": "CommunicationBarringCriteriaPriority", "type_schema": "xs:float", "minimum": 0.0, "maximum": 1000000.0}, {"choice": [{"name": "criteria", "required": true, "array": false, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "digitPatternCriteria", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}]]}, {"name": "callMeNowDefaultAction", "required": false, "array": false, "type": "CommunicationBarringCallMeNowAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block"]}, {"name": "callMeNowDefaultCallTimeout", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "callMeNowRule", "required": false, "array": false, "type": "ServiceProviderReplacementCommunicationBarringHierarchicalCallMeNowRuleList", "schema": [[{"name": "rule", "required": true, "array": true, "type": "ServiceProviderCommunicationBarringHierarchicalCallMeNowRule", "schema": [[{"name": "action", "required": true, "array": false, "type": "CommunicationBarringCallMeNowAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block"]}, {"name": "callTimeoutSeconds", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "priority", "required": true, "array": false, "type": "CommunicationBarringCriteriaPriority", "type_schema": "xs:float", "minimum": 0.0, "maximum": 1000000.0}, {"choice": [{"name": "criteria", "required": true, "array": false, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "digitPatternCriteria", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}]]}, {"name": "incomingDefaultAction", "required": false, "array": false, "type": "CommunicationBarringIncomingAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block"]}, {"name": "incomingDefaultCallTimeout", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "incomingRule", "required": false, "array": false, "type": "ReplacementCommunicationBarringIncomingRuleList19sp1", "schema": [[{"name": "rule", "required": true, "array": true, "type": "CommunicationBarringIncomingRule19sp1", "schema": [[{"name": "action", "required": true, "array": false, "type": "CommunicationBarringIncomingAction", "type_schema": "xs:token", "enum": ["Allow", "Allow Timed", "Block"]}, {"name": "callTimeoutSeconds", "required": false, "array": false, "type": "CommunicationBarringTimeoutSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 86400.0}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "priority", "required": true, "array": false, "type": "CommunicationBarringCriteriaPriority", "type_schema": "xs:float", "minimum": 0.0, "maximum": 1000000.0}, {"choice": [{"name": "digitPatternCriteria", "required": true, "array": false, "type": "DigitPatternCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "incomingCriteria", "required": true, "array": false, "type": "CommunicationBarringCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}]]}, {"name": "becomeDefault", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "applyToAttendedCallTransfers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderConsolidatedAddRequest", "tags": ["ServiceProvider"], "documentation": "Add a service provider or enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          serviceProviderExtenalId\n\n        The following elements are only used in Amplify data mode and ignored in AS and XS data mode:\n        servicePolicy,\n        callProcessingSliceId,\n        provisioningSliceId,\n        subscriberPartition.\n        When the callProcessingSliceId or provisioningSliceId is not specified in the AmplifyDataMode,\n        the default slice Id is assigned to the service provider.\n        Only Provisioning admin and above can change the callProcessingSliceId,  provisioningSliceId, andsubscriberPartition.\n\n        The following elements are only used in Amplify and XS data mode and ignored in AS data mode:\n        preferredDataCenter.\n        Only Provisioning admin and above can change the preferredDataCenter.\n\n        The following data elements are only used in AS data mode:\n          resellerId\n          resellerName\n\n\t    The following behavior is only applicable in CloudPBX:\n\t      - when new resellerId, that does not exist in the system, is specified, the new\n\t        Reseller is created the given resellerId and resellerName (if provided) and enterprise/Service Provider\n\t        is moved to the newly created Reseller.\n\n\t    resellerName element is ignored if the reseller the service provider is being moved to \talready exists.\n\n        The following elements are optional for the service provider. If the elements are included,\n        they will be either added, authorized, or modified on the service provider. Should any of the\n        following elements be rejected to due existing system settings, the service provider will not\n        be added and the response will be an ErrorResponse:\n          domain\n          admin\n          groupServiceAuthorization\n          userServiceAuthorization\n          servicePack\n          phoneNumber\n          dnRange\n          routingProfile\n          meetMeConferencingAllocatedPorts\n          trunkGroupMaxActiveCalls\n          trunkGroupBurstingMaxActiveCalls\n          voiceMessagingGroupSettings\n          voiceMessagingVoicePortalScope\n\n        When a group or user service is included that is not activated or is not licensed,\n        the response will be an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": false, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceProviderExternalId", "required": false, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}, {"name": "defaultDomain", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "serviceProviderName", "required": false, "array": false, "type": "ServiceProviderName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "supportEmail", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "contact", "required": false, "array": false, "type": "Contact", "schema": [[{"name": "contactName", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 30, "type_schema": "xs:token"}, {"name": "contactNumber", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 30, "type_schema": "xs:token"}, {"name": "contactEmail", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "address", "required": false, "array": false, "type": "StreetAddress", "schema": [[{"name": "addressLine1", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "addressLine2", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "city", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvince", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvinceDisplayName", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "zipOrPostalCode", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "country", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}]]}, {"name": "servicePolicy", "required": false, "array": false, "type": "ServicePolicyName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "callProcessingSliceId", "required": false, "array": false, "type": "SliceId", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "provisioningSliceId", "required": false, "array": false, "type": "SliceId", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "subscriberPartition", "required": false, "array": false, "type": "SubscriberPartition", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "preferredDataCenter", "required": false, "array": false, "type": "DataCenter", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "resellerId", "required": false, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "resellerName", "required": false, "array": false, "type": "ResellerName22", "type_schema": "xs:token", "minLength": 1, "maxLength": 320}, {"name": "domain", "required": false, "array": true, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "admin", "required": false, "array": true, "type": "ServiceProviderAdmin", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "firstName", "required": false, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "lastName", "required": false, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "administratorType", "required": true, "array": false, "type": "ServiceProviderAdminType", "type_schema": "xs:token", "enum": ["Normal", "Customer", "Password Reset Only"]}]]}, {"name": "groupServiceAuthorization", "required": false, "array": true, "type": "GroupServiceAuthorization", "schema": [[{"name": "serviceName", "required": true, "array": false, "type": "GroupService", "type_schema": "xs:token", "enum": ["Account/Authorization Codes", "Auto Attendant", "Auto Attendant - Video", "Auto Attendant - Standard", "Call Capacity Management", "Call Park", "Call Pickup", "City-Wide Centrex", "Custom Ringback Group", "Custom Ringback Group - Video", "Emergency Zones", "Enhanced Outgoing Calling Plan", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Incoming Calling Plan", "Instant Group Call", "Intercept Group", "Inventory Report", "LDAP Integration", "Meet-Me Conferencing", "Music On Hold", "Music On Hold - Video", "Outgoing Calling Plan", "Preferred Carrier Group", "Route Point", "Series Completion", "Service Scripts Group", "Trunk Group", "Voice Messaging Group", "VoiceXML"]}, {"choice": [{"name": "authorizedQuantity", "required": true, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}, {"name": "unauthorized", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]}]]}, {"name": "userServiceAuthorization", "required": false, "array": true, "type": "UserServiceAuthorization", "schema": [[{"name": "serviceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"choice": [{"name": "authorizedQuantity", "required": true, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}, {"name": "unauthorized", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]}]]}, {"name": "servicePack", "required": false, "array": true, "type": "ServicePack", "schema": [[{"name": "servicePackName", "required": true, "array": false, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "servicePackDescription", "required": false, "array": false, "type": "ServicePackDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "isAvailableForUse", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "servicePackQuantity", "required": true, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}, {"name": "serviceName", "required": false, "array": true, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}]]}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "dnRange", "required": false, "array": true, "type": "DNRange", "schema": [[{"name": "minPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "maxPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "routingProfile", "required": false, "array": false, "type": "RoutingProfile", "type_schema": "xs:token", "minLength": 4, "maxLength": 12}, {"name": "meetMeConferencingAllocatedPorts", "required": false, "array": false, "type": "MeetMeConferencingConferencePorts", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 0.0, "maximum": 999999.0, "type_schema": "xs:int"}]}]}, {"name": "trunkGroupMaxActiveCalls", "required": false, "array": false, "type": "UnboundedNonNegativeInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 0.0, "type_schema": "xs:int"}]}]}, {"name": "trunkGroupBurstingMaxActiveCalls", "required": false, "array": false, "type": "UnboundedNonNegativeInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 0.0, "type_schema": "xs:int"}]}]}, {"name": "voiceMessagingGroupSettings", "required": false, "array": false, "type": "ServiceProviderVoiceMessagingGroupSettingsAdd", "schema": [[{"name": "deliveryFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "notificationFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "voicePortalLockoutFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "useSystemDefaultDeliveryFromAddress", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSystemDefaultNotificationFromAddress", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSystemDefaultVoicePortalLockoutFromAddress", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "voiceMessagingGroupVoicePortalScope", "required": false, "array": false, "type": "ServiceProviderVoicePortalScope", "type_schema": "xs:token", "enum": ["Group", "Service Provider"]}, {"choice": [{"name": "isEnterprise", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useCustomRoutingProfile", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]}]]}, {"name": "ServiceProviderCPEConfigRebuildConfigFileRequest", "tags": ["ServiceProvider"], "documentation": "Rebuild the service provider default config file for the specified device type.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "force", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderCPEConfigRebuildDeviceConfigFileRequest", "tags": ["ServiceProvider"], "documentation": "Rebuild the config file for a specified device.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "force", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderCPEConfigReorderDeviceLinePortsRequest", "tags": ["ServiceProvider"], "documentation": "Reorder the lines of a Service Provider device. You can not add or delete line ports, only\n        re-ordering the list is allowed. The ordered list of line ports can be obtained\n        with the ServiceProviderAccessDeviceGetRequest command.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "orderedLinePortList", "required": true, "array": true, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "ServiceProviderCPEConfigResetDeviceRequest", "tags": ["ServiceProvider"], "documentation": "Reset a specific service provider or enterprise device.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "force", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderCPEConfigResetDeviceTypeRequest", "tags": ["ServiceProvider"], "documentation": "Reset all the devices of the specified device type in a service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderCPEConfigSetConfigFileRequest", "tags": ["ServiceProvider"], "documentation": "Request to set a new service provider default configuration file for a device type.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        When the element configFile is set to nil, the configuration file defined\n        at the parent level is used.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "configFile", "required": true, "array": false, "type": "FileResource", "schema": [[{"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "fileContent", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "ServiceProviderDeleteRequest", "tags": ["ServiceProvider"], "documentation": "Delete a service provider or enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderDeviceActivationPolicyGetRequest", "tags": ["ServiceProvider"], "documentation": "Request the Device Activation policy of a service provider or an enterprise.\n        The response is either a ServiceProviderDeviceActivationPolicyGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderDeviceActivationPolicyModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify the Device Activation policy of a service provider or an enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useServiceProviderSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowActivationCodeRequestByUser", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sendActivationCodeInEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderDeviceManagementEventGetListRequest22", "tags": ["ServiceProvider"], "documentation": "Request device management's events for a specific queue.\n        It is possible to restrict the number of rows returned using\n        responseSizeLimit.\n        If eventQueueType is not specified, the events from all the\n        event queues are returned.\n        The response is either a ServiceProviderDeviceManagementEventGetListResponse22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "eventQueueType", "required": false, "array": false, "type": "DeviceManagementEventQueueType", "type_schema": "xs:token", "enum": ["Completed", "In Progress Or Pending"]}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaExactDeviceManagementEventStatusInProgressOrPending", "required": false, "array": false, "type": "SearchCriteriaExactDeviceManagementEventStatusInProgressOrPending", "schema": [[{"name": "dmEventStatusInProgressOrPending", "required": true, "array": false, "type": "DeviceManagementEventStatusInProgressOrPending", "type_schema": "xs:token", "enum": ["Pending", "Queued", "In Progress", "Process On Other Host", "Stale"]}]]}, {"name": "searchCriteriaExactDeviceManagementEventStatusCompleted", "required": false, "array": false, "type": "SearchCriteriaExactDeviceManagementEventStatusCompleted", "schema": [[{"name": "dmEventStatusCompleted", "required": true, "array": false, "type": "DeviceManagementEventStatusCompleted", "type_schema": "xs:token", "enum": ["Canceled", "Completed"]}]]}, {"name": "searchCriteriaExactDeviceManagementEventAction", "required": false, "array": false, "type": "SearchCriteriaExactDeviceManagementEventAction", "schema": [[{"name": "dmEventAction", "required": true, "array": false, "type": "DeviceManagementEventAction", "type_schema": "xs:token", "enum": ["Delete", "Download", "Rebuild", "Reset", "Upload"]}]]}, {"name": "searchCriteriaExactDeviceManagementEventLevel", "required": false, "array": false, "type": "SearchCriteriaExactDeviceManagementEventLevel", "schema": [[{"name": "dmEventLevel", "required": true, "array": false, "type": "DeviceManagementEventLevel", "type_schema": "xs:token", "enum": ["Device", "Device Type", "Device Type Group", "Group", "User", "Device Type Service Provider", "Service Provider"]}]]}, {"name": "searchCriteriaExactDeviceManagementEventType", "required": false, "array": false, "type": "SearchCriteriaExactDeviceManagementEventType", "schema": [[{"name": "dmEventType", "required": true, "array": false, "type": "DeviceManagementEventType", "type_schema": "xs:token", "enum": ["Automatic", "Manual"]}]]}, {"name": "searchCriteriaDeviceManagementEventAdditionalInfo", "required": false, "array": true, "type": "SearchCriteriaDeviceManagementEventAdditionalInfo", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DeviceManagementEventAdditionalInfo", "type_schema": "xs:token", "minLength": 0, "maxLength": 256}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDeviceManagementEventLoginId", "required": false, "array": true, "type": "SearchCriteriaDeviceManagementEventLoginId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderDeviceManagementGetAccessDeviceCountForDeviceTypeServiceProviderRequest", "tags": ["ServiceProvider"], "documentation": "Request the number of access device of a particular device type and service provider.\n        If countOnlyResetSupportedDevice is true, count only access devices if the device type supports reset.\n        By default unmanaged device types are not allowed and devices are counted only if their device type supports Device Management.\n        An error is returned if deviceType is specified but does not support device management.\n        When allowUnmanagedDeviceType is true, unmanaged device type will be counted and a successful response is returned.\n        The response is either ServiceProviderDeviceManagementGetAccessDeviceCountForDeviceTypeServiceProviderResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "countOnlyResetSupportedDevice", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowUnmanagedDeviceType", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderDeviceManagementInProgressAndPendingEventCancelRequest", "tags": ["ServiceProvider"], "documentation": "Cancel pending and in progress events.  A list of individual events can\n        be canceled.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "eventId", "required": true, "array": true, "type": "xs:int", "type_schema": "xs:int"}]]}, {"name": "ServiceProviderDeviceProfileAuthenticationPasswordRulesGetRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the service provider level device profile authentication password rule settings.\n        The response is either a ServiceProviderDeviceProfileAuthenticationPasswordRulesGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderDeviceProfileAuthenticationPasswordRulesModifyRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify the service provider level device profile authentication password rule settings. The useServiceProviderSettings element can only be modified by a system administrator or a provisioning administrator.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useServiceProviderSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disallowAuthenticationName", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disallowOldPassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disallowReversedOldPassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "restrictMinDigits", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minDigits", "required": false, "array": false, "type": "PasswordMinDigits", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "restrictMinUpperCaseLetters", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minUpperCaseLetters", "required": false, "array": false, "type": "PasswordMinUpperCaseLetters", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "restrictMinLowerCaseLetters", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minLowerCaseLetters", "required": false, "array": false, "type": "PasswordMinLowerCaseLetters", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "restrictMinNonAlphanumericCharacters", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minNonAlphanumericCharacters", "required": false, "array": false, "type": "PasswordMinNonAlphanumericCharacters", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "minLength", "required": false, "array": false, "type": "PasswordMinLength", "type_schema": "xs:int", "minimum": 3.0, "maximum": 40.0}, {"name": "sendPermanentLockoutNotification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "permanentLockoutNotifyEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "deviceProfileAuthenticationLockoutType", "required": false, "array": false, "type": "AuthenticationLockoutType", "type_schema": "xs:token", "enum": ["None", "Temporary", "Temporary Then Permanent"]}, {"name": "deviceProfileTemporaryLockoutThreshold", "required": false, "array": false, "type": "AuthenticationTemporaryLockoutThreshold", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "deviceProfileWaitAlgorithm", "required": false, "array": false, "type": "AuthenticationLockoutWaitAlgorithmType", "type_schema": "xs:token", "enum": ["Double", "Fixed"]}, {"name": "deviceProfileLockoutFixedMinutes", "required": false, "array": false, "type": "AuthenticationLockoutFixedWaitTimeMinutes", "type_schema": "xs:token", "enum": ["5", "10", "20", "40", "60"]}, {"name": "deviceProfilePermanentLockoutThreshold", "required": false, "array": false, "type": "AuthenticationPermanentLockoutThreshold", "type_schema": "xs:int", "minimum": 2.0, "maximum": 10.0}]]}, {"name": "ServiceProviderDeviceTypeCustomTagAddRequest", "tags": ["ServiceProvider"], "documentation": "Request to add a static configuration tag for an access device type used in a service provider.\n\n        The following elements are only used in XS data mode:\n          isTagValueEncrypted, use value \"false\" in AS data mode\n\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          tagValueToEncrypt\n\n        The tagValueToEncrypt element can only be used by a system administrator.\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "tagName", "required": true, "array": false, "type": "DeviceManagementTagName", "type_schema": "xs:token", "minLength": 1, "maxLength": 64}, {"name": "isTagValueEncrypted", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"choice": [{"name": "tagValue", "required": false, "array": false, "type": "DeviceManagementTagValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "tagValueToEncrypt", "required": false, "array": false, "type": "DeviceManagementTagValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]}]]}, {"name": "ServiceProviderDeviceTypeCustomTagDeleteListRequest", "tags": ["ServiceProvider"], "documentation": "Request to delete static configuration tags for an access device type used in a service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "tagName", "required": true, "array": true, "type": "DeviceManagementTagName", "type_schema": "xs:token", "minLength": 1, "maxLength": 64}]]}, {"name": "ServiceProviderDeviceTypeCustomTagGetListRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the list of custom configuration tags managed by the Device Management System, on a per-device type basis for a service provider.\n        The response is either ServiceProviderDeviceTypeCustomTagGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderDeviceTypeCustomTagModifyRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify a static configuration tag for an access device type used in a service provider.\n\n        The tagValueToEncrypt element can only be used by a system administrator.\n\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          tagValueToEncrypt\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "tagName", "required": true, "array": false, "type": "DeviceManagementTagName", "type_schema": "xs:token", "minLength": 1, "maxLength": 64}, {"choice": [{"name": "tagValue", "required": false, "array": false, "type": "DeviceManagementTagValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "tagValueToEncrypt", "required": false, "array": false, "type": "DeviceManagementTagValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]}]]}, {"name": "ServiceProviderDeviceTypeFileGetListRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the list of device type files managed by the Device Management System, on a per-service provider basis.\n        The response is either ServiceProviderDeviceTypeFileGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderDeviceTypeFileGetRequest", "tags": ["ServiceProvider"], "documentation": "Request to get a service provider device type file.\n        The response is either ServiceProviderDeviceTypeFileGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "fileFormat", "required": true, "array": false, "type": "DeviceManagementFileFormat", "type_schema": "xs:token", "minLength": 1, "maxLength": 128}]]}, {"name": "ServiceProviderDeviceTypeFileModifyRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify a specified device type file for a service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "fileFormat", "required": true, "array": false, "type": "DeviceManagementFileFormat", "type_schema": "xs:token", "minLength": 1, "maxLength": 128}, {"name": "fileSource", "required": false, "array": false, "type": "AccessDeviceEnhancedConfigurationMode", "type_schema": "xs:token", "enum": ["Default", "Manual", "Custom"]}, {"name": "uploadFile", "required": false, "array": false, "type": "FileResource", "schema": [[{"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "fileContent", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "ServiceProviderDeviceTypeTagSetGetRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the custom configuration tag set defined for the service provider and device type.\n        The response is either ServiceProviderDeviceTypeTagSetGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderDeviceTypeTagSetModifyRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify a static configuration tag set.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceType", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "tagSetName", "required": false, "array": false, "type": "DeviceManagementTagSetName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderDialableCallerIDCriteriaAddRequest", "tags": ["ServiceProvider"], "documentation": "Add a new Dialable Caller ID Criteria. Criteria are added at the bottom of the list with the lowest priority. The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "DialableCallerIDCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "description", "required": false, "array": false, "type": "DialableCallerIDCriteriaDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "prefixDigits", "required": false, "array": false, "type": "DialableCallerIDPrefixDigits", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "matchCallType", "required": false, "array": true, "type": "CommunicationBarringCallType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "matchAlternateCallIndicator", "required": false, "array": true, "type": "CommunicationBarringAlternateCallIndicator", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "matchLocalCategory", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchNationalCategory", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchInterlataCategory", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchIntralataCategory", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchInternationalCategory", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchPrivateCategory", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchEmergencyCategory", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchOtherCategory", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderDialableCallerIDCriteriaDeleteRequest", "tags": ["ServiceProvider"], "documentation": "Delete a Dialable Caller ID Criteria.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "DialableCallerIDCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderDialableCallerIDCriteriaGetRequest", "tags": ["ServiceProvider"], "documentation": "Get an existing Dialable Caller ID Criteria.\n        The response is either a\n        ServiceProviderDialableCallerIDCriteriaGetRequest or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "DialableCallerIDCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderDialableCallerIDCriteriaModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify a Dialable Caller ID Criteria.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "DialableCallerIDCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "newName", "required": false, "array": false, "type": "DialableCallerIDCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "description", "required": false, "array": false, "type": "DialableCallerIDCriteriaDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "prefixDigits", "required": false, "array": false, "type": "DialableCallerIDPrefixDigits", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "matchCallType", "required": false, "array": false, "type": "ReplacementCommunicationBarringCallTypeList", "schema": [[{"name": "callType", "required": true, "array": true, "type": "CommunicationBarringCallType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "matchAlternateCallIndicator", "required": false, "array": false, "type": "ReplacementCommunicationBarringAlternateCallIndicatorList", "schema": [[{"name": "alternateCallIndicator", "required": true, "array": true, "type": "CommunicationBarringAlternateCallIndicator", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "matchLocalCategory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchNationalCategory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchInterlataCategory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchIntralataCategory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchInternationalCategory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchPrivateCategory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchEmergencyCategory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "matchOtherCategory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderDialableCallerIDGetRequest", "tags": ["ServiceProvider"], "documentation": "Get the service provider?s Dialable Caller ID settings and criteria list.\n        The response is either a\n        ServiceProviderDialableCallerIDGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderDialableCallerIDModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify the service provider?s Dialable Caller ID settings and criteria list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useServiceProviderCriteria", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "nsScreeningFailurePolicy", "required": false, "array": false, "type": "NsScreeningFailurePolicy", "type_schema": "xs:token", "enum": ["Display Received Caller ID", "Restrict Number", "Restrict Name And Number"]}, {"name": "criteriaPriorityOrder", "required": false, "array": true, "type": "DialableCallerIDCriteriaPriorityOrder", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "DialableCallerIDCriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "priority", "required": true, "array": false, "type": "DialableCallerIDCriteriaPriority", "type_schema": "xs:float", "minimum": 0.0, "maximum": 1000000.0}]]}]]}, {"name": "ServiceProviderDialPlanPolicyAddAccessCodeRequest", "tags": ["ServiceProvider"], "documentation": "Request to add a Service Provider level Dial Plan Access Code and its all attribues.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "accessCode", "required": true, "array": false, "type": "DialPlanAccessCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 5}, {"name": "includeCodeForNetworkTranslationsAndRouting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeCodeForScreeningServices", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableSecondaryDialTone", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "DialPlanAccessCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderDialPlanPolicyDeleteAccessCodeRequest", "tags": ["ServiceProvider"], "documentation": "Request to delete a Service Provider level Dial Plan Access Code and its all attribues.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "accessCode", "required": true, "array": false, "type": "DialPlanAccessCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 5}]]}, {"name": "ServiceProviderDialPlanPolicyGetAccessCodeListRequest", "tags": ["ServiceProvider"], "documentation": "Request the Service Provider level data associated with Dial Plan Policy.\n        The response is either a ServiceProviderDialPlanPolicyGetAccessCodeListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderDialPlanPolicyGetAccessCodeRequest", "tags": ["ServiceProvider"], "documentation": "Request access code data associated with Service Provider level Dial Plan Policy access codes.\n        The response is either a ServiceProviderDialPlanPolicyGetAccessCodeResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "accessCode", "required": true, "array": false, "type": "DialPlanAccessCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 5}]]}, {"name": "ServiceProviderDialPlanPolicyGetRequest22", "tags": ["ServiceProvider"], "documentation": "Request the Service Provider level data associated with Dial Plan Policy.\n        The response is either a ServiceProviderDialPlanPolicyGetResponse22\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderDialPlanPolicyModifyAccessCodeRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify a Service Provider level Dial Plan Access Code and its attribues.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "accessCode", "required": true, "array": false, "type": "DialPlanAccessCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 5}, {"name": "includeCodeForNetworkTranslationsAndRouting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeCodeForScreeningServices", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableSecondaryDialTone", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "DialPlanAccessCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderDialPlanPolicyModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify the Service Provider level data associated with Dial Plan Policy.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          overrideResolvedDeviceDigitMap\n          deviceDigitMap", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "requiresAccessCodeForPublicCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowE164PublicCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "preferE164NumberFormatForCallbackServices", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "publicDigitMap", "required": false, "array": false, "type": "DigitMap", "type_schema": "xs:token", "minLength": 1, "maxLength": 2048}, {"name": "privateDigitMap", "required": false, "array": false, "type": "DigitMap", "type_schema": "xs:token", "minLength": 1, "maxLength": 2048}, {"name": "overrideResolvedDeviceDigitMap", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "deviceDigitMap", "required": false, "array": false, "type": "DigitMap", "type_schema": "xs:token", "minLength": 1, "maxLength": 2048}]]}, {"name": "ServiceProviderDigitCollectionGetRequest13mp4", "tags": ["ServiceProvider"], "documentation": "Request the service provider's digit collection attributes.\n        The response is either a ServiceProviderDigitCollectionGetResponse13mp4 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderDigitCollectionModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modifies the service provider's digit collection attributes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "accessCode", "required": false, "array": false, "type": "AccessCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 1}, {"name": "publicDigitMap", "required": false, "array": false, "type": "DigitMap", "type_schema": "xs:token", "minLength": 1, "maxLength": 2048}, {"name": "privateDigitMap", "required": false, "array": false, "type": "DigitMap", "type_schema": "xs:token", "minLength": 1, "maxLength": 2048}]]}, {"name": "ServiceProviderDnAddListRequest", "tags": ["ServiceProvider"], "documentation": "Adds DNs to a service provider. It is possible to add either: a single DN,\n        or a list of DNs, or a range of DNs, or any combination thereof.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "dnRange", "required": false, "array": true, "type": "DNRange", "schema": [[{"name": "minPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "maxPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "ServiceProviderDnDeleteListRequest", "tags": ["ServiceProvider"], "documentation": "Deletes DNs from a service provider. It is possible to delete either: a single DN,\n        or a list of DNs, or a range of DNs, or any combination thereof.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "dnRange", "required": false, "array": true, "type": "DNRange", "schema": [[{"name": "minPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "maxPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "ServiceProviderDnGetAvailableListRequest", "tags": ["ServiceProvider"], "documentation": "Request a list of available DNs not yet assigned to any group.\n        Dns assigned to the IMRN pool are not listed in the response.\n        The response is either ServiceProviderDnGetAvailableListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderDnGetStatusListRequest", "tags": ["ServiceProvider"], "documentation": "Validates DNs given in the request\n        The response is ServiceProviderDnGetStatusListResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "dn", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "ServiceProviderDnGetSummaryListRequest", "tags": ["ServiceProvider"], "documentation": "Request a summary table of all DNs in a service provider.\n        Dns assigned to the IMRN pool are not listed in the response.\n        The search can be done using multiple criteria. Only results matching all the search criteria are included in the results.\n        The response is either ServiceProviderDnGetSummaryListResponse or ErrorResponse.\n\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          searchCriteriaDn, searchCriteriaGroupId", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderDomainAssignListRequest", "tags": ["ServiceProvider"], "documentation": "Assign a list of domains to a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "domain", "required": true, "array": true, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderDomainGetAssignedGroupListRequest", "tags": ["ServiceProvider"], "documentation": "Requests a list of groups within a service provider that have a given domain assigned.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either a ServiceProviderDomainGetAssignedGroupListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "domain", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupName", "required": false, "array": true, "type": "SearchCriteriaGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderDomainGetAssignedListRequest22", "tags": ["ServiceProvider"], "documentation": "Requests the list of all matching domains assigned to a service provider .\n        The response is either ServiceProviderDomainGetAssignedListResponse22 or ErrorResponse.\n\n        The following elements are only used in AS data mode and will be ignored in XS data mode:\n          responseSizeLimit\n          searchCriteriaDomainName\n          searchCriteriaExactDomainLevel", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaDomainName", "required": false, "array": true, "type": "SearchCriteriaDomainName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactDomainLevel", "required": false, "array": false, "type": "SearchCriteriaExactDomainLevel", "schema": [[{"name": "domainLevel", "required": true, "array": false, "type": "DomainLevel", "type_schema": "xs:token", "enum": ["System", "Reseller"]}]]}]]}, {"name": "ServiceProviderDomainUnassignListRequest", "tags": ["ServiceProvider"], "documentation": "Unassign a list of domains from a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "domain", "required": true, "array": true, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderEmergencyCallNotificationGetRequest", "tags": ["ServiceProvider"], "documentation": "Request the service provider level data associated with Emergency Call Notification.\n        The response is either a ServiceProviderEmergencyCallNotificationGetResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderEmergencyCallNotificationModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify the service provider or enterprise level data associated with Emergency\n        Call Notification.  The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "sendEmergencyCallNotificationEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "emergencyCallNotifyEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "allowGroupOverride", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderEndpointGetListRequest", "tags": ["ServiceProvider"], "documentation": "Request to search endpoints in the service provider/enterprise.\n        The response is either ServiceProviderEndpointGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaLinePortUserPart", "required": false, "array": true, "type": "SearchCriteriaLinePortUserPart", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaLinePortDomain", "required": false, "array": true, "type": "SearchCriteriaLinePortDomain", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDeviceType", "required": false, "array": true, "type": "SearchCriteriaDeviceType", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDeviceName", "required": false, "array": true, "type": "SearchCriteriaDeviceName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDeviceMACAddress", "required": false, "array": true, "type": "SearchCriteriaDeviceMACAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AccessDeviceMACAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 12}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDeviceNetAddress", "required": false, "array": true, "type": "SearchCriteriaDeviceNetAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}]]}, {"name": "ServiceProviderExtensionLengthGetRequest", "tags": ["ServiceProvider"], "documentation": "Request the service provider's extension length.\n        The response is either a ServiceProviderExtensionLengthGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderExtensionLengthModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify the service provider's extension length range.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "defaultExtensionLength", "required": false, "array": false, "type": "ExtensionLength", "type_schema": "xs:int", "minimum": 2.0, "maximum": 20.0}, {"name": "locationRoutingPrefixDigit", "required": false, "array": false, "type": "LocationRoutingPrefixDigit", "type_schema": "xs:int", "minimum": 0.0, "maximum": 9.0}, {"name": "locationCodeLength", "required": false, "array": false, "type": "EnterpriseLocationDialingCodeLength", "type_schema": "xs:int", "minimum": 1.0, "maximum": 15.0}]]}, {"name": "ServiceProviderFeatureAccessCodeGetListRequest21", "tags": ["ServiceProvider"], "documentation": "Get the list of feature access codes for a service provider or enterprise.\n        The response is either a ServiceProviderFeatureAccessCodeGetListResponse21\n        or an ErrorResponse.\n\n        In release 20 the \"Call Recording\" FAC name is changed to\n        \"Call Recording - Start\".", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderFeatureAccessCodeModifyListRequest21", "tags": ["ServiceProvider"], "documentation": "Modify a list of feature access codes for a service provider or enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        In release 20 the \"Call Recording\" FAC name is changed to\n        \"Call Recording - Start\".", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "featureAccessCode", "required": false, "array": true, "type": "FeatureAccessCodeModifyEntry", "schema": [[{"name": "featureAccessCodeName", "required": true, "array": false, "type": "FeatureAccessCodeName", "type_schema": "xs:token", "minLength": 1}, {"name": "mainCode", "required": false, "array": false, "type": "FeatureAccessCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 5}, {"name": "alternateCode", "required": false, "array": false, "type": "FeatureAccessCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 5}, {"name": "enableFAC", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderFileRepositoryDeviceUserAddRequest", "tags": ["ServiceProvider"], "documentation": "Add a new service provider file repository user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "fileRepositoryName", "required": true, "array": false, "type": "FileRepositoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "userName", "required": true, "array": false, "type": "FileRepositoryUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "password", "required": true, "array": false, "type": "FileRepositoryUserPassword", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "allowPut", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowDelete", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowGet", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderFileRepositoryDeviceUserDeleteRequest", "tags": ["ServiceProvider"], "documentation": "Delete a service provider file repository user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "fileRepositoryName", "required": true, "array": false, "type": "FileRepositoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "userName", "required": true, "array": false, "type": "FileRepositoryUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderFileRepositoryDeviceUserGetListRequest", "tags": ["ServiceProvider"], "documentation": "Request the list of service provider users for a file repository in the system.\n        The response is either a ServiceProviderFileRepositoryDeviceUserGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "fileRepositoryName", "required": true, "array": false, "type": "FileRepositoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderFileRepositoryDeviceUserModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify a service provider file repository user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "fileRepositoryName", "required": true, "array": false, "type": "FileRepositoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "userName", "required": true, "array": false, "type": "FileRepositoryUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "password", "required": false, "array": false, "type": "FileRepositoryUserPassword", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "allowPut", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowDelete", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowGet", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderGetAvailableLeafDeviceListRequest", "tags": ["ServiceProvider"], "documentation": "Requests the list of available leaf devices that can be linked to a tree device within a specific service provider.\n        A leaf device is a device associated with a device type that has the option\n        supportLinks set to \"Support Link to Device\". It can be linked to only one tree device.\n        The list returned includes devices created at the system, service provider, and group levels.\n        The response is either ServiceProviderGetAvailableLeafDeviceListResponse or\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderGetAvailableTreeDeviceListRequest", "tags": ["ServiceProvider"], "documentation": "Requests the list of available tree devices to which a leaf device can be linked to within a specific service provider.\n        A tree device is a device associated with a device type that has the option\n        supportLinks set to \"Support Links from Devices\". Many leaf devices can be linked to it.\n        The list returned includes devices created at the system, service provider, and group levels.\n        The response is either ServiceProviderGetAvailableTreeDeviceListResponse or\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderGetDefaultRequest", "tags": ["ServiceProvider"], "documentation": "Request the default profile for a service provider or enterprise.\n        The response is either a ServiceProviderGetDefaultResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "ServiceProviderGetListRequest", "tags": ["ServiceProvider"], "documentation": "Request a list of service providers and/or enterprises in the system.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        If reseller administrator sends the request, searchCriteriaResellerId is ignored. Service providers/enterprise\n        within the administrator's reseller meeting the search criteria are returned.\n        The response is either a ServiceProviderGetListResponse or an ErrorResponse.\n\n        The following data elements are only used in AS data mode:\n          searchCriteriaResellerId", "type": "core:OCIRequest", "schema": [[{"name": "isEnterprise", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaServiceProviderName", "required": false, "array": true, "type": "SearchCriteriaServiceProviderName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaResellerId", "required": false, "array": true, "type": "SearchCriteriaResellerId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderGetPagedSortedListRequest", "tags": ["ServiceProvider"], "documentation": "Request a list of service providers and/or enterprises in the system.\n        The response is either a ServiceProviderGetPagedSortedListResponse or an ErrorResponse.\n        If reseller administrator sends the request, searchCriteriaResellerId is ignored. Service providers/enterprise\n        within the administrator's reseller meeting the search criteria are returned.\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1 by\n        default, and the responsePageSize will be set to the maximum responsePageSize by default.\n        If no sortOrder is included, the response is sorted by Service Provider Id ascending by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is\n        included. Then the search criteria are logically ORed together.", "type": "core:OCIRequest", "schema": [[{"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderServiceProviderGetPagedSortedList", "schema": [{"choice": [{"name": "sortByServiceProviderId", "required": true, "array": false, "type": "SortByServiceProviderId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByServiceProviderName", "required": true, "array": false, "type": "SortByServiceProviderName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaServiceProviderName", "required": false, "array": true, "type": "SearchCriteriaServiceProviderName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactOrganizationType", "required": false, "array": false, "type": "SearchCriteriaExactOrganizationType", "schema": [[{"name": "organizationType", "required": true, "array": false, "type": "OrganizationType", "type_schema": "xs:token", "enum": ["Service Provider", "Enterprise"]}]]}, {"name": "searchCriteriaResellerId", "required": false, "array": true, "type": "SearchCriteriaResellerId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderGetRequest22V4", "tags": ["ServiceProvider"], "documentation": "Get the profile for a service provider or enterprise.\n        The response is either a ServiceProviderGetResponse22V4 or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          serviceProviderExtenalId", "type": "core:OCIRequest", "schema": [[{"choice": [{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceProviderExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}]}]]}, {"name": "ServiceProviderHPBXAlternateCarrierSelectionGetRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the Alternate Carrier Selection parameters.\n        The response is either a ServiceProviderHPBXAlternateCarrierSelectionGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderHPBXAlternateCarrierSelectionModifyRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify the Alternate Carrier Selection parameters.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "processCbcCarrierSelection", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "preselectedLocalCarrier", "required": false, "array": false, "type": "HPBXAlternateCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "preselectedDistantCarrier", "required": false, "array": false, "type": "HPBXAlternateCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderIMRNAssignListRequest", "tags": ["ServiceProvider"], "documentation": "Assign a list of service provider DNs to the IMRN pool. It is possible to assign either: a single DN,\n        or a list of DNs, or a range of DNs, or any combination thereof.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "imrn", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "imrnRange", "required": false, "array": true, "type": "DNRange", "schema": [[{"name": "minPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "maxPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "ServiceProviderIMRNGetListRequest", "tags": ["ServiceProvider"], "documentation": "Returns a list of dns or dn ranges in a service provider IMRN pool.\n        The response is either ServiceProviderIMRNGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderIMRNUnassignListRequest", "tags": ["ServiceProvider"], "documentation": "Unassign a list of service provider DNs from the service provider IMRN pool. The DNs then become available for\n        assignment to groups. It is possible to delete either: a single DN,\n        or a list of DNs, or a range of DNs, or any combination thereof.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "imrn", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "imrnRange", "required": false, "array": true, "type": "DNRange", "schema": [[{"name": "minPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "maxPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "ServiceProviderLanguageAddRequest", "tags": ["ServiceProvider"], "documentation": "Request to add a language for a service provder.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderLanguageDeleteRequest", "tags": ["ServiceProvider"], "documentation": "Request to delete a language from a service provider supported languages.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderLanguageGetAvailableListRequest", "tags": ["ServiceProvider"], "documentation": "Request the list of languages that a user or admin in a service provider is allowed to use.\n        The list will either be the system or service provider languages list, depending on the useServiceProviderLanguages flag.\n        The response is either a ServiceProviderLanguageGetAvailableListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderLanguageGetListRequest", "tags": ["ServiceProvider"], "documentation": "Request the defined languages for a service provider.\n        The response is either a ServiceProviderLanguageGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderLanguageModifyRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify a language properties for a service provider/enterprise.\n        If the becomeDefaultLanguage element is present, the language in this request\n        Becomes the default language for the service provider/enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "becomeDefaultLanguage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify the profile for a service provider or enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following elements are only used in Amplify data mode and ignored\n        in AS and XS data mode:\n        servicePolicy,\n        callProcessingSliceId,\n        provisioningSliceId,\n        subscriberPartition.\n        When the callProcessingSliceId or provisioningSliceId is set to nillable,\n        it will be assigned to the default Slice.\n        Only Provisioning admin and above can change the callProcessingSliceId,\n        provisioningSliceId, and subscriberPartition.\n\n        The following element is only used in AS data mode and ignored\n        in Amplify and XS data mode:\n        resellerId\n        resellerName\n\n        resellerId and resellerName can only be configured by a Reseller or higher level administrator.\n\n\t    The following behavior is only applicable in CloudPBX:\n\t      - when existing resellerId is specified, enterprise/Service Provider shall be moved to\n\t        requesting reseller.\n\t      - when new resellerId, that does not exist in the system, is specified, the new\n\t        Reseller is created the given resellerId and resellerName (if provided) and \tenterprise/Service Provider is moved to the newly created Reseller.\n\n\t    resellerName element is ignored if the reseller the service provider is being moved to \talready exists.\n\n\n        The following elements are only used in Amplify and XS data mode and ignored in AS data mode:\n        preferredDataCenter.\n        Only Provisioning admin and above can change the preferredDataCenter.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n   \t\t defaultExtensionLength\n   \t\t locationRoutingPrefixDigit\n   \t\t locationCodeLength", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "defaultDomain", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "serviceProviderName", "required": false, "array": false, "type": "ServiceProviderName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "supportEmail", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "contact", "required": false, "array": false, "type": "Contact", "schema": [[{"name": "contactName", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 30, "type_schema": "xs:token"}, {"name": "contactNumber", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 30, "type_schema": "xs:token"}, {"name": "contactEmail", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "address", "required": false, "array": false, "type": "StreetAddress", "schema": [[{"name": "addressLine1", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "addressLine2", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "city", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvince", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvinceDisplayName", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "zipOrPostalCode", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "country", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}]]}, {"name": "useServiceProviderLanguages", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "servicePolicy", "required": false, "array": false, "type": "ServicePolicyName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "callProcessingSliceId", "required": false, "array": false, "type": "SliceId", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "provisioningSliceId", "required": false, "array": false, "type": "SliceId", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "subscriberPartition", "required": false, "array": false, "type": "SubscriberPartition", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "preferredDataCenter", "required": false, "array": false, "type": "DataCenter", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "defaultExtensionLength", "required": false, "array": false, "type": "ExtensionLength", "type_schema": "xs:int", "minimum": 2.0, "maximum": 20.0}, {"name": "locationRoutingPrefixDigit", "required": false, "array": false, "type": "LocationRoutingPrefixDigit", "type_schema": "xs:int", "minimum": 0.0, "maximum": 9.0}, {"name": "locationCodeLength", "required": false, "array": false, "type": "EnterpriseLocationDialingCodeLength", "type_schema": "xs:int", "minimum": 1.0, "maximum": 15.0}, {"name": "resellerId", "required": false, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "resellerName", "required": false, "array": false, "type": "ResellerName22", "type_schema": "xs:token", "minLength": 1, "maxLength": 320}]]}, {"name": "ServiceProviderNetworkClassOfServiceAssignListRequest21", "tags": ["ServiceProvider"], "documentation": "Assign a list of Network Classes of Service to a service provider.\n        A default Network Class of Service must be specified unless\n        there is already one assigned to the service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "networkClassOfService", "required": false, "array": true, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "defaultNetworkClassOfService", "required": true, "array": false, "type": "DefaultNetworkClassOfService", "schema": [{"choice": [{"name": "useExisting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfServiceName", "required": true, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]}]]}, {"name": "ServiceProviderNetworkClassOfServiceAssignListToAllGroupsRequest", "tags": ["ServiceProvider"], "documentation": "Assign a list of Network Classes of Service to all groups with in a\n        service provider. If it is the first assigned Network Class of Service in\n        the group, it will be set as the default one.\n        The Network Classes of Service must be currently\n        assigned to the service provider. The response is either a\n        SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "networkClassOfService", "required": true, "array": true, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderNetworkClassOfServiceAssignToAllUsersRequest", "tags": ["ServiceProvider"], "documentation": "Assign a Network Classes of Service to all users with in a\n        service provider. This will also assign the Network Class of Service\n        to all the groups in the service provider if it is not assigned yet.\n        If it is the first assigned Network Class of Service in the group,\n        it will be set as the default one.\n        However, the Network Classes of Service must be currently assigned to\n        the service provider. The response is either a SuccessResponse or\n       an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "networkClassOfService", "required": true, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderNetworkClassOfServiceGetAssignedGroupListRequest", "tags": ["ServiceProvider"], "documentation": "Get a list of groups within a service provider that have a given\n        Network Class of Service assigned.\n        The response is either a ServiceProviderNetworkClassOfServiceGetAssignedGroupListResponse\n        or an ErorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "networkClassOfService", "required": true, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupName", "required": false, "array": true, "type": "SearchCriteriaGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderNetworkClassOfServiceGetAssignedListRequest", "tags": ["ServiceProvider"], "documentation": "Get a list of Network Classes of Service assigned to a service provider.\n        The response is either a ServiceProviderNetworkClassOfServiceGetAssignedListResponse\n        or an ErorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderNetworkClassOfServiceModifyDefaultRequest", "tags": ["ServiceProvider"], "documentation": "Modifies the default Network Classes of Service of a Service Provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "networkClassOfService", "required": true, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderNetworkClassOfServiceUnassignListRequest21", "tags": ["ServiceProvider"], "documentation": "Unassign a list of Network Classes of Service from a service provider.\n        If the default Network Class of Service is being unassigned, a new one must be specified unless there are no more\n        Network Classes of Service assigned to the service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "networkClassOfService", "required": false, "array": true, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "defaultNetworkClassOfService", "required": true, "array": false, "type": "DefaultNetworkClassOfService", "schema": [{"choice": [{"name": "useExisting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfServiceName", "required": true, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]}]]}, {"name": "ServiceProviderNumberPortabilityQueryAddListRequest", "tags": ["ServiceProvider"], "documentation": "Add a list of the Service Provider Number Portability Query Digit Patterns.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "digitPattern", "required": true, "array": true, "type": "DigitPattern", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}]]}, {"name": "ServiceProviderNumberPortabilityQueryGetRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the Service Provider Number Portability Query Digit Pattern Trigger List information.\n        The response is either a ServiceProviderNumberPortabilityQueryGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "includeDigitPatterns", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "searchCriteriaServiceProviderNumberPortabilityQueryDigitPattern", "required": false, "array": true, "type": "SearchCriteriaServiceProviderNumberPortabilityQueryDigitPattern", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DigitPattern", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}]]}, {"name": "ServiceProviderNumberPortabilityQueryModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify the Service Provider Number Portability Query information.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enableNumberPortabilityQueryForOutgoingCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableNumberPortabilityQueryForIncomingCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableNumberPortabilityQueryForNetworkCallsOnly", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "deleteDigitPattern", "required": false, "array": true, "type": "DigitPattern", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}]]}, {"name": "ServiceProviderOfficeZoneAssignListRequest", "tags": ["ServiceProvider"], "documentation": "Assign a list of Office Zones to a service provider.\n        The Element defaultOfficeZone is required only for the first assignment, for subsequent assignments it is optional.\n        Office Zones can only be assigned if the Location-Based Calling Restrictions has been authorized to the service provider otherwise the request will fail.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "officeZoneName", "required": false, "array": true, "type": "OfficeZoneName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "defaultOfficeZoneName", "required": false, "array": false, "type": "OfficeZoneName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderOfficeZoneGetAssignedGroupListRequest", "tags": ["ServiceProvider"], "documentation": "Get a list of groups within a service provider that have a given Office Zone assigned.\n        The response is either a ServiceProviderOfficeZoneGetAssignedGroupListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "officeZoneName", "required": true, "array": false, "type": "OfficeZoneName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupName", "required": false, "array": true, "type": "SearchCriteriaGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderOfficeZoneGetAssignedListRequest", "tags": ["ServiceProvider"], "documentation": "Get a list of Office Zones assigned to a service provider.\n        The response is either a ServiceProviderOfficeZoneGetAssignedListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderOfficeZoneUnassignListRequest", "tags": ["ServiceProvider"], "documentation": "Unassign a list of OfficeZones from a service provider.  Note: a new default must be provided if unassigning the current default.\n        Office Zones can only be unassigned if the Location-Based Calling Restrictions has been authorized to the service provider otherwise the request will fail.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "officeZoneName", "required": false, "array": true, "type": "OfficeZoneName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "defaultOfficeZoneName", "required": false, "array": false, "type": "OfficeZoneName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderPasswordRulesGetRequest22", "tags": ["ServiceProvider"], "documentation": "Requests the service provider's password rules setting applicable to\n        Administrators (Group and Department) and Users.\n        The response is either ServiceProviderPasswordRulesGetResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderPasswordRulesModifyRequest14sp3", "tags": ["ServiceProvider"], "documentation": "Request to modify the service provider's password rules settings\n        setting applicable to Administrators (Group and Department) and Users.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n        forcePasswordChangeAfterReset\n\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "rulesApplyTo", "required": false, "array": false, "type": "ServiceProviderPasswordRulesApplyTo", "type_schema": "xs:token", "enum": ["Administrator", "Administrator and User", "Group Administrator and User External Authentication"]}, {"name": "allowWebAddExternalAuthenticationUsers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disallowUserId", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disallowOldPassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disallowReversedOldPassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "restrictMinDigits", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minDigits", "required": false, "array": false, "type": "PasswordMinDigits", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "restrictMinUpperCaseLetters", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minUpperCaseLetters", "required": false, "array": false, "type": "PasswordMinUpperCaseLetters", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "restrictMinLowerCaseLetters", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minLowerCaseLetters", "required": false, "array": false, "type": "PasswordMinLowerCaseLetters", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "restrictMinNonAlphanumericCharacters", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minNonAlphanumericCharacters", "required": false, "array": false, "type": "PasswordMinNonAlphanumericCharacters", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "minLength", "required": false, "array": false, "type": "PasswordMinLength", "type_schema": "xs:int", "minimum": 3.0, "maximum": 40.0}, {"name": "maxFailedLoginAttempts", "required": false, "array": false, "type": "MaxFailedLoginAttempts", "type_schema": "xs:int", "minimum": 0.0, "maximum": 10.0}, {"name": "passwordExpiresDays", "required": false, "array": false, "type": "PasswordExpiresDays", "type_schema": "xs:int", "minimum": 0.0, "maximum": 199.0}, {"name": "sendLoginDisabledNotifyEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "loginDisabledNotifyEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "disallowPreviousPasswords", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberOfPreviousPasswords", "required": false, "array": false, "type": "PasswordHistoryCount", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "forcePasswordChangeAfterReset", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderPortalPasscodeRulesGetRequest22", "tags": ["ServiceProvider"], "documentation": "Requests the service provider's passcode rules setting.\n        The response is either ServiceProviderPortalPasscodeRulesGetResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderPortalPasscodeRulesModifyRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify the service provider's passcode rules setting.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements are only used in AS data mode:\n          numberOfRepeatedDigits\n          disallowRepeatedPatterns\n          disallowContiguousSequences\n          numberOfAscendingDigits\n          numberOfDescendingDigits\n          numberOfPreviousPasscodes\n\n          The following elements are only used in AS data mode and ignored in XS data mode:\n          enableDefaultPasscode\n          defaultPasscode", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "disallowRepeatedDigits", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberOfRepeatedDigits", "required": false, "array": false, "type": "PasscodeMaxRepeatedDigits", "type_schema": "xs:int", "minimum": 1.0, "maximum": 6.0}, {"name": "disallowRepeatedPatterns", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disallowContiguousSequences", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberOfAscendingDigits", "required": false, "array": false, "type": "PasscodeMaxContiguousDigits", "type_schema": "xs:int", "minimum": 2.0, "maximum": 5.0}, {"name": "numberOfDescendingDigits", "required": false, "array": false, "type": "PasscodeMaxContiguousDigits", "type_schema": "xs:int", "minimum": 2.0, "maximum": 5.0}, {"name": "disallowUserNumber", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disallowReversedUserNumber", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disallowOldPasscode", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberOfPreviousPasscodes", "required": false, "array": false, "type": "PasscodeHistoryCount", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "disallowReversedOldPasscode", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minCodeLength", "required": false, "array": false, "type": "PasscodeMinLength", "type_schema": "xs:int", "minimum": 2.0, "maximum": 15.0}, {"name": "maxCodeLength", "required": false, "array": false, "type": "PasscodeMaxLength", "type_schema": "xs:int", "minimum": 3.0, "maximum": 30.0}, {"name": "disableLoginAfterMaxFailedLoginAttempts", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxFailedLoginAttempts", "required": false, "array": false, "type": "PortalMaxFailedLoginAttempts", "type_schema": "xs:int", "minimum": 2.0, "maximum": 10.0}, {"name": "expirePassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "passcodeExpiresDays", "required": false, "array": false, "type": "PasscodeExpiresDays", "type_schema": "xs:int", "minimum": 15.0, "maximum": 180.0}, {"name": "sendLoginDisabledNotifyEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "loginDisabledNotifyEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "enableDefaultPasscode", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "defaultPasscode", "required": false, "array": false, "type": "Passcode", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderRoutePointExternalSystemAssignListRequest", "tags": ["ServiceProvider"], "documentation": "Assign a list of route point external systems to a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "routePointExternalSystem", "required": false, "array": true, "type": "RoutePointExternalSystem", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderRoutePointExternalSystemGetAssignedGroupListRequest", "tags": ["ServiceProvider"], "documentation": "Requests a list of groups within a service provider that have a given external system assigned.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either a ServiceProviderRoutePointExternalSystemGetAssignedGroupListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "externalSystem", "required": true, "array": false, "type": "RoutePointExternalSystem", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupName", "required": false, "array": true, "type": "SearchCriteriaGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderRoutePointExternalSystemGetAssignedListRequest", "tags": ["ServiceProvider"], "documentation": "Requests the list of all Route Point External Systems assigned to a service provider.\n        The response is either ServiceProviderRoutePointExternalSystemGetAssignedListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderRoutePointExternalSystemUnassignListRequest", "tags": ["ServiceProvider"], "documentation": "Unassign a list of route point external systems from a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "routePointExternalSystem", "required": false, "array": true, "type": "RoutePointExternalSystem", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderRoutingProfileGetRequest", "tags": ["ServiceProvider"], "documentation": "Request the routing profile for the service provider/enterprise.\n        The response is either a ServiceProviderRoutingProfileGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderRoutingProfileModifyRequest", "tags": ["ServiceProvider"], "documentation": "Requests to modify the routing profile for a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "routingProfile", "required": false, "array": false, "type": "RoutingProfile", "type_schema": "xs:token", "minLength": 4, "maxLength": 12}]]}, {"name": "ServiceProviderScheduleAddEventRequest", "tags": ["ServiceProvider"], "documentation": "Add an event to service provider schedule.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The startDate element is adjusted to the first occurrence of the recurrent schedule that comes at or after the startDate.\n        The endDate element is set to the sum of the adjusted starDate element value and the event duration.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "eventName", "required": true, "array": false, "type": "EventName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "startDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "endDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurrence", "required": false, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}, {"choice": [{"name": "allDayEvent", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, [{"name": "startTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "endTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}]]}, {"name": "ServiceProviderScheduleAddRequest", "tags": ["ServiceProvider"], "documentation": "Add a service provider schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "ServiceProviderScheduleDeleteEventListRequest", "tags": ["ServiceProvider"], "documentation": "Delete a list of events from a service provider schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "eventName", "required": true, "array": true, "type": "EventName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderScheduleDeleteListRequest", "tags": ["ServiceProvider"], "documentation": "Delete a list of service provider schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "scheduleKey", "required": true, "array": true, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}]]}, {"name": "ServiceProviderScheduleGetEventDetailListRequest", "tags": ["ServiceProvider"], "documentation": "Get the list of events of a service provider schedule.\n        The response is either a ServiceProviderScheduleGetEventDetailListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}]]}, {"name": "ServiceProviderScheduleGetEventListRequest", "tags": ["ServiceProvider"], "documentation": "Get the list of events of a service provider schedule.\n        The response is either a ServiceProviderScheduleGetEventListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}]]}, {"name": "ServiceProviderScheduleGetEventRequest", "tags": ["ServiceProvider"], "documentation": "Get an event from a service provider schedule.\n        The response is either a ServiceProviderScheduleGetEventResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "eventName", "required": true, "array": false, "type": "EventName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderScheduleGetListRequest", "tags": ["ServiceProvider"], "documentation": "Get the list of a service provider schedules. The list can be filtered by schedule type.\n        The response is either a ServiceProviderScheduleGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "scheduleType", "required": false, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "ServiceProviderScheduleModifyEventRequest", "tags": ["ServiceProvider"], "documentation": "Modify an event of a service provider schedule.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The startDate element is adjusted to the first occurrence of the recurrent schedule that comes at or after the startDate.\n        The endDate element is set to the sum of the adjusted starDate element value and the event duration.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "eventName", "required": true, "array": false, "type": "EventName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "newEventName", "required": false, "array": false, "type": "EventName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "startDate", "required": false, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "endDate", "required": false, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurrence", "required": false, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}, {"choice": [{"name": "allDayEvent", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, [{"name": "startTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "endTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}]]}, {"name": "ServiceProviderScheduleModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify a service provider schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "newScheduleName", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderServiceGetAuthorizationListRequest", "tags": ["ServiceProvider"], "documentation": "Requests the service provider's service authorization status.\n        The response is either ServiceProviderServiceGetAuthorizationListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderServiceGetAuthorizationRequest", "tags": ["ServiceProvider"], "documentation": "Requests the service provider's service authorization information for a specific service or service pack.\n        The response is either ServiceProviderServiceGetAuthorizationResponse or ErrorResponse.\n\n        The following element is used in AS mode and triggers an ErrorResponse in XS data mode:\n          servicePackName", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"choice": [{"name": "userServiceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"name": "groupServiceName", "required": true, "array": false, "type": "GroupService", "type_schema": "xs:token", "enum": ["Account/Authorization Codes", "Auto Attendant", "Auto Attendant - Video", "Auto Attendant - Standard", "Call Capacity Management", "Call Park", "Call Pickup", "City-Wide Centrex", "Custom Ringback Group", "Custom Ringback Group - Video", "Emergency Zones", "Enhanced Outgoing Calling Plan", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Incoming Calling Plan", "Instant Group Call", "Intercept Group", "Inventory Report", "LDAP Integration", "Meet-Me Conferencing", "Music On Hold", "Music On Hold - Video", "Outgoing Calling Plan", "Preferred Carrier Group", "Route Point", "Series Completion", "Service Scripts Group", "Trunk Group", "Voice Messaging Group", "VoiceXML"]}, {"name": "servicePackName", "required": true, "array": false, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]}]]}, {"name": "ServiceProviderServiceGetUserAssignableListRequest", "tags": ["ServiceProvider"], "documentation": "Requests the list of all user services assignable to users in the specified service provider.\n        The response is either ServiceProviderServiceGetUserAssignableListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderServiceModifyAuthorizationListRequest", "tags": ["ServiceProvider"], "documentation": "Requests to change the service provider's service authorization status.\n        The boolean flags are used to authorize or unauthorize services.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupServiceAuthorization", "required": false, "array": true, "type": "GroupServiceAuthorization", "schema": [[{"name": "serviceName", "required": true, "array": false, "type": "GroupService", "type_schema": "xs:token", "enum": ["Account/Authorization Codes", "Auto Attendant", "Auto Attendant - Video", "Auto Attendant - Standard", "Call Capacity Management", "Call Park", "Call Pickup", "City-Wide Centrex", "Custom Ringback Group", "Custom Ringback Group - Video", "Emergency Zones", "Enhanced Outgoing Calling Plan", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Incoming Calling Plan", "Instant Group Call", "Intercept Group", "Inventory Report", "LDAP Integration", "Meet-Me Conferencing", "Music On Hold", "Music On Hold - Video", "Outgoing Calling Plan", "Preferred Carrier Group", "Route Point", "Series Completion", "Service Scripts Group", "Trunk Group", "Voice Messaging Group", "VoiceXML"]}, {"choice": [{"name": "authorizedQuantity", "required": true, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}, {"name": "unauthorized", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]}]]}, {"name": "userServiceAuthorization", "required": false, "array": true, "type": "UserServiceAuthorization", "schema": [[{"name": "serviceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"choice": [{"name": "authorizedQuantity", "required": true, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}, {"name": "unauthorized", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]}]]}]]}, {"name": "ServiceProviderServicePackAddRequest", "tags": ["ServiceProvider"], "documentation": "Request to add a service pack to a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "servicePackName", "required": true, "array": false, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "servicePackDescription", "required": false, "array": false, "type": "ServicePackDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "isAvailableForUse", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "servicePackQuantity", "required": true, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}, {"name": "serviceName", "required": false, "array": true, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}]]}, {"name": "ServiceProviderServicePackAddServiceListRequest", "tags": ["ServiceProvider"], "documentation": "Request to add services to a service pack if the pack has not been authorized to a group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "servicePackName", "required": true, "array": false, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "serviceName", "required": true, "array": true, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}]]}, {"name": "ServiceProviderServicePackDeleteRequest", "tags": ["ServiceProvider"], "documentation": "Request to delete a service pack from a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "servicePackName", "required": true, "array": false, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderServicePackGetDetailListRequest", "tags": ["ServiceProvider"], "documentation": "Request to get a service pack details.\n        The response is either ServiceProviderServicePackGetDetailListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "servicePackName", "required": true, "array": false, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderServicePackGetListRequest", "tags": ["ServiceProvider"], "documentation": "Request to get a list of defined service packs for a service provider.\n        The response is either ServiceProviderServicePackGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderServicePackGetServiceUsageListRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the list of service packs containing a specified service.\n        The response is either ServiceProviderServicePackGetServiceUsageListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}]]}, {"name": "ServiceProviderServicePackGetUtilizationListRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the service pack utilization for a service provider.\n        For each service pack, a table of groups utilizing the pack is returned.\n        The response is either ServiceProviderServicePackGetUtilizationListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderServicePackMigrationTaskAddRequest21", "tags": ["ServiceProvider"], "documentation": "Create a service pack migration task.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "taskName", "required": true, "array": false, "type": "ServicePackMigrationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "startTimestamp", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "expireAfterNumHours", "required": true, "array": false, "type": "ServicePackMigrationExpireAfterNumberOfHours", "type_schema": "xs:int", "minimum": 1.0, "maximum": 168.0}, {"name": "maxDurationHours", "required": true, "array": false, "type": "ServicePackMigrationMaxDurationHours", "type_schema": "xs:int", "minimum": 1.0, "maximum": 9.0}, {"name": "sendReportEmail", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "reportDeliveryEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "abortOnError", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "abortErrorThreshold", "required": false, "array": false, "type": "ServicePackMigrationAbortErrorThreshold", "type_schema": "xs:int", "minimum": 1.0}, {"name": "reportAllUsers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "automaticallyIncrementServiceQuantity", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderServicePackMigrationTaskCopyRequest", "tags": ["ServiceProvider"], "documentation": "Makes a copy of one or more existing service pack migration tasks. A copied task\n        can be edited with other commands and scheduled for future execution. The\n        name of the new task is chosen automatically. The name will\n        be \"Copy (number) of taskName\".\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "taskName", "required": true, "array": true, "type": "ServicePackMigrationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderServicePackMigrationTaskDeleteRequest", "tags": ["ServiceProvider"], "documentation": "Deletes a service pack migration task. It is not possible to delete a task while it is\n        currently executing.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "taskName", "required": true, "array": false, "type": "ServicePackMigrationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderServicePackMigrationTaskGetAvailableGroupListRequest", "tags": ["ServiceProvider"], "documentation": "Requests a list of groups to migrate.\n        The response is either ServiceProviderServicePackMigrationTaskGetAvailabeGroupListResponse\n        or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupName", "required": false, "array": true, "type": "SearchCriteriaGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderServicePackMigrationTaskGetListRequest21", "tags": ["ServiceProvider"], "documentation": "Requests a list of all service pack migration tasks for a service provider.\n        The response is either ServiceProviderServicePackMigrationTaskGetListResponse21\n        or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderServicePackMigrationTaskGetRequest21", "tags": ["ServiceProvider"], "documentation": "Requests the details of a specified service pack migration task.\n        The response is either ServiceProviderServicePackMigrationTaskGetResponse21\n        or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "taskName", "required": true, "array": false, "type": "ServicePackMigrationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderServicePackMigrationTaskModifyAssignmentListRequest", "tags": ["ServiceProvider"], "documentation": "Replace the list of services and packs to be assigned to users during the service pack migration.\n        Modification is only allowed prior to task execution.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "taskName", "required": true, "array": false, "type": "ServicePackMigrationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userServiceNameList", "required": false, "array": false, "type": "ReplacementUserServiceList", "schema": [[{"name": "serviceName", "required": true, "array": true, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}]]}, {"name": "servicePackNameList", "required": false, "array": false, "type": "ReplacementServicePackNameList", "schema": [[{"name": "servicePackName", "required": true, "array": true, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "ServiceProviderServicePackMigrationTaskModifyGroupListRequest", "tags": ["ServiceProvider"], "documentation": "Replace the list of groups to be migrated for a specified service pack migration task.\n        Modification is only allowed prior to task execution.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "taskName", "required": true, "array": false, "type": "ServicePackMigrationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"choice": [{"name": "migrateAllGroups", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "groupIdList", "type": null, "required": false, "array": false, "schema": [[{"name": "groupId", "required": true, "array": true, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]}]]}, {"name": "ServiceProviderServicePackMigrationTaskModifyRemovalListRequest", "tags": ["ServiceProvider"], "documentation": "Replace the list of services and packs to be removed from users during the service pack migration.\n        Modification is only allowed prior to task execution.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "taskName", "required": true, "array": false, "type": "ServicePackMigrationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userServiceNameList", "required": false, "array": false, "type": "ReplacementUserServiceList", "schema": [[{"name": "serviceName", "required": true, "array": true, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}]]}, {"name": "servicePackNameList", "required": false, "array": false, "type": "ReplacementServicePackNameList", "schema": [[{"name": "servicePackName", "required": true, "array": true, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "ServiceProviderServicePackMigrationTaskModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify the properties of a specified service pack migration task.\n        Modification is only allowed prior to task execution.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "taskName", "required": true, "array": false, "type": "ServicePackMigrationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newTaskName", "required": false, "array": false, "type": "ServicePackMigrationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "startTimestamp", "required": false, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "expireAfterNumHours", "required": false, "array": false, "type": "ServicePackMigrationExpireAfterNumberOfHours", "type_schema": "xs:int", "minimum": 1.0, "maximum": 168.0}, {"name": "maxDurationHours", "required": false, "array": false, "type": "ServicePackMigrationMaxDurationHours", "type_schema": "xs:int", "minimum": 1.0, "maximum": 9.0}, {"name": "sendReportEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "reportDeliveryEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "abortOnError", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "abortErrorThreshold", "required": false, "array": false, "type": "ServicePackMigrationAbortErrorThreshold", "type_schema": "xs:int", "minimum": 1.0}, {"name": "reportAllUsers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "automaticallyIncrementServiceQuantity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderServicePackMigrationTaskModifyUserSelectionRequest", "tags": ["ServiceProvider"], "documentation": "Replace the list of services and packs used to select which users will be migrated.\n        Modification is only allowed prior to task execution.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "taskName", "required": true, "array": false, "type": "ServicePackMigrationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userSelectionType", "required": false, "array": false, "type": "ServicePackMigrationTaskUserSelectionType", "type_schema": "xs:NMTOKEN", "enum": ["All", "Any", "None"]}, {"name": "userServiceNameList", "required": false, "array": false, "type": "ReplacementUserServiceList", "schema": [[{"name": "serviceName", "required": true, "array": true, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}]]}, {"name": "servicePackNameList", "required": false, "array": false, "type": "ReplacementServicePackNameList", "schema": [[{"name": "servicePackName", "required": true, "array": true, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "ServiceProviderServicePackMigrationTaskTerminateRequest", "tags": ["ServiceProvider"], "documentation": "Terminates a service pack migration task that is currently executing.\n        Modification is only allowed prior to task execution.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "taskName", "required": true, "array": false, "type": "ServicePackMigrationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderServicePackModifyRequest", "tags": ["ServiceProvider"], "documentation": "Requests to modify a service pack for a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "servicePackName", "required": true, "array": false, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newServicePackName", "required": false, "array": false, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "servicePackDescription", "required": false, "array": false, "type": "ServicePackDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "isAvailableForUse", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "servicePackQuantity", "required": false, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}]]}, {"name": "ServiceProviderServicePhoneNumberLookupRequest", "tags": ["ServiceProvider"], "documentation": "Lookup if the given number is defined in the specified service in the service provider.\n        The response is ServiceProviderServicePhoneNumberLookupResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceType", "required": true, "array": false, "type": "NumberLookupServiceType", "type_schema": "xs:token", "enum": ["BroadWorks Anywhere"]}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "ServiceProviderSessionAdmissionControlGetRequest", "tags": ["ServiceProvider"], "documentation": "Get the session admission control capacity for the service provider.\n        The response is either a ServiceProviderSessionAdmissionControlGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderSessionAdmissionControlModifyRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify session admission control capacity for the service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "restrictAggregateSessions", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxSessions", "required": false, "array": false, "type": "NonNegativeInt", "type_schema": "xs:int", "minimum": 0.0}, {"name": "maxUserOriginatingSessions", "required": false, "array": false, "type": "NonNegativeInt", "type_schema": "xs:int", "minimum": 0.0}, {"name": "maxUserTerminatingSessions", "required": false, "array": false, "type": "NonNegativeInt", "type_schema": "xs:int", "minimum": 0.0}, {"name": "countIntraServiceProviderSessions", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderSessionAdmissionControlWhiteListGetRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the Service Provider Session Admission White List information.\n        The response is either a ServiceProviderSessionAdmissionControlWhiteListGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderSessionAdmissionControlWhiteListModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify the Service Provider Session Admission Control White List information.\n        The number of digit pattern entries is limited to 100.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "addMatchDigitPattern", "required": false, "array": true, "type": "DigitPattern", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}, {"name": "deleteMatchDigitPattern", "required": false, "array": true, "type": "DigitPattern", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}, {"name": "enableWhiteList", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderSIPAuthenticationPasswordRulesGetRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the service provider level SIP authentication password rule settings.\n        The response is either a ServiceProviderSIPAuthenticationPasswordRulesGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderSIPAuthenticationPasswordRulesModifyRequest", "tags": ["ServiceProvider"], "documentation": "Request to modify the service provider level SIP authentication password rule settings. The useServiceProviderSettings element can only be modified by a system administrator or a provisioning administrator.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useServiceProviderSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disallowAuthenticationName", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disallowOldPassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disallowReversedOldPassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "restrictMinDigits", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minDigits", "required": false, "array": false, "type": "PasswordMinDigits", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "restrictMinUpperCaseLetters", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minUpperCaseLetters", "required": false, "array": false, "type": "PasswordMinUpperCaseLetters", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "restrictMinLowerCaseLetters", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minLowerCaseLetters", "required": false, "array": false, "type": "PasswordMinLowerCaseLetters", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "restrictMinNonAlphanumericCharacters", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minNonAlphanumericCharacters", "required": false, "array": false, "type": "PasswordMinNonAlphanumericCharacters", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "minLength", "required": false, "array": false, "type": "PasswordMinLength", "type_schema": "xs:int", "minimum": 3.0, "maximum": 40.0}, {"name": "sendPermanentLockoutNotification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "permanentLockoutNotifyEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "endpointAuthenticationLockoutType", "required": false, "array": false, "type": "AuthenticationLockoutType", "type_schema": "xs:token", "enum": ["None", "Temporary", "Temporary Then Permanent"]}, {"name": "endpointTemporaryLockoutThreshold", "required": false, "array": false, "type": "AuthenticationTemporaryLockoutThreshold", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "endpointWaitAlgorithm", "required": false, "array": false, "type": "AuthenticationLockoutWaitAlgorithmType", "type_schema": "xs:token", "enum": ["Double", "Fixed"]}, {"name": "endpointLockoutFixedMinutes", "required": false, "array": false, "type": "AuthenticationLockoutFixedWaitTimeMinutes", "type_schema": "xs:token", "enum": ["5", "10", "20", "40", "60"]}, {"name": "endpointPermanentLockoutThreshold", "required": false, "array": false, "type": "AuthenticationPermanentLockoutThreshold", "type_schema": "xs:int", "minimum": 2.0, "maximum": 10.0}, {"name": "trunkGroupAuthenticationLockoutType", "required": false, "array": false, "type": "AuthenticationLockoutType", "type_schema": "xs:token", "enum": ["None", "Temporary", "Temporary Then Permanent"]}, {"name": "trunkGroupTemporaryLockoutThreshold", "required": false, "array": false, "type": "AuthenticationTemporaryLockoutThreshold", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "trunkGroupWaitAlgorithm", "required": false, "array": false, "type": "AuthenticationLockoutWaitAlgorithmType", "type_schema": "xs:token", "enum": ["Double", "Fixed"]}, {"name": "trunkGroupLockoutFixedMinutes", "required": false, "array": false, "type": "AuthenticationLockoutFixedWaitTimeMinutes", "type_schema": "xs:token", "enum": ["5", "10", "20", "40", "60"]}, {"name": "trunkGroupPermanentLockoutThreshold", "required": false, "array": false, "type": "AuthenticationPermanentLockoutThreshold", "type_schema": "xs:int", "minimum": 2.0, "maximum": 10.0}]]}, {"name": "ServiceProviderStirShakenGetRequest", "tags": ["ServiceProvider"], "documentation": "Get service provider Stir Shaken service settings.\n        The response is either ServiceProviderStirShakenGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderStirShakenModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify service provider Stir Shaken service settings.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useParentLevelSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "signingPolicy", "required": false, "array": false, "type": "StirShakenSigningPolicy", "type_schema": "xs:token", "enum": ["All Eligible Calls", "Eligible Inter-Network Calls", "Off"]}, {"name": "taggingPolicy", "required": false, "array": false, "type": "StirShakenTaggingPolicy", "type_schema": "xs:token", "enum": ["All Eligible Calls", "Eligible Intra-Network Calls", "Off"]}, {"name": "signingServiceURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "tagFromOrPAI", "required": false, "array": false, "type": "StirShakenTagFromOrPAI", "type_schema": "xs:token", "enum": ["PAI", "From", "Both"]}, {"name": "verstatTag", "required": false, "array": false, "type": "StirShakenVerstatTag", "type_schema": "xs:token", "enum": ["TN-Validation-Passed", "TN-Validation-Failed", "No-TN-Validation"]}, {"name": "useOSValueForOrigId", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "origUUID", "required": false, "array": false, "type": "StirShakenOrigUUID", "type_schema": "NonEmptyToken", "maxLength": 36}, {"name": "attestationLevel", "required": false, "array": false, "type": "StirShakenAttestationLevel", "type_schema": "xs:token", "enum": ["Full", "Partial", "Gateway"]}, {"name": "enableVerification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "verificationServiceURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "verificationErrorHandling", "required": false, "array": false, "type": "StirShakenVerificationErrorHandling", "type_schema": "xs:token", "enum": ["Abort", "Proceed"]}, {"name": "proxyVerstatToCNAMSubscribe", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useUnknownHeadersFromCNAMNotify", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableSigningForUnscreenedTrunkGroupOriginations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableTaggingForUnscreenedTrunkGroupOriginations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "unscreenedTrunkGroupOriginationAttestationLevel", "required": false, "array": false, "type": "StirShakenUnscreenedTrunkGroupOriginationAttestationLevel", "type_schema": "xs:token", "enum": ["Full", "Partial", "Gateway"]}]]}, {"name": "ServiceProviderTemplateOnlyDeviceFileGetListRequest", "tags": ["ServiceProvider"], "documentation": "Request to get the list of template files used to support a VDM device defined at service provider level.\n        The response is either ServiceProviderTemplateOnlyDeviceFileGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderThirdPartyEmergencyCallingGetRequest", "tags": ["ServiceProvider"], "documentation": "Get the third-party emergency call service settings for the service provider.\n        The response is either a ServiceProviderThirdPartyEmergencyCallingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderThirdPartyEmergencyCallingModifyRequest", "tags": ["ServiceProvider"], "documentation": "Modify the third-party emergency call service settings for the service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "allowActivation", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "customerId", "required": false, "array": false, "type": "CustomerId", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}, {"name": "ServiceProviderVisualDeviceManagementGetDeviceInfoRequest", "tags": ["ServiceProvider"], "documentation": "Get the information for a specified device supporting visual device management.\n        The response is either a ServiceProviderVisualDeviceManagementGetDeviceInfoResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderXsiPolicyProfileAssignListRequest", "tags": ["ServiceProvider"], "documentation": "Assign a list of group and user Xsi policy profile to a service provider.\n        At service provider level, only one service provider Xsi policy profile can be assigned to service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "spXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "groupXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileAssignEntry", "schema": [[{"name": "name", "required": false, "array": true, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "default", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "userXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileAssignEntry", "schema": [[{"name": "name", "required": false, "array": true, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "default", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "ServiceProviderXsiPolicyProfileGetAssignedGroupListRequest", "tags": ["ServiceProvider"], "documentation": "Get a list of group within a service provider that have a given\n        group Xsi policy profile assigned.\n        The response is either a ServiceProviderXsiPolicyProfileGetAssignedGroupListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "xsiPolicyProfile", "required": true, "array": false, "type": "XsiPolicyProfileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "level", "required": true, "array": false, "type": "XsiPolicyProfileLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupName", "required": false, "array": true, "type": "SearchCriteriaGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderXsiPolicyProfileGetAssignedListRequest", "tags": ["ServiceProvider"], "documentation": "Get a list of Xsi policy profile assigned.\n        The response is either a ServiceProviderXsiPolicyProfileGetAssignedListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "level", "required": false, "array": false, "type": "XsiPolicyProfileLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "ServiceProviderXsiPolicyProfileModifyDefaultRequest", "tags": ["ServiceProvider"], "documentation": "Modifies the default Xsi policy profile for a service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupDefaultXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "userDefaultXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "ServiceProviderXsiPolicyProfileUnassignListRequest", "tags": ["ServiceProvider"], "documentation": "Unassign a list of Xsi policy profile.\n        Unassign a list of Xsi policy profile.\n        Only group and user level Xsi policy profile can be unassigned.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileUnassignEntry", "schema": [[{"name": "name", "required": false, "array": true, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "newDefault", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "userXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileUnassignEntry", "schema": [[{"name": "name", "required": false, "array": true, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "newDefault", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]
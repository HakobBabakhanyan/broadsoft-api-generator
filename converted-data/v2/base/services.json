[{"name": "GroupAccountAuthorizationCodesAddListRequest", "tags": ["services"], "documentation": "Add a list of account/authorization codes to a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "codeEntry", "required": true, "array": true, "type": "AccountAuthorizationCodeEntry", "schema": [[{"name": "code", "required": true, "array": false, "type": "AccountAuthorizationCode", "type_schema": "xs:token", "minLength": 2, "maxLength": 14}, {"name": "description", "required": false, "array": false, "type": "AccountAuthorizationCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "GroupAccountAuthorizationCodesDeleteListRequest", "tags": ["services"], "documentation": "Delete a list of account/authorization codes from a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": true, "type": "AccountAuthorizationCode", "type_schema": "xs:token", "minLength": 2, "maxLength": 14}]]}, {"name": "GroupAccountAuthorizationCodesGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of non restricted users for the account/authorization codes service.\n        The response is either GroupAccountAuthorizationCodesGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupAccountAuthorizationCodesGetListRequest", "tags": ["services"], "documentation": "Request the list of account/authorization codes for a group.\n        The response is either a GroupAccountAuthorizationCodesGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupAccountAuthorizationCodesGetRequest", "tags": ["services"], "documentation": "Request the group's account/authorization codes setting.\n        The response is either a GroupAccountAuthorizationCodesGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupAccountAuthorizationCodesModifyRequest", "tags": ["services"], "documentation": "Change the group's account/authorization codes setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "codeType", "required": false, "array": false, "type": "AccountAuthorizationCodeType", "type_schema": "xs:token", "enum": ["Account Code", "Authorization Code", "Deactivated"]}, {"name": "numberOfDigits", "required": false, "array": false, "type": "AccountAuthorizationCodeNumberOfDigits", "type_schema": "xs:int", "minimum": 2.0, "maximum": 14.0}, {"name": "allowLocalAndTollFreeCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mandatoryUsageUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "optionalUsageUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "GroupAdviceOfChargeGetRequest", "tags": ["services"], "documentation": "Request to get the list of Advice of Charge group parameters.\n        The response is either GroupAdviceOfChargeGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupAdviceOfChargeModifyRequest", "tags": ["services"], "documentation": "Modify the service provider level Advice Of Charge group settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useGroupLevelAoCSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "delayBetweenNotificationSeconds", "required": false, "array": false, "type": "AdviceOfChargeDelayBetweenNotificationSeconds", "type_schema": "xs:int", "minimum": 5.0, "maximum": 1800.0}]]}, {"name": "ServiceProviderAdviceOfChargeGetRequest", "tags": ["services"], "documentation": "Request to get the list of Advice of Charge service provider parameters.\n        The response is either ServiceProviderAdviceOfChargeGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderAdviceOfChargeModifyRequest", "tags": ["services"], "documentation": "Modify the service provider level Advice Of Charge service provider settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useSPLevelAoCSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "delayBetweenNotificationSeconds", "required": false, "array": false, "type": "AdviceOfChargeDelayBetweenNotificationSeconds", "type_schema": "xs:int", "minimum": 5.0, "maximum": 1800.0}]]}, {"name": "SystemAdviceOfChargeCostInformationSourceAddRequest", "tags": ["services"], "documentation": "Add a cost information source. The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "peerIdentity", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "priority", "required": true, "array": false, "type": "AdviceOfChargeOCSPriority", "type_schema": "xs:int", "minimum": 0.0, "maximum": 9.0}]]}, {"name": "SystemAdviceOfChargeCostInformationSourceDeleteRequest", "tags": ["services"], "documentation": "Delete a cost information source.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "peerIdentity", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemAdviceOfChargeCostInformationSourceGetListRequest", "tags": ["services"], "documentation": "Get a list of cost information sources.\n        The response is either SystemAdviceOfChargeCostInformationSourceGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemAdviceOfChargeCostInformationSourceModifyRequest", "tags": ["services"], "documentation": "Modify a cost information source.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "peerIdentity", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "priority", "required": true, "array": false, "type": "AdviceOfChargeOCSPriority", "type_schema": "xs:int", "minimum": 0.0, "maximum": 9.0}]]}, {"name": "SystemAdviceOfChargeGetRequest19sp1", "tags": ["services"], "documentation": "Request to get the list of Advice of Charge system parameters.\n        The response is either SystemAdviceOfChargeGetResponse19sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemAdviceOfChargeModifyRequest19sp1", "tags": ["services"], "documentation": "Request to modify Advice of Charge system parameters.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "delayBetweenNotificationSeconds", "required": false, "array": false, "type": "AdviceOfChargeDelayBetweenNotificationSeconds", "type_schema": "xs:int", "minimum": 5.0, "maximum": 1800.0}, {"name": "incomingAocHandling", "required": false, "array": false, "type": "AdviceOfChargeIncomingAocHandling", "type_schema": "xs:token", "enum": ["Ignore", "Charge"]}, {"name": "useOCSEnquiry", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "OCSEnquiryType", "required": false, "array": false, "type": "AdviceOfChargeOCSEnquiryType", "type_schema": "xs:token", "enum": ["Service Price", "Advice Of Charge"]}]]}, {"name": "UserAdviceOfChargeGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Advice Of Charge.\n        The response is either a UserAdviceOfChargeGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserAdviceOfChargeModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Advice of Charge.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "aocType", "required": false, "array": false, "type": "AdviceOfChargeType", "type_schema": "xs:token", "enum": ["During Call", "End Of Call"]}]]}, {"name": "UserAlternateNumbersGetRequest21", "tags": ["services"], "documentation": "Request the user level data associated with alternate numbers.\n        The response is either a UserAlternateNumbersGetResponse21 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserAlternateNumbersModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Alternate Numbers.\n        The following element in AlternateNumberEntry21 datatype is only used in AS mode:\n          description\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "distinctiveRing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alternateEntry01", "required": false, "array": false, "type": "AlternateNumberEntry21", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "ringPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "description", "required": false, "array": false, "type": "AlternateNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "alternateEntry02", "required": false, "array": false, "type": "AlternateNumberEntry21", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "ringPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "description", "required": false, "array": false, "type": "AlternateNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "alternateEntry03", "required": false, "array": false, "type": "AlternateNumberEntry21", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "ringPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "description", "required": false, "array": false, "type": "AlternateNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "alternateEntry04", "required": false, "array": false, "type": "AlternateNumberEntry21", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "ringPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "description", "required": false, "array": false, "type": "AlternateNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "alternateEntry05", "required": false, "array": false, "type": "AlternateNumberEntry21", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "ringPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "description", "required": false, "array": false, "type": "AlternateNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "alternateEntry06", "required": false, "array": false, "type": "AlternateNumberEntry21", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "ringPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "description", "required": false, "array": false, "type": "AlternateNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "alternateEntry07", "required": false, "array": false, "type": "AlternateNumberEntry21", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "ringPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "description", "required": false, "array": false, "type": "AlternateNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "alternateEntry08", "required": false, "array": false, "type": "AlternateNumberEntry21", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "ringPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "description", "required": false, "array": false, "type": "AlternateNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "alternateEntry09", "required": false, "array": false, "type": "AlternateNumberEntry21", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "ringPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "description", "required": false, "array": false, "type": "AlternateNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "alternateEntry10", "required": false, "array": false, "type": "AlternateNumberEntry21", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "ringPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "description", "required": false, "array": false, "type": "AlternateNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "SystemAnonymousCallRejectionGetRequest", "tags": ["services"], "documentation": "Get Anonymous Call Rejection system parameters.\n        The response is either a SystemAnonymousCallRejectionGetResponse or\n        an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemAnonymousCallRejectionModifyRequest", "tags": ["services"], "documentation": "Modify a system Anonymous Call Rejection parameter.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "paiRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "screenOnlyLocalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserAnonymousCallRejectionGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Anonymous Call Rejection.\n        The response is either a UserAnonymousCallRejectionGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserAnonymousCallRejectionModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Anonymous Call Rejection.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserAuthenticationGetRequest", "tags": ["services"], "documentation": "Get the user's authentication service information.\n        The response is either a UserAuthenticationGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserAuthenticationModifyRequest", "tags": ["services"], "documentation": "Modify the user's authentication service information.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "userName", "required": false, "array": false, "type": "SIPAuthenticationUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"choice": [{"name": "newPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "password", "type": null, "required": false, "array": false, "schema": [[{"name": "old", "required": true, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "new", "required": true, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}]}]]}, {"name": "GroupAutoAttendantAddInstanceRequest20", "tags": ["services"], "documentation": "Add a Auto Attendant instance to a group.\n        The domain is required in the serviceUserId.\n        Only Group and Enterprise level schedules are accepted.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements are only used in AS data mode:\n          type, use AutoAttendantType.BASIC in XS mode.\n          holidayMenu.\n        The following elements are only valid for Standard Auto\n        Attendants:\n          holidayMenu", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "type", "required": true, "array": false, "type": "AutoAttendantType", "type_schema": "xs:token", "enum": ["Basic", "Standard"]}, {"name": "firstDigitTimeoutSeconds", "required": true, "array": false, "type": "FirstDigitTimoutSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "enableVideo", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "businessHours", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "extensionDialingScope", "required": true, "array": false, "type": "AutoAttendantDialingScope", "type_schema": "xs:token", "enum": ["Enterprise", "Group", "Department"]}, {"name": "nameDialingScope", "required": true, "array": false, "type": "AutoAttendantDialingScope", "type_schema": "xs:token", "enum": ["Enterprise", "Group", "Department"]}, {"name": "nameDialingEntries", "required": true, "array": false, "type": "AutoAttendantNameDialingEntry", "type_schema": "xs:token", "enum": ["LastName + FirstName", "LastName + FirstName or FirstName + LastName"]}, {"name": "businessHoursMenu", "required": false, "array": false, "type": "AutoAttendantAddMenu20", "schema": [[{"name": "announcementSelection", "required": true, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableFirstMenuLevelExtensionDialing", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "afterHoursMenu", "required": false, "array": false, "type": "AutoAttendantAddMenu20", "schema": [[{"name": "announcementSelection", "required": true, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableFirstMenuLevelExtensionDialing", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "holidayMenu", "required": false, "array": false, "type": "AutoAttendantAddMenu20", "schema": [[{"name": "announcementSelection", "required": true, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableFirstMenuLevelExtensionDialing", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupAutoAttendantConsolidatedAddInstanceRequest", "tags": ["services"], "documentation": "Add a Auto Attendant instance to a group and assign services to the Auto Attendant.\n        The domain is required in the serviceUserId.\n        Only Group and Enterprise level schedules are accepted.\n        The response is either SuccessResponse or ErrorResponse.\n\n        If the phoneNumber has not been assigned to the group and addPhoneNumberToGroup is set to true,\n        it will be added to group if the command is executed by a service provider administrator or above\n        and the number is already assigned to the service provider. The command will fail otherwise.\n\n        The following elements are only used in AS data mode:\n          type, use AutoAttendantType.BASIC in XS mode.\n          holidayMenu.\n        The following elements are only valid for Standard Auto\n        Attendants:\n          holidayMenu", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "addPhoneNumberToGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "type", "required": true, "array": false, "type": "AutoAttendantType", "type_schema": "xs:token", "enum": ["Basic", "Standard"]}, {"name": "firstDigitTimeoutSeconds", "required": true, "array": false, "type": "FirstDigitTimoutSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "enableVideo", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "businessHours", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "extensionDialingScope", "required": true, "array": false, "type": "AutoAttendantDialingScope", "type_schema": "xs:token", "enum": ["Enterprise", "Group", "Department"]}, {"name": "nameDialingScope", "required": true, "array": false, "type": "AutoAttendantDialingScope", "type_schema": "xs:token", "enum": ["Enterprise", "Group", "Department"]}, {"name": "nameDialingEntries", "required": true, "array": false, "type": "AutoAttendantNameDialingEntry", "type_schema": "xs:token", "enum": ["LastName + FirstName", "LastName + FirstName or FirstName + LastName"]}, {"name": "businessHoursMenu", "required": false, "array": false, "type": "AutoAttendantAddMenu20", "schema": [[{"name": "announcementSelection", "required": true, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableFirstMenuLevelExtensionDialing", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "afterHoursMenu", "required": false, "array": false, "type": "AutoAttendantAddMenu20", "schema": [[{"name": "announcementSelection", "required": true, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableFirstMenuLevelExtensionDialing", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "holidayMenu", "required": false, "array": false, "type": "AutoAttendantAddMenu20", "schema": [[{"name": "announcementSelection", "required": true, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableFirstMenuLevelExtensionDialing", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "service", "required": false, "array": true, "type": "ConsolidatedUserServiceAssignment", "schema": [[{"name": "userServiceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"name": "authorizedQuantity", "required": false, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}]]}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupAutoAttendantConsolidatedDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a Auto Attendant instance from a group and free up phone numbers.\n        If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be un-assigned from the group if the command is executed by a service provider administrator or above.\n        When set to 'Service Provider', they will be un-assigned from the group and service provider if the command is executed by a provisioning administrator or above.\n        When omitted, the number(s) will be left assigned to the group.\n        An ErrorResponse will be returned if any number cannot be unassigned because of insufficient privilege.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "unassignPhoneNumbers", "required": false, "array": false, "type": "UnassignPhoneNumbersLevel", "type_schema": "xs:token", "enum": ["Group", "Service Provider"]}]]}, {"name": "GroupAutoAttendantConsolidatedModifyInstanceRequest", "tags": ["services"], "documentation": "Request to modify an Auto Attendant instance and assign services to the Auto Attendant.\n        Only Group and Enterprise level schedules are accepted.\n        The response is either SuccessResponse or ErrorResponse.\n\n        When phone numbers are un-assigned from the user, the unused numbers may be un-assigned from the group and service provider. If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be un-assigned from the group if the command is executed by a service provider administrator or above.\n        When set to 'Service Provider', they will be un-assigned from the group and service provider if the command is executed by a provisioning administrator or above.\n        When omitted, the number(s) will be left assigned to the group.\n        An ErrorResponse will be returned if any number cannot be unassigned because of insufficient privilege.\n\n        If the phoneNumber has not been assigned to the group and addPhoneNumberToGroup is set to true, it will be added to group if needed if the command is executed by a service provider administrator and above. The command will fail otherwise.\n\n        The following elements are only used in AS data mode:\n          holidayMenu.\n        The following elements are only valid for Standard Auto\n        Attendants:\n          holidayMenu", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "unassignPhoneNumbers", "required": false, "array": false, "type": "UnassignPhoneNumbersLevel", "type_schema": "xs:token", "enum": ["Group", "Service Provider"]}, {"name": "addPhoneNumberToGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "firstDigitTimeoutSeconds", "required": false, "array": false, "type": "FirstDigitTimoutSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "enableVideo", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "businessHours", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "extensionDialingScope", "required": false, "array": false, "type": "AutoAttendantDialingScope", "type_schema": "xs:token", "enum": ["Enterprise", "Group", "Department"]}, {"name": "nameDialingScope", "required": false, "array": false, "type": "AutoAttendantDialingScope", "type_schema": "xs:token", "enum": ["Enterprise", "Group", "Department"]}, {"name": "nameDialingEntries", "required": false, "array": false, "type": "AutoAttendantNameDialingEntry", "type_schema": "xs:token", "enum": ["LastName + FirstName", "LastName + FirstName or FirstName + LastName"]}, {"name": "businessHoursMenu", "required": false, "array": false, "type": "AutoAttendantModifyMenu20", "schema": [[{"name": "announcementSelection", "required": false, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableFirstMenuLevelExtensionDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyModifyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationModifyEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "afterHoursMenu", "required": false, "array": false, "type": "AutoAttendantModifyMenu20", "schema": [[{"name": "announcementSelection", "required": false, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableFirstMenuLevelExtensionDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyModifyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationModifyEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "holidayMenu", "required": false, "array": false, "type": "AutoAttendantModifyMenu20", "schema": [[{"name": "announcementSelection", "required": false, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableFirstMenuLevelExtensionDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyModifyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationModifyEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "serviceList", "required": false, "array": false, "type": "ReplacementConsolidatedUserServiceAssignmentList", "schema": [[{"name": "userServiceServiceName", "required": true, "array": true, "type": "ConsolidatedUserServiceAssignment", "schema": [[{"name": "userServiceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"name": "authorizedQuantity", "required": false, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}]]}]]}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupAutoAttendantDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a Auto Attendant instance from a group.\n\n        If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be unassigned from the group if the command is executed by a service provider administrator or above.\n        When set to 'Service Provider', they will be unassigned from the group and service provider if the command is executed by a provisioning administrator or above.\n        When omitted, the number(s) will be left assigned to the group.\n        An ErrorResponse with the type warning will be returned if any number cannot be unassigned because of insufficient privilege.\n\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupAutoAttendantGetInstanceListRequest", "tags": ["services"], "documentation": "Get a list of Auto Attendant instances within a group.\n        The response is either GroupAutoAttendantGetInstanceListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupDepartmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupAutoAttendantGetInstancePagedSortedListRequest", "tags": ["services"], "documentation": "Get a list of Auto Attendant instances within a group.\n        The response is either GroupAutoAttendantGetInstancePagedSortedListResponse or ErrorResponse.\n        If no sortOrder is included the response is sorted by Name ascending by default.\n\n        A limitation to the search by DN activation exists when the Number Activation mode is set to\n        Off. In this case DNs not assigned to users are never returned by queries with the\n        \"dnActivationSearchCriteria\" included.\n\n        If the responsePagingControl element is not provided,\n        the paging startIndex will be set to 1 by default,\n        and the responsePageSize will be set to the maximum responsePageSize by\n        default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupAutoAttendantGetInstancePagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactDnActivation", "required": false, "array": false, "type": "SearchCriteriaExactDnActivation", "schema": [[{"name": "activated", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaServiceStatus", "required": false, "array": false, "type": "SearchCriteriaServiceStatus", "schema": [[{"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactAutoAttendantType", "required": false, "array": false, "type": "SearchCriteriaExactAutoAttendantType", "schema": [[{"name": "type", "required": true, "array": false, "type": "AutoAttendantType", "type_schema": "xs:token", "enum": ["Basic", "Standard"]}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupAutoAttendantGetInstanceRequest20", "tags": ["services"], "documentation": "Request to get all the information of a Auto Attendant instance.\n        The response is either GroupAutoAttendantGetInstanceResponse20 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupAutoAttendantModifyActiveInstanceListRequest", "tags": ["services"], "documentation": "Request to set the active status of Auto Attendant instances.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceActivation", "required": false, "array": true, "type": "ServiceActivation", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupAutoAttendantModifyInstanceRequest20", "tags": ["services"], "documentation": "Request to modify an Auto Attendant instance.\n        Only Group and Enterprise level schedules are accepted.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements are only used in AS data mode:\n          holidayMenu.\n        The following elements are only valid for Standard Auto\n        Attendants:\n          holidayMenu", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "firstDigitTimeoutSeconds", "required": false, "array": false, "type": "FirstDigitTimoutSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "enableVideo", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "businessHours", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "extensionDialingScope", "required": false, "array": false, "type": "AutoAttendantDialingScope", "type_schema": "xs:token", "enum": ["Enterprise", "Group", "Department"]}, {"name": "nameDialingScope", "required": false, "array": false, "type": "AutoAttendantDialingScope", "type_schema": "xs:token", "enum": ["Enterprise", "Group", "Department"]}, {"name": "nameDialingEntries", "required": false, "array": false, "type": "AutoAttendantNameDialingEntry", "type_schema": "xs:token", "enum": ["LastName + FirstName", "LastName + FirstName or FirstName + LastName"]}, {"name": "businessHoursMenu", "required": false, "array": false, "type": "AutoAttendantModifyMenu20", "schema": [[{"name": "announcementSelection", "required": false, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableFirstMenuLevelExtensionDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyModifyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationModifyEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "afterHoursMenu", "required": false, "array": false, "type": "AutoAttendantModifyMenu20", "schema": [[{"name": "announcementSelection", "required": false, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableFirstMenuLevelExtensionDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyModifyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationModifyEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "holidayMenu", "required": false, "array": false, "type": "AutoAttendantModifyMenu20", "schema": [[{"name": "announcementSelection", "required": false, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableFirstMenuLevelExtensionDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyModifyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationModifyEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupAutoAttendantSubmenuAddRequest20", "tags": ["services"], "documentation": "Request to add an Auto Attendant submenu instance.\n        The response is either SuccessResponse or ErrorResponse.\n        This request is only valid for Standard auto attendants.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "submenuId", "required": true, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "announcementSelection", "required": true, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableLevelExtensionDialing", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "GroupAutoAttendantSubmenuDeleteListRequest", "tags": ["services"], "documentation": "Delete a submenu form an auto attendant.\n        The response is either SuccessResponse or ErrorResponse.\n        This request is only valid for Standard auto attendants.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "submenuId", "required": true, "array": true, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupAutoAttendantSubmenuGetListRequest", "tags": ["services"], "documentation": "Get a list of Auto Attendant Submenus.\n        The response is either GroupAutoAttendantSubmenuGetListResponse or ErrorResponse.\n        This request is only valid for Standard auto attendants.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupAutoAttendantSubmenuGetRequest20", "tags": ["services"], "documentation": "Request to get an Auto Attendant submenu instance.\n        The response is either GroupAutoAttendantSubmenuGetResponse20 or ErrorResponse.\n        This request is only valid for Standard auto attendants.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "submenuId", "required": true, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupAutoAttendantSubmenuGetUsageListRequest", "tags": ["services"], "documentation": "Get a list of Auto Attendant Business Hours Menu,After Hours Menu,Holiday Menu and Submenus that use this submenu.\n        The response is either GroupAutoAttendantSubmenuGetUsageListResponse or ErrorResponse.\n        This request is only valid for Standard auto attendants.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "submenuId", "required": true, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupAutoAttendantSubmenuModifyRequest20", "tags": ["services"], "documentation": "Request to modify an Auto Attendant submenu instance.\n        The response is either SuccessResponse or ErrorResponse.\n        This request is only valid for Standard auto attendants.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "submenuId", "required": true, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "newSubmenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "announcementSelection", "required": false, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "enableLevelExtensionDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "keyConfiguration", "required": false, "array": true, "type": "AutoAttendantKeyModifyConfiguration20", "schema": [[{"name": "key", "required": true, "array": false, "type": "AutoAttendantMenuKey", "type_schema": "xs:token", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#"]}, {"name": "entry", "required": true, "array": false, "type": "AutoAttendantKeyConfigurationModifyEntry20", "schema": [[{"name": "description", "required": false, "array": false, "type": "AutoAttendantMenuKeyDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "action", "required": true, "array": false, "type": "AutoAttendantKeyAction", "type_schema": "xs:token", "enum": ["Transfer With Prompt", "Transfer Without Prompt", "Transfer To Operator", "Name Dialing", "Extension Dialing", "Repeat Menu", "Exit", "Transfer To Mailbox", "Transfer To Submenu", "Return to Previous Menu", "Play Announcement"]}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "submenuId", "required": false, "array": false, "type": "AutoAttendantSubmenuId", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}]]}, {"name": "SystemAutomaticCallbackAddReleaseCauseListRequest", "tags": ["services"], "documentation": "Adds automatic callback release cause to the releaseCause attribute.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "releaseCause", "required": false, "array": true, "type": "AutomaticCallbackReleaseCause", "type_schema": "xs:token", "enum": ["Busy", "Forbidden", "Global Failure", "Request Failure", "Server Failure", "Translation Failure", "Temporarily Unavailable", "User Not Found", "Request Timeout"]}]]}, {"name": "SystemAutomaticCallbackDeleteReleaseCauseListRequest", "tags": ["services"], "documentation": "Deletes automatic callback release causes from the release cause attribute.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "releaseCause", "required": false, "array": true, "type": "AutomaticCallbackReleaseCause", "type_schema": "xs:token", "enum": ["Busy", "Forbidden", "Global Failure", "Request Failure", "Server Failure", "Translation Failure", "Temporarily Unavailable", "User Not Found", "Request Timeout"]}]]}, {"name": "SystemAutomaticCallbackGetReleaseCauseListRequest", "tags": ["services"], "documentation": "Request the system's automatic callback attributes.\n        The response is either a SystemAutomaticCallbackGetReleaseCauseListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemAutomaticCallbackGetRequest17", "tags": ["services"], "documentation": "Request the system's automatic callback attributes.\n        The response is either a SystemAutomaticCallbackGetResponse17 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemAutomaticCallbackModifyRequest15", "tags": ["services"], "documentation": "Modifies the system's automatic callback attributes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "monitorMinutes", "required": false, "array": false, "type": "AutomaticCallbackMonitorMinutes", "type_schema": "xs:int", "minimum": 5.0, "maximum": 180.0}, {"name": "maxMonitorsPerOriginator", "required": false, "array": false, "type": "AutomaticCallbackMaxMonitorsPerOriginator", "type_schema": "xs:int", "minimum": 1.0, "maximum": 30.0}, {"name": "maxCallbackRings", "required": false, "array": false, "type": "AutomaticCallbackMaxCallbackRings", "type_schema": "xs:int", "minimum": 3.0, "maximum": 8.0}, {"name": "maxMonitorsPerTerminator", "required": false, "array": false, "type": "AutomaticCallbackMaxMonitorsPerTerminator", "type_schema": "xs:int", "minimum": 1.0, "maximum": 30.0}, {"name": "terminatorIdleGuardSeconds", "required": false, "array": false, "type": "AutomaticCallbackTerminatorIdleGuardSeconds", "type_schema": "xs:int", "minimum": 5.0, "maximum": 300.0}, {"name": "callbackMethod", "required": false, "array": false, "type": "AutomaticCallbackMethod", "type_schema": "xs:token", "enum": ["Notify Only", "Notify If Possible And Polling Otherwise"]}, {"name": "pollingIntervalSeconds", "required": false, "array": false, "type": "AutomaticCallbackPollingIntervalSeconds", "type_schema": "xs:int", "minimum": 60.0, "maximum": 900.0}, {"name": "activationDigit", "required": false, "array": false, "type": "AutomaticCallbackActivationDigit", "type_schema": "xs:int", "minimum": 0.0, "maximum": 9.0}]]}, {"name": "UserAutomaticCallbackGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Automatic Callback.\n        The response is either a UserAutomaticCallbackGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserAutomaticCallbackModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Automatic Callback.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SystemAutomaticCollectCallGetRequest22", "tags": ["services"], "documentation": "Get system Automatic Collect Call service settings.\n        The response is either SystemAutomaticCollectCallGetResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": []}, {"name": "SystemAutomaticCollectCallModifyRequest", "tags": ["services"], "documentation": "Modify system Automatic Collect Call service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "enableAutomaticCollectCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableConnectTone", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeCountryCodeInCic", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SystemAutomaticCollectCallPrefixDigitsAddListRequest", "tags": ["services"], "documentation": "Add a system automatic collect call prefix digits entry.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "prefixDigitsEntry", "required": true, "array": true, "type": "AutomaticCollectCallPrefixDigitsEntry", "schema": [[{"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}, {"name": "prefixDigits", "required": true, "array": false, "type": "AutomaticCollectCallPrefixDigits", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}, {"name": "SystemAutomaticCollectCallPrefixDigitsDeleteListRequest", "tags": ["services"], "documentation": "Delete an entry in system automatic collect call prefix table.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "prefixDigitsEntry", "required": true, "array": true, "type": "AutomaticCollectCallPrefixDigitsEntry", "schema": [[{"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}, {"name": "prefixDigits", "required": true, "array": false, "type": "AutomaticCollectCallPrefixDigits", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}, {"name": "SystemAutomaticCollectCallPrefixDigitsGetListRequest", "tags": ["services"], "documentation": "Get the system automatic collect call prefix digits lists.\n        The response is either SystemAutomaticCollectCallPrefixDigitsGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "countryCode", "required": false, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}]]}, {"name": "UserAutomaticCollectCallGetRequest", "tags": ["services"], "documentation": "Get user Automatic Collect Call service settings.\n        The response is either UserAutomaticCollectCallGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserAutomaticCollectCallModifyRequest", "tags": ["services"], "documentation": "Modify user Automatic Collect Call service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableAutomaticCollectCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserAutomaticHoldRetrieveGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Automatic Hold/Retrieve.\n        The response is either a UserAutomaticHoldRetrieveGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserAutomaticHoldRetrieveModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Automatic Hold/Retrieve.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recallTimerSeconds", "required": false, "array": false, "type": "AutomaticHoldRetrieveRecallTimerSeconds", "type_schema": "xs:int", "minimum": 6.0, "maximum": 600.0}]]}, {"name": "UserBargeInExemptGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Barge In Exempt.\n        The response is either a UserBargeInExemptGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserBargeInExemptModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Barge In Exempt.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserBasicCallLogsGetListRequest14sp4", "tags": ["services"], "documentation": "Request user's call logs.\n        If the callLogType is not specified, all types of calls are returned.\n        The response is either a UserBasicCallLogsGetListResponse14sp4 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callLogType", "required": false, "array": false, "type": "CallLogsType", "type_schema": "xs:token", "enum": ["Placed", "Received", "Missed"]}, {"name": "formatNameAndNumber", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupBroadWorksAnywhereAddInstanceRequest", "tags": ["services"], "documentation": "Add a BroadWorks Anywhere instance to a group.\n        The domain is required in the serviceUserId.\n        The following elements are only used in AS data mode:\n          networkClassOfService\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "broadWorksAnywhereScope", "required": true, "array": false, "type": "BroadWorksAnywhereScope", "type_schema": "xs:token", "enum": ["Service Provider", "Group"]}, {"name": "promptForCLID", "required": true, "array": false, "type": "BroadWorksAnywhereCLIDPrompt", "type_schema": "xs:token", "enum": ["Always Prompt", "Never Prompt", "Prompt When Not Available"]}, {"name": "silentPromptMode", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "promptForPasscode", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupBroadWorksAnywhereDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a BroadWorks Anywhere instance from a group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupBroadWorksAnywhereGetInstanceListRequest", "tags": ["services"], "documentation": "Get a list of BroadWorks Anywhere instances within a group.\n        The response is either GroupBroadWorksAnywhereGetInstanceListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupDepartmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupBroadWorksAnywhereGetInstanceRequest19sp1", "tags": ["services"], "documentation": "Request to get all the information of a BroadWorks Anywhere instance.\n        The response is either GroupBroadWorksAnywhereGetInstanceResponse19sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupBroadWorksAnywhereModifyActiveInstanceListRequest", "tags": ["services"], "documentation": "Request to set the active status of BroadWorks Anywhere instances.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceActivation", "required": false, "array": true, "type": "ServiceActivation", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupBroadWorksAnywhereModifyInstanceRequest", "tags": ["services"], "documentation": "Request to modify a BroadWorks Anywhere instance.\n        The following elements are only used in AS data mode:\n          networkClassOfService\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "broadWorksAnywhereScope", "required": false, "array": false, "type": "BroadWorksAnywhereScope", "type_schema": "xs:token", "enum": ["Service Provider", "Group"]}, {"name": "promptForCLID", "required": false, "array": false, "type": "BroadWorksAnywhereCLIDPrompt", "type_schema": "xs:token", "enum": ["Always Prompt", "Never Prompt", "Prompt When Not Available"]}, {"name": "silentPromptMode", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "promptForPasscode", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "SystemBroadWorksAnywhereGetRequest", "tags": ["services"], "documentation": "Get the Broadworks Anywhere system parameters.\n        The response is either a SystemBroadWorksAnywhereGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemBroadWorksAnywhereModifyRequest", "tags": ["services"], "documentation": "Modify the BroadWorks Anywhere system parameters.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "enableTransferNotification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserBroadWorksAnywhereAddPhoneNumberRequest", "tags": ["services"], "documentation": "Add a broadworks Anywhere phone number.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "BroadWorksAnywherePhoneNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "outboundAlternateNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "broadworksCallControl", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useDiversionInhibitor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "answerConfirmationRequired", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserBroadWorksAnywhereAddSelectiveCriteriaRequest16", "tags": ["services"], "documentation": "Add a criteria to the user's BroadWorks Anywhere phone number.\n        The following elements are only used in AS data mode:\n          callToNumber\n\n        For the callToNumber, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "CriteriaFromDn", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "callToNumber", "required": false, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}, {"name": "UserBroadWorksAnywhereDeletePhoneNumberRequest", "tags": ["services"], "documentation": "Delete a broadworks anywhere phone number. Also deletes all the selective criteria for the phone number.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "UserBroadWorksAnywhereDeleteSelectiveCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the user's BroadWorks Anywhere phone number.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserBroadWorksAnywhereGetAvailablePortalListRequest21sp1", "tags": ["services"], "documentation": "Get a list of all the available BroadWorks Anywhere portal instances for a specific user\n        The response is either UserBroadWorksAnywhereGetAvailableListResponse21sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserBroadWorksAnywhereGetPhoneNumberPagedSortedListRequest", "tags": ["services"], "documentation": "Get the list of all the BroadWorks Anywhere phone numbers for the user.\n        If no sortOrder is included the response is sorted by Phone Number ascending by default.\n        The response is either a UserBroadWorksAnywhereGetPhoneNumberPagedSortedListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "searchCriteriaLocation", "required": false, "array": true, "type": "SearchCriteriaLocation", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactLocationEnabled", "required": false, "array": false, "type": "SearchCriteriaExactLocationEnabled", "schema": [[{"name": "enabled", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"choice": [{"name": "sortByLocation", "required": true, "array": false, "type": "SortByLocation", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByEnabled", "required": true, "array": false, "type": "SortByEnabled", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]]}, {"name": "UserBroadWorksAnywhereGetPhoneNumberRequest", "tags": ["services"], "documentation": "Get a broadworks anywhere phone number\n        The response is UserBroadWorksAnywhereGetPhoneNumberResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "UserBroadWorksAnywhereGetRequest16sp2", "tags": ["services"], "documentation": "Get the list of all the BroadWorks Anywhere phone numbers for the user.\n        The response is either a UserBroadWorksAnywhereGetResponse16sp2 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserBroadWorksAnywhereGetSelectiveCriteriaRequest21", "tags": ["services"], "documentation": "Get a criteria for the user's BroadWorks Anywhere phone number.\n        The response is either a UserBroadWorksAnywhereGetSelectiveCriteriaResponse21 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserBroadWorksAnywhereModifyPhoneNumberRequest", "tags": ["services"], "documentation": "Modify a BroadWorks Anywhere phone number\n          The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "newPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "BroadWorksAnywherePhoneNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "outboundAlternateNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "broadworksCallControl", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useDiversionInhibitor", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "answerConfirmationRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserBroadWorksAnywhereModifyRequest", "tags": ["services"], "documentation": "Request to modify the user-level settings for the BroadWorks Anywhere service for a specified user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alertAllLocationsForClickToDialCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertAllLocationsForGroupPagingCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserBroadWorksAnywhereModifySelectiveCriteriaRequest", "tags": ["services"], "documentation": "Modify selective criteria for the user's BroadWorks Anywhere phone number.\n        The following elements are only used in AS data mode:\n          callToNumbers\n\n        For the callToNumbers in the callToNumberList, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "CriteriaFromDnModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callToNumberList", "required": false, "array": false, "type": "ReplacementCallToNumberList", "schema": [[{"name": "callToNumber", "required": true, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]]}, {"name": "EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentListRequest", "tags": ["services"], "documentation": "Request a summary table of all Mobile Subscriber Directory Numbers in an enterprise.\n        The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaMobileSubscriberDirectoryNumber", "required": false, "array": true, "type": "SearchCriteriaMobileSubscriberDirectoryNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactMobileNetwork", "required": false, "array": false, "type": "SearchCriteriaExactMobileNetwork", "schema": [[{"name": "mobileNetworkName", "required": true, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequest22", "tags": ["services"], "documentation": "Request a summary table of all Mobile Subscriber Directory Numbers in an enterprise.\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the  responsePageSize will be set to  the maximum ResponsePageSize by default.\n        If no sortOrder is included the response is sorted by Mobile Number ascending by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n        The department in both the search criteria and sort by fields refer to the department of the user.\n        The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "includeTotalNumberOfRows", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderEnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedList", "schema": [{"choice": [{"name": "sortByMobileDirectoryNumber", "required": true, "array": false, "type": "SortByMobileDirectoryNumber", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDepartmentName", "required": true, "array": false, "type": "SortByDepartmentName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDnAvailable", "required": true, "array": false, "type": "SortByDnAvailable", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaMobileSubscriberDirectoryNumber", "required": false, "array": true, "type": "SearchCriteriaMobileSubscriberDirectoryNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactMobileNetwork", "required": false, "array": true, "type": "SearchCriteriaExactMobileNetwork", "schema": [[{"name": "mobileNetworkName", "required": true, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "searchCriteriaExactMobileDnAvailability", "required": false, "array": false, "type": "SearchCriteriaExactMobileDnAvailability", "schema": [[{"name": "available", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest22", "tags": ["services"], "documentation": "Request a list of available Mobile Subscriber Directory Numbers not yet assigned to any user.\n        The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequest22", "tags": ["services"], "documentation": "Request a list of available Mobile Subscriber Directory Numbers not yet assigned to any user.\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        If no sortOrder is included the response is sorted by Mobile Number ascending by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n        The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "includeTotalNumberOfRows", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortByMobileDirectoryNumber", "required": false, "array": false, "type": "SortByMobileDirectoryNumber", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "searchCriteriaMobileSubscriberDirectoryNumber", "required": false, "array": true, "type": "SearchCriteriaMobileSubscriberDirectoryNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupBroadWorksMobilityGetRequest22V4", "tags": ["services"], "documentation": "Get the group's BroadWorks Mobility settings.\n        The response is either a GroupBroadWorksMobilityGetResponse22V4 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupBroadWorksMobilityMobileSubscriberDirectoryNumberAssignListRequest", "tags": ["services"], "documentation": "Assign Mobile Subscriber Directory Numbers to a group. It is possible to\n        add a single DN,or a list of DNs.\n.       This command is applicable only for group in a service provider and will fail for a group in an enterprise.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "mobileSubscriberDirectoryNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "GroupBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentListRequest", "tags": ["services"], "documentation": "Get the list of assigned and unassigned Mobile Subscriber Directory Numbers in a group. Each DN can be assigned to a user.\n.       This command is applicable only for group in a service provider and will fail for a group in an enterprise.\n        The response is either a GroupBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaMobileSubscriberDirectoryNumber", "required": false, "array": true, "type": "SearchCriteriaMobileSubscriberDirectoryNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest", "tags": ["services"], "documentation": "Request a list of available Mobile Subscriber Directory Numbers not yet assigned to any user.\n.       This command is applicable only for group in a service provider and will fail for a group in an enterprise.\n        The response is either GroupBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupBroadWorksMobilityMobileSubscriberDirectoryNumberUnassignListRequest", "tags": ["services"], "documentation": "Unassign Mobile Subscriber Directory Numbers from a group. It is possible to unassign either: a single DN, or a list of DNs.\n.       This command is applicable only for group in a service provider and will fail for a group in an enterprise.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "mobileSubscriberDirectoryNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "GroupBroadWorksMobilityModifyRequest", "tags": ["services"], "documentation": "Modify the group level broadworks mobility service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useSettingLevel", "required": false, "array": false, "type": "BroadWorksMobilityGroupSettingLevel", "type_schema": "xs:token", "enum": ["Group", "ServiceProvider"]}, {"name": "enableLocationServices", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableMSRNLookup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableMobileStateChecking", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "denyCallOriginations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "denyCallTerminations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAnnouncementSuppression", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableInternalCLIDDelivery", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableInternalCLIDDeliveryAccessLocations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableEnhancedUnreachableStateChecking", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableNetworkCallBarringStatusCheck", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkTranslationIndex", "required": false, "array": false, "type": "NetworkTranslationIndex", "type_schema": "xs:token", "minLength": 1, "maxLength": 128}, {"name": "enablePBXRoutePolicy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "pbxRouteIdentity", "required": false, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}, {"name": "ServiceProviderBroadWorksMobilityGetRequest22V3", "tags": ["services"], "documentation": "Get the service provider BroadWorks Mobility service settings.\n        The response is either a ServiceProviderBroadWorksMobilityGetResponse22V3 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequest21", "tags": ["services"], "documentation": "Adds Mobile Subscriber Directory Numbers to a service provider-mobile network combination. It is possible to add a single DN,\n        or a list of DNs.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "mobileNetworkName", "required": true, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mobileSubscriberDirectoryNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberDeleteListRequest", "tags": ["services"], "documentation": "Deletes Mobile Subscriber Directory Numbers from a service provider. It is possible to delete either: a single number,\n        or a list of numbers.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "mobileSubscriberDirectoryNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest", "tags": ["services"], "documentation": "Request a list of available Mobile Subscriber Directory Numbers not yet assigned to any group. This command is applicable only for service providers and will fail for enterprises.\n        The response is either ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberGetSummaryListRequest", "tags": ["services"], "documentation": "Request a summary table of all Mobile Subscriber Directory Numbers in a service provider. This command is applicable only for service providers and will fail for enterprises.\n        The response is either ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberGetSummaryListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaMobileSubscriberDirectoryNumber", "required": false, "array": true, "type": "SearchCriteriaMobileSubscriberDirectoryNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactMobileNetwork", "required": false, "array": false, "type": "SearchCriteriaExactMobileNetwork", "schema": [[{"name": "mobileNetworkName", "required": true, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "ServiceProviderBroadWorksMobilityModifyRequest", "tags": ["services"], "documentation": "Modify the service provider level BroadWorks Mobility service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useSettingLevel", "required": false, "array": false, "type": "BroadWorksMobilityServiceProviderSettingLevel", "type_schema": "xs:token", "enum": ["ServiceProvider", "System"]}, {"name": "enableLocationServices", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableMSRNLookup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableMobileStateChecking", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "denyCallOriginations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "denyCallTerminations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAnnouncementSuppression", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableInternalCLIDDelivery", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableInternalCLIDDeliveryAccessLocations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableEnhancedUnreachableStateChecking", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableNetworkCallBarringStatusCheck", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkTranslationIndex", "required": false, "array": false, "type": "NetworkTranslationIndex", "type_schema": "xs:token", "minLength": 1, "maxLength": 128}]]}, {"name": "SystemBroadWorksMobilityAddIMRNListRequest", "tags": ["services"], "documentation": "Adds BroadWorks Mobility IMRN numbers to the system. It is possible to add either:\n        a single number, a list of numbers, or a range of numbers, or any combination thereof.\n        The response is either a SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "imrnNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "numberRange", "required": false, "array": true, "type": "DNRange", "schema": [[{"name": "minPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "maxPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "SystemBroadWorksMobilityAddMobileNetworkIMRNListRequest", "tags": ["services"], "documentation": "Adds BroadWorks Mobility IMRN numbers to a Mobile Network. It is possible to add either:\n        a single number, a list of numbers, or a range of numbers, or any combination thereof.\n        The response is either a SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "mobileNetworkName", "required": true, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "imrnNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "numberRange", "required": false, "array": true, "type": "DNRange", "schema": [[{"name": "minPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "maxPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "SystemBroadWorksMobilityDeleteIMRNListRequest", "tags": ["services"], "documentation": "Removes a BroadWorks Mobility IMRN number from the system.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "imrnNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "SystemBroadWorksMobilityDeleteMobileNetworkIMRNListRequest", "tags": ["services"], "documentation": "Remove BroadWorks Mobility IMRN numbers from a Mobile Network.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "mobileNetworkName", "required": true, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "imrnNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "SystemBroadWorksMobilityGeographicalPoolAddRequest", "tags": ["services"], "documentation": "Add a geographical pool to the system.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "BroadWorksMobilityGeographicalPoolName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}, {"name": "isDefault", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "BroadWorksMobilityGeographicalPoolDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityGeographicalPoolDeleteRequest", "tags": ["services"], "documentation": "Delete a geographical pool from the system.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "BroadWorksMobilityGeographicalPoolName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityGeographicalPoolGetListRequest", "tags": ["services"], "documentation": "Get a list of geographical pools defined in the system. If countryCode is set, return the IMRN pools associated with the country code.\n        The response is either SystemBroadWorksMobilityGeographicalPoolGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "countryCode", "required": false, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}]]}, {"name": "SystemBroadWorksMobilityGeographicalPoolIMRNAddListRequest", "tags": ["services"], "documentation": "Adds BroadWorks Mobility IMRN numbers to a geographical pool. It is possible to add either:\n        a single number, a list of numbers, or a range of numbers, or any combination thereof.\n        The response is either a SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "geographicalPoolName", "required": true, "array": false, "type": "BroadWorksMobilityGeographicalPoolName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "imrnNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "numberRange", "required": false, "array": true, "type": "DNRange", "schema": [[{"name": "minPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "maxPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "SystemBroadWorksMobilityGeographicalPoolIMRNDeleteListRequest", "tags": ["services"], "documentation": "Remove BroadWorks Mobility IMRN numbers from a geographical pool.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "geographicalPoolName", "required": true, "array": false, "type": "BroadWorksMobilityGeographicalPoolName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "imrnNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "SystemBroadWorksMobilityGeographicalPoolIMRNGetListRequest", "tags": ["services"], "documentation": "Get a list of BroadWorks Mobility IMRN numbers from a geographical pool.\n        The response is either a SystemBroadWorksMobilityGeographicalPoolIMRNGetListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "geographicalPoolName", "required": true, "array": false, "type": "BroadWorksMobilityGeographicalPoolName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "searchCriteriaIMRN", "required": false, "array": true, "type": "SearchCriteriaIMRN", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemBroadWorksMobilityGeographicalPoolModifyRequest", "tags": ["services"], "documentation": "Modify the settings of a geographical pool.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "BroadWorksMobilityGeographicalPoolName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "BroadWorksMobilityGeographicalPoolName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isDefault", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "BroadWorksMobilityGeographicalPoolDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityGeographicalPoolPrefixAddListRequest", "tags": ["services"], "documentation": "Add a list of geographical prefixes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "geographicalPoolName", "required": true, "array": false, "type": "BroadWorksMobilityGeographicalPoolName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "prefix", "required": true, "array": true, "type": "BroadWorksMobilityGeographicalPoolPrefix", "type_schema": "xs:token", "minLength": 2, "maxLength": 5}]]}, {"name": "SystemBroadWorksMobilityGeographicalPoolPrefixDeleteListRequest", "tags": ["services"], "documentation": "Delete a list of geographical prefixes from a pool.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "geographicalPoolName", "required": true, "array": false, "type": "BroadWorksMobilityGeographicalPoolName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "prefix", "required": true, "array": true, "type": "BroadWorksMobilityGeographicalPoolPrefix", "type_schema": "xs:token", "minLength": 2, "maxLength": 5}]]}, {"name": "SystemBroadWorksMobilityGeographicalPoolPrefixGetListRequest", "tags": ["services"], "documentation": "Gets a list of geographical prefixes belonging to a geographical pool.\n        The response is either SystemBroadWorksMobilityGeographicalPoolPrefixGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "geographicalPoolName", "required": true, "array": false, "type": "BroadWorksMobilityGeographicalPoolName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityGetIMRNListRequest", "tags": ["services"], "documentation": "Request to get the list of BroadWorks Mobility IMRN numbers defined in the system.\n        The response is either a SystemBroadWorksMobilityGetIMRNListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "searchCriteriaIMRN", "required": false, "array": true, "type": "SearchCriteriaIMRN", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemBroadWorksMobilityGetMobileNetworkIMRNListRequest", "tags": ["services"], "documentation": "Get a list of BroadWorks Mobility IMRN numbers from a Mobile Network.\n        The response is either a SystemBroadWorksMobilityGetMobileNetworkIMRNListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "mobileNetworkName", "required": true, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "searchCriteriaIMRN", "required": false, "array": true, "type": "SearchCriteriaIMRN", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemBroadWorksMobilityGetRequest22V3", "tags": ["services"], "documentation": "Get the broadworks mobility system parameters.\n        The response is either a SystemBroadWorksMobilityGetResponse22V3 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemBroadWorksMobilityMobileNetworkAddRequest", "tags": ["services"], "documentation": "Add a Mobile Network.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "scfSignalingNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "scfSignalingPort", "required": false, "array": false, "type": "Port", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65535.0}, {"name": "refreshPeriodSeconds", "required": true, "array": false, "type": "SCFRefreshPeriodSeconds", "type_schema": "xs:int", "minimum": 10.0, "maximum": 1800.0}, {"name": "maxConsecutiveFailures", "required": true, "array": false, "type": "SCFMaxConsecutiveFailures", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "maxResponseWaitTimeMilliseconds", "required": true, "array": false, "type": "SCFMaxResponseWaitTimeMilliseconds", "type_schema": "xs:int", "minimum": 100.0, "maximum": 10000.0}, {"name": "enableAnnouncementSuppression", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceAccessCodeListName", "required": false, "array": false, "type": "ServiceAccessCodeListName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityMobileNetworkDeleteRequest", "tags": ["services"], "documentation": "Delete a Mobile Network.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityMobileNetworkGetListRequest", "tags": ["services"], "documentation": "Get the list of Mobile Networks.\n        The response is either SystemBroadWorksMobilityMobileNetworkGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemBroadWorksMobilityMobileNetworkGetRequest", "tags": ["services"], "documentation": "Get a Mobile Network.\n        The response is either SystemBroadWorksMobilityMobileNetworkGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityMobileNetworkModifyRequest", "tags": ["services"], "documentation": "Modify a Mobile Network.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "scfSignalingNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "scfSignalingPort", "required": false, "array": false, "type": "Port", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65535.0}, {"name": "refreshPeriodSeconds", "required": false, "array": false, "type": "SCFRefreshPeriodSeconds", "type_schema": "xs:int", "minimum": 10.0, "maximum": 1800.0}, {"name": "maxConsecutiveFailures", "required": false, "array": false, "type": "SCFMaxConsecutiveFailures", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "maxResponseWaitTimeMilliseconds", "required": false, "array": false, "type": "SCFMaxResponseWaitTimeMilliseconds", "type_schema": "xs:int", "minimum": 100.0, "maximum": 10000.0}, {"name": "enableAnnouncementSuppression", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceAccessCodeListName", "required": false, "array": false, "type": "ServiceAccessCodeListName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityMobileSubscriberDirectoryNumberGetSummaryListRequest", "tags": ["services"], "documentation": "Request a summary table of all Mobile Subscriber Directory Numbers in a system.\n        If reseller administrator sends the request, searchCriteriaResellerId is ignored. All the mobile subscriber\n        directory numbers in the administrator's reseller meeting the search criteria are returned.\n        The response is either SystemBroadWorksMobilityMobileSubscriberDirectoryNumberGetSummaryListResponse or ErrorResponse.\n\n        The following data elements are only used in AS data mode:\n          searchCriteriaResellerId", "type": "core:OCIRequest", "schema": [[{"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaMobileSubscriberDirectoryNumber", "required": false, "array": true, "type": "SearchCriteriaMobileSubscriberDirectoryNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactMobileNetwork", "required": false, "array": false, "type": "SearchCriteriaExactMobileNetwork", "schema": [[{"name": "mobileNetworkName", "required": true, "array": false, "type": "BroadWorksMobilityMobileNetworkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactOrganizationType", "required": false, "array": false, "type": "SearchCriteriaExactOrganizationType", "schema": [[{"name": "organizationType", "required": true, "array": false, "type": "OrganizationType", "type_schema": "xs:token", "enum": ["Service Provider", "Enterprise"]}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaResellerId", "required": false, "array": true, "type": "SearchCriteriaResellerId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemBroadWorksMobilityModifyRequest21", "tags": ["services"], "documentation": "Modify the BroadWorks Mobility system parameters.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "enableLocationServices", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableMSRNLookup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableMobileStateChecking", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "denyCallOriginations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "denyCallTerminations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "imrnTimeoutMilliseconds", "required": false, "array": false, "type": "IMRNTimeoutMilliseconds", "type_schema": "xs:int", "minimum": 100.0, "maximum": 60000.0}, {"name": "enableInternalCLIDDelivery", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeRedirectForMobilityTermination", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableInternalCLIDDeliveryAccessLocations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableEnhancedUnreachableStateChecking", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableNetworkCallBarringStatusCheck", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkTranslationIndex", "required": false, "array": false, "type": "NetworkTranslationIndex", "type_schema": "xs:token", "minLength": 1, "maxLength": 128}]]}, {"name": "SystemBroadWorksMobilityServiceAccessCodeAddRequest21", "tags": ["services"], "documentation": "Add a service access code to a list.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceAccessCodeListName", "required": true, "array": false, "type": "ServiceAccessCodeListName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}, {"name": "serviceAccessCode", "required": true, "array": false, "type": "ServiceAccessCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "description", "required": false, "array": false, "type": "ServiceAccessCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityServiceAccessCodeDeleteRequest21", "tags": ["services"], "documentation": "Delete a service access code from a list.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceAccessCodeListName", "required": true, "array": false, "type": "ServiceAccessCodeListName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}, {"name": "serviceAccessCode", "required": true, "array": false, "type": "ServiceAccessCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "SystemBroadWorksMobilityServiceAccessCodeGetListRequest21", "tags": ["services"], "documentation": "Get a list of system service access codes.\n        The response is either SystemBroadWorksMobilityServiceAccessCodeGetListResponse21 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceAccessCodeListName", "required": true, "array": false, "type": "ServiceAccessCodeListName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityServiceAccessCodeListAddRequest", "tags": ["services"], "documentation": "Add a Service Access Code list.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceAccessCodeListName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityServiceAccessCodeListDeleteRequest", "tags": ["services"], "documentation": "Delete a Service Access Code list.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceAccessCodeListName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityServiceAccessCodeListGetListRequest", "tags": ["services"], "documentation": "Get the list of Service Access Code lists.\n        The response is either SystemBroadWorksMobilityServiceAccessCodeListGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemBroadWorksMobilityServiceAccessCodeListModifyRequest", "tags": ["services"], "documentation": "Modify a Service Access Code list.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceAccessCodeListName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "ServiceAccessCodeListName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityServiceAccessCodeListUsageGetRequest", "tags": ["services"], "documentation": "Get all the Mobile Networks using a given Service Access Code list.\n        The response is either SystemBroadWorksMobilityServiceAccessCodeListUsageGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceAccessCodeListName", "required": true, "array": false, "type": "ServiceAccessCodeListName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemBroadWorksMobilityServiceAccessCodeModifyRequest21", "tags": ["services"], "documentation": "Modify a service access code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceAccessCodeListName", "required": true, "array": false, "type": "ServiceAccessCodeListName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}, {"name": "serviceAccessCode", "required": true, "array": false, "type": "ServiceAccessCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "description", "required": false, "array": false, "type": "ServiceAccessCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "UserBroadworksMobilityAddMobileIdentityUsingSharedCallAppearanceRequest22", "tags": ["services"], "documentation": "Adding a new mobile identity using the Share Call Appearance.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          useHotline, use value false in XS data mode\n          hotlineContact\n\n        The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "AccessDeviceEndpointKey", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "mobileNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "BroadWorksMobilityUserMobileIdentityDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isPrimary", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAlerting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertAgentCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertClickToDialCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertGroupPagingCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMobilityCallingLineID", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableDiversionInhibitor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "requireAnswerConfirmation", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "broadworksCallControl", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSettingLevel", "required": true, "array": false, "type": "BroadWorksMobilityUserSettingLevel", "type_schema": "xs:token", "enum": ["Group", "User"]}, {"name": "denyCallOriginations", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "denyCallTerminations", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "devicesToRing", "required": true, "array": false, "type": "BroadWorksMobilityPhoneToRing", "type_schema": "xs:token", "enum": ["Fixed", "Mobile", "Both"]}, {"name": "includeSharedCallAppearance", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeBroadworksAnywhere", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeExecutiveAssistant", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mobileNumberAlerted", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "enableCallAnchoring", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleGlobalKey", "schema": [[{"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "scheduleLevel", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleGlobalKey", "schema": [[{"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "scheduleLevel", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "enableDirectRouting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "markCDRAsEnterpriseGroupCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useHotline", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserBroadWorksMobilityGetRequest21sp1", "tags": ["services"], "documentation": "Get the user's BroadWorks Mobility service settings with details for DNs.\n        The response is either a UserBroadWorksMobilityGetResponse21sp1 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserBroadWorksMobilityMobileIdentityAddRequest22V2", "tags": ["services"], "documentation": "Add a mobile identity to the user's list of mobile identities.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "mobileNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "BroadWorksMobilityUserMobileIdentityDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isPrimary", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAlerting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertAgentCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertClickToDialCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertGroupPagingCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMobilityCallingLineID", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableDiversionInhibitor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "requireAnswerConfirmation", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "broadworksCallControl", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSettingLevel", "required": true, "array": false, "type": "BroadWorksMobilityUserSettingLevel", "type_schema": "xs:token", "enum": ["Group", "User"]}, {"name": "denyCallOriginations", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "denyCallTerminations", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "devicesToRing", "required": true, "array": false, "type": "BroadWorksMobilityPhoneToRing", "type_schema": "xs:token", "enum": ["Fixed", "Mobile", "Both"]}, {"name": "includeSharedCallAppearance", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeBroadworksAnywhere", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeExecutiveAssistant", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mobileNumberAlerted", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "enableCallAnchoring", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleGlobalKey", "schema": [[{"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "scheduleLevel", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleGlobalKey", "schema": [[{"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "scheduleLevel", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "enableDirectRouting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "markCDRAsEnterpriseGroupCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMobilityConnectedIdentity", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkTranslationIndex", "required": false, "array": false, "type": "NetworkTranslationIndex", "type_schema": "xs:token", "minLength": 1, "maxLength": 128}, {"choice": [{"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "AccessDeviceEndpointAndHotlineAdd", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "privateIdentity", "required": false, "array": false, "type": "AccessDeviceEndpointPrivateIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}, {"name": "useHotline", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "outboundAlternateNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]]}, {"name": "UserBroadWorksMobilityMobileIdentityConsolidatedAddRequest22", "tags": ["services"], "documentation": "Add a mobile identity to the user's list of mobile identities.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "mobileNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "BroadWorksMobilityUserMobileIdentityDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isPrimary", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAlerting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertAgentCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertClickToDialCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertGroupPagingCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMobilityCallingLineID", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableDiversionInhibitor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "requireAnswerConfirmation", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "broadworksCallControl", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSettingLevel", "required": true, "array": false, "type": "BroadWorksMobilityUserSettingLevel", "type_schema": "xs:token", "enum": ["Group", "User"]}, {"name": "denyCallOriginations", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "denyCallTerminations", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "devicesToRing", "required": true, "array": false, "type": "BroadWorksMobilityPhoneToRing", "type_schema": "xs:token", "enum": ["Fixed", "Mobile", "Both"]}, {"name": "includeSharedCallAppearance", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeBroadworksAnywhere", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeExecutiveAssistant", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mobileNumberAlerted", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "enableCallAnchoring", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleGlobalKey", "schema": [[{"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "scheduleLevel", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleGlobalKey", "schema": [[{"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "scheduleLevel", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "enableDirectRouting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "markCDRAsEnterpriseGroupCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"choice": [{"name": "accessDeviceEndpoint", "required": false, "array": false, "type": "ConsolidatedSharedCallAppearanceAccessDeviceMultipleIdentityEndpointAdd22", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "privateIdentity", "required": false, "array": false, "type": "AccessDeviceEndpointPrivateIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowOrigination", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowTermination", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "deviceType", "required": false, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "protocol", "required": false, "array": false, "type": "AccessDeviceProtocol", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "netAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": false, "array": false, "type": "Port1025", "type_schema": "xs:int", "minimum": 1025.0, "maximum": 65535.0}, {"name": "outboundProxyServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "stunServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "macAddress", "required": false, "array": false, "type": "AccessDeviceMACAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 12}, {"name": "serialNumber", "required": false, "array": false, "type": "AccessDeviceSerialNumber", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "AccessDeviceDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "physicalLocation", "required": false, "array": false, "type": "AccessDevicePhysicalLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "transportProtocol", "required": false, "array": false, "type": "ExtendedTransportProtocol", "type_schema": "xs:token", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, {"name": "useCustomUserNamePassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "accessDeviceCredentials", "required": false, "array": false, "type": "DeviceManagementUserNamePassword16", "schema": [[{"name": "userName", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "password", "required": true, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"name": "useHotline", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "outboundAlternateNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]]}, {"name": "UserBroadWorksMobilityMobileIdentityConsolidatedDeleteRequest", "tags": ["services"], "documentation": "Delete a mobile identity from the user's list of mobile identities.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        An ErrorResponse will be returned if any device cannot be deleted because of insufficient privilege.\n        When a delete request is attempted on the primary mobile identity, the delete will fail unless it is the last mobile identity in the user's list.\n\n        If deleteExistingDevices is set to true, after the mobile identity is deleted, any device that is only used by the deleted mobile identity prior to the deletion will be deleted if the command is executed with the correct priviledge.\n  Group administrator or above running this command can delete any group level devices. Service provider administrator or above can delete any service provider and group devices. Provisioning administrator or above can delete any devices.\n  An ErrorResponse with the type warning will be returned if any device cannot be deleted because of insufficient privilege.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "mobileNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "deleteExistingDevices", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserBroadWorksMobilityMobileIdentityConsolidatedModifyRequest", "tags": ["services"], "documentation": "Modify the settings for one of the user's BroadWorks Mobility mobile Identities.\n        The response is either a SuccessResponse or an ErrorResponse.\n        If deleteExistingDevices is set to true, when the devices for the endpoint are changed, devices with no more endpoint will be deleted if the command is executed with the correct privilege.\n\n        The request fails when enableAlerting or timeSchedule or holidaySchedule are included in the request when the use mobile identity call anchoring controls for the user  is disabled.\n\n        The description, enableAlerting, alertAgentCalls, alertClickToDialCalls, alertGroupPagingCalls, useMobilityCallingLineID, enableDiversionInhibitor, requireAnswerConfirmation, broadworksCallControl, devicesToRing, includeSharedCallAppearance, includeBroadworksAnywhere, includeExecutiveAssistance, mobileNumberAlerted, enableCallAnchoring, timeSchedule and holidaySchedule  parameters require an authorization level of User for modification when the BroadWorks Mobility service is on.\n        The isPrimary, useSettingLevel, denyCallOrigination, denyCallTerminations, accessDeviceEndpoint, outboundAlternateNumber, enableDirectRouting, markCDRAsEnterpriseGroupCalls and networkTranslationIndex parameters require an authorization level of Group for modification.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "mobileNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "deleteExistingDevices", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "BroadWorksMobilityUserMobileIdentityDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isPrimary", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAlerting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertAgentCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertClickToDialCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertGroupPagingCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMobilityCallingLineID", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableDiversionInhibitor", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "requireAnswerConfirmation", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "broadworksCallControl", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSettingLevel", "required": false, "array": false, "type": "BroadWorksMobilityUserSettingLevel", "type_schema": "xs:token", "enum": ["Group", "User"]}, {"name": "denyCallOriginations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "denyCallTerminations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "devicesToRing", "required": false, "array": false, "type": "BroadWorksMobilityPhoneToRing", "type_schema": "xs:token", "enum": ["Fixed", "Mobile", "Both"]}, {"name": "includeSharedCallAppearance", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeBroadworksAnywhere", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeExecutiveAssistant", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mobileNumbersAlerted", "required": false, "array": false, "type": "BroadWorksMobilityAlertingMobileNumberReplacementList", "schema": [[{"name": "mobileNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "enableCallAnchoring", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleGlobalKey", "schema": [[{"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "scheduleLevel", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleGlobalKey", "schema": [[{"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "scheduleLevel", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "enableDirectRouting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "markCDRAsEnterpriseGroupCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMobilityConnectedIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkTranslationIndex", "required": false, "array": false, "type": "NetworkTranslationIndex", "type_schema": "xs:token", "minLength": 1, "maxLength": 128}, {"choice": [{"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "ConsolidatedSharedCallAppearanceAccessDeviceMultipleIdentityEndpoint", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "privateIdentity", "required": false, "array": false, "type": "AccessDeviceEndpointPrivateIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowOrigination", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowTermination", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "deviceType", "required": false, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "protocol", "required": false, "array": false, "type": "AccessDeviceProtocol", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "netAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": false, "array": false, "type": "Port1025", "type_schema": "xs:int", "minimum": 1025.0, "maximum": 65535.0}, {"name": "outboundProxyServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "stunServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "macAddress", "required": false, "array": false, "type": "AccessDeviceMACAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 12}, {"name": "serialNumber", "required": false, "array": false, "type": "AccessDeviceSerialNumber", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "AccessDeviceDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "physicalLocation", "required": false, "array": false, "type": "AccessDevicePhysicalLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "transportProtocol", "required": false, "array": false, "type": "ExtendedTransportProtocol", "type_schema": "xs:token", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, {"name": "useCustomUserNamePassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "accessDeviceCredentials", "required": false, "array": false, "type": "DeviceManagementUserNamePassword16", "schema": [[{"name": "userName", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "password", "required": true, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"name": "useHotline", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "outboundAlternateNumber", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]]}, {"name": "UserBroadWorksMobilityMobileIdentityDeleteRequest", "tags": ["services"], "documentation": "Delete a mobile identity from the user's list of mobile identities.\n        The response is either a SuccessResponse or an ErrorResponse. If another Mobile Identity is set to ring mobile only and only has this mobile identity\n        in the alerting list, the identity is deleted and ErrorResponse is returned. The ErrorResponse is info type and  contains the affected mobile numbers\n        in the summary.\n        When a delete request is attempted on the primary mobile identity, the delete will fail unless it is the last mobile identity in the user's list.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "mobileNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "UserBroadWorksMobilityMobileIdentityGetRequest22V3", "tags": ["services"], "documentation": "Get the settings for a user's specified mobile identity.\n        The response is either a UserBroadWorksMobilityMobileIdentityGetResponse22V3 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "mobileNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "UserBroadWorksMobilityMobileIdentityModifyRequest", "tags": ["services"], "documentation": "Modify the settings for one of the user's BroadWorks Mobility mobile Identities.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The request fails when enableAlerting or timeSchedule or holidaySchedule are included in the request when the user's use mobile identity call anchoring controls is disabled.\n\n        The description, enableAlerting, alertAgentCalls, alertClickToDialCalls, alertGroupPagingCalls, useMobilityCallingLineID, enableDiversionInhibitor, requireAnswerConfirmation, broadworksCallControl, devicesToRing, includeSharedCallAppearance, includeBroadworksAnywhere, includeExecutiveAssistance, mobileNumberAlerted, enableCallAnchoring, timeSchedule, holidaySchedule and useMobilityConnectedIdentity parameters require an authorization level of User for modification when the BroadWorks Mobility service is on.\n        The isPrimary, useSettingLevel, denyCallOrigination, denyCallTerminations, accessDeviceEndpoint, outboundAlternateNumber, enableDirectRouting, markCDRAsEnterpriseGroupCalls and networkTranslationIndex  parameters require an authorization level of Group for modification.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "mobileNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "BroadWorksMobilityUserMobileIdentityDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isPrimary", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAlerting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertAgentCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertClickToDialCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertGroupPagingCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMobilityCallingLineID", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableDiversionInhibitor", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "requireAnswerConfirmation", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "broadworksCallControl", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSettingLevel", "required": false, "array": false, "type": "BroadWorksMobilityUserSettingLevel", "type_schema": "xs:token", "enum": ["Group", "User"]}, {"name": "denyCallOriginations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "denyCallTerminations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "devicesToRing", "required": false, "array": false, "type": "BroadWorksMobilityPhoneToRing", "type_schema": "xs:token", "enum": ["Fixed", "Mobile", "Both"]}, {"name": "includeSharedCallAppearance", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeBroadworksAnywhere", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeExecutiveAssistant", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mobileNumbersAlerted", "required": false, "array": false, "type": "BroadWorksMobilityAlertingMobileNumberReplacementList", "schema": [[{"name": "mobileNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "enableCallAnchoring", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "timeSchedule", "required": false, "array": false, "type": "ScheduleGlobalKey", "schema": [[{"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "scheduleLevel", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "ScheduleGlobalKey", "schema": [[{"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "scheduleLevel", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "enableDirectRouting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "markCDRAsEnterpriseGroupCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMobilityConnectedIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkTranslationIndex", "required": false, "array": false, "type": "NetworkTranslationIndex", "type_schema": "xs:token", "minLength": 1, "maxLength": 128}, {"choice": [{"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "AccessDeviceEndpointAndHotlineModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}, {"name": "useHotline", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "outboundAlternateNumber", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]]}, {"name": "UserBroadWorksMobilityModifyRequest21", "tags": ["services"], "documentation": "Modify the user's BroadWorks Mobility service settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The isActive, useMobileIdentityCallAnchoring, and preventCallsToOwnMobiles parameters can be modified by users with Group Authorization Level and above.\n        The mobileIdentity, profileIdentityDevicesToRing, rofileIdentityIncludeSharedCallAppearance, profileIdentityIncludeBroadworksAnywhere mobileIdentity and profileIdentityMobilityNumbersAlerted parameters can be modified by users with User Authorization Level and above when the BroadWorks Mobility service is turned on.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMobileIdentityCallAnchoring", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "preventCallsToOwnMobiles", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mobileIdentity", "required": false, "array": true, "type": "BroadWorksMobilityUserMobileIdentityModifyEntry", "schema": [[{"name": "mobileNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "BroadWorksMobilityUserMobileIdentityDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isPrimary", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAlerting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "profileIdentityDevicesToRing", "required": false, "array": false, "type": "BroadWorksMobilityPhoneToRing", "type_schema": "xs:token", "enum": ["Fixed", "Mobile", "Both"]}, {"name": "profileIdentityIncludeSharedCallAppearance", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "profileIdentityIncludeBroadworksAnywhere", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "profileIdentityIncludeExecutiveAssistant", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "profileIdentityMobilityNumbersAlerted", "required": false, "array": false, "type": "BroadWorksMobilityAlertingMobileNumberReplacementList", "schema": [[{"name": "mobileNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "SystemBusyLampFieldGetRequest23V2", "tags": ["services"], "documentation": "Request the system level data associated with the Busy Lamp\n        Field service. The response is either a\n        SystemBusyLampFieldGetResponse23V2 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemBusyLampFieldModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with the Busy Lamp Field\n        Service. The response is either a SuccessResponse or an\n        ErrorResponse.\n\n        The following elements are only used in AS data mode:\n         forceUseOfTCP\n\n        The following elements are only used in AS data mode and ignored in Amplify and XS data mode:\n         enableRedundancy\n         redundancyTaskDelayMilliseconds\n         redundancyTaskIntervalMilliseconds\n         maxNumberOfSubscriptionsPerRedundancyTaskInterval\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n         ignoreUnansweredTerminatingCalls", "type": "core:OCIRequest", "schema": [[{"name": "displayLocalUserIdentityLastNameFirst", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceUseOfTCP", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableRedundancy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "redundancyTaskDelayMilliseconds", "required": false, "array": false, "type": "BusyLampFieldTaskDelayMilliseconds", "type_schema": "xs:int", "minimum": 10000.0, "maximum": 180000.0}, {"name": "redundancyTaskIntervalMilliseconds", "required": false, "array": false, "type": "BusyLampFieldTaskIntervalMilliseconds", "type_schema": "xs:int", "minimum": 50.0, "maximum": 20000.0}, {"name": "maxNumberOfSubscriptionsPerRedundancyTaskInterval", "required": false, "array": false, "type": "BusyLampFieldMaxSubscriptionPerInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 50000.0}, {"name": "ignoreUnansweredTerminatingCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserBusyLampFieldGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of available users for the busy lamp field service.\n        The response is either UserBusyLampFieldGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaImpId", "required": false, "array": true, "type": "SearchCriteriaImpId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserBusyLampFieldGetRequest16sp2", "tags": ["services"], "documentation": "Request the settings for the busy lamp field service.\n        The response is either a UserBusyLampFieldGetResponse16sp2 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserBusyLampFieldModifyRequest", "tags": ["services"], "documentation": "Modify the settings for the busy lamp field service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "listURI", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "monitoredUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "enableCallParkNotification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallCapacityManagementAddInstanceRequest", "tags": ["services"], "documentation": "Adds a Call Capacity Management group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "maxActiveCallsAllowed", "required": true, "array": false, "type": "CallCapacityCallLimit", "type_schema": "xs:int", "minimum": 0.0, "maximum": 99999.0}, {"name": "maxIncomingActiveCallsAllowed", "required": false, "array": false, "type": "CallCapacityCallLimit", "type_schema": "xs:int", "minimum": 0.0, "maximum": 99999.0}, {"name": "maxOutgoingActiveCallsAllowed", "required": false, "array": false, "type": "CallCapacityCallLimit", "type_schema": "xs:int", "minimum": 0.0, "maximum": 99999.0}, {"name": "becomeDefaultGroupForNewUsers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userId", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCapacityManagementAddUserListRequest", "tags": ["services"], "documentation": "Adds one or more users to a Call Capacity Management group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCapacityManagementDeleteInstanceListRequest", "tags": ["services"], "documentation": "Deletes one or more Call Capacity Management groups.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": true, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupCallCapacityManagementDeleteUserListRequest", "tags": ["services"], "documentation": "Deletes one or more users from a Call Capacity Management group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCapacityManagementGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned to a Call Capacity Management group.\n        The available user list for a new Call Capacity Management group can be obtained\n        by not setting the name.\n        The response is either GroupCallCapacityManagementGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": false, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallCapacityManagementGetInstanceListRequest", "tags": ["services"], "documentation": "Request to get a list of Call Capacity Management instances within a group.\n        The response is either GroupCallCapacityManagementGetInstanceListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallCapacityManagementGetInstanceRequest", "tags": ["services"], "documentation": "Gets a Call Capacity Management group.\n        The response is either GroupCallCapacityManagementGetInstanceResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupCallCapacityManagementModifyInstanceRequest", "tags": ["services"], "documentation": "Modifies a Call Capacity Management group. Replaces the entire list of users in the group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "maxActiveCallsAllowed", "required": false, "array": false, "type": "CallCapacityCallLimit", "type_schema": "xs:int", "minimum": 0.0, "maximum": 99999.0}, {"name": "maxIncomingActiveCallsAllowed", "required": false, "array": false, "type": "CallCapacityCallLimit", "type_schema": "xs:int", "minimum": 0.0, "maximum": 99999.0}, {"name": "maxOutgoingActiveCallsAllowed", "required": false, "array": false, "type": "CallCapacityCallLimit", "type_schema": "xs:int", "minimum": 0.0, "maximum": 99999.0}, {"name": "becomeDefaultGroupForNewUsers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "CallCenterAgentAvailability", "tags": ["services"], "documentation": "Specifies an agent's login state (availability) for a particular Call Center.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "available", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "CallCenterAgentSettings", "tags": ["services"], "documentation": "Specifies an agent's settings for a particular Call Center.\n        The skillLevel only applies to Premium agents.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "available", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "skillLevel", "required": false, "array": false, "type": "CallCenterAgentSkillLevel", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}]]}, {"name": "EnterpriseCallCenterAgentThresholdDefaultProfileGetRequest", "tags": ["services"], "documentation": "Gets an existing default Call Center Agent Threshold Profile in an Enterprise.\n        If includeAgentsTable is set to true, a table with the list of agents assigned to\n        the profile is included in the response. The search criteria is used to filter the\n        list of agents to be included in the table.\n        The response is either a EnterpriseCallCenterAgentThresholdDefaultProfileGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "includeAgentsTable", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "EnterpriseCallCenterAgentThresholdProfileAddAgentListRequest", "tags": ["services"], "documentation": "Add agent(s) to a Agent Threshold Profile.\n        When an agent is assigned (added) to a profile, it is automatically unassigned (deleted) from the previous profile it was assigned to.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "EnterpriseCallCenterAgentThresholdProfileAddRequest", "tags": ["services"], "documentation": "Add a new Call Center Agent Threshold Profile in an Enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "profileDescription", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "thresholdCurrentCallStateIdleTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateIdleTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentCallStateIdleTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateIdleTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentCallStateOnCallTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateOnCallTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentCallStateOnCallTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateOnCallTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentAgentStateUnavailableTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentAgentStateUnavailableTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentAgentStateUnavailableTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentAgentStateUnavailableTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyInTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyInTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyInTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyInTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyOutTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyOutTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyOutTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyOutTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageWrapUpTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageWrapUpTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageWrapUpTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageWrapUpTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "enableNotificationEmail", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "notificationEmailAddress", "required": false, "array": true, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "agentUserId", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "EnterpriseCallCenterAgentThresholdProfileDeleteAgentListRequest", "tags": ["services"], "documentation": "Delete agent(s) from a Agent Threshold Profile.\n        Agents cannot be unassigned (deleted) directly from the default profile, they need to be assigned (added) to a different profile.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "EnterpriseCallCenterAgentThresholdProfileDeleteRequest", "tags": ["services"], "documentation": "Deletes an existing Call Center Agent Threshold Profile in an Enterprise.\n        The default profile cannot be deleted.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "EnterpriseCallCenterAgentThresholdProfileGetAvailableAgentListRequest", "tags": ["services"], "documentation": "Get the list of all Agents in the Enterprise that can be assigned to a given Call Center Agent Threshold Profile in an Enterprise.\n        An agent is available to be assigned to a given Agent Threshold Profile if it is a Call Center Standard or Call Center Premium agent\n        and the agent is not yet assigned to the profile.\n        The available agent list for a new Call Center Agent Threshold profile can be obtained by not setting the excludeAgentsAssignedToProfileName.\n        When the excludeAgentsAssignedToProfileName is specified, all agents already assigned to the specified profile are not included in the response, even if the search\n        criterion element searchCriteriaAgentThresholdProfile is specified using the same profile name.\n        The response is either a EnterpriseCallCenterAgentThresholdProfileGetAvailableAgentListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "excludeAgentsAssignedToProfileName", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAgentThresholdProfile", "required": false, "array": true, "type": "SearchCriteriaAgentThresholdProfile", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "EnterpriseCallCenterAgentThresholdProfileGetAvailableAgentPagedSortedListRequest", "tags": ["services"], "documentation": "Get the list of all Agents in the Enterprise that can be assigned to a given Call Center Agent Threshold Profile in an Enterprise.\n        An agent is available to be assigned to a given Agent Threshold Profile if it is a Call Center Standard or Call Center Premium agent\n        and the agent is not yet assigned to the profile.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        The available agent list for a new Call Center Agent Threshold profile can be obtained by not setting the excludeAgentsAssignedToProfileName.\n        When the excludeAgentsAssignedToProfileName is specified, all agents already assigned to the specified profile are not included in the response, even if the search\n        criterion element searchCriteriaAgentThresholdProfile is specified using the same profile name.\n\n        If no sortOrder is included the response is sorted by User Id ascending by default.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        ErrorResponse is returned if searchCriteriaExactUserGroup has multiple entries and searchCriteriaModeOr is not included.\n\n        The response is either a EnterpriseCallCenterAgentThresholdProfileGetAvailableAgentPagedSortedListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "excludeAgentsAssignedToProfileName", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderEnterpriseCallCenterAgentThresholdProfileGetAvailableAgentPagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDepartmentName", "required": true, "array": false, "type": "SortByDepartmentName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByEmailAddress", "required": true, "array": false, "type": "SortByEmailAddress", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByAgentThresholdProfile", "required": true, "array": false, "type": "SortByAgentThresholdProfile", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAgentThresholdProfile", "required": false, "array": true, "type": "SearchCriteriaAgentThresholdProfile", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": true, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "EnterpriseCallCenterAgentThresholdProfileGetListRequest", "tags": ["services"], "documentation": "Get the list of Call Center Agent Threshold Profiles in the Enterprise.\n        The response is either EnterpriseCallCenterAgentThresholdProfileGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseCallCenterAgentThresholdProfileGetPagedSortedRequest", "tags": ["services"], "documentation": "Gets an existing specified Call Center Agent Threshold Profile in an Enterprise.\n\n        The agentTable is what the search, sort, and pagination fields apply to.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        If no sortOrder is included the response is sorted by User Id ascending by default.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        ErrorResponse is returned if searchCriteriaExactUserGroup has multiple entries and searchCriteriaModeOr is not included.\n\n        The response is either a EnterpriseCallCenterAgentThresholdProfileGetPagedSortedResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderEnterpriseCallCenterAgentThresholdProfileGetPagedSorted", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDepartmentName", "required": true, "array": false, "type": "SortByDepartmentName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByEmailAddress", "required": true, "array": false, "type": "SortByEmailAddress", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": true, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaGroupName", "required": false, "array": true, "type": "SearchCriteriaGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "EnterpriseCallCenterAgentThresholdProfileGetRequest", "tags": ["services"], "documentation": "Gets an existing non-default Call Center Agent Threshold Profile in an Enterprise.\n        The response is either a EnterpriseCallCenterAgentThresholdProfileGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "EnterpriseCallCenterAgentThresholdProfileModifyRequest", "tags": ["services"], "documentation": "Modifies an existing Call Center Agent Threshold Profile in the Enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "newProfileName", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "profileDescription", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "thresholdCurrentCallStateIdleTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateIdleTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentCallStateIdleTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateIdleTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentCallStateOnCallTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateOnCallTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentCallStateOnCallTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateOnCallTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentAgentStateUnavailableTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentAgentStateUnavailableTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentAgentStateUnavailableTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentAgentStateUnavailableTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyInTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyInTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyInTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyInTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyOutTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyOutTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyOutTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyOutTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageWrapUpTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageWrapUpTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageWrapUpTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageWrapUpTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "enableNotificationEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "notificationEmailAddressList", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileReplacementNotificationEmailList", "schema": [[{"name": "emailAddress", "required": true, "array": true, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "agentUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "EnterpriseCallCenterAgentUnavailableCodeAddRequest", "tags": ["services"], "documentation": "Add a Call Center Agent Unavailable Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "code", "required": true, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "description", "required": false, "array": false, "type": "CallCenterAgentUnavailableCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "EnterpriseCallCenterAgentUnavailableCodeDeleteRequest", "tags": ["services"], "documentation": "Delete a Call Center Agent Unavailable Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "EnterpriseCallCenterAgentUnavailableCodeGetListRequest", "tags": ["services"], "documentation": "Get the list of Call Center Agent Unavailable Codes.\n        The response is either EnterpriseCallCenterAgentUnavailableCodeGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseCallCenterAgentUnavailableCodeGetRequest", "tags": ["services"], "documentation": "Get a Call Center Agent Unavailable Code.\n        The response is either EnterpriseCallCenterAgentUnavailableCodeGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "EnterpriseCallCenterAgentUnavailableCodeModifyRequest", "tags": ["services"], "documentation": "Modify a Call Center Agent Unavailable Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "CallCenterAgentUnavailableCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequest17sp4", "tags": ["services"], "documentation": "Request the enterprise level data associated with Call Center Agents Unavailable Code Settings.\n        The response is either an EnterpriseCallCenterAgentUnavailableCodeSettingsGetResponse17sp4 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseCallCenterAgentUnavailableCodeSettingsModifyRequest", "tags": ["services"], "documentation": "Modify the enterprise level data associated with Call Center Agents Unavailable Code Settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enableAgentUnavailableCodes", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "defaultAgentUnavailableCodeOnDND", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "defaultAgentUnavailableCodeOnPersonalCalls", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "defaultAgentUnavailableCodeOnConsecutiveBounces", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "defaultAgentUnavailableCodeOnNotReachable", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "forceUseOfAgentUnavailableCodes", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "defaultAgentUnavailableCode", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "codeStateList", "required": false, "array": true, "type": "CallCenterAgentUnavailableCodeStateModify", "schema": [[{"name": "code", "required": true, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "EnterpriseCallCenterCallDispositionCodeAddRequest", "tags": ["services"], "documentation": "Add a Call Center Call Disposition Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "CallDispositionCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "EnterpriseCallCenterCallDispositionCodeDeleteRequest", "tags": ["services"], "documentation": "Delete a Call Center Call Disposition Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "EnterpriseCallCenterCallDispositionCodeGetListRequest", "tags": ["services"], "documentation": "Get the list of Call Center Call Disposition Codes.\n        The response is either EnterpriseCallCenterCallDispositionCodeGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseCallCenterCallDispositionCodeGetRequest", "tags": ["services"], "documentation": "Get a Call Center Call Disposition Code.\n        The response is either EnterpriseCallCenterCallDispositionCodeGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "EnterpriseCallCenterCallDispositionCodeGetUsageListRequest", "tags": ["services"], "documentation": "Get the list of Call Centers and Route Points using the specified disposition code.\n        The response is either EnterpriseCallCenterCallDispositionCodeGetUsageListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "EnterpriseCallCenterCallDispositionCodeModifyActiveListRequest", "tags": ["services"], "documentation": "Request to set the active status of Call Center Call Disposition Codes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callDispositionCodeActivation", "required": false, "array": true, "type": "CallDispositionCodeActivation", "schema": [[{"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "EnterpriseCallCenterCallDispositionCodeModifyRequest", "tags": ["services"], "documentation": "Modify a Call Center Call Disposition Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "CallDispositionCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "EnterpriseCallCenterCurrentAndPastAgentGetListRequest", "tags": ["services"], "documentation": "Request to all the current and past agents in the enterprise.\n        The searchCriteriaExactUserGroup does not apply to past agents.\n        The response is either EnterpriseCallCenterCurrentAndPastAgentGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "EnterpriseCallCenterCurrentAndPastCallCenterGetListRequest", "tags": ["services"], "documentation": "Request to get all the current and past call centers for the enterprise.\n        The searchCriteriaExactUserGroup does not apply to past call centers.\n        The response is either EnterpriseCallCenterCurrentAndPastCallCenterGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isPremiumOnly", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaCallCenterName", "required": false, "array": false, "type": "SearchCriteriaCallCenterName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "EnterpriseCallCenterCurrentAndPastDNISGetListRequest", "tags": ["services"], "documentation": "Request to get all the past and current DNIS for the Call Center for the enterprise.\n        The response is either EnterpriseCallCenterCurrentAndPastDNISGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "EnterpriseCallCenterEnhancedReportingBrandingGetRequest", "tags": ["services"], "documentation": "Request to get the enterprise branding information.\n        The response is either EnterpriseCallCenterEnhancedReportingBrandingGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseCallCenterEnhancedReportingBrandingModifyRequest", "tags": ["services"], "documentation": "Request to modify the enterprise branding configuration.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "brandingChoice", "required": false, "array": false, "type": "CallCenterEnhancedReportingBrandingChoice", "type_schema": "xs:token", "enum": ["System", "Custom"]}, {"name": "brandingFile", "required": false, "array": false, "type": "LabeledFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "EnterpriseCallCenterEnhancedReportingGetAvailableReportTemplateListRequest", "tags": ["services"], "documentation": "Request to get all enabled call center report template for an enterprise.\n        The response is either an EnterpriseCallCenterEnhancedReportingGetAvailableReportTemplateListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseCallCenterEnhancedReportingGetRequest19", "tags": ["services"], "documentation": "Request to get an enterprise level call center enhanced reporting setting.\n        The response is either an EnterpriseCallCenterEnhancedReportingGetResponse19 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseCallCenterEnhancedReportingModifyRequest19", "tags": ["services"], "documentation": "Request to modify enterprise level call center enhanced reporting settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "reportingServer", "required": false, "array": false, "type": "CallCenterReportServerChoice19", "type_schema": "xs:token", "enum": ["Enhanced", "Off"]}]]}, {"name": "EnterpriseCallCenterEnhancedReportingReportTemplateAddRequest", "tags": ["services"], "documentation": "Request to add an Enterprise level call center report template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "CallCenterReportTemplateDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "dataTemplate", "required": true, "array": false, "type": "CallCenterReportDataTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "filterNumber", "required": false, "array": false, "type": "CallCenterReportDataTemplateFilterNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "xsltTemplate", "required": true, "array": false, "type": "LabeledFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "scope", "required": true, "array": false, "type": "CallCenterReportTemplateAccessOption", "type_schema": "xs:token", "enum": ["Supervisor Only", "Supervisor and Agent"]}, {"name": "isEnabled", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isRealtimeReport", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callCompletionThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "shortDurationThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "serviceLevelThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "serviceLevelInclusionsParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "serviceLevelObjectiveThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "abandonedCallThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "serviceLevelThresholdParamNumber", "required": false, "array": false, "type": "CallCenterReportServiceLevelInputParameterNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 5.0}, {"name": "abandonedCallThresholdParamNumber", "required": false, "array": false, "type": "CallCenterReportAbandonedCallInputParameterNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 4.0}, {"name": "filterValue", "required": false, "array": true, "type": "CallCenterReportDataTemplateQueryFilterValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}]]}, {"name": "EnterpriseCallCenterEnhancedReportingReportTemplateDeleteRequest", "tags": ["services"], "documentation": "Request to delete an enterprise level call center report template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "EnterpriseCallCenterEnhancedReportingReportTemplateGetListRequest", "tags": ["services"], "documentation": "Request to get enterprise level call center report template list.\n        The response is either an EnterpriseCallCenterEnhancedReportingReportTemplateGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseCallCenterEnhancedReportingReportTemplateGetRequest", "tags": ["services"], "documentation": "Request to get an enterprise level call center report template.\n        The response is either an EnterpriseCallCenterEnhancedReportingReportTemplateGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "EnterpriseCallCenterEnhancedReportingReportTemplateModifyRequest", "tags": ["services"], "documentation": "Request to modify an enterprise level call center report template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "CallCenterReportTemplateDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "xsltTemplate", "required": false, "array": false, "type": "LabeledFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "scope", "required": false, "array": false, "type": "CallCenterReportTemplateAccessOption", "type_schema": "xs:token", "enum": ["Supervisor Only", "Supervisor and Agent"]}, {"name": "isEnabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isRealtimeReport", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "filterNumber", "required": false, "array": false, "type": "CallCenterReportDataTemplateFilterNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "filterValue", "required": false, "array": false, "type": "CallCenterReportDataTemplateQueryFilterValueReplacementList", "schema": [[{"name": "filterValue", "required": true, "array": true, "type": "CallCenterReportDataTemplateQueryFilterValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}]]}]]}, {"name": "EnterpriseCallCenterEnhancedReportingScheduledReportAddRequest", "tags": ["services"], "documentation": "Request to add an enterprise level call center reporting scheduled report.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The startDate element is adjusted to the first occurrence of the recurrent schedule that comes at or after startDate.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "CallCenterScheduledReportDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "reportTemplate", "required": true, "array": false, "type": "CallCenterReportTemplateKey", "schema": [[{"name": "templateLevel", "required": true, "array": false, "type": "CallCenterReportTemplateLevel", "type_schema": "xs:token", "enum": ["System", "Enterprise", "Group"]}, {"name": "templateName", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "schedule", "required": true, "array": false, "type": "CallCenterReportSchedule", "schema": [{"choice": [{"name": "scheduleTime", "required": true, "array": false, "type": "CallCenterReportScheduleTime", "schema": [[{"name": "timeZone", "required": true, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "scheduleDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "scheduleTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}, {"name": "recurrence", "required": true, "array": false, "type": "CallCenterReportScheduleRecurrence", "schema": [[{"name": "timeZone", "required": true, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "startDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "scheduleTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "recurrence", "required": true, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}]]}]}]}, {"name": "samplingPeriod", "required": false, "array": false, "type": "CallCenterReportSamplingPeriod", "type_schema": "xs:token", "enum": ["15 Minutes", "30 Minutes", "Hourly", "Daily", "Weekly", "Monthly"]}, {"name": "startDayOfWeek", "required": false, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "reportTimeZone", "required": true, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "reportDateFormat", "required": true, "array": false, "type": "CallCenterReportDateFormat", "type_schema": "xs:token", "enum": ["MMDDYYYY", "DDMMYYYY"]}, {"name": "reportTimeFormat", "required": true, "array": false, "type": "CallCenterReportTimeFormat", "type_schema": "xs:token", "enum": ["AM/PM", "24Hour"]}, {"name": "reportInterval", "required": true, "array": false, "type": "CallCenterReportInterval", "schema": [{"choice": [{"name": "dates", "required": true, "array": false, "type": "CallCenterReportIntervalDates", "schema": [[{"name": "startDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "startTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "endDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "endTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}, {"name": "current", "required": true, "array": false, "type": "CallCenterReportCurrentInterval", "schema": [[{"name": "timeUnit", "required": true, "array": false, "type": "CallCenterReportIntervalTimeUnit", "type_schema": "xs:token", "enum": ["Hour", "Day", "Week", "Month", "Year"]}]]}, {"name": "past", "required": true, "array": false, "type": "CallCenterReportPastInterval", "schema": [[{"name": "number", "required": true, "array": false, "type": "CallCenterReportIntervalNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "timeUnit", "required": true, "array": false, "type": "CallCenterReportIntervalTimeUnit", "type_schema": "xs:token", "enum": ["Hour", "Day", "Week", "Month", "Year"]}]]}]}]}, {"name": "reportFormat", "required": true, "array": false, "type": "CallCenterReportFileFormat", "type_schema": "xs:token", "enum": ["PDF", "XLS"]}, {"name": "agent", "required": false, "array": false, "type": "CallCenterScheduledReportAgentSelection", "schema": [{"choice": [{"name": "allAgent", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]}, {"name": "callCompletionThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "shortDurationThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "serviceLevelThresholdSeconds", "required": false, "array": true, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "serviceLevelInclusions", "required": false, "array": false, "type": "CallCenterScheduledReportServiceLevelInclusions", "schema": [[{"name": "includeOverflowTimeTransferedInServiceLevel", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeOtherTransfersInServiceLevel", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "abandonedCallsInServiceLevel", "required": true, "array": false, "type": "CallCenterReportAbadonedCallsInServiceLevel", "type_schema": "xs:token", "enum": ["Ignore All Abandoned Calls", "Include All Abandoned Calls", "Include Abandoned Calls Except Before Entrance Completes", "Include Abandoned Calls Except In Interval"]}, {"name": "abandonedCallIntervalSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}]]}, {"name": "serviceLevelObjectivePercentage", "required": false, "array": false, "type": "CallCenterReportServiceLevelObjective", "type_schema": "xs:int", "minimum": 0.0, "maximum": 100.0}, {"name": "abandonedCallThresholdSeconds", "required": false, "array": true, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "emailAddress", "required": true, "array": true, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"choice": [{"name": "callCenter", "required": true, "array": false, "type": "CallCenterScheduledReportCallCenterSelection", "schema": [{"choice": [{"name": "allCallCenter", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]}, {"name": "dnis", "required": true, "array": false, "type": "CallCenterScheduledReportDNISSelection", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"choice": [{"name": "allDNIS", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "name", "required": true, "array": true, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}]}]]}, {"name": "EnterpriseCallCenterEnhancedReportingScheduledReportDeleteRequest", "tags": ["services"], "documentation": "Request to delete an enterprise level call center reporting scheduled report.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "EnterpriseCallCenterEnhancedReportingScheduledReportGetActiveListRequest", "tags": ["services"], "documentation": "Request to get a list of active enterprise level call center reporting scheduled reports.\n        The response is either an EnterpriseCallCenterEnhancedReportingScheduledReportGetActiveListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaCallCenterScheduledReportName", "required": false, "array": true, "type": "SearchCriteriaCallCenterScheduledReportName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "schema": [[{"name": "createdBySupervisor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterReportTemplateKey", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterReportTemplateKey", "schema": [[{"name": "reportTemplate", "required": true, "array": false, "type": "CallCenterReportTemplateKey", "schema": [[{"name": "templateLevel", "required": true, "array": false, "type": "CallCenterReportTemplateLevel", "type_schema": "xs:token", "enum": ["System", "Enterprise", "Group"]}, {"name": "templateName", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}]]}, {"name": "EnterpriseCallCenterEnhancedReportingScheduledReportGetCompletedListRequest", "tags": ["services"], "documentation": "Request to get a list of completed enterprise level call center reporting scheduled reports.\n        The response is either an EnterpriseCallCenterEnhancedReportingScheduledReportGetCompletedListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaCallCenterScheduledReportName", "required": false, "array": true, "type": "SearchCriteriaCallCenterScheduledReportName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "schema": [[{"name": "createdBySupervisor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterReportTemplateKey", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterReportTemplateKey", "schema": [[{"name": "reportTemplate", "required": true, "array": false, "type": "CallCenterReportTemplateKey", "schema": [[{"name": "templateLevel", "required": true, "array": false, "type": "CallCenterReportTemplateLevel", "type_schema": "xs:token", "enum": ["System", "Enterprise", "Group"]}, {"name": "templateName", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}]]}, {"name": "EnterpriseCallCenterEnhancedReportingScheduledReportGetListRequest", "tags": ["services"], "documentation": "Request to get a list of enterprise level call center reporting scheduled reports.\n        The response is either an EnterpriseCallCenterEnhancedReportingScheduledReportGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaCallCenterScheduledReportName", "required": false, "array": true, "type": "SearchCriteriaCallCenterScheduledReportName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "schema": [[{"name": "createdBySupervisor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterReportTemplateKey", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterReportTemplateKey", "schema": [[{"name": "reportTemplate", "required": true, "array": false, "type": "CallCenterReportTemplateKey", "schema": [[{"name": "templateLevel", "required": true, "array": false, "type": "CallCenterReportTemplateLevel", "type_schema": "xs:token", "enum": ["System", "Enterprise", "Group"]}, {"name": "templateName", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}]]}, {"name": "EnterpriseCallCenterEnhancedReportingScheduledReportGetReportTemplateUsageListRequest", "tags": ["services"], "documentation": "Request to get all the call center reporting scheduled report in an enterprise that uses a given enterprise level report template.\n        The response is either a EnterpriseCallCenterEnhancedReportingScheduledReportGetReportTemplateUsageListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "EnterpriseCallCenterEnhancedReportingScheduledReportGetRequest", "tags": ["services"], "documentation": "Request to get an enterprise level call center reporting scheduled report.\n        The response is either an EnterpriseCallCenterEnhancedReportingScheduledReportGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "EnterpriseCallCenterEnhancedReportingScheduledReportModifyRequest", "tags": ["services"], "documentation": "Request to modify an enterprise level call center reporting scheduled report.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The startDate element is adjusted to the first occurrence of the recurrent schedule that comes at or after startDate.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "CallCenterScheduledReportDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "schedule", "required": false, "array": false, "type": "CallCenterReportSchedule", "schema": [{"choice": [{"name": "scheduleTime", "required": true, "array": false, "type": "CallCenterReportScheduleTime", "schema": [[{"name": "timeZone", "required": true, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "scheduleDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "scheduleTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}, {"name": "recurrence", "required": true, "array": false, "type": "CallCenterReportScheduleRecurrence", "schema": [[{"name": "timeZone", "required": true, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "startDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "scheduleTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "recurrence", "required": true, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}]]}]}]}, {"name": "samplingPeriod", "required": false, "array": false, "type": "CallCenterReportSamplingPeriod", "type_schema": "xs:token", "enum": ["15 Minutes", "30 Minutes", "Hourly", "Daily", "Weekly", "Monthly"]}, {"name": "startDayOfWeek", "required": false, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "reportTimeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "reportDateFormat", "required": false, "array": false, "type": "CallCenterReportDateFormat", "type_schema": "xs:token", "enum": ["MMDDYYYY", "DDMMYYYY"]}, {"name": "reportTimeFormat", "required": false, "array": false, "type": "CallCenterReportTimeFormat", "type_schema": "xs:token", "enum": ["AM/PM", "24Hour"]}, {"name": "reportInterval", "required": false, "array": false, "type": "CallCenterReportInterval", "schema": [{"choice": [{"name": "dates", "required": true, "array": false, "type": "CallCenterReportIntervalDates", "schema": [[{"name": "startDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "startTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "endDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "endTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}, {"name": "current", "required": true, "array": false, "type": "CallCenterReportCurrentInterval", "schema": [[{"name": "timeUnit", "required": true, "array": false, "type": "CallCenterReportIntervalTimeUnit", "type_schema": "xs:token", "enum": ["Hour", "Day", "Week", "Month", "Year"]}]]}, {"name": "past", "required": true, "array": false, "type": "CallCenterReportPastInterval", "schema": [[{"name": "number", "required": true, "array": false, "type": "CallCenterReportIntervalNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "timeUnit", "required": true, "array": false, "type": "CallCenterReportIntervalTimeUnit", "type_schema": "xs:token", "enum": ["Hour", "Day", "Week", "Month", "Year"]}]]}]}]}, {"name": "reportFormat", "required": false, "array": false, "type": "CallCenterReportFileFormat", "type_schema": "xs:token", "enum": ["PDF", "XLS"]}, {"name": "agent", "required": false, "array": false, "type": "CallCenterScheduledReportAgentSelection", "schema": [{"choice": [{"name": "allAgent", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]}, {"name": "callCompletionThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "shortDurationThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "serviceLevelThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportServiceLevelThresholdReplacementList", "schema": [[{"name": "serviceLevelThresholdSeconds", "required": true, "array": true, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}]]}, {"name": "serviceLevelInclusions", "required": false, "array": false, "type": "CallCenterScheduledReportServiceLevelInclusionsModify", "schema": [[{"name": "includeOverflowTimeTransferedInServiceLevel", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeOtherTransfersInServiceLevel", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "abandonedCallsInServiceLevel", "required": false, "array": false, "type": "CallCenterReportAbadonedCallsInServiceLevel", "type_schema": "xs:token", "enum": ["Ignore All Abandoned Calls", "Include All Abandoned Calls", "Include Abandoned Calls Except Before Entrance Completes", "Include Abandoned Calls Except In Interval"]}, {"name": "abandonedCallIntervalSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}]]}, {"name": "serviceLevelObjectivePercentage", "required": false, "array": false, "type": "CallCenterReportServiceLevelObjective", "type_schema": "xs:int", "minimum": 0.0, "maximum": 100.0}, {"name": "abandonedCallThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportAbandonedCallThresholdReplacementList", "schema": [[{"name": "abandonedCallThresholdSeconds", "required": true, "array": true, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}]]}, {"name": "emailAddress", "required": false, "array": false, "type": "CallCenterReportReplacementEmailList", "schema": [[{"name": "emailAddress", "required": true, "array": true, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"choice": [{"name": "callCenter", "required": true, "array": false, "type": "CallCenterScheduledReportCallCenterSelection", "schema": [{"choice": [{"name": "allCallCenter", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]}, {"name": "dnis", "required": true, "array": false, "type": "CallCenterScheduledReportDNISSelection", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"choice": [{"name": "allDNIS", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "name", "required": true, "array": true, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}]}]]}, {"name": "EnterpriseCallCenterGetRequest23", "tags": ["services"], "documentation": "Request the enterprise level data associated with Call Center.\n        The response is either an EnterpriseCallCenterGetResponse23 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseCallCenterGetRoutingPolicyRequest", "tags": ["services"], "documentation": "Request the enterprise call center routing policy.\n        The response is either an EnterpriseCallCenterGetRoutingPolicyResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseCallCenterModifyRequest", "tags": ["services"], "documentation": "Modify the enterprise level data associated with Call Center\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          useSystemDefaultUnavailableSettings\n          forceAgentUnavailableOnDNDActivation\n          forceAgentUnavailableOnPersonalCalls\n          forceAgentUnavailableOnBouncedCallLimit\n          numberConsecutiveBouncedCallsToForceAgentUnavailable\n          forceAgentUnavailableOnNotReachable\n          wrapUpDestination", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useSystemDefaultGuardTimer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableGuardTimer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "guardTimerSeconds", "required": false, "array": false, "type": "CallCenterGuardTimerSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 25.0}, {"name": "useSystemDefaultUnavailableSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceAgentUnavailableOnDNDActivation", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceAgentUnavailableOnPersonalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceAgentUnavailableOnBouncedCallLimit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberConsecutiveBouncedCallsToForceAgentUnavailable", "required": false, "array": false, "type": "CallCenterConsecutiveBouncedCallsToForceAgentUnavailable", "type_schema": "xs:int", "minimum": 1.0, "maximum": 5.0}, {"name": "forceAgentUnavailableOnNotReachable", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wrapUpDestination", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "EnterpriseCallCenterModifyRoutingPolicyRequest", "tags": ["services"], "documentation": "Modify the enterprise call center routing policy.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "routingPolicy", "required": false, "array": false, "type": "CallCenterRoutingPolicy", "type_schema": "xs:token", "enum": ["Longest Wait Time", "Priority"]}, {"name": "routingPriorityOrder", "required": false, "array": true, "type": "CallCenterRoutingPriorityOrder", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "priority", "required": true, "array": false, "type": "CallCenterRoutingPriority", "type_schema": "xs:float", "minimum": 0.0, "maximum": 1000000.0}]]}]]}, {"name": "GroupCallCenterAddAgentListRequest", "tags": ["services"], "documentation": "Add agent(s) to a call center.\n        The response is either SuccessResponse or ErrorResponse.\n        If the skill level is not present for skill based premium call centers, the users will be set to skill level 1.\n\n        The following element is only used in AS data mode and ignored in XS data mode:\n          agentSkillList", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"choice": [{"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "agentSkillList", "required": true, "array": true, "type": "CallCenterSkillAgentList", "schema": [[{"name": "skillLevel", "required": true, "array": false, "type": "CallCenterAgentSkillLevel", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}, {"name": "agent", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]}]]}, {"name": "GroupCallCenterAddDNISRequest", "tags": ["services"], "documentation": "Add a Call Center DNIS\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "dnisPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "useCustomCLIDSettings", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useCustomDnisAnnouncementSettings", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "priority", "required": true, "array": false, "type": "DNISPriority", "type_schema": "xs:token", "enum": ["0 - Highest", "1 - High", "2 - Medium", "3 - Low"]}, {"name": "allowOutgoingACDCall", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallCenterAddInstanceRequest22", "tags": ["services"], "documentation": "Add a Call Center instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          routingType\n          enableReporting\n          allowCallsToAgentsInWrapUp\n          overrideAgentWrapUpTime\n          wrapUpSeconds\n          forceDeliveryOfCalls\n          forceDeliveryWaitTimeSeconds\n          enableAutomaticStateChangeForAgents\n          agentStateAfterCall\n          agentUnavailableCode\n          networkClassOfService", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfileCallCenter", "schema": [{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName"}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName"}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName"}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName"}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName"}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN"}, {"name": "extension", "required": false, "array": false, "type": "Extension17"}, {"name": "password", "required": true, "array": false, "type": "Password"}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey"}, {"name": "language", "required": false, "array": false, "type": "Language"}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone"}, {"name": "alias", "required": false, "array": true, "type": "SIPURI"}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI"}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN"}]}, {"name": "type", "required": true, "array": false, "type": "CallCenterType", "type_schema": "xs:token", "enum": ["Basic", "Standard", "Premium"]}, {"name": "routingType", "required": false, "array": false, "type": "CallCenterRoutingType", "type_schema": "xs:token", "enum": ["Priority Based", "Skill Based"]}, {"name": "policy", "required": true, "array": false, "type": "HuntPolicy", "type_schema": "xs:token", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, {"name": "enableVideo", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "queueLength", "required": true, "array": false, "type": "CallCenterQueueLength16", "type_schema": "xs:int", "minimum": 0.0, "maximum": 525.0}, {"name": "enableReporting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowCallerToDialEscapeDigit", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "escapeDigit", "required": true, "array": false, "type": "DtmfDigit", "type_schema": "xs:token"}, {"name": "resetCallStatisticsUponEntryInQueue", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowAgentLogoff", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowCallWaitingForAgents", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowCallsToAgentsInWrapUp", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "overrideAgentWrapUpTime", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wrapUpSeconds", "required": false, "array": false, "type": "CallCenterWrapUpSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 3600.0}, {"name": "forceDeliveryOfCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceDeliveryWaitTimeSeconds", "required": false, "array": false, "type": "CallCenterForceDeliveryWaitTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "enableAutomaticStateChangeForAgents", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "agentStateAfterCall", "required": false, "array": false, "type": "AgentACDAutomaticState", "type_schema": "xs:token", "enum": ["Available", "Unavailable", "Wrap-Up"]}, {"name": "agentUnavailableCode", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "externalPreferredAudioCodec", "required": true, "array": false, "type": "AudioFileCodec22", "type_schema": "xs:token", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB", "OPUS", "EVRC0", "EVRCNW", "EVRCNW0"]}, {"name": "internalPreferredAudioCodec", "required": true, "array": false, "type": "AudioFileCodec22", "type_schema": "xs:token", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB", "OPUS", "EVRC0", "EVRCNW", "EVRCNW0"]}, {"name": "playRingingWhenOfferingCall", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupCallCenterAddSupervisorListRequest", "tags": ["services"], "documentation": "Add supervisor(s) to a call center.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "supervisorUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterAgentThresholdDefaultProfileGetRequest", "tags": ["services"], "documentation": "Gets an existing default Call Center Agent Threshold Profile in a Group.\n        If includeAgentsTable is set to true, a table with the list of agents assigned to\n        the profile is included in the response. The search criteria is used to filter the\n        list of agents to be included in the table.\n        The response is either a GroupCallCenterAgentThresholdDefaultProfileGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "includeAgentsTable", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallCenterAgentThresholdProfileAddAgentListRequest", "tags": ["services"], "documentation": "Add agent(s) to a Agent Threshold Profile.\n        When an agent is assigned (added )to a profile, it is automatically unassigned (deleted) from the previous profile it was assigned to.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterAgentThresholdProfileAddRequest", "tags": ["services"], "documentation": "Add a new Call Center Agent Threshold Profile in a Group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "profileDescription", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "thresholdCurrentCallStateIdleTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateIdleTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentCallStateIdleTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateIdleTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentCallStateOnCallTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateOnCallTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentCallStateOnCallTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateOnCallTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentAgentStateUnavailableTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentAgentStateUnavailableTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentAgentStateUnavailableTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentAgentStateUnavailableTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyInTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyInTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyInTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyInTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyOutTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyOutTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyOutTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyOutTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageWrapUpTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageWrapUpTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageWrapUpTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageWrapUpTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "enableNotificationEmail", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "notificationEmailAddress", "required": false, "array": true, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "agentUserId", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterAgentThresholdProfileDeleteAgentListRequest", "tags": ["services"], "documentation": "Delete agent(s) from a Agent Threshold Profile.\n        Agents cannot be unassigned (deleted) directly from the default profile, they need to be assigned (added) to a different profile.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterAgentThresholdProfileDeleteRequest", "tags": ["services"], "documentation": "Deletes an existing Call Center Agent Threshold Profile in a Group.\n        The default profile cannot be deleted.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupCallCenterAgentThresholdProfileGetAvailableAgentListRequest", "tags": ["services"], "documentation": "Get the list of all Agents in the Group that can be assigned to a given Call Center Agent Threshold Profile in a Group.\n        An agent is available to be assigned to a given Agent Threshold Profile if it is a Call Center Standard or Call Center Premium agent\n        and the agent is not yet assigned to the profile.\n        The available agent list for a new Call Center Agent Threshold profile can be obtained by not setting the excludeAgentsAssignedToProfileName.\n        When the excludeAgentsAssignedToProfileName is specified, all agents already assigned to the specified profile are not included in the response, even if the search\n        criterion element searchCriteriaAgentThresholdProfile is specified using the same profile name.\n        The response is either a GroupCallCenterAgentThresholdProfileGetAvailableAgentListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "excludeAgentsAssignedToProfileName", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAgentThresholdProfile", "required": false, "array": true, "type": "SearchCriteriaAgentThresholdProfile", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallCenterAgentThresholdProfileGetAvailableAgentPagedSortedListRequest", "tags": ["services"], "documentation": "Get the list of all Agents in the Group that can be assigned to a given Call Center Agent Threshold Profile in a Group.\n        An agent is available to be assigned to a given Agent Threshold Profile if it is a Call Center Standard or Call Center Premium agent\n        and the agent is not yet assigned to the profile.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        The available agent list for a new Call Center Agent Threshold profile can be obtained by not setting the excludeAgentsAssignedToProfileName.\n        When the excludeAgentsAssignedToProfileName is specified, all agents already assigned to the specified profile are not included in the response, even if the search\n        criterion element searchCriteriaAgentThresholdProfile is specified using the same profile name.\n\n        If no sortOrder is included the response is sorted by User Id ascending by default.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        The response is either a GroupCallCenterAgentThresholdProfileGetAvailableAgentPagedSortedListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "excludeAgentsAssignedToProfileName", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupCallCenterAgentThresholdProfileGetAvailableAgentPagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDepartmentName", "required": true, "array": false, "type": "SortByDepartmentName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByEmailAddress", "required": true, "array": false, "type": "SortByEmailAddress", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByAgentThresholdProfile", "required": true, "array": false, "type": "SortByAgentThresholdProfile", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAgentThresholdProfile", "required": false, "array": true, "type": "SearchCriteriaAgentThresholdProfile", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallCenterAgentThresholdProfileGetListRequest", "tags": ["services"], "documentation": "Get the list of Call Center Agent Threshold Profiles in the Group.\n        The response is either GroupCallCenterAgentThresholdProfileGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallCenterAgentThresholdProfileGetPagedSortedRequest", "tags": ["services"], "documentation": "Gets an existing non-default Call Center Agent Threshold Profile in a Group.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        If no sortOrder is included the response is sorted by User Id ascending by default.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        The response is either a GroupCallCenterAgentThresholdProfileGetPagedSortedResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupCallCenterAgentThresholdProfileGetPagedSorted", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDepartmentName", "required": true, "array": false, "type": "SortByDepartmentName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByEmailAddress", "required": true, "array": false, "type": "SortByEmailAddress", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallCenterAgentThresholdProfileGetRequest", "tags": ["services"], "documentation": "Gets an existing non-default Call Center Agent Threshold Profile in a Group.\n        The response is either a GroupCallCenterAgentThresholdProfileGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupCallCenterAgentThresholdProfileModifyRequest", "tags": ["services"], "documentation": "Modifies an existing Call Center Agent Threshold Profile in the Group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "profileName", "required": true, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "newProfileName", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "profileDescription", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "thresholdCurrentCallStateIdleTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateIdleTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentCallStateIdleTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateIdleTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentCallStateOnCallTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateOnCallTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentCallStateOnCallTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentCallStateOnCallTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentAgentStateUnavailableTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentAgentStateUnavailableTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentAgentStateUnavailableTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdCurrentAgentStateUnavailableTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyInTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyInTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyInTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyInTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyOutTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyOutTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageBusyOutTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageBusyOutTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageWrapUpTimeYellow", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageWrapUpTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageWrapUpTimeRed", "required": false, "array": false, "type": "CallCenterAgentThresholdAverageWrapUpTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "enableNotificationEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "notificationEmailAddressList", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileReplacementNotificationEmailList", "schema": [[{"name": "emailAddress", "required": true, "array": true, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "agentUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "GroupCallCenterAgentUnavailableCodeAddRequest", "tags": ["services"], "documentation": "Add a Call Center Agent Unavailable Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "code", "required": true, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "description", "required": false, "array": false, "type": "CallCenterAgentUnavailableCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupCallCenterAgentUnavailableCodeDeleteRequest", "tags": ["services"], "documentation": "Delete a Call Center Agent Unavailable Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "GroupCallCenterAgentUnavailableCodeGetListRequest", "tags": ["services"], "documentation": "Get the list of Call Center Agent Unavailable Codes.\n        The response is either GroupCallCenterAgentUnavailableCodeGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallCenterAgentUnavailableCodeGetRequest", "tags": ["services"], "documentation": "Get a Call Center Agent Unavailable Code.\n        The response is either GroupCallCenterAgentUnavailableCodeGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "GroupCallCenterAgentUnavailableCodeModifyRequest", "tags": ["services"], "documentation": "Modify a Call Center Agent Unavailable Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "CallCenterAgentUnavailableCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupCallCenterAgentUnavailableCodeSettingsGetRequest17sp4", "tags": ["services"], "documentation": "Request the group level data associated with Call Center Agents Unavailable Code Settings.\n        The response is either a GroupCallCenterAgentUnavailableCodeSettingsGetResponse17sp4 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallCenterAgentUnavailableCodeSettingsModifyRequest", "tags": ["services"], "documentation": "Modify the group level data associated with Call Center Agents Unavailable Code Settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enableAgentUnavailableCodes", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "defaultAgentUnavailableCodeOnDND", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "defaultAgentUnavailableCodeOnPersonalCalls", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "defaultAgentUnavailableCodeOnConsecutiveBounces", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "defaultAgentUnavailableCodeOnNotReachable", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "forceUseOfAgentUnavailableCodes", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "defaultAgentUnavailableCode", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "codeStateList", "required": false, "array": true, "type": "CallCenterAgentUnavailableCodeStateModify", "schema": [[{"name": "code", "required": true, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallCenterBouncedCallGetRequest17", "tags": ["services"], "documentation": "Get a call center's bounced call settings.\n        The response is either a GroupCallCenterBouncedCallGetResponse17 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterBouncedCallModifyRequest", "tags": ["services"], "documentation": "Modify a call center's bounced call settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          enableTransfer\n          transferPhoneNumber\n          bounceCallWhenAgentUnavailable\n          alertCallCenterCallOnHold\n          alertCallCenterCallOnHoldSeconds\n          bounceCallCenterCallOnHold\n          bounceCallCenterCallOnHoldSeconds", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberOfRingsBeforeBouncingCall", "required": false, "array": false, "type": "HuntNoAnswerRings", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}, {"name": "enableTransfer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "bounceCallWhenAgentUnavailable", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertCallCenterCallOnHold", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertCallCenterCallOnHoldSeconds", "required": false, "array": false, "type": "AlertCallCenterCallOnHoldSeconds", "type_schema": "xs:int", "minimum": 30.0, "maximum": 600.0}, {"name": "bounceCallCenterCallOnHold", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "bounceCallCenterCallOnHoldSeconds", "required": false, "array": false, "type": "BounceCallCenterCallOnHoldSeconds", "type_schema": "xs:int", "minimum": 30.0, "maximum": 600.0}]]}, {"name": "GroupCallCenterCallDispositionCodeAddRequest", "tags": ["services"], "documentation": "Add a Call Center Call Disposition Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "CallDispositionCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupCallCenterCallDispositionCodeDeleteRequest", "tags": ["services"], "documentation": "Delete a Call Center Call Disposition Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "GroupCallCenterCallDispositionCodeGetListRequest", "tags": ["services"], "documentation": "Get the list of Call Center Call Disposition  Codes.\n        The response is either GroupCallCenterCallDispositionCodeGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallCenterCallDispositionCodeGetRequest", "tags": ["services"], "documentation": "Get a Call Center Call Disposition Code.\n        The response is either GroupCallCenterCallDispositionCodeGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "GroupCallCenterCallDispositionCodeGetUsageListRequest", "tags": ["services"], "documentation": "Get the list of Call Centers and Route Points using the specified disposition code.\n        The response is either GroupCallCenterCallDispositionCodeGetUsageListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "GroupCallCenterCallDispositionCodeModifyActiveListRequest", "tags": ["services"], "documentation": "Request to set the active status of Call Center Call Disposition Codes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callDispositionCodeActivation", "required": false, "array": true, "type": "CallDispositionCodeActivation", "schema": [[{"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallCenterCallDispositionCodeModifyRequest", "tags": ["services"], "documentation": "Modify a Call Center Call Disposition Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "CallDispositionCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupCallCenterComfortMessageBypassGetRequest20", "tags": ["services"], "documentation": "Get a call center's comfort message bypass settings.\n        The response is either a GroupCallCenterComfortMessageBypassGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterComfortMessageBypassModifyRequest20", "tags": ["services"], "documentation": "Modify a call center's comfort message bypass settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callWaitingAgeThresholdSeconds", "required": false, "array": false, "type": "CallCenterComfortMessageBypassThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 120.0}, {"name": "playAnnouncementAfterRinging", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "ringTimeBeforePlayingAnnouncementSeconds", "required": false, "array": false, "type": "CallCenterRingTimeBeforePlayingComfortMessageBypassAnnouncementSeconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 120.0}, {"name": "audioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "videoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}]]}, {"name": "GroupCallCenterCurrentAndPastAgentGetListRequest", "tags": ["services"], "documentation": "Request to get all the current and past agents for the group.\n        The response is either GroupCallCenterCurrentAndPastAgentGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallCenterCurrentAndPastCallCenterGetListRequest", "tags": ["services"], "documentation": "Request to get all the current and past call centers for the group.\n        The response is either GroupCallCenterCurrentAndPastCallCenterGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isPremiumOnly", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaCallCenterName", "required": false, "array": false, "type": "SearchCriteriaCallCenterName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallCenterCurrentAndPastDNISGetListRequest", "tags": ["services"], "documentation": "Request to get all the past and current DNIS for the Call Center for the group.\n        The response is either GroupCallCenterCurrentAndPastDNISGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterDeleteAgentListRequest", "tags": ["services"], "documentation": "Delete agent(s) from a call center.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterDeleteDNISRequest", "tags": ["services"], "documentation": "Delete a call center's DNIS.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "GroupCallCenterDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a Call Center instance from a group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterDeleteSupervisorListRequest", "tags": ["services"], "documentation": "Delete supervisor(s) from a call center.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "supervisorUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterDistinctiveRingingGetRequest", "tags": ["services"], "documentation": "Get the distinctive ringing configuration values for call center.\n        The response is either a GroupCallCenterDistinctiveRingingGetResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterDistinctiveRingingModifyRequest", "tags": ["services"], "documentation": "Modify the distinctive ringing configuration values for call center.\n\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following element is only used in AS data mode and ignored in XS data mode:\n          distinctiveRingingForceDeliveryRingPattern", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "distinctiveRingingCallCenterCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "distinctiveRingingRingPatternForCallCenter", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "distinctiveRingingForceDeliveryRingPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}]]}, {"name": "GroupCallCenterEnhancedReportingBrandingGetRequest", "tags": ["services"], "documentation": "Request to get the group branding information.\n        The response is either GroupCallCenterEnhancedReportingBrandingGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallCenterEnhancedReportingBrandingModifyRequest", "tags": ["services"], "documentation": "Request to modify the group branding configuration.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "brandingChoice", "required": false, "array": false, "type": "CallCenterEnhancedReportingBrandingChoice", "type_schema": "xs:token", "enum": ["System", "Custom"]}, {"name": "brandingFile", "required": false, "array": false, "type": "LabeledFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "GroupCallCenterEnhancedReportingGetAvailableReportTemplateListRequest", "tags": ["services"], "documentation": "Request to get all enabled call center report template for a group.\n        The response is either a GroupCallCenterEnhancedReportingGetAvailableReportTemplateListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallCenterEnhancedReportingGetRequest19", "tags": ["services"], "documentation": "Request to get a group level call center enhanced reporting setting.\n        The response is either a GroupCallCenterEnhancedReportingGetResponse19 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallCenterEnhancedReportingModifyRequest19", "tags": ["services"], "documentation": "Request to modify group level call center enhanced reporting settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "reportingServer", "required": false, "array": false, "type": "CallCenterReportServerChoice19", "type_schema": "xs:token", "enum": ["Enhanced", "Off"]}]]}, {"name": "GroupCallCenterEnhancedReportingReportTemplateAddRequest", "tags": ["services"], "documentation": "Request to add a group level call center report template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "CallCenterReportTemplateDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "dataTemplate", "required": true, "array": false, "type": "CallCenterReportDataTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "filterNumber", "required": false, "array": false, "type": "CallCenterReportDataTemplateFilterNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "xsltTemplate", "required": true, "array": false, "type": "LabeledFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "scope", "required": true, "array": false, "type": "CallCenterReportTemplateAccessOption", "type_schema": "xs:token", "enum": ["Supervisor Only", "Supervisor and Agent"]}, {"name": "isEnabled", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isRealtimeReport", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callCompletionThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "shortDurationThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "serviceLevelThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "serviceLevelInclusionsParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "serviceLevelObjectiveThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "abandonedCallThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "serviceLevelThresholdParamNumber", "required": false, "array": false, "type": "CallCenterReportServiceLevelInputParameterNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 5.0}, {"name": "abandonedCallThresholdParamNumber", "required": false, "array": false, "type": "CallCenterReportAbandonedCallInputParameterNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 4.0}, {"name": "filterValue", "required": false, "array": true, "type": "CallCenterReportDataTemplateQueryFilterValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}]]}, {"name": "GroupCallCenterEnhancedReportingReportTemplateDeleteRequest", "tags": ["services"], "documentation": "Request to delete a group level call center report template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupCallCenterEnhancedReportingReportTemplateGetListRequest", "tags": ["services"], "documentation": "Request to get group level call center report template list.\n        The response is either a GroupCallCenterEnhancedReportingReportTemplateGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallCenterEnhancedReportingReportTemplateGetRequest", "tags": ["services"], "documentation": "Request to get a group level call center report template.\n        The response is either a GroupCallCenterEnhancedReportingReportTemplateGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupCallCenterEnhancedReportingReportTemplateModifyRequest", "tags": ["services"], "documentation": "Request to modify a group level call center report template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "CallCenterReportTemplateDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "xsltTemplate", "required": false, "array": false, "type": "LabeledFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "scope", "required": false, "array": false, "type": "CallCenterReportTemplateAccessOption", "type_schema": "xs:token", "enum": ["Supervisor Only", "Supervisor and Agent"]}, {"name": "isEnabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isRealtimeReport", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "filterNumber", "required": false, "array": false, "type": "CallCenterReportDataTemplateFilterNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "filterValue", "required": false, "array": false, "type": "CallCenterReportDataTemplateQueryFilterValueReplacementList", "schema": [[{"name": "filterValue", "required": true, "array": true, "type": "CallCenterReportDataTemplateQueryFilterValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}]]}]]}, {"name": "GroupCallCenterEnhancedReportingScheduledReportAddRequest", "tags": ["services"], "documentation": "Request to add a group level call center reporting scheduled report.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The startDate element is adjusted to the first occurrence of the recurrent schedule that comes at or after startDate.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "CallCenterScheduledReportDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "reportTemplate", "required": true, "array": false, "type": "CallCenterReportTemplateKey", "schema": [[{"name": "templateLevel", "required": true, "array": false, "type": "CallCenterReportTemplateLevel", "type_schema": "xs:token", "enum": ["System", "Enterprise", "Group"]}, {"name": "templateName", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "schedule", "required": true, "array": false, "type": "CallCenterReportSchedule", "schema": [{"choice": [{"name": "scheduleTime", "required": true, "array": false, "type": "CallCenterReportScheduleTime", "schema": [[{"name": "timeZone", "required": true, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "scheduleDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "scheduleTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}, {"name": "recurrence", "required": true, "array": false, "type": "CallCenterReportScheduleRecurrence", "schema": [[{"name": "timeZone", "required": true, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "startDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "scheduleTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "recurrence", "required": true, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}]]}]}]}, {"name": "samplingPeriod", "required": false, "array": false, "type": "CallCenterReportSamplingPeriod", "type_schema": "xs:token", "enum": ["15 Minutes", "30 Minutes", "Hourly", "Daily", "Weekly", "Monthly"]}, {"name": "startDayOfWeek", "required": false, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "reportTimeZone", "required": true, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "reportDateFormat", "required": true, "array": false, "type": "CallCenterReportDateFormat", "type_schema": "xs:token", "enum": ["MMDDYYYY", "DDMMYYYY"]}, {"name": "reportTimeFormat", "required": true, "array": false, "type": "CallCenterReportTimeFormat", "type_schema": "xs:token", "enum": ["AM/PM", "24Hour"]}, {"name": "reportInterval", "required": true, "array": false, "type": "CallCenterReportInterval", "schema": [{"choice": [{"name": "dates", "required": true, "array": false, "type": "CallCenterReportIntervalDates", "schema": [[{"name": "startDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "startTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "endDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "endTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}, {"name": "current", "required": true, "array": false, "type": "CallCenterReportCurrentInterval", "schema": [[{"name": "timeUnit", "required": true, "array": false, "type": "CallCenterReportIntervalTimeUnit", "type_schema": "xs:token", "enum": ["Hour", "Day", "Week", "Month", "Year"]}]]}, {"name": "past", "required": true, "array": false, "type": "CallCenterReportPastInterval", "schema": [[{"name": "number", "required": true, "array": false, "type": "CallCenterReportIntervalNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "timeUnit", "required": true, "array": false, "type": "CallCenterReportIntervalTimeUnit", "type_schema": "xs:token", "enum": ["Hour", "Day", "Week", "Month", "Year"]}]]}]}]}, {"name": "reportFormat", "required": true, "array": false, "type": "CallCenterReportFileFormat", "type_schema": "xs:token", "enum": ["PDF", "XLS"]}, {"name": "agent", "required": false, "array": false, "type": "CallCenterScheduledReportAgentSelection", "schema": [{"choice": [{"name": "allAgent", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]}, {"name": "callCompletionThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "shortDurationThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "serviceLevelThresholdSeconds", "required": false, "array": true, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "serviceLevelInclusions", "required": false, "array": false, "type": "CallCenterScheduledReportServiceLevelInclusions", "schema": [[{"name": "includeOverflowTimeTransferedInServiceLevel", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeOtherTransfersInServiceLevel", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "abandonedCallsInServiceLevel", "required": true, "array": false, "type": "CallCenterReportAbadonedCallsInServiceLevel", "type_schema": "xs:token", "enum": ["Ignore All Abandoned Calls", "Include All Abandoned Calls", "Include Abandoned Calls Except Before Entrance Completes", "Include Abandoned Calls Except In Interval"]}, {"name": "abandonedCallIntervalSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}]]}, {"name": "serviceLevelObjectivePercentage", "required": false, "array": false, "type": "CallCenterReportServiceLevelObjective", "type_schema": "xs:int", "minimum": 0.0, "maximum": 100.0}, {"name": "abandonedCallThresholdSeconds", "required": false, "array": true, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "emailAddress", "required": true, "array": true, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"choice": [{"name": "callCenter", "required": true, "array": false, "type": "CallCenterScheduledReportCallCenterSelection", "schema": [{"choice": [{"name": "allCallCenter", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]}, {"name": "dnis", "required": true, "array": false, "type": "CallCenterScheduledReportDNISSelection", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"choice": [{"name": "allDNIS", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "name", "required": true, "array": true, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}]}]]}, {"name": "GroupCallCenterEnhancedReportingScheduledReportDeleteRequest", "tags": ["services"], "documentation": "Request to delete a group level call center reporting scheduled report.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupCallCenterEnhancedReportingScheduledReportGetActiveListRequest", "tags": ["services"], "documentation": "Request to get a list of active group level call center reporting scheduled reports.\n        The response is either a GroupCallCenterEnhancedReportingScheduledReportGetActiveListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaCallCenterScheduledReportName", "required": false, "array": true, "type": "SearchCriteriaCallCenterScheduledReportName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "schema": [[{"name": "createdBySupervisor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterReportTemplateKey", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterReportTemplateKey", "schema": [[{"name": "reportTemplate", "required": true, "array": false, "type": "CallCenterReportTemplateKey", "schema": [[{"name": "templateLevel", "required": true, "array": false, "type": "CallCenterReportTemplateLevel", "type_schema": "xs:token", "enum": ["System", "Enterprise", "Group"]}, {"name": "templateName", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}]]}, {"name": "GroupCallCenterEnhancedReportingScheduledReportGetCompletedListRequest", "tags": ["services"], "documentation": "Request to get a list of completed group level call center reporting scheduled reports.\n        The response is either a GroupCallCenterEnhancedReportingScheduledReportGetCompletedListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaCallCenterScheduledReportName", "required": false, "array": true, "type": "SearchCriteriaCallCenterScheduledReportName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "schema": [[{"name": "createdBySupervisor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterReportTemplateKey", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterReportTemplateKey", "schema": [[{"name": "reportTemplate", "required": true, "array": false, "type": "CallCenterReportTemplateKey", "schema": [[{"name": "templateLevel", "required": true, "array": false, "type": "CallCenterReportTemplateLevel", "type_schema": "xs:token", "enum": ["System", "Enterprise", "Group"]}, {"name": "templateName", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}]]}, {"name": "GroupCallCenterEnhancedReportingScheduledReportGetListRequest", "tags": ["services"], "documentation": "Request to get a list of group level call center reporting scheduled reports.\n        The response is either a GroupCallCenterEnhancedReportingScheduledReportGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaCallCenterScheduledReportName", "required": false, "array": true, "type": "SearchCriteriaCallCenterScheduledReportName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "schema": [[{"name": "createdBySupervisor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterReportTemplateKey", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterReportTemplateKey", "schema": [[{"name": "reportTemplate", "required": true, "array": false, "type": "CallCenterReportTemplateKey", "schema": [[{"name": "templateLevel", "required": true, "array": false, "type": "CallCenterReportTemplateLevel", "type_schema": "xs:token", "enum": ["System", "Enterprise", "Group"]}, {"name": "templateName", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}]]}, {"name": "GroupCallCenterEnhancedReportingScheduledReportGetReportTemplateUsageListRequest", "tags": ["services"], "documentation": "Request to get all the call center reporting scheduled report in a group that uses a given group level report template.\n        The response is either a GroupCallCenterEnhancedReportingScheduledReportGetReportTemplateUsageListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupCallCenterEnhancedReportingScheduledReportGetRequest", "tags": ["services"], "documentation": "Request to get a group level call center reporting scheduled report.\n        The response is either a GroupCallCenterEnhancedReportingScheduledReportGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupCallCenterEnhancedReportingScheduledReportModifyRequest", "tags": ["services"], "documentation": "Request to modify a group level call center reporting scheduled report.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The startDate element is adjusted to the first occurrence of the recurrent schedule that comes at or after startDate.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "CallCenterScheduledReportDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "schedule", "required": false, "array": false, "type": "CallCenterReportSchedule", "schema": [{"choice": [{"name": "scheduleTime", "required": true, "array": false, "type": "CallCenterReportScheduleTime", "schema": [[{"name": "timeZone", "required": true, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "scheduleDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "scheduleTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}, {"name": "recurrence", "required": true, "array": false, "type": "CallCenterReportScheduleRecurrence", "schema": [[{"name": "timeZone", "required": true, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "startDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "scheduleTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "recurrence", "required": true, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}]]}]}]}, {"name": "samplingPeriod", "required": false, "array": false, "type": "CallCenterReportSamplingPeriod", "type_schema": "xs:token", "enum": ["15 Minutes", "30 Minutes", "Hourly", "Daily", "Weekly", "Monthly"]}, {"name": "startDayOfWeek", "required": false, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "reportTimeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "reportDateFormat", "required": false, "array": false, "type": "CallCenterReportDateFormat", "type_schema": "xs:token", "enum": ["MMDDYYYY", "DDMMYYYY"]}, {"name": "reportTimeFormat", "required": false, "array": false, "type": "CallCenterReportTimeFormat", "type_schema": "xs:token", "enum": ["AM/PM", "24Hour"]}, {"name": "reportInterval", "required": false, "array": false, "type": "CallCenterReportInterval", "schema": [{"choice": [{"name": "dates", "required": true, "array": false, "type": "CallCenterReportIntervalDates", "schema": [[{"name": "startDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "startTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "endDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "endTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}, {"name": "current", "required": true, "array": false, "type": "CallCenterReportCurrentInterval", "schema": [[{"name": "timeUnit", "required": true, "array": false, "type": "CallCenterReportIntervalTimeUnit", "type_schema": "xs:token", "enum": ["Hour", "Day", "Week", "Month", "Year"]}]]}, {"name": "past", "required": true, "array": false, "type": "CallCenterReportPastInterval", "schema": [[{"name": "number", "required": true, "array": false, "type": "CallCenterReportIntervalNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "timeUnit", "required": true, "array": false, "type": "CallCenterReportIntervalTimeUnit", "type_schema": "xs:token", "enum": ["Hour", "Day", "Week", "Month", "Year"]}]]}]}]}, {"name": "reportFormat", "required": false, "array": false, "type": "CallCenterReportFileFormat", "type_schema": "xs:token", "enum": ["PDF", "XLS"]}, {"name": "agent", "required": false, "array": false, "type": "CallCenterScheduledReportAgentSelection", "schema": [{"choice": [{"name": "allAgent", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]}, {"name": "callCompletionThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "shortDurationThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "serviceLevelThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportServiceLevelThresholdReplacementList", "schema": [[{"name": "serviceLevelThresholdSeconds", "required": true, "array": true, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}]]}, {"name": "serviceLevelInclusions", "required": false, "array": false, "type": "CallCenterScheduledReportServiceLevelInclusionsModify", "schema": [[{"name": "includeOverflowTimeTransferedInServiceLevel", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeOtherTransfersInServiceLevel", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "abandonedCallsInServiceLevel", "required": false, "array": false, "type": "CallCenterReportAbadonedCallsInServiceLevel", "type_schema": "xs:token", "enum": ["Ignore All Abandoned Calls", "Include All Abandoned Calls", "Include Abandoned Calls Except Before Entrance Completes", "Include Abandoned Calls Except In Interval"]}, {"name": "abandonedCallIntervalSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}]]}, {"name": "serviceLevelObjectivePercentage", "required": false, "array": false, "type": "CallCenterReportServiceLevelObjective", "type_schema": "xs:int", "minimum": 0.0, "maximum": 100.0}, {"name": "abandonedCallThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportAbandonedCallThresholdReplacementList", "schema": [[{"name": "abandonedCallThresholdSeconds", "required": true, "array": true, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}]]}, {"name": "emailAddress", "required": false, "array": false, "type": "CallCenterReportReplacementEmailList", "schema": [[{"name": "emailAddress", "required": true, "array": true, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"choice": [{"name": "callCenter", "required": true, "array": false, "type": "CallCenterScheduledReportCallCenterSelection", "schema": [{"choice": [{"name": "allCallCenter", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]}, {"name": "dnis", "required": true, "array": false, "type": "CallCenterScheduledReportDNISSelection", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"choice": [{"name": "allDNIS", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "name", "required": true, "array": true, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}]}]]}, {"name": "GroupCallCenterForcedForwardingGetRequest20", "tags": ["services"], "documentation": "Get a call center's forced forwarding settings.\n        The response is either a GroupCallCenterForcedForwardingGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterForcedForwardingModifyRequest20", "tags": ["services"], "documentation": "Modify a call center's forced forwarding settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "allowEnableViaFAC", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "playAnnouncementBeforeForwarding", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "audioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "videoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}]]}, {"name": "GroupCallCenterGetAgentListRequest", "tags": ["services"], "documentation": "Get a list of agents assigned to a call center.\n        The response is either a\n        GroupCallCenterGetAgentListResponse or an ErrorResponse.\n\n        The following element is only used in AS data mode and ignored in XS data mode:\n          searchCriteriaExactSkillLevel", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactSkillLevel", "required": false, "array": false, "type": "SearchCriteriaExactSkillLevel", "schema": [[{"name": "skillLevel", "required": true, "array": false, "type": "CallCenterAgentSkillLevel", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}]]}]]}, {"name": "GroupCallCenterGetAgentPagedSortedListRequest", "tags": ["services"], "documentation": "Get a list of agents assigned to a call center.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        ErrorResponse is returned if searchCriteriaExactUserGroup or searchCriteriaExactSkillLevel have multiple entries and searchCriteriaModeOr is not included.\n\n        Sorting is done on either a priority basis or a skill basis depending on the type of call center.\n\n        The response is either a\n        GroupCallCenterGetAgentPagedSortedListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactSkillLevel", "required": false, "array": true, "type": "SearchCriteriaExactSkillLevel", "schema": [[{"name": "skillLevel", "required": true, "array": false, "type": "CallCenterAgentSkillLevel", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": true, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallCenterGetAnnouncementRequest22", "tags": ["services"], "documentation": "Get a call center's announcement settings.\n        The response is either a GroupCallCenterGetAnnouncementResponse22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterGetAvailableAgentListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned as agents to a given type of Call Center.\n        Searching for users by group only makes sense when the call center is part of an Enterprise.\n        The response is either GroupCallCenterGetAvailableAgentListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callCenterType", "required": true, "array": false, "type": "CallCenterType", "type_schema": "xs:token", "enum": ["Basic", "Standard", "Premium"]}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallCenterGetAvailableAgentPagedSortedListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned as agents to a given type of Call Center.\n        Searching for users by group only makes sense when the call center is part of an Enterprise.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        If no sortOrder is included the response is sorted by User Id ascending by default.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        ErrorResponse is returned if searchCriteriaExactUserGroup has multiple entries and searchCriteriaModeOr is not included.\n\n        The response is either GroupCallCenterGetAvailableAgentPagedSortedListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callCenterType", "required": true, "array": false, "type": "CallCenterType", "type_schema": "xs:token", "enum": ["Basic", "Standard", "Premium"]}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupCallCenterGetAvailableAgentPagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDepartmentName", "required": true, "array": false, "type": "SortByDepartmentName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByEmailAddress", "required": true, "array": false, "type": "SortByEmailAddress", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": true, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallCenterGetAvailableSupervisorListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned as supervisors to a Call Center.\n        Searching for users by group only makes sense when the call center is part of an Enterprise.\n        The response is either GroupCallCenterGetAvailableSupervisorListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallCenterGetDistinctiveRingingRequest", "tags": ["services"], "documentation": "Get the distinctive ringing configuration values for call center.\n        The response is either a GroupCallCenterGetDistinctiveRingingResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterGetDNISAgentListRequest", "tags": ["services"], "documentation": "Get a list of agent who selected the DNIS as the outgoing call.\n        The response is either GroupCallCenterGetDNISAgentListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "GroupCallCenterGetDNISAnnouncementRequest22", "tags": ["services"], "documentation": "Get a call center's DNIS Announcements\n        The response is either a GroupCallCenterGetDNISAnnouncementRequest22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "GroupCallCenterGetDNISListRequest", "tags": ["services"], "documentation": "Get a list of DNIS that are configured for a Call Center.\n        The response is either GroupCallCenterGetDNISListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterGetDNISRequest", "tags": ["services"], "documentation": "Get a call center's DNIS.\n        The response is either a GroupCallCenterGetDNISRequest or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "GroupCallCenterGetInstanceListRequest", "tags": ["services"], "documentation": "Get a list of Call Center instances within a group.\n        The response is either GroupCallCenterGetInstanceListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupDepartmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupCallCenterGetInstancePagedSortedListRequest", "tags": ["services"], "documentation": "Get a list of Call Center instances within a group.\n        The response is either GroupCallCenterGetInstancePagedSortedListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        If no sortOrder is included the response is sorted by User Id ascending by default.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        ErrorResponse is returned if searchCriteriaExactHuntPolicy or searchCriteriaExactCallCenterType have multiple entries and searchCriteriaModeOr is not include.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupCallCenterGetInstancePagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByCallCenterName", "required": true, "array": false, "type": "SortByCallCenterName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDepartmentName", "required": true, "array": false, "type": "SortByDepartmentName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByHuntPolicy", "required": true, "array": false, "type": "SortByHuntPolicy", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByCallCenterType", "required": true, "array": false, "type": "SortByCallCenterType", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaCallCenterName", "required": false, "array": true, "type": "SearchCriteriaCallCenterName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaServiceStatus", "required": false, "array": false, "type": "SearchCriteriaServiceStatus", "schema": [[{"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactHuntPolicy", "required": false, "array": true, "type": "SearchCriteriaExactHuntPolicy", "schema": [[{"name": "huntPolicy", "required": true, "array": false, "type": "HuntPolicy", "type_schema": "xs:token", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}]]}, {"name": "searchCriteriaExactCallCenterType", "required": false, "array": true, "type": "SearchCriteriaExactCallCenterType", "schema": [[{"name": "callCenterType", "required": true, "array": false, "type": "CallCenterType", "type_schema": "xs:token", "enum": ["Basic", "Standard", "Premium"]}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallCenterGetInstanceQueueStatusRequest", "tags": ["services"], "documentation": "Get Call Center queue status.\n        The response is either GroupCallCenterGetInstanceQueueStatusResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterGetInstanceRequest22", "tags": ["services"], "documentation": "Request to get all the information of a Call Center instance.\n        The response is either GroupCallCenterGetInstanceResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterGetInstanceStatisticsReportingRequest17sp1", "tags": ["services"], "documentation": "Request to get the call center statistics reporting settings.\n        The response is either GroupCallCenterGetInstanceStatisticsReportingResponse17sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterGetInstanceStatisticsRequest14sp9", "tags": ["services"], "documentation": "Get Call Center queue and agent statistics.\n        The response is either GroupCallCenterGetInstanceStatisticsResponse14sp9 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "statisticsRange", "required": true, "array": false, "type": "CallCenterStatisticsRange", "schema": [[{"name": "start", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "end", "required": false, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}]]}]]}, {"name": "GroupCallCenterGetRequest23", "tags": ["services"], "documentation": "Request the Group level data associated with Call Center.\n        The response is either a GroupCallCenterGetResponse23 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallCenterGetRoutingPolicyRequest", "tags": ["services"], "documentation": "Request the group call center routing policy.\n        The response is either a GroupCallCenterGetRoutingPolicyResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallCenterGetSupervisorListRequest16", "tags": ["services"], "documentation": "Get a list of supervisors assigned to a call center.\n        The response is either a\n        GroupCallCenterGetSupervisorListResponse16 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterGetUnlicensedAgentListRequest", "tags": ["services"], "documentation": "Get a list of unlicensed users who are preventing the Call Center from upgrading to another type.\n        The response is either GroupCallCenterGetUnlicensedAgentListRequest or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callCenterType", "required": true, "array": false, "type": "CallCenterType", "type_schema": "xs:token", "enum": ["Basic", "Standard", "Premium"]}]]}, {"name": "GroupCallCenterHolidayServiceGetRequest20", "tags": ["services"], "documentation": "Get a call center's holiday service settings.\n        The response is either a GroupCallCenterHolidayServiceGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterHolidayServiceModifyRequest20", "tags": ["services"], "documentation": "Modify a call center's holiday service settings.\n        Only Group and Enterprise level schedules are accepted.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "action", "required": false, "array": false, "type": "CallCenterScheduledServiceAction", "type_schema": "xs:token", "enum": ["None", "Busy", "Transfer"]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "playAnnouncementBeforeAction", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "audioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "videoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}]]}, {"name": "GroupCallCenterModifyActiveInstanceListRequest", "tags": ["services"], "documentation": "Request to set the active status of Call Center instances.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceActivation", "required": false, "array": true, "type": "ServiceActivation", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallCenterModifyAgentListRequest", "tags": ["services"], "documentation": "Request to modify the agent list for a call center.\n        The response is either SuccessResponse or ErrorResponse.\n        If the agentUserIdList is used for Skill Based Premium call centers,\n        the agents will be set to skill level 1.\n\n        The following element is only used in AS data mode and ignored in XS data mode:\n          skilledAgentUserIdList", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"choice": [{"name": "agentUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "skilledAgentUserIdList", "required": false, "array": true, "type": "CallCenterReplacementSkilledAgents", "schema": [[{"name": "skillLevel", "required": true, "array": false, "type": "CallCenterAgentSkillLevel", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}, {"name": "agents", "required": true, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}]}]]}, {"name": "GroupCallCenterModifyAnnouncementRequest20", "tags": ["services"], "documentation": "Modify a call center's announcement settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "playEntranceMessage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mandatoryEntranceMessage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "entranceAudioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "entranceMessageAudioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "entranceMessageAudioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "entranceVideoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "entranceMessageVideoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "entranceMessageVideoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "playPeriodicComfortMessage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "timeBetweenComfortMessagesSeconds", "required": false, "array": false, "type": "CallCenterTimeBetweenComfortMessagesSeconds", "type_schema": "xs:int", "minimum": 10.0, "maximum": 600.0}, {"name": "periodicComfortAudioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "periodicComfortMessageAudioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "periodicComfortMessageAudioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "periodicComfortVideoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "periodicComfortMessageVideoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "periodicComfortMessageVideoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "enableMediaOnHoldForQueuedCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mediaOnHoldSource", "required": false, "array": false, "type": "CallCenterMediaOnHoldSourceModify20", "schema": [[{"name": "audioMessageSourceSelection", "required": false, "array": false, "type": "CallCenterMediaOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["Default", "URL", "Custom", "External"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "externalAudioSource", "required": false, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "videoMessageSourceSelection", "required": false, "array": false, "type": "CallCenterMediaOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["Default", "URL", "Custom", "External"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "externalVideoSource", "required": false, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}]]}, {"name": "mediaOnHoldUseAlternateSourceForInternalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mediaOnHoldInternalSource", "required": false, "array": false, "type": "CallCenterMediaOnHoldSourceModify20", "schema": [[{"name": "audioMessageSourceSelection", "required": false, "array": false, "type": "CallCenterMediaOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["Default", "URL", "Custom", "External"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "externalAudioSource", "required": false, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "videoMessageSourceSelection", "required": false, "array": false, "type": "CallCenterMediaOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["Default", "URL", "Custom", "External"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "externalVideoSource", "required": false, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}]]}, {"name": "playWhisperMessage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "whisperAudioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "whisperMessageAudioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "whisperMessageAudioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "whisperVideoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "whisperMessageVideoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "whisperMessageVideoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "estimatedWaitMessageOptionsModify", "required": false, "array": false, "type": "EstimatedWaitMessageOptionsModify", "schema": [[{"name": "enabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "operatingMode", "required": false, "array": false, "type": "EstimatedWaitMessageOperatingMode", "type_schema": "xs:token", "enum": ["Position", "Time"]}, {"name": "playPositionHighVolume", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "playTimeHighVolume", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maximumPositions", "required": false, "array": false, "type": "EstimatedWaitMessageMaximumPositions", "type_schema": "xs:int", "minimum": 1.0, "maximum": 100.0}, {"name": "maximumWaitingMinutes", "required": false, "array": false, "type": "EstimatedWaitMessageMaximumWaitingMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 100.0}, {"name": "defaultCallHandlingMinutes", "required": false, "array": false, "type": "EstimatedWaitMessageDefaultCallHandlingMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 100.0}, {"name": "playUpdatedEWM", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "timeBetweenEWMUpdatesSeconds", "required": false, "array": false, "type": "EstimatedWaitMessageTimeBetweenUpdatesSeconds", "type_schema": "xs:int", "minimum": 10.0, "maximum": 600.0}]]}]]}, {"name": "GroupCallCenterModifyDistinctiveRingingRequest", "tags": ["services"], "documentation": "Modify the distinctive ringing configuration values for call center.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "distinctiveRingingCallCenterCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "distinctiveRingingRingPatternForCallCenter", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "distinctiveRingingForceDeliveryRingPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}]]}, {"name": "GroupCallCenterModifyDNISAnnouncementRequest20", "tags": ["services"], "documentation": "Modify a call center DNIS announcement settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "playEntranceMessage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mandatoryEntranceMessage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "entranceAudioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "entranceMessageAudioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "entranceMessageAudioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "entranceVideoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "entranceMessageVideoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "entranceMessageVideoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "playPeriodicComfortMessage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "timeBetweenComfortMessagesSeconds", "required": false, "array": false, "type": "CallCenterTimeBetweenComfortMessagesSeconds", "type_schema": "xs:int", "minimum": 10.0, "maximum": 600.0}, {"name": "periodicComfortAudioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "periodicComfortMessageAudioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "periodicComfortMessageAudioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "periodicComfortVideoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "periodicComfortMessageVideoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "periodicComfortMessageVideoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "enableMediaOnHoldForQueuedCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mediaOnHoldSource", "required": false, "array": false, "type": "CallCenterMediaOnHoldSourceModify20", "schema": [[{"name": "audioMessageSourceSelection", "required": false, "array": false, "type": "CallCenterMediaOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["Default", "URL", "Custom", "External"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "externalAudioSource", "required": false, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "videoMessageSourceSelection", "required": false, "array": false, "type": "CallCenterMediaOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["Default", "URL", "Custom", "External"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "externalVideoSource", "required": false, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}]]}, {"name": "playWhisperMessage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "whisperAudioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "whisperMessageAudioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "whisperMessageAudioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "whisperVideoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "whisperMessageVideoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "whisperMessageVideoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "estimatedWaitMessageOptionsModify", "required": false, "array": false, "type": "EstimatedWaitMessageOptionsModify", "schema": [[{"name": "enabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "operatingMode", "required": false, "array": false, "type": "EstimatedWaitMessageOperatingMode", "type_schema": "xs:token", "enum": ["Position", "Time"]}, {"name": "playPositionHighVolume", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "playTimeHighVolume", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maximumPositions", "required": false, "array": false, "type": "EstimatedWaitMessageMaximumPositions", "type_schema": "xs:int", "minimum": 1.0, "maximum": 100.0}, {"name": "maximumWaitingMinutes", "required": false, "array": false, "type": "EstimatedWaitMessageMaximumWaitingMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 100.0}, {"name": "defaultCallHandlingMinutes", "required": false, "array": false, "type": "EstimatedWaitMessageDefaultCallHandlingMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 100.0}, {"name": "playUpdatedEWM", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "timeBetweenEWMUpdatesSeconds", "required": false, "array": false, "type": "EstimatedWaitMessageTimeBetweenUpdatesSeconds", "type_schema": "xs:int", "minimum": 10.0, "maximum": 600.0}]]}]]}, {"name": "GroupCallCenterModifyDNISParametersRequest", "tags": ["services"], "documentation": "Modify the setting that are configured for all the DNIS in a Call Center.\n      The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "displayDNISNumber", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "displayDNISName", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "promoteCallsFromPriority1to0", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "promoteCallsFromPriority2to1", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "promoteCallsFromPriority3to2", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "promoteCallsFromPriority1to0Seconds", "required": false, "array": false, "type": "DNISPromoteCallPrioritySeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1800.0}, {"name": "promoteCallsFromPriority2to1Seconds", "required": false, "array": false, "type": "DNISPromoteCallPrioritySeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1800.0}, {"name": "promoteCallsFromPriority3to2Seconds", "required": false, "array": false, "type": "DNISPromoteCallPrioritySeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1800.0}]]}, {"name": "GroupCallCenterModifyDNISRequest", "tags": ["services"], "documentation": "Modify a call center's DNIS settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "newDNISName", "required": false, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "dnisPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "useCustomCLIDSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useCustomDnisAnnouncementSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "priority", "required": false, "array": false, "type": "DNISPriority", "type_schema": "xs:token", "enum": ["0 - Highest", "1 - High", "2 - Medium", "3 - Low"]}, {"name": "allowOutgoingACDCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallCenterModifyInstanceRequest22", "tags": ["services"], "documentation": "Request to modify a Call Center instance.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          routingType\n          enableReporting\n          allowCallsToAgentsInWrapUp\n          overrideAgentWrapUpTime\n          wrapUpSeconds\n          forceDeliveryOfCalls\n          forceDeliveryWaitTimeSeconds\n          enableAutomaticStateChangeForAgents\n          agentStateAfterCall\n          agentUnavailableCode\n          callCenterQueueThresholdsIsActive\n          networkClassOfService", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "type", "required": false, "array": false, "type": "CallCenterType", "type_schema": "xs:token", "enum": ["Basic", "Standard", "Premium"]}, {"name": "routingType", "required": false, "array": false, "type": "CallCenterRoutingType", "type_schema": "xs:token", "enum": ["Priority Based", "Skill Based"]}, {"name": "policy", "required": false, "array": false, "type": "HuntPolicy", "type_schema": "xs:token", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, {"name": "enableVideo", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "queueLength", "required": false, "array": false, "type": "CallCenterQueueLength16", "type_schema": "xs:int", "minimum": 0.0, "maximum": 525.0}, {"name": "enableReporting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowCallerToDialEscapeDigit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "escapeDigit", "required": false, "array": false, "type": "DtmfDigit", "type_schema": "xs:token"}, {"name": "resetCallStatisticsUponEntryInQueue", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowAgentLogoff", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowCallWaitingForAgents", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowCallsToAgentsInWrapUp", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "overrideAgentWrapUpTime", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wrapUpSeconds", "required": false, "array": false, "type": "CallCenterWrapUpSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 3600.0}, {"name": "forceDeliveryOfCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceDeliveryWaitTimeSeconds", "required": false, "array": false, "type": "CallCenterForceDeliveryWaitTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "enableAutomaticStateChangeForAgents", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "agentStateAfterCall", "required": false, "array": false, "type": "AgentACDAutomaticState", "type_schema": "xs:token", "enum": ["Available", "Unavailable", "Wrap-Up"]}, {"name": "agentUnavailableCode", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "externalPreferredAudioCodec", "required": false, "array": false, "type": "AudioFileCodec22", "type_schema": "xs:token", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB", "OPUS", "EVRC0", "EVRCNW", "EVRCNW0"]}, {"name": "internalPreferredAudioCodec", "required": false, "array": false, "type": "AudioFileCodec22", "type_schema": "xs:token", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB", "OPUS", "EVRC0", "EVRCNW", "EVRCNW0"]}, {"name": "playRingingWhenOfferingCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupCallCenterModifyInstanceStatisticsReportingRequest17sp1", "tags": ["services"], "documentation": "Modify the Call Center statistics reporting frequency and destination.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "generateDailyReport", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "collectionPeriodMinutes", "required": false, "array": false, "type": "CallCenterStatisticsCollectionPeriodMinutes", "type_schema": "xs:int", "enum": ["15", "30", "60"]}, {"name": "reportingEmailAddress1", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "reportingEmailAddress2", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "statisticsSource", "required": false, "array": false, "type": "CallCenterStatisticsSource17sp1", "type_schema": "xs:token", "enum": ["None", "Application Server", "External Reporting Server"]}]]}, {"name": "GroupCallCenterModifyInstanceWeightedCallDistributionRequest", "tags": ["services"], "documentation": "Request to modify the weighted call distribution of a Call Center instance.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "agentWeight", "required": false, "array": true, "type": "HuntAgentWeight", "schema": [[{"name": "agentUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "weight", "required": true, "array": false, "type": "HuntWeight", "type_schema": "xs:int", "minimum": 0.0, "maximum": 100.0}]]}]]}, {"name": "GroupCallCenterModifyRequest", "tags": ["services"], "documentation": "Modify the group level data associated with Call Center and\n        the active status of Call Center instances.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          useSystemDefaultUnavailableSettings\n          forceAgentUnavailableOnDNDActivation\n          forceAgentUnavailableOnPersonalCalls\n          forceAgentUnavailableOnBouncedCallLimit\n          numberConsecutiveBouncedCallsToForceAgentUnavailable\n          forceAgentUnavailableOnNotReachable\n          wrapUpDestination", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useSystemDefaultGuardTimer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableGuardTimer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "guardTimerSeconds", "required": false, "array": false, "type": "CallCenterGuardTimerSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 25.0}, {"name": "useSystemDefaultUnavailableSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceAgentUnavailableOnDNDActivation", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceAgentUnavailableOnPersonalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceAgentUnavailableOnBouncedCallLimit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberConsecutiveBouncedCallsToForceAgentUnavailable", "required": false, "array": false, "type": "CallCenterConsecutiveBouncedCallsToForceAgentUnavailable", "type_schema": "xs:int", "minimum": 1.0, "maximum": 5.0}, {"name": "forceAgentUnavailableOnNotReachable", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wrapUpDestination", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterModifyRoutingPolicyRequest", "tags": ["services"], "documentation": "Modify the group call center routing policy.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "routingPolicy", "required": false, "array": false, "type": "CallCenterRoutingPolicy", "type_schema": "xs:token", "enum": ["Longest Wait Time", "Priority"]}, {"name": "routingPriorityOrder", "required": false, "array": true, "type": "CallCenterRoutingPriorityOrder", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "priority", "required": true, "array": false, "type": "CallCenterRoutingPriority", "type_schema": "xs:float", "minimum": 0.0, "maximum": 1000000.0}]]}]]}, {"name": "GroupCallCenterModifySupervisorListRequest16", "tags": ["services"], "documentation": "Request to modify the supervisor list for a call center.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "supervisorUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "GroupCallCenterNightServiceGetRequest20", "tags": ["services"], "documentation": "Get a call center's night service settings.\n        The response is either a GroupCallCenterNightServiceGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterNightServiceModifyRequest20", "tags": ["services"], "documentation": "Modify a call center's night service settings.\n        Only Group and Enterprise level schedules are accepted.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "action", "required": false, "array": false, "type": "CallCenterScheduledServiceAction", "type_schema": "xs:token", "enum": ["None", "Busy", "Transfer"]}, {"name": "businessHours", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "forceNightService", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowManualOverrideViaFAC", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "playAnnouncementBeforeAction", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "audioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "videoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "manualAnnouncementMode", "required": false, "array": false, "type": "CallCenterManualNightServiceAnnouncementMode", "type_schema": "xs:token", "enum": ["Normal Announcement", "Manual Announcement"]}, {"name": "manualAudioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "manualAudioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "manualAudioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "manualVideoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "manualVideoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "manualVideoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}]]}, {"name": "GroupCallCenterOverflowGetRequest20", "tags": ["services"], "documentation": "Get a call center's overflow settings.\n        The response is either a GroupCallCenterOverflowGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterOverflowModifyRequest20", "tags": ["services"], "documentation": "Modify a call center's overflow settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "action", "required": false, "array": false, "type": "CallCenterOverflowProcessingAction", "type_schema": "xs:token", "enum": ["Busy", "Transfer", "Ringing"]}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "overflowAfterTimeout", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "timeoutSeconds", "required": false, "array": false, "type": "HuntForwardTimeoutSeconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 7200.0}, {"name": "playAnnouncementBeforeOverflowProcessing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "audioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "videoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}]]}, {"name": "GroupCallCenterQueueCallDispositionCodeAddRequest", "tags": ["services"], "documentation": "Add a Call Center Call Disposition Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "CallDispositionCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupCallCenterQueueCallDispositionCodeDeleteRequest", "tags": ["services"], "documentation": "Delete a Call Center Call Disposition Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "GroupCallCenterQueueCallDispositionCodeGetListRequest", "tags": ["services"], "documentation": "Get the list of Call Center Level and Organization Level Call Disposition Codes.\n        The response is either GroupCallCenterQueueCallDispositionCodeGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterQueueCallDispositionCodeGetRequest", "tags": ["services"], "documentation": "Get a Call Center Call Disposition Code.\n        The response is either GroupCallCenterQueueCallDispositionCodeGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "GroupCallCenterQueueCallDispositionCodeModifyRequest", "tags": ["services"], "documentation": "Modify a Call Center Call Disposition Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "CallDispositionCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupCallCenterQueueCallDispositionCodeSettingsGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Call Center Call Disposition Code Settings.\n        The response is either a GroupCallCenterQueueCallDispositionCodeSettingsGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterQueueCallDispositionCodeSettingsModifyRequest", "tags": ["services"], "documentation": "Modify the enterprise level data associated with Call Center Agents Unavailable Code Settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableCallDispositionCodes", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeOrganizationCodes", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceUseOfCallDispositionCodes", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "defaultCallDispositionCode", "required": false, "array": false, "type": "CallDispositionCodeWithLevel", "schema": [[{"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "level", "required": true, "array": false, "type": "CallDispositionCodeLevel", "type_schema": "xs:token", "enum": ["Enterprise", "Group", "Queue"]}]]}, {"name": "callDispositionCodeActivation", "required": false, "array": true, "type": "CallDispositionCodeActivation", "schema": [[{"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallCenterQueueStatusNotificationGetRequest", "tags": ["services"], "documentation": "Get the status configuration for a given call center.\n        The response is either a GroupCallCenterQueueStatusNotificationGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterQueueStatusNotificationModifyRequest", "tags": ["services"], "documentation": "Set the status configuration for a given call center.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableQueueStatusNotification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableQueueDepthThreshold", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableWaitingTimeThreshold", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberOfCallsThreshold", "required": false, "array": false, "type": "CallCenterQueueDepthNotificationThreshold", "type_schema": "xs:int", "minimum": 1.0, "maximum": 525.0}, {"name": "waitingTimeOfCallsThreshold", "required": false, "array": false, "type": "CallCenterWaitingTimeNotificationThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}]]}, {"name": "GroupCallCenterQueueThresholdsGetRequest", "tags": ["services"], "documentation": "Get a call center's queue Thresholds settings.\n        The response is either a GroupCallCenterQueueThresholdsGetRequest or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterQueueThresholdsModifyRequest", "tags": ["services"], "documentation": "Modify a call center's queue Thresholds settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thresholdCurrentCallsInQueueYellow", "required": false, "array": false, "type": "CallCenterQueueThresholdCurrentCallsInQueue", "type_schema": "xs:int", "minimum": 1.0, "maximum": 525.0}, {"name": "thresholdCurrentCallsInQueueRed", "required": false, "array": false, "type": "CallCenterQueueThresholdCurrentCallsInQueue", "type_schema": "xs:int", "minimum": 1.0, "maximum": 525.0}, {"name": "thresholdCurrentLongestWaitingCallYellow", "required": false, "array": false, "type": "CallCenterQueueThresholdCurrentLongestWaitingCallsTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdCurrentLongestWaitingCallRed", "required": false, "array": false, "type": "CallCenterQueueThresholdCurrentLongestWaitingCallsTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageEstimatedWaitTimeYellow", "required": false, "array": false, "type": "CallCenterQueueThresholdAverageEstimatedWaitTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageEstimatedWaitTimeRed", "required": false, "array": false, "type": "CallCenterQueueThresholdAverageEstimatedWaitTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageHandlingTimeYellow", "required": false, "array": false, "type": "CallCenterQueueThresholdAverageHandlingTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageHandlingTimeRed", "required": false, "array": false, "type": "CallCenterQueueThresholdAverageHandlingTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageSpeedOfAnswerYellow", "required": false, "array": false, "type": "CallCenterQueueThresholdAverageSpeedOfAnswerTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "thresholdAverageSpeedOfAnswerRed", "required": false, "array": false, "type": "CallCenterQueueThresholdAverageSpeedOfAnswerTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 86400.0}, {"name": "enableNotificationEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "notificationEmailAddressList", "required": false, "array": false, "type": "CallCenterQueueThresholdReplacementNotificationEmailList", "schema": [[{"name": "emailAddress", "required": true, "array": true, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "GroupCallCenterStrandedCallGetRequest20", "tags": ["services"], "documentation": "Get a call center's stranded call settings.\n        The response is either a GroupCallCenterStrandedCallGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterStrandedCallModifyRequest20", "tags": ["services"], "documentation": "Modify a call center's stranded call settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "action", "required": false, "array": false, "type": "CallCenterStrandedCallProcessingAction", "type_schema": "xs:token", "enum": ["None", "Busy", "Transfer", "Night Service", "Ringing", "Announcement"]}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "audioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "videoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}]]}, {"name": "GroupCallCenterStrandedCallUnavailableGetRequest20", "tags": ["services"], "documentation": "Get a call center's stranded calls - unavailable settings.\n        The response is either a GroupCallCenterStrandedCallUnavailableGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallCenterStrandedCallUnavailableModifyRequest20", "tags": ["services"], "documentation": "Modify a call center's stranded calls - unavailable settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conditionPolicyOnNumberOfAgentsWithSpecifiedUnavailableCode", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberOfAgentsWithSpecifiedUnavailableCode", "required": false, "array": false, "type": "CallCenterStrandedCallUnavailableNumberOfAgents", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1000.0}, {"name": "agentsUnavailableCode", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "action", "required": false, "array": false, "type": "CallCenterStrandedCallUnavailableProcessingAction", "type_schema": "xs:token", "enum": ["None", "Busy", "Transfer", "Night Service", "Ringing", "Announcement"]}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "audioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "videoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}]]}, {"name": "ResellerCallCenterGetRequest", "tags": ["services"], "documentation": "Request the reseller level data associated with Call Center.\n        The response is either a ResellerCallCenterGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}, {"name": "ResellerCallCenterModifyRequest", "tags": ["services"], "documentation": "Modify the reseller level data associated with Call Center.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "defaultFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemCallCenterEnhancedReportingBrandingGetRequest", "tags": ["services"], "documentation": "Request to get the system branding information.\n        The response is either SystemCallCenterEnhancedReportingBrandingGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallCenterEnhancedReportingBrandingModifyRequest", "tags": ["services"], "documentation": "Request to modify the system branding configuration.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "brandingChoice", "required": false, "array": false, "type": "CallCenterEnhancedReportingSystemBrandingChoice", "type_schema": "xs:token", "enum": ["Default", "Custom"]}, {"name": "customBrandingFile", "required": false, "array": false, "type": "LabeledFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "SystemCallCenterEnhancedReportingDataTemplateGetListRequest", "tags": ["services"], "documentation": "Request to get the list of data template and the corresponding information in the system.\n        The response is either a SystemCallCenterEnhancedReportingDataTemplateGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallCenterEnhancedReportingGetRequest", "tags": ["services"], "documentation": "Request to get the call center enhanced reporting system settings.\n        The response is either a SystemCallCenterEnhancedReportingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallCenterEnhancedReportingModifyRequest", "tags": ["services"], "documentation": "Modify the system settings for call center enhanced reporting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "archiveReports", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "reportApplicationURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "repositoryApplicationURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "SystemCallCenterEnhancedReportingReportTemplateAddRequest", "tags": ["services"], "documentation": "Request to add a system level call center report template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "CallCenterReportTemplateDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "dataTemplate", "required": true, "array": false, "type": "CallCenterReportDataTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "filterNumber", "required": false, "array": false, "type": "CallCenterReportDataTemplateFilterNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "xsltTemplate", "required": true, "array": false, "type": "LabeledFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "scope", "required": true, "array": false, "type": "CallCenterReportTemplateAccessOption", "type_schema": "xs:token", "enum": ["Supervisor Only", "Supervisor and Agent"]}, {"name": "isEnabled", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isRealtimeReport", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callCompletionThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "shortDurationThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "serviceLevelThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "serviceLevelInclusionsParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "serviceLevelObjectiveThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "abandonedCallThresholdParam", "required": false, "array": false, "type": "CallCenterReportInputParameterOption", "type_schema": "xs:token", "enum": ["Required", "Hidden"]}, {"name": "serviceLevelThresholdParamNumber", "required": false, "array": false, "type": "CallCenterReportServiceLevelInputParameterNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 5.0}, {"name": "abandonedCallThresholdParamNumber", "required": false, "array": false, "type": "CallCenterReportAbandonedCallInputParameterNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 4.0}, {"name": "filterValue", "required": false, "array": true, "type": "CallCenterReportDataTemplateQueryFilterValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}]]}, {"name": "SystemCallCenterEnhancedReportingReportTemplateDeleteRequest", "tags": ["services"], "documentation": "Request to delete a system level call center report template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemCallCenterEnhancedReportingReportTemplateGetListRequest", "tags": ["services"], "documentation": "Request to get system level call center report template list.\n        The response is either a SystemCallCenterEnhancedReportingReportTemplateGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallCenterEnhancedReportingReportTemplateGetRequest", "tags": ["services"], "documentation": "Request to get a system level call center report template.\n        The response is either a SystemCallCenterEnhancedReportingReportTemplateGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemCallCenterEnhancedReportingReportTemplateModifyRequest", "tags": ["services"], "documentation": "Request to modify a system level call center report template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "CallCenterReportTemplateDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "xsltTemplate", "required": false, "array": false, "type": "LabeledFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "scope", "required": false, "array": false, "type": "CallCenterReportTemplateAccessOption", "type_schema": "xs:token", "enum": ["Supervisor Only", "Supervisor and Agent"]}, {"name": "isEnabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isRealtimeReport", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "filterNumber", "required": false, "array": false, "type": "CallCenterReportDataTemplateFilterNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "filterValue", "required": false, "array": false, "type": "CallCenterReportDataTemplateQueryFilterValueReplacementList", "schema": [[{"name": "filterValue", "required": true, "array": true, "type": "CallCenterReportDataTemplateQueryFilterValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}]]}]]}, {"name": "SystemCallCenterEnhancedReportingScheduledReportGetActiveListRequest", "tags": ["services"], "documentation": "Request to get the list of all active call center reporting scheduled reports in the system.\n        The response is either a SystemCallCenterEnhancedReportingScheduledReportGetActiveListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaCallCenterScheduledReportName", "required": false, "array": true, "type": "SearchCriteriaCallCenterScheduledReportName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterScheduledReportServiceProvider", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterScheduledReportServiceProvider", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "schema": [[{"name": "createdBySupervisor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaCallCenterReportTemplateName", "required": false, "array": true, "type": "SearchCriteriaCallCenterReportTemplateName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemCallCenterEnhancedReportingScheduledReportGetCompletedListRequest", "tags": ["services"], "documentation": "Request to get the list of all completed call center reporting scheduled reports in the system.\n        The response is either a SystemCallCenterEnhancedReportingScheduledReportGetCompletedListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaCallCenterScheduledReportName", "required": false, "array": true, "type": "SearchCriteriaCallCenterScheduledReportName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterScheduledReportServiceProvider", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterScheduledReportServiceProvider", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "schema": [[{"name": "createdBySupervisor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaCallCenterReportTemplateName", "required": false, "array": true, "type": "SearchCriteriaCallCenterReportTemplateName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemCallCenterEnhancedReportingScheduledReportGetListRequest", "tags": ["services"], "documentation": "Request to get the list of all call center reporting scheduled reports in the system.\n        The response is either an SystemCallCenterEnhancedReportingScheduledReportGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaCallCenterScheduledReportName", "required": false, "array": true, "type": "SearchCriteriaCallCenterScheduledReportName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterScheduledReportServiceProvider", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterScheduledReportServiceProvider", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "required": false, "array": false, "type": "SearchCriteriaExactCallCenterScheduledReportCreatedBySupervisor", "schema": [[{"name": "createdBySupervisor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaCallCenterReportTemplateName", "required": false, "array": true, "type": "SearchCriteriaCallCenterReportTemplateName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemCallCenterEnhancedReportingScheduledReportGetReportTemplateUsageListRequest", "tags": ["services"], "documentation": "Request to get all the call center reporting scheduled report in the system that uses a\n        given system level report template.\n        The response is either a SystemCallCenterEnhancedReportingScheduledReportGetReportTemplateUsageListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequest22", "tags": ["services"], "documentation": "Request to get the system settings for the call center enhanced reporting scheduling tasks.\n        The response is either a SystemCallCenterEnhancedReportingScheduledTaskParametersGetResponse22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallCenterEnhancedReportingScheduledTaskParametersModifyRequest", "tags": ["services"], "documentation": "Modify the system settings for the call center enhanced reporting scheduling tasks.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode:\n          callCenterEventMode, value \u201cLegacy ECCR\" is returned in Amplify data mode", "type": "core:OCIRequest", "schema": [[{"name": "scheduledReportSearchIntervalMinutes", "required": false, "array": false, "type": "CallCenterScheduledReportSearchIntervalMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1440.0}, {"name": "maximumScheduledReportsPerInterval", "required": false, "array": false, "type": "CallCenterMaximumScheduledReportsPerInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 100000.0}, {"name": "deleteScheduledReportDaysAfterCompletion", "required": false, "array": false, "type": "CallCenterDaysAfterScheduledReportCompletion", "type_schema": "xs:int", "minimum": 1.0, "maximum": 366.0}, {"name": "callCenterEventMode", "required": false, "array": false, "type": "CallCenterEventRecordingCallCenterEventMode", "type_schema": "xs:token", "enum": ["Call Center Event Recording", "Legacy ECCR", "Both"]}]]}, {"name": "SystemCallCenterEventRecordingFileParametersGetRequest", "tags": ["services"], "documentation": "Request to get the list of Call Center Event Recording File system parameters.\n        The response is either SystemCallCenterEventRecordingFileParametersGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallCenterEventRecordingFileParametersModifyRequest", "tags": ["services"], "documentation": "Request to modify Call Center Event Recording File system parameters.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "fileRetentionTimeDays", "required": false, "array": false, "type": "CallCenterEventRecordingFileRetentionTimeDays", "type_schema": "xs:int", "minimum": 0.0, "maximum": 120.0}, {"name": "fileRotationPeriodMinutes", "required": false, "array": false, "type": "CallCenterEventRecordingFileRotationPeriodMinutes", "type_schema": "xs:token", "enum": ["1", "5", "10", "15", "30", "60"]}, {"name": "fileRotationOffsetMinutes", "required": false, "array": false, "type": "CallCenterEventRecordingFileRotationOffsetMinutes", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}, {"name": "remoteUrl", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "remoteUserId", "required": false, "array": false, "type": "CallCenterEventRecordingFileSFTPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "remotePassword", "required": false, "array": false, "type": "CallCenterEventRecordingFileSFTPUserPassword", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}]]}, {"name": "SystemCallCenterGetRequest21", "tags": ["services"], "documentation": "Request the system level data associated with Call Center.\n        The response is either a SystemCallCenterGetResponse21 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallCenterModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Call Center.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in Amplify data mode:\n          callHandlingSamplingPeriodMinutes\n          callHandlingMinimumSamplingSize\n          thresholdCrossingNotificationEmailGuardTimerSeconds", "type": "core:OCIRequest", "schema": [[{"name": "defaultFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "statisticsSamplingPeriodMinutes", "required": false, "array": false, "type": "CallCenterStatisticsSamplingPeriodMinutes", "type_schema": "xs:int", "enum": ["15", "30"]}, {"name": "defaultEnableGuardTimer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "defaultGuardTimerSeconds", "required": false, "array": false, "type": "CallCenterGuardTimerSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 25.0}, {"name": "forceAgentUnavailableOnDNDActivation", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceAgentUnavailableOnPersonalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceAgentUnavailableOnBouncedCallLimit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberConsecutiveBouncedCallsToForceAgentUnavailable", "required": false, "array": false, "type": "CallCenterConsecutiveBouncedCallsToForceAgentUnavailable", "type_schema": "xs:int", "minimum": 1.0, "maximum": 5.0}, {"name": "forceAgentUnavailableOnNotReachable", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "defaultPlayRingWhenOfferCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "uniformCallDistributionPolicyScope", "required": false, "array": false, "type": "CallCenterUniformCallDistributionPolicyScope", "type_schema": "xs:token", "enum": ["Agent", "Call Center"]}, {"name": "callHandlingSamplingPeriodMinutes", "required": false, "array": false, "type": "CallHandlingSamplingPeriodMinutes", "type_schema": "xs:int", "minimum": 5.0, "maximum": 30.0}, {"name": "callHandlingMinimumSamplingSize", "required": false, "array": false, "type": "CallHandlingMinimumSamplingSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 100.0}, {"name": "playToneToAgentForEmergencyCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "emergencyCallCLIDPrefix", "required": false, "array": false, "type": "CallCenterEmergencyCallCLIDPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "thresholdCrossingNotificationEmailGuardTimerSeconds", "required": false, "array": false, "type": "CallCenterThresholdCrossingNotificationEmailGuardTimerSeconds", "type_schema": "xs:int", "minimum": 3.0, "maximum": 60.0}, {"name": "allowAgentDeviceInitiatedForward", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallCenterAddSupervisedAgentListRequest", "tags": ["services"], "documentation": "Assign agent(s) to a call center supervisor.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "supervisorUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallCenterAgentDetailsGetRequest", "tags": ["services"], "documentation": "Request to get the detail information of a Call Center Agent. Administrator, supervisor and agent\n        itself can send this command.\n        The response is either UserCallCenterAgentDetailsGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "agentUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallCenterAgentSignOutRequest", "tags": ["services"], "documentation": "This request signs-out a call center agent. Administrator, supervisor and agent itself can sign-out an agent.\n        An empty OCI table in OCI-P response indicates success and the agent has been signed out. This sign-out\n        command will fail if the agent is the last signed-in agent of any standard or premium call center to\n        which she is currently joined. If the sign-out fails, the OCI-P response will contain a list of\n        Call Centers for which the agent is the last signed-in agent.\n        If this special logic is not needed, UserCallCenterModifyRequest19 can still be used to change\n        the agents ACD state without checking if the agent is the last signed-in agent.\n        The response is either a UserCallCenterAgentSignOutResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "agentUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallCenterCallDispositionCodeGetAvailableListRequest", "tags": ["services"], "documentation": "Get the list of available Call Center Call Disposition Codes to be used by a client.\n        The response is either UserCallCenterCallDispositionCodeGetAvailableListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallCenterDeleteSupervisedAgentListRequest", "tags": ["services"], "documentation": "Delete agent(s) from a call center supervisor.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "supervisorUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallCenterEnhancedReportingReportTemplateParamInfoGetRequest", "tags": ["services"], "documentation": "Request to get the input parameter info for a call center report template.\n        The response is either a UserCallCenterEnhancedReportingReportTemplateParamInfoGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "reportTemplate", "required": true, "array": false, "type": "CallCenterReportTemplateKey", "schema": [[{"name": "templateLevel", "required": true, "array": false, "type": "CallCenterReportTemplateLevel", "type_schema": "xs:token", "enum": ["System", "Enterprise", "Group"]}, {"name": "templateName", "required": true, "array": false, "type": "CallCenterReportTemplateName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "UserCallCenterEnhancedReportingScheduledReportDeleteRequest", "tags": ["services"], "documentation": "Request to delete a call center reporting scheduled report created by a supervisor.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "supervisorUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "UserCallCenterEnhancedReportingScheduledReportGetRequest", "tags": ["services"], "documentation": "Request to get a call center reporting scheduled report created by supervisor.\n        The response is either a UserCallCenterEnhancedReportingScheduledReportGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "supervisorUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "UserCallCenterEnhancedReportingScheduledReportModifyRequest", "tags": ["services"], "documentation": "Request to modify a call center reporting scheduled report created by a supervisor.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The startDate element is adjusted to the first occurrence of the recurrent schedule that comes at or after startDate.", "type": "core:OCIRequest", "schema": [[{"name": "supervisorUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "CallCenterScheduledReportName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "CallCenterScheduledReportDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "schedule", "required": false, "array": false, "type": "CallCenterReportSchedule", "schema": [{"choice": [{"name": "scheduleTime", "required": true, "array": false, "type": "CallCenterReportScheduleTime", "schema": [[{"name": "timeZone", "required": true, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "scheduleDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "scheduleTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}, {"name": "recurrence", "required": true, "array": false, "type": "CallCenterReportScheduleRecurrence", "schema": [[{"name": "timeZone", "required": true, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "startDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "scheduleTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "recurrence", "required": true, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}]]}]}]}, {"name": "samplingPeriod", "required": false, "array": false, "type": "CallCenterReportSamplingPeriod", "type_schema": "xs:token", "enum": ["15 Minutes", "30 Minutes", "Hourly", "Daily", "Weekly", "Monthly"]}, {"name": "startDayOfWeek", "required": false, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "reportTimeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "reportDateFormat", "required": false, "array": false, "type": "CallCenterReportDateFormat", "type_schema": "xs:token", "enum": ["MMDDYYYY", "DDMMYYYY"]}, {"name": "reportTimeFormat", "required": false, "array": false, "type": "CallCenterReportTimeFormat", "type_schema": "xs:token", "enum": ["AM/PM", "24Hour"]}, {"name": "reportInterval", "required": false, "array": false, "type": "CallCenterReportInterval", "schema": [{"choice": [{"name": "dates", "required": true, "array": false, "type": "CallCenterReportIntervalDates", "schema": [[{"name": "startDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "startTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "endDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "endTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}, {"name": "current", "required": true, "array": false, "type": "CallCenterReportCurrentInterval", "schema": [[{"name": "timeUnit", "required": true, "array": false, "type": "CallCenterReportIntervalTimeUnit", "type_schema": "xs:token", "enum": ["Hour", "Day", "Week", "Month", "Year"]}]]}, {"name": "past", "required": true, "array": false, "type": "CallCenterReportPastInterval", "schema": [[{"name": "number", "required": true, "array": false, "type": "CallCenterReportIntervalNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "timeUnit", "required": true, "array": false, "type": "CallCenterReportIntervalTimeUnit", "type_schema": "xs:token", "enum": ["Hour", "Day", "Week", "Month", "Year"]}]]}]}]}, {"name": "reportFormat", "required": false, "array": false, "type": "CallCenterReportFileFormat", "type_schema": "xs:token", "enum": ["PDF", "XLS"]}, {"name": "agent", "required": false, "array": false, "type": "CallCenterScheduledReportAgentSelection", "schema": [{"choice": [{"name": "allAgent", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]}, {"name": "callCompletionThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "shortDurationThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "serviceLevelThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportServiceLevelThresholdReplacementList", "schema": [[{"name": "serviceLevelThresholdSeconds", "required": true, "array": true, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}]]}, {"name": "serviceLevelInclusions", "required": false, "array": false, "type": "CallCenterScheduledReportServiceLevelInclusionsModify", "schema": [[{"name": "includeOverflowTimeTransferedInServiceLevel", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeOtherTransfersInServiceLevel", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "abandonedCallsInServiceLevel", "required": false, "array": false, "type": "CallCenterReportAbadonedCallsInServiceLevel", "type_schema": "xs:token", "enum": ["Ignore All Abandoned Calls", "Include All Abandoned Calls", "Include Abandoned Calls Except Before Entrance Completes", "Include Abandoned Calls Except In Interval"]}, {"name": "abandonedCallIntervalSeconds", "required": false, "array": false, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}]]}, {"name": "serviceLevelObjectivePercentage", "required": false, "array": false, "type": "CallCenterReportServiceLevelObjective", "type_schema": "xs:int", "minimum": 0.0, "maximum": 100.0}, {"name": "abandonedCallThresholdSeconds", "required": false, "array": false, "type": "CallCenterReportAbandonedCallThresholdReplacementList", "schema": [[{"name": "abandonedCallThresholdSeconds", "required": true, "array": true, "type": "CallCenterReportThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}]]}, {"name": "emailAddress", "required": false, "array": false, "type": "CallCenterReportReplacementEmailList", "schema": [[{"name": "emailAddress", "required": true, "array": true, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"choice": [{"name": "callCenter", "required": true, "array": false, "type": "CallCenterScheduledReportCallCenterSelection", "schema": [{"choice": [{"name": "allCallCenter", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]}, {"name": "dnis", "required": true, "array": false, "type": "CallCenterScheduledReportDNISSelection", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"choice": [{"name": "allDNIS", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "name", "required": true, "array": true, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]]}]}]]}, {"name": "UserCallCenterGetAgentSupervisorListRequest", "tags": ["services"], "documentation": "Get a list of supervisors for an agent on a given call center.\n        The response is either a UserCallCenterGetAgentSupervisorListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "agentUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallCenterGetAvailableCallCenterListRequest", "tags": ["services"], "documentation": "This request gets a list of all call centers which the user can be assigned to as an agent.\n        Some of the call centers may already have the user as an agent.  It is the clients\n        responsibility to discard the call centers that the user is already an agent of.\n        The response is either a UserCallCenterGetAvailableCallCenterListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallCenterGetAvailableCallCenterPagedSortedListRequest", "tags": ["services"], "documentation": "This request gets a list of all call centers which the user can be assigned to as an agent.\n        Some of the call centers may already have the user as an agent.  It is the clients\n        responsibility to discard the call centers that the user is already an agent of.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        The response is either a UserCallCenterGetAvailableCallCenterPagedSortedListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortByUserId", "required": false, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallCenterGetAvailableDNISListRequest", "tags": ["services"], "documentation": "Request a list of available DNIS for agent to select.\n        The response is either UserCallCenterGetAvailableDNISListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "agentUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallCenterGetRequest23", "tags": ["services"], "documentation": "Get the user's call center settings and the list of call centers the specified user belongs to.\n        The response is either a UserCallCenterGetResponse23 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallCenterGetSupervisedAgentListRequest", "tags": ["services"], "documentation": "Get a list of agents supervised by a supervisor on a given call\n        center.\n        The response is either a UserCallCenterGetSupervisedAgentListResponse\n       or an ErrorResponse.\n       The search can be done using multiple criterias.\n       If the searchCriteriaModeOr is present, any result matching any one criteria is included in the results. Otherwise, only\n       results matching all the search criterias are included in the results.\n       If no search criteria is specified, all results are returned.\n       In all cases, if a responseSizeLimit is specified and the number of matching results is more than this limit, then an\n       ErrorResponse is returned.\n       Specifying searchCriteriaModeOr without any search criteria results in an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "supervisorUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaImpId", "required": false, "array": true, "type": "SearchCriteriaImpId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserCallCenterGetSupervisorCallCenterListRequest", "tags": ["services"], "documentation": "Get a list of call centers the user is assigned to as a supervisor.\n        The response is either a UserCallCenterGetSupervisorCallCenterListResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "supervisorUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallCenterModifyCallCenterListRequest", "tags": ["services"], "documentation": "Request to modify the call center list for an agent.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "agentUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "UserCallCenterModifyRequest19", "tags": ["services"], "documentation": "Modifies the agents call center settings and the availability for an agent in one or more Call Centers.\n        Contains a list specifying the desired availability status of one or more call centers.\n        A default unavailable code will be used if the parameter agentUnavailableCode is not active, included or is invalid.\n        Changing the agentACDState from unavailable to any other state will automatically clear the unavailable code.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          agentACDState\n          agentThresholdProfileName\n          agentUnavailableCode\n          useSystemDefaultUnavailableSettings\n          forceAgentUnavailableOnDNDActivation\n          forceAgentUnavailableOnPersonalCalls\n          forceAgentUnavailableOnBouncedCallLimit\n          numberConsecutiveBouncedCallsToForceAgentUnavailable\n          forceAgentUnavailableOnNotReachable\n          makeOutgoingCallsAsCallCenter\n          outgoingCallDNIS\n          useSystemDefaultWrapUpDestination\n          wrapUpDestination", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "agentACDState", "required": false, "array": false, "type": "AgentACDState", "type_schema": "xs:token", "enum": ["Sign-In", "Sign-Out", "Available", "Unavailable", "Wrap-Up"]}, {"name": "agentThresholdProfileName", "required": false, "array": false, "type": "CallCenterAgentThresholdProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "agentUnavailableCode", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "useDefaultGuardTimer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableGuardTimer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "guardTimerSeconds", "required": false, "array": false, "type": "CallCenterGuardTimerSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 25.0}, {"name": "useSystemDefaultUnavailableSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceAgentUnavailableOnDNDActivation", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceAgentUnavailableOnPersonalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceAgentUnavailableOnBouncedCallLimit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberConsecutiveBouncedCallsToForceAgentUnavailable", "required": false, "array": false, "type": "CallCenterConsecutiveBouncedCallsToForceAgentUnavailable", "type_schema": "xs:int", "minimum": 1.0, "maximum": 5.0}, {"name": "forceAgentUnavailableOnNotReachable", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "makeOutgoingCallsAsCallCenter", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "outgoingCallDNIS", "required": false, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "callCenterAgentSettings", "required": false, "array": true, "type": "CallCenterAgentSettings", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "available", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "skillLevel", "required": false, "array": false, "type": "CallCenterAgentSkillLevel", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}]]}, {"name": "useSystemDefaultWrapUpDestination", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wrapUpDestination", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallCenterModifySupervisedAgentListRequest", "tags": ["services"], "documentation": "Modifies a list of users to be supervised by a supervisor on a call center.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "supervisorUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "agentUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "EnterpriseCallCenterMonitoringGetRequest23", "tags": ["services"], "documentation": "Request the enterprise level data associated with Call Center Monitoring.\n        The response is either an EnterpriseCallCenterMonitoringGetResponse23 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseCallCenterMonitoringModifyRequest", "tags": ["services"], "documentation": "Modify the enterprise level data associated with Call Center Monitoring\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enableSupervisorCoaching", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "bypassEnforcementOfSupervisorAgentRelationship", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallCenterMonitoringGetRequest", "tags": ["services"], "documentation": "Request the Group level data associated with Call Center Monitoring.\n        The response is either a GroupCallCenterMonitoringGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallCenterMonitoringModifyRequest", "tags": ["services"], "documentation": "Modify the group level data associated with Call Center Monitoring\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enableSupervisorCoaching", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallCenterMonitoringGetRequest23", "tags": ["services"], "documentation": "Request the user's Call Center Monitoring settings.\n        The response is either a UserCallCenterMonitoringGetResponse23 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallCenterMonitoringModifyRequest", "tags": ["services"], "documentation": "Modify the user's Call Center Monitoring settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "playToneToAgentForSilentMonitoring", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "playToneToAgentForSupervisorCoaching", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallForwardingAlwaysGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Call Forwarding Always.\n        The response is either a UserCallForwardingAlwaysGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallForwardingAlwaysModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Call Forwarding Always.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isRingSplashActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallForwardingAlwaysSecondaryGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Call Forwarding Always Secondary service.\n        The response is either a UserCallForwardingAlwaysSecondaryGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallForwardingAlwaysSecondaryModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Call Forwarding Always Secondary service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isRingSplashActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallForwardingBusyGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Call Forwarding Busy.\n        The response is either a UserCallForwardingBusyGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallForwardingBusyModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Call Forwarding Busy.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallForwardingNoAnswerGetRequest13mp16", "tags": ["services"], "documentation": "Request the user level data associated with Call Forwarding No Answer.\n        The response is either a UserCallForwardingNoAnswerGetResponse13mp16 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallForwardingNoAnswerModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Call Forwarding No Answer.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "numberOfRings", "required": false, "array": false, "type": "CallForwardingNoAnswerNumberOfRings", "type_schema": "xs:int", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}]]}, {"name": "UserCallForwardingNotReachableGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Call Forwarding Not Reachable.\n        The response is either a UserCallForwardingNotReachableGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallForwardingNotReachableModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Call Forwarding Not Reachable.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallForwardingSelectiveAddCriteriaRequest16", "tags": ["services"], "documentation": "Add a criteria to the user's call forwarding selective service.\n        The following elements are only used in AS data mode:\n          callToNumber\n\n        For the callToNumber, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "forwardToNumberSelection", "required": false, "array": false, "type": "CallForwardingSelectiveNumberSelection16", "type_schema": "xs:token", "enum": ["Forward To Default Number", "Forward To Specified Number", "Do not forward"]}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "CriteriaFromDn", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "callToNumber", "required": false, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}, {"name": "UserCallForwardingSelectiveDeleteCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the user's call forwarding selective service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserCallForwardingSelectiveGetCriteriaRequest21", "tags": ["services"], "documentation": "Get a criteria for the user's call forwarding selective service.\n        The response is either a UserCallForwardingSelectiveGetCriteriaResponse21 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserCallForwardingSelectiveGetRequest16", "tags": ["services"], "documentation": "Get the user's call forwarding selective service setting.\n        The response is either a UserCallForwardingSelectiveGetResponse16 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallForwardingSelectiveModifyCriteriaRequest", "tags": ["services"], "documentation": "Modify a criteria for the user's call forwarding selective service.\n        The following elements are only used in AS data mode:\n          callToNumber\n\n        For the callToNumbers in the callToNumberList, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "forwardToNumberSelection", "required": false, "array": false, "type": "CallForwardingSelectiveNumberSelection16", "type_schema": "xs:token", "enum": ["Forward To Default Number", "Forward To Specified Number", "Do not forward"]}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "CriteriaFromDnModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "callToNumberList", "required": false, "array": false, "type": "ReplacementCallToNumberList", "schema": [[{"name": "callToNumber", "required": true, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]]}, {"name": "UserCallForwardingSelectiveModifyRequest", "tags": ["services"], "documentation": "Modify the user's call forwarding selective service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "defaultForwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "playRingReminder", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserCallingLineIDBlockingOverrideGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Calling Line ID Blocking Override.\n        The response is either a UserCallingLineIDBlockingOverrideGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallingLineIDBlockingOverrideModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Calling Line ID Blocking Override.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallingLineIDDeliveryBlockingGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Calling Line ID Delivery Blocking.\n        The response is either a UserCallingLineIDDeliveryBlockingGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallingLineIDDeliveryBlockingModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Calling Line ID Delivery Blocking.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallingNameDeliveryGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Calling\n        Name Delivery. The response is either a\n        UserCallingNameDeliveryGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallingNameDeliveryModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Calling Name Delivery.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActiveForExternalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isActiveForInternalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SystemCallingNameRetrievalGetRequest24", "tags": ["services"], "documentation": "Request the system's calling name retrieval attributes.\n        The response is either a SystemCallingNameRetrievalGetResponse24 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallingNameRetrievalModifyRequest20", "tags": ["services"], "documentation": "Modifies the system's calling name retrieval attributes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "triggerCNAMQueriesForAllNetworkCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "triggerCNAMQueriesForGroupAndEnterpriseCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "queryProtocol", "required": false, "array": false, "type": "CallingNameRetrievalQueryProtocol", "type_schema": "xs:token", "enum": ["Sip", "Soap"]}, {"name": "queryTimeoutMilliseconds", "required": false, "array": false, "type": "CallingNameRetrievalQueryTimeoutMilliseconds", "type_schema": "xs:int", "minimum": 100.0, "maximum": 10000.0}, {"name": "sipExternalDatabaseNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "sipExternalDatabasePort", "required": false, "array": false, "type": "Port1025", "type_schema": "xs:int", "minimum": 1025.0, "maximum": 65535.0}, {"name": "sipExternalDatabaseTransport", "required": false, "array": false, "type": "ExtendedTransportProtocol", "type_schema": "xs:token", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, {"name": "soapExternalDatabaseNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "callingNameSource", "required": false, "array": false, "type": "CallingNameRetrievalSourceIdentity", "type_schema": "xs:token", "enum": ["Presentation Identity", "Asserted Identity"]}, {"name": "routeAdvanceTimer", "required": false, "array": false, "type": "CallingNameRetrievalRouteAdvanceTimerMilliseconds", "type_schema": "xs:int", "minimum": 100.0, "maximum": 2000.0}, {"name": "retryFailedCNAMServerInterval", "required": false, "array": false, "type": "CallingNameRetrievalRetryFailedCNAMServerIntervalSeconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 604800.0}, {"name": "ignoreRestrictedPresentationIndicator", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "supportsDNSSRV", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallingNameRetrievalGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Calling Name Retrieval.\n        The response is either a UserCallingNameRetrievalGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallingNameRetrievalModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Calling Name Retrieval.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallingNumberDeliveryGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Calling\n        Name Delivery. The response is either a\n        UserCallingNumberDeliveryGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallingNumberDeliveryModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Calling Number Delivery.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActiveForExternalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isActiveForInternalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SystemCallingPartyCategoryAddRequest", "tags": ["services"], "documentation": "Add a Calling Party Category to system.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "category", "required": true, "array": false, "type": "CallingPartyCategoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "cpcValue", "required": false, "array": false, "type": "CallingPartyCategoryValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "isupOliValue", "required": false, "array": false, "type": "ISDNUserPartOriginatingLineInformationValue", "type_schema": "xs:int", "minimum": 0.0, "maximum": 255.0}, {"name": "gtdOliValue", "required": false, "array": false, "type": "ISDNGenericTransparencyDescriptorOliValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 3}, {"name": "userCategory", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "payPhone", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "operator", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "default", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "collectCall", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "webDisplayKey", "required": false, "array": false, "type": "WebDisplayKey", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "SystemCallingPartyCategoryDeleteRequest", "tags": ["services"], "documentation": "Delete a Calling Party Category from system. The category cannot be deleted if it is the default or is in use by any users.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "category", "required": true, "array": false, "type": "CallingPartyCategoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}]]}, {"name": "SystemCallingPartyCategoryGetListRequest", "tags": ["services"], "documentation": "Get the list of all Calling Party Category in system.\n        The response is either a SystemCallingPartyCategoryGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallingPartyCategoryGetRequest", "tags": ["services"], "documentation": "Get an existing Calling Party Category in system.\n        The response is either a SystemCallingPartyCategoryGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "category", "required": true, "array": false, "type": "CallingPartyCategoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}]]}, {"name": "SystemCallingPartyCategoryModifyRequest", "tags": ["services"], "documentation": "Modify a Calling Party Category in system.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "category", "required": true, "array": false, "type": "CallingPartyCategoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "cpcValue", "required": false, "array": false, "type": "CallingPartyCategoryValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "isupOliValue", "required": false, "array": false, "type": "ISDNUserPartOriginatingLineInformationValue", "type_schema": "xs:int", "minimum": 0.0, "maximum": 255.0}, {"name": "gtdOliValue", "required": false, "array": false, "type": "ISDNGenericTransparencyDescriptorOliValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 3}, {"name": "userCategory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "payPhone", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "operator", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "becomeDefault", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "collectCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "webDisplayKey", "required": false, "array": false, "type": "WebDisplayKey", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "UserCallingPartyCategoryGetRequest16", "tags": ["services"], "documentation": "Request the user level data associated with Calling Party Category.\n        The response is either a UserCallingPartyCategoryGetResponse16 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallingPartyCategoryModifyRequest16", "tags": ["services"], "documentation": "Modify the user level data associated with Calling Party Category.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "category", "required": false, "array": false, "type": "CallingPartyCategoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}]]}, {"name": "GroupCallingPlanAddDigitPatternRequest", "tags": ["services"], "documentation": "Add a new calling plan digit string.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "digitPattern", "required": true, "array": false, "type": "CallingPlanDigitPattern", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}]]}, {"name": "GroupCallingPlanDeleteDigitPatternListRequest", "tags": ["services"], "documentation": "Delete one or more calling plan digit strings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": true, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallingPlanGetDigitPatternListRequest", "tags": ["services"], "documentation": "Get the list of calling plan digit strings for a group.\n        The response is either a GroupCallingPlanGetDigitPatternListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallingPlanModifyDigitPatternRequest", "tags": ["services"], "documentation": "Modify a calling plan digit string. The name is a key; it cannot be changed.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "digitPattern", "required": false, "array": false, "type": "CallingPlanDigitPattern", "type_schema": "xs:token", "minLength": 1, "maxLength": 160}]]}, {"name": "SystemCallMeNowGetRequest", "tags": ["services"], "documentation": "Request the system level data associated with Call Me Now service.\n        The response is either a SystemCallMeNowGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallMeNowModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Call me now service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "passcodeLength", "required": false, "array": false, "type": "CallMeNowPasscodeLength", "type_schema": "xs:int", "minimum": 2.0, "maximum": 30.0}, {"name": "passcodeTimeoutSeconds", "required": false, "array": false, "type": "CallMeNowPasscodeTimeoutSeconds", "type_schema": "xs:int", "minimum": 30.0, "maximum": 180.0}]]}, {"name": "UserCallMeNowAddCriteriaRequest", "tags": ["services"], "documentation": "Add a criterion to the user's call me now service.  The criterion added is automatically active.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "rejectCall", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "toDnCriteria", "required": true, "array": false, "type": "CallMeNowToDnCriteria", "schema": [[{"name": "toDnCriteriaSelection", "required": true, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "UserCallMeNowDeleteCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the user's call me now service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserCallMeNowGetCriteriaRequest", "tags": ["services"], "documentation": "Get a criteria for the user's call me now service.\n        The response is either a UserCallMeNowGetCriteriaResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserCallMeNowGetRequest", "tags": ["services"], "documentation": "Get the user's call me now service setting.\n        The response is either a UserCallMeNowGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallMeNowModifyCriteriaRequest", "tags": ["services"], "documentation": "Modify a criteria for the user's call me now service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "rejectCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "toDnCriteria", "required": false, "array": false, "type": "CallMeNowToDnCriteriaModify", "schema": [[{"name": "toDnCriteriaSelection", "required": false, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}]]}, {"name": "UserCallMeNowModifyRequest", "tags": ["services"], "documentation": "Modify the user's call me now service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "answerConfirmation", "required": false, "array": false, "type": "CallMeNowAnswerConfirmation", "type_schema": "xs:token", "enum": ["None", "Any Key", "Passcode"]}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ResellerCallNotifyGetRequest", "tags": ["services"], "documentation": "Request the reseller level data associated with Call Notify.\n        The response is either a ResellerCallNotifyGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}, {"name": "ResellerCallNotifyModifyRequest", "tags": ["services"], "documentation": "Modify the reseller level data associated with Call Notify.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "defaultFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemCallNotifyGetRequest", "tags": ["services"], "documentation": "Request the system level data associated with Call Notify.\n        The response is either a SystemCallNotifyGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallNotifyModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Call Notify.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "defaultFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "useShortSubjectLine", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useDnInMailBody", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallNotifyAddCriteriaRequest16", "tags": ["services"], "documentation": "Add a criteria to the user's call notify service.\n        The following elements are only used in AS data mode:\n          callToNumber\n\n        For the callToNumber, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "CriteriaFromDn", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "callToNumber", "required": false, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}, {"name": "UserCallNotifyDeleteCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the user's call notify service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserCallNotifyGetCriteriaRequest21", "tags": ["services"], "documentation": "Get a criteria for the user's call notify service.\n        The response is either a UserCallNotifyGetCriteriaResponse21 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserCallNotifyGetRequest", "tags": ["services"], "documentation": "Get the user's call notify service setting.\n        The response is either a UserCallNotifyGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallNotifyModifyCriteriaRequest", "tags": ["services"], "documentation": "Modify a criteria for the user's call notify service.\n        The following elements are only used in AS data mode:\n          callToNumber\n\n        For the callToNumbers in the callToNumberList, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "CriteriaFromDnModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callToNumberList", "required": false, "array": false, "type": "ReplacementCallToNumberList", "schema": [[{"name": "callToNumber", "required": true, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]]}, {"name": "UserCallNotifyModifyRequest", "tags": ["services"], "documentation": "Modify the user's call notify service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callNotifyEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallParkAddInstanceRequest16sp2", "tags": ["services"], "documentation": "Adds a Call Park group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userId", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "recallAlternateUserId", "required": false, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "recallTo", "required": true, "array": false, "type": "CallParkRecallTo", "type_schema": "xs:token", "enum": ["Parking User Only", "Parking User Then Alternate User", "Alternate User Only"]}]]}, {"name": "GroupCallParkDeleteInstanceRequest", "tags": ["services"], "documentation": "Deletes a Call Park group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupCallParkGetAvailableAlternateRecallUserListRequest", "tags": ["services"], "documentation": "Get a list of hunt groups that are available to select as an alternate recall user.\n        The response is either GroupCallParkGetAvailableAlternateRecallUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}]]}, {"name": "GroupCallParkGetAvailableAlternateRecallUserPagedSortedListRequest", "tags": ["services"], "documentation": "Get a list of hunt groups that are available to select as an alternate recall user.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        If no sortOrder is included the response is sorted by User Id ascending by default.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        The response is either GroupCallParkGetAvailableAlternateRecallUserPagedSortedListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupCallParkGetAvailableAlternateRecallUserPagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDepartmentName", "required": true, "array": false, "type": "SortByDepartmentName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallParkGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned to a Call Park group.\n        The available user list for a new Call Park group can be obtained\n        by not setting the name.\n        The response is either GroupCallParkGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": false, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallParkGetAvailableUserPagedSortedListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned to a Call Park group.\n        The available user list for a new Call Park group can be obtained\n        by not setting the name.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        If no sortOrder is included the response is sorted by User Id ascending by default.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        The response is either GroupCallParkGetAvailableUserPagedSortedListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": false, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupCallParkGetAvailableUserPagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDepartmentName", "required": true, "array": false, "type": "SortByDepartmentName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByEmailAddress", "required": true, "array": false, "type": "SortByEmailAddress", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallParkGetInstanceListRequest", "tags": ["services"], "documentation": "Request to get a list of Call Park group instances within a group.\n        The response is either GroupCallParkGetInstanceListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallParkGetInstancePagedSortedListRequest", "tags": ["services"], "documentation": "Request to get a list of Call Park group instances within a group.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        The response is either GroupCallParkGetInstancePagedSortedListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortByCallParkName", "required": false, "array": false, "type": "SortByCallParkName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "searchCriteriaCallParkName", "required": false, "array": true, "type": "SearchCriteriaCallParkName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallParkGetInstancePagedSortedRequest", "tags": ["services"], "documentation": "Gets a Call Park group.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        The sort order is based on the user order provided when creating or modifying the call park instance.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        The response is either GroupCallParkGetInstancePagedSortedResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallParkGetInstanceRequest16sp2", "tags": ["services"], "documentation": "Gets a Call Park group.\n        The response is either GroupCallParkGetInstanceResponse16sp2 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupCallParkGetRequest16sp2", "tags": ["services"], "documentation": "Gets the Call Park Group settings.\n        The response is either GroupCallParkGetResponse16sp2 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallParkModifyInstanceRequest", "tags": ["services"], "documentation": "Modifies a Call Park group. Replaces the entire list of users in the group.\n        The users are in the list are in the order they will try to be parked on.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "recallAlternateUserId", "required": false, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "recallTo", "required": false, "array": false, "type": "CallParkRecallTo", "type_schema": "xs:token", "enum": ["Parking User Only", "Parking User Then Alternate User", "Alternate User Only"]}]]}, {"name": "GroupCallParkModifyRequest", "tags": ["services"], "documentation": "Modifies the Group's Call Park settings.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "recallTimerSeconds", "required": false, "array": false, "type": "CallParkRecallTimerSeconds", "type_schema": "xs:int", "minimum": 30.0, "maximum": 600.0}, {"name": "displayTimerSeconds", "required": false, "array": false, "type": "CallParkDisplayTimerSeconds", "type_schema": "xs:int", "minimum": 2.0, "maximum": 15.0}, {"name": "enableDestinationAnnouncement", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recallAlternateUserId", "required": false, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "recallRingPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "recallTo", "required": false, "array": false, "type": "CallParkRecallTo", "type_schema": "xs:token", "enum": ["Parking User Only", "Parking User Then Alternate User", "Alternate User Only"]}, {"name": "alternateUserRecallTimerSeconds", "required": false, "array": false, "type": "CallParkRecallTimerSeconds", "type_schema": "xs:int", "minimum": 30.0, "maximum": 600.0}]]}, {"name": "UserCallParkGetRequest", "tags": ["services"], "documentation": "Identifies which Call Park group the user belongs to if any and the list of users in the group.\n        The response is either UserCallParkGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallPickupAddInstanceRequest", "tags": ["services"], "documentation": "Adds a Call Pickup group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userId", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCallPickupDeleteInstanceRequest", "tags": ["services"], "documentation": "Deletes a Call Pickup group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupCallPickupGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned to a Call Pickup group.\n        The available user list for a new Call Pickup group can be obtained\n        by not setting the name.\n        The response is either GroupCallPickupGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": false, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCallPickupGetAvailableUserPagedSortedListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned to a Call Pickup group.\n        The available user list for a new Call Pickup group can be obtained\n        by not setting the name.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        If no sortOrder is included the response is sorted by User Id ascending by default.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        The response is either GroupCallPickupGetAvailableUserPagedSortedListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": false, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupCallPickupGetAvailableUserPagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDepartmentName", "required": true, "array": false, "type": "SortByDepartmentName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByEmailAddress", "required": true, "array": false, "type": "SortByEmailAddress", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallPickupGetInstanceListRequest", "tags": ["services"], "documentation": "Request to get a list of Call Pickup instances within a group.\n        The response is either GroupCallPickupGetInstanceListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallPickupGetInstancePagedSortedListRequest", "tags": ["services"], "documentation": "Request to get a list of Call Pickup instances within a group.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        The response is either GroupCallPickupGetInstancePagedSortedListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortByCallPickupName", "required": false, "array": false, "type": "SortByCallPickupName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "searchCriteriaCallPickupName", "required": false, "array": true, "type": "SearchCriteriaCallPickupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallPickupGetInstancePagedSortedRequest", "tags": ["services"], "documentation": "Gets a Call Pickup group.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        If no sortOrder is included the response is sorted by User Id ascending by default.\n\n        The response is either GroupCallPickupGetInstancePagedSortedResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupCallPickupGetInstancePagedSorted", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDepartmentName", "required": true, "array": false, "type": "SortByDepartmentName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByEmailAddress", "required": true, "array": false, "type": "SortByEmailAddress", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCallPickupGetInstanceRequest", "tags": ["services"], "documentation": "Gets a Call Pickup group.\n        The response is either GroupCallPickupGetInstanceResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupCallPickupModifyInstanceRequest", "tags": ["services"], "documentation": "Modifies a Call Pickup group. Replaces the entire list of users in the group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "UserCallPickupGetRequest", "tags": ["services"], "documentation": "Gets the details of the Call Pickup group that a user belongs to (if any).\n        Any user can only belong to one Call Pickup group.\n        The response is either UserCallPickupGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "EnterpriseCallRecordingGetRequest", "tags": ["services"], "documentation": "Get the Call Recording attributes for a enterprise.\n        The response is either a EnterpriseCallRecordingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseCallRecordingModifyRequest", "tags": ["services"], "documentation": "Modify the Call Recording attributes for a enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useCloudPBX", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useEnterpriseSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "FQDN", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupCallRecordingGetRequest", "tags": ["services"], "documentation": "Get the Call Recording platform for a group.\n        The response is either a GroupCallRecordingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCallRecordingModifyRequest", "tags": ["services"], "documentation": "Modify the Call Recording platform assignment for a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": false, "array": false, "type": "CallRecordingPlatformName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ResellerCallRecordingGetRequest", "tags": ["services"], "documentation": "Get the Call Recording attribute for a reseller.\n        The response is either a ResellerCallRecordingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}, {"name": "ResellerCallRecordingModifyRequest", "tags": ["services"], "documentation": "Modify the Call Recording attribute for a reseller.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "FQDN", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemCallRecordingAddPlatformRequest22", "tags": ["services"], "documentation": "Add a Call Recording platform.\n        The first system level call recording platform added is made the system default\n        call recording platform.  The first reseller level call recording platform added\n        for a reseller is made the reseller default call recording platform.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "CallRecordingPlatformName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "netAddress", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": false, "array": false, "type": "Port", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65535.0}, {"name": "mediaStream", "required": true, "array": false, "type": "MediaStream", "type_schema": "xs:token", "enum": ["Dual", "Single"]}, {"name": "transportType", "required": true, "array": false, "type": "ExtendedTransportProtocol", "type_schema": "xs:token", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, {"name": "description", "required": false, "array": false, "type": "CallRecordingPlatformDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "schemaVersion", "required": true, "array": false, "type": "CallRecordingPlatformSchemaVersion", "type_schema": "xs:token", "enum": ["1.0", "2.0", "3.0"]}, {"name": "supportVideoRecording", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "resellerId", "required": false, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "route", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}, {"name": "SystemCallRecordingDeletePlatformRequest", "tags": ["services"], "documentation": "Delete a Call Recording platform.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "CallRecordingPlatformName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemCallRecordingGetPlatformListRequest22V2", "tags": ["services"], "documentation": "Requests the list of all system-level call recording platforms and all reseller level call recording platforms.\n\t\tIf an excludeReseller is specified, returns all the system-level call recording platforms only.\n        If a resellerId is specified, returns all the system-level call recording platforms and the given reseller's call recording platforms.\n        If a reseller administrator sends the request and resellerId is not specified, the administrator's resellerId is used.\n        The response is either SystemCallRecordingGetPlatformListResponse22V2 or ErrorResponse.", "type": "core:OCIRequest", "schema": [{"choice": [{"name": "excludeReseller", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "resellerId", "required": false, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]}]}, {"name": "SystemCallRecordingGetPlatformUsageRequest22", "tags": ["services"], "documentation": "Get the list of groups currently associated to the specified Call Recording platform.\n        The response is either SystemCallRecordingGetPlatformUsageResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "CallRecordingPlatformName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemCallRecordingGetRequest23", "tags": ["services"], "documentation": "Request the system level data associated with Call Recording.\n        The response is either a SystemCallRecordingGetResponse23 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallRecordingModifyPlatformRequest22", "tags": ["services"], "documentation": "Modify the specified Call Recording platform.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "name", "required": true, "array": false, "type": "CallRecordingPlatformName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "netAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": false, "array": false, "type": "Port", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65535.0}, {"name": "mediaStream", "required": false, "array": false, "type": "MediaStream", "type_schema": "xs:token", "enum": ["Dual", "Single"]}, {"name": "transportType", "required": false, "array": false, "type": "ExtendedTransportProtocol", "type_schema": "xs:token", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, {"name": "description", "required": false, "array": false, "type": "CallRecordingPlatformDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "schemaVersion", "required": false, "array": false, "type": "CallRecordingPlatformSchemaVersion", "type_schema": "xs:token", "enum": ["1.0", "2.0", "3.0"]}, {"name": "supportVideoRecording", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "route", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"choice": [{"name": "becomeSystemDefault", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "becomeResellerDefault", "required": false, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]}]]}, {"name": "SystemCallRecordingModifyRequest22", "tags": ["services"], "documentation": "Modify the system level data associated with Call Recording.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "continueCallAfterRecordingFailure", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxResponseWaitTimeMilliseconds", "required": false, "array": false, "type": "RecordingMaxResponseWaitTimeMilliseconds", "type_schema": "xs:int", "minimum": 50.0, "maximum": 10000.0}, {"name": "continueCallAfterVideoRecordingFailure", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useContinueCallAfterRecordingFailureForOnDemandMode", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useContinueCallAfterRecordingFailureForOnDemandUserInitiatedStartMode", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "restrictCallRecordingProvisioningAccess", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallRecordingGetRequest23", "tags": ["services"], "documentation": "Get the Call Recording attributes for a user.\n        The response is either a UserCallRecordingGetResponse23 or an ErrorResponse.\n\n        The following parameters are not returned for service instance:\n          - pauseResumeNotification\n          - enableCallRecordingAnnouncement\n          - enableRecordCallRepeatWarningTone\n          - recordCallRepeatWarningToneTimerSeconds", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallRecordingModifyRequest", "tags": ["services"], "documentation": "Modify the Call Recording attributes for a user. The recording options\n        \"Always with Pause/Resume\", \"On Demand\", and \"On Demand with User\n        Initiated Start\" are not accepted for service instances.\n\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following parameters are not accepted for service\n        instance:\n          - pauseResumeNotification\n          - enableCallRecordingAnnouncement\n          - enableRecordCallRepeatWarningTone\n          - recordCallRepeatWarningToneTimerSeconds\n\n        The enableVoiceMailRecording parameter is only applicable\n        if the Voice Messaging User service is assigned to the user.\n        This applies to both users and service instances.\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          mediaStream", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "recordingOption", "required": false, "array": false, "type": "RecordingOption20", "type_schema": "xs:token", "enum": ["Always", "Never", "On Demand", "Always with Pause/Resume", "On Demand with User Initiated Start"]}, {"name": "pauseResumeNotification", "required": false, "array": false, "type": "RecordingPauseResumeNotificationType", "type_schema": "xs:token", "enum": ["None", "Beep", "Play Announcement"]}, {"name": "enableCallRecordingAnnouncement", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableRecordCallRepeatWarningTone", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recordCallRepeatWarningToneTimerSeconds", "required": false, "array": false, "type": "CallRecordingRecordCallRepeatWarningToneTimerSeconds", "type_schema": "xs:int", "minimum": 10.0, "maximum": 1800.0}, {"name": "enableVoiceMailRecording", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mediaStream", "required": false, "array": false, "type": "MediaStream", "type_schema": "xs:token", "enum": ["Dual", "Single"]}]]}, {"name": "SystemCallReturnGetRequest", "tags": ["services"], "documentation": "Request the system level data associated with Call Return.\n        The response is either a SystemCallReturnGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallReturnModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Call Return.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "twoLevelActivation", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "provideDate", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "lastUnansweredCallOnly", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "confirmationKey", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "allowRestrictedNumber", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "deleteNumberAfterAnsweredCallReturn", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallTransferGetRequest14sp4", "tags": ["services"], "documentation": "Request the user level data associated with Call Transfer.\n        The response is either a UserCallTransferGetResponse14sp4 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallTransferModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Call Transfer.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isRecallActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recallNumberOfRings", "required": false, "array": false, "type": "CallTransferRecallNumberOfRings", "type_schema": "xs:int", "minimum": 2.0, "maximum": 20.0}, {"name": "useDiversionInhibitorForBlindTransfer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useDiversionInhibitorForConsultativeCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableBusyCampOn", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "busyCampOnSeconds", "required": false, "array": false, "type": "CallTransferBusyCampOnSeconds", "type_schema": "xs:int", "minimum": 30.0, "maximum": 600.0}]]}, {"name": "SystemCallWaitingGetRequest", "tags": ["services"], "documentation": "Request the system level data associated with Call Waiting.\n        The response is either a SystemCallWaitingGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCallWaitingModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Call Waiting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "playDistinctiveRingback", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCallWaitingGetRequest17sp4", "tags": ["services"], "documentation": "Request the user level data associated with Call Waiting.\n        The response is either a UserCallWaitingGetResponse17sp4 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallWaitingModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Call Waiting.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode:\n          disableCallingLineIdDelivery", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disableCallingLineIdDelivery", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserChargeNumberGetRequest14sp9", "tags": ["services"], "documentation": "Request the user level data associated with Charge Number.\n        The response is either a UserChargeNumberGetResponse14sp9 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserChargeNumberModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Charge Number.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "useChargeNumberForEnhancedTranslations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sendChargeNumberToNetwork", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SystemClassmarkAddRequest", "tags": ["services"], "documentation": "Add a Class Mark to system.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "classmark", "required": true, "array": false, "type": "Classmark", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "value", "required": true, "array": false, "type": "ClassmarkValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 32}, {"name": "webDisplayKey", "required": false, "array": false, "type": "WebDisplayKey", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "SystemClassmarkDeleteRequest", "tags": ["services"], "documentation": "Delete a Class Mark from system. It cannot be deleted if it is in use by any users.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "classmark", "required": true, "array": false, "type": "Classmark", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "SystemClassmarkGetListRequest", "tags": ["services"], "documentation": "Get the list of all Class Mark in system.\n        The response is either a SystemClassmarkGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemClassmarkGetUtilizationListRequest", "tags": ["services"], "documentation": "Get the list of all users associated with a Class Mark in system. It is possible to search by various criteria.\n        Multiple search criteria are logically ANDed together.\n        The response is either a SystemClassmarkGetUtilizationListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "classmark", "required": true, "array": false, "type": "Classmark", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactServiceProviderId", "required": false, "array": false, "type": "SearchCriteriaExactServiceProvider", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemClassmarkModifyRequest", "tags": ["services"], "documentation": "Modify a Class Mark in system.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "classmark", "required": true, "array": false, "type": "Classmark", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "value", "required": false, "array": false, "type": "ClassmarkValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 32}, {"name": "webDisplayKey", "required": false, "array": false, "type": "WebDisplayKey", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "UserClassmarkGetRequest", "tags": ["services"], "documentation": "Request the Class Mark data associated with User.\n        The response is either a UserClassmarkGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserClassmarkModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Class Mark.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "classmark", "required": false, "array": false, "type": "Classmark", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupCollaborateBridgeAddInstanceRequest20sp1", "tags": ["services"], "documentation": "Add a collaborate bridge to a group.\n        The domain is required in the serviceUserId.\n        The request fails when supportOutdial is enabled and the system-level collaborate supportOutdial setting is disabled.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "maximumBridgeParticipants", "required": true, "array": false, "type": "CollaborateBridgeMaximumParticipants", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 3.0, "maximum": 999999.0, "type_schema": "xs:int"}]}]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "maxCollaborateRoomParticipants", "required": true, "array": false, "type": "CollaborateRoomMaximumParticipants20sp1", "type_schema": "xs:int", "minimum": 3.0, "maximum": 145.0}, {"name": "supportOutdial", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "collaborateOwnerUserId", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCollaborateBridgeConsolidatedAddInstanceRequest", "tags": ["services"], "documentation": "Add a collaborate bridge to a group.\n        The domain is required in the serviceUserId.\n        The request fails when supportOutdial is enabled and the system-level collaborate supportOutdial setting is disabled.\n        If the phoneNumber has not been assigned to the group and addPhoneNumberToGroup is set to true,\n        it will be added to group if the command is executed by a service provider administrator or above\n        and the number is already assigned to the service provider. The command will fail otherwise.\n\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "addPhoneNumberToGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "maximumBridgeParticipants", "required": true, "array": false, "type": "CollaborateBridgeMaximumParticipants", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 3.0, "maximum": 999999.0, "type_schema": "xs:int"}]}]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "maxCollaborateRoomParticipants", "required": true, "array": false, "type": "CollaborateRoomMaximumParticipants20sp1", "type_schema": "xs:int", "minimum": 3.0, "maximum": 145.0}, {"name": "supportOutdial", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "collaborateOwnerUserId", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "service", "required": false, "array": true, "type": "ConsolidatedUserServiceAssignment", "schema": [[{"name": "userServiceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"name": "authorizedQuantity", "required": false, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}]]}]]}, {"name": "GroupCollaborateBridgeConsolidatedDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a collaborate bridge from a group.\n        The request fails when attempting to delete the default collaborate bridge.\n        If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be un-assigned from the group if the command is executed by a service provider administrator or above.\n        When set to 'Service Provider', they will be un-assigned from the group and service provider if the command is executed by a provisioning administrator or above.\n        When omitted, the number(s) will be left assigned to the group.\n        An ErrorResponse will be returned if any number cannot be unassigned because of insufficient privilege.\n\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "unassignPhoneNumbers", "required": false, "array": false, "type": "UnassignPhoneNumbersLevel", "type_schema": "xs:token", "enum": ["Group", "Service Provider"]}]]}, {"name": "GroupCollaborateBridgeConsolidatedModifyInstanceRequest", "tags": ["services"], "documentation": "Request to modify a Collaborate bridge.\n        The request fails when the collaborateOwnerUserIdList is included in the request for the default collaborate bridge.\n        The request fails when the supportOutdial is included in the request and the system-level collaborate supportOutdial setting is disabled.\n        When phone numbers are un-assigned from the user, the unused numbers may be un-assigned from the group and service provider. If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be un-assigned from the group if the command is executed by a service provider administrator or above.\n        When set to 'Service Provider', they will be un-assigned from the group and service provider if the command is executed by a provisioning administrator or above.\n        When omitted, the number(s) will be left assigned to the group.\n        An ErrorResponse will be returned if any number cannot be unassigned because of insufficient privilege.\n\n        If the phoneNumber has not been assigned to the group and addPhoneNumberToGroup is set to true, it will be added to group if needed if the command is executed by a service provider administrator and above. The command will fail otherwise.\n\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "unassignPhoneNumbers", "required": false, "array": false, "type": "UnassignPhoneNumbersLevel", "type_schema": "xs:token", "enum": ["Group", "Service Provider"]}, {"name": "addPhoneNumberToGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "maximumBridgeParticipants", "required": false, "array": false, "type": "CollaborateBridgeMaximumParticipants", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 3.0, "maximum": 999999.0, "type_schema": "xs:int"}]}]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "maxCollaborateRoomParticipants", "required": false, "array": false, "type": "CollaborateRoomMaximumParticipants20sp1", "type_schema": "xs:int", "minimum": 3.0, "maximum": 145.0}, {"name": "supportOutdial", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "collaborateOwnerUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "serviceList", "required": false, "array": false, "type": "ReplacementConsolidatedUserServiceAssignmentList", "schema": [[{"name": "userServiceServiceName", "required": true, "array": true, "type": "ConsolidatedUserServiceAssignment", "schema": [[{"name": "userServiceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"name": "authorizedQuantity", "required": false, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}]]}]]}]]}, {"name": "GroupCollaborateBridgeDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a collaborate bridge from a group.\n        The request fails when attempting to delete the default collaborate bridge.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCollaborateBridgeGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of users with the Collaborate \u2013 Audio service assigned that can be assigned to a collaborate bridge.  For an Enterprise Group this will include all users in the group\u2019s enterprise.\n        The SearchCriteriaExactUserGroup parameter is only applicable for enterprise groups.\n        The response is either GroupCollaborateBridgeGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupCollaborateBridgeGetAvailableUserPagedSortedListRequest", "tags": ["services"], "documentation": "Get a list of users with the Collaborate \u2013 Audio service assigned that can be assigned to a collaborate bridge.  For an Enterprise Group this will include all users in the group\u2019s enterprise.\n        The searchCriteriaGroupId parameter is only applicable for enterprise groups.\n        If no sortOrder is included the response is sorted by Last Name ascending by default.\n\n        A limitation to the search by DN activation exists when the Number Activation mode is set to\n        Off. In this case DNs not assigned to users are never returned by queries with the\n        \"dnActivationSearchCriteria\" included.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        The response is either GroupCollaborateBridgeGetAvailableUserPagedSortedListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupCollaborateBridgeGetAvailableUserPagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactDnActivation", "required": false, "array": false, "type": "SearchCriteriaExactDnActivation", "schema": [[{"name": "activated", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCollaborateBridgeGetInstanceListRequest", "tags": ["services"], "documentation": "Get a list of collaborate bridges within a group.\n        The response is either GroupCollaborateBridgeGetInstanceListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "departmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupCollaborateBridgeGetInstancePagedSortedListRequest", "tags": ["services"], "documentation": "Get a list of collaborate bridges within a group.\n        The response is either GroupCollaborateBridgeGetInstancePagedSortedListResponse or ErrorResponse.\n\n        If the responsePagingControl element is not provided,\n        the paging startIndex will be set to 1 by default,\n        and the responsePageSize will be set to the maximum responsePageSize by\n        default.\n\n        If no sortOrder is included the response is sorted by Name ascending by default. .\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupCollaborateBridgeGetInstancePagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactDnActivation", "required": false, "array": false, "type": "SearchCriteriaExactDnActivation", "schema": [[{"name": "activated", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCollaborateBridgeGetInstanceRequest20sp1", "tags": ["services"], "documentation": "Request to get all the information of a collaborate bridge.\n        The response is either GroupCollaborateBridgeGetInstanceResponse20sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupCollaborateBridgeModifyInstanceRequest20sp1", "tags": ["services"], "documentation": "Request to modify a Collaborate bridge.\n        The request fails when the collaborateOwnerUserIdList is included in the request for the default collaborate bridge.\n        The request fails when the supportOutdial is included in the request and the system-level collaborate supportOutdial setting is disabled.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "maximumBridgeParticipants", "required": false, "array": false, "type": "CollaborateBridgeMaximumParticipants", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 3.0, "maximum": 999999.0, "type_schema": "xs:int"}]}]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "maxCollaborateRoomParticipants", "required": false, "array": false, "type": "CollaborateRoomMaximumParticipants20sp1", "type_schema": "xs:int", "minimum": 3.0, "maximum": 145.0}, {"name": "supportOutdial", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "collaborateOwnerUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "ResellerCollaborateGetRequest", "tags": ["services"], "documentation": "Request the reseller level data associated with Collaborate.\n        The response is either a ResellerCollaborateGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}, {"name": "ResellerCollaborateModifyRequest", "tags": ["services"], "documentation": "Modify the reseller level data associated with Collaborate.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "collaborateFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemCollaborateGetRequest20sp1V2", "tags": ["services"], "documentation": "Request the system level data associated with collaborate services.\n        The response is either a SystemCollaborateGetResponse20sp1V2 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCollaborateModifyRequest20sp1V2", "tags": ["services"], "documentation": "Modify the system level data associated with collaborate services.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "collaborateRoomIdLength", "required": false, "array": false, "type": "CollaboratePassCodeLength", "type_schema": "xs:int", "minimum": 4.0, "maximum": 15.0}, {"name": "instantRoomIdleTimeoutSeconds", "required": false, "array": false, "type": "CollaborateInstantRoomIdleTimeoutSeconds20sp1", "type_schema": "xs:int", "minimum": 60.0, "maximum": 18000.0}, {"name": "collaborateRoomMaximumDurationMinutes", "required": false, "array": false, "type": "CollaborateRoomMaximumDurationMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 7200.0}, {"name": "supportOutdial", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxCollaborateRoomParticipants", "required": false, "array": false, "type": "CollaborateRoomMaximumParticipants20sp1", "type_schema": "xs:int", "minimum": 3.0, "maximum": 145.0}, {"name": "collaborateActiveTalkerRefreshIntervalSeconds", "required": false, "array": false, "type": "CollaborateActiveTalkerRefreshIntervalSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 5.0}, {"name": "terminateCollaborateAfterGracePeriod", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "collaborateGracePeriod", "required": false, "array": false, "type": "CollaborateGracePeriodDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "CollaborateGracePeriodDurationMinutes", "type_schema": "xs:int"}]]}, {"name": "enableActiveCollaborateNotification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "collaborateFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "UserCollaborateBridgeGetRequest20sp1", "tags": ["services"], "documentation": "Request the collaborate bridged assigned to the user. The user can only be assigned to one collaborate bridge at any given time.\n        The response is either UserCollaborateBridgeGetResponse20sp1 or\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCollaborateDeleteRoomRequest", "tags": ["services"], "documentation": "Request to delete a collaborate room.  The request only applies to project rooms and instant rooms.\n        The request fails when deleting a collaborate My Room.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "roomId", "required": true, "array": false, "type": "CollaborateRoomId", "type_schema": "xs:token", "minLength": 4, "maxLength": 15}]]}, {"name": "UserCollaborateInstantRoomAddRequest", "tags": ["services"], "documentation": "Request to add collaborate instant room.\n        The response is either a UserCollaborateInstantRoomAddResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"choice": [{"name": "roomName", "required": true, "array": false, "type": "CollaborateRoomName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "useRoomIdAsRoomName", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]}]]}, {"name": "UserCollaborateInstantRoomGetRequest", "tags": ["services"], "documentation": "Request the collaborate room settings for an instant room.\n        The request fails when requesting collaborate room settings for My Room or project rooms.\n        The response is either UserCollaboratInstantRoomGetResponse or\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "roomId", "required": true, "array": false, "type": "CollaborateRoomId", "type_schema": "xs:token", "minLength": 4, "maxLength": 15}]]}, {"name": "UserCollaborateInstantRoomParametersGetRequest", "tags": ["services"], "documentation": "Request collaborate instant room settings.\n        The response is either UserCollaborateInstantRoomParametersGetResponse or\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCollaborateInstantRoomParametersModifyRequest", "tags": ["services"], "documentation": "Request to modify collaborate instant room settings.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "attendeeNotification", "required": false, "array": false, "type": "CollaborateRoomAttendeeNotification", "type_schema": "xs:token", "enum": ["Play Tone", "No Notification"]}, {"name": "endCollaborateRoomSessionOnOwnerExit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "ownerRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCollaborateMyRoomGetRequest", "tags": ["services"], "documentation": "Request collaborate room settings for MyRoom.\n        The response is either UserCollaboratMyRoomGetResponse or\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCollaborateMyRoomModifyRequest", "tags": ["services"], "documentation": "Request to modify collaborate room settings for MyRoom.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "roomName", "required": false, "array": false, "type": "CollaborateRoomName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "attendeeNotification", "required": false, "array": false, "type": "CollaborateRoomAttendeeNotification", "type_schema": "xs:token", "enum": ["Play Tone", "No Notification"]}, {"name": "endCollaborateRoomSessionOnOwnerExit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "ownerRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCollaborateProjectRoomAddRequest", "tags": ["services"], "documentation": "Request to add collaborate project room.\n        The response is either a UserCollaborateProjectRoomAddResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "roomName", "required": true, "array": false, "type": "CollaborateRoomName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "attendeeNotification", "required": true, "array": false, "type": "CollaborateRoomAttendeeNotification", "type_schema": "xs:token", "enum": ["Play Tone", "No Notification"]}, {"name": "endCollaborateRoomSessionOnOwnerExit", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "ownerRequired", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "roomSchedule", "required": true, "array": false, "type": "CollaborateRoomSchedule", "schema": [[{"choice": [{"name": "scheduleReservationless", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "endTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}]]}, {"name": "scheduleOneTime", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "duration", "required": true, "array": false, "type": "CollaborateRoomScheduleDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "CollaborateRoomScheduleDurationMinutes", "type_schema": "xs:int"}]]}]]}, {"name": "scheduleRecurring", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "duration", "required": true, "array": false, "type": "CollaborateRoomScheduleDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "CollaborateRoomScheduleDurationMinutes", "type_schema": "xs:int"}]]}, {"name": "recurrence", "required": true, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}]]}]}]]}]]}, {"name": "UserCollaborateProjectRoomGetRequest", "tags": ["services"], "documentation": "Request collaborate room settings for a project room.\n        The request fails when requesting collaborate room settings for instant rooms or My Room.\n        The response is either UserCollaboratProjectRoomGetResponse or\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "roomId", "required": true, "array": false, "type": "CollaborateRoomId", "type_schema": "xs:token", "minLength": 4, "maxLength": 15}]]}, {"name": "UserCollaborateProjectRoomModifyRequest", "tags": ["services"], "documentation": "Request to modify collaborate room settings for a project room.\n        The request fails when modifying collaborate room settings for instant rooms or My Room.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "roomId", "required": true, "array": false, "type": "CollaborateRoomId", "type_schema": "xs:token", "minLength": 4, "maxLength": 15}, {"name": "roomName", "required": false, "array": false, "type": "CollaborateRoomName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "attendeeNotification", "required": false, "array": false, "type": "CollaborateRoomAttendeeNotification", "type_schema": "xs:token", "enum": ["Play Tone", "No Notification"]}, {"name": "endCollaborateRoomSessionOnOwnerExit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "ownerRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "roomSchedule", "required": false, "array": false, "type": "CollaborateRoomSchedule", "schema": [[{"choice": [{"name": "scheduleReservationless", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "endTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}]]}, {"name": "scheduleOneTime", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "duration", "required": true, "array": false, "type": "CollaborateRoomScheduleDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "CollaborateRoomScheduleDurationMinutes", "type_schema": "xs:int"}]]}]]}, {"name": "scheduleRecurring", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "duration", "required": true, "array": false, "type": "CollaborateRoomScheduleDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "CollaborateRoomScheduleDurationMinutes", "type_schema": "xs:int"}]]}, {"name": "recurrence", "required": true, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}]]}]}]]}]]}, {"name": "UserCollaborateRoomGetRequest", "tags": ["services"], "documentation": "Request to get the settings for My Room, Instant Room or Project Room.\n      The roomType and roomName parameters are returned for all rooms.\n      For My room and Project Room, the following parameters are returned:\n      attendeeNotification, endRoomSessionOnOwnerExit and ownerRequired.\n      In addition, the roomSchedule is returned for Project Room and\n      the roomStartTime and roomEndTime are returned for Instant Room.\n        The response is either UserCollaboratetRoomGetResponse or\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "roomId", "required": true, "array": false, "type": "CollaborateRoomId", "type_schema": "xs:token", "minLength": 4, "maxLength": 15}]]}, {"name": "UserCollaborateRoomIDRegenerateRequest", "tags": ["services"], "documentation": "Request to regenerate collaborate room id for MyRoom and project room.\n        The request fails when requesting to regenerate room ID for an instant room.\n        The response is either a UserCollaborateRoomIDRegenerateResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "roomId", "required": true, "array": false, "type": "CollaborateRoomId", "type_schema": "xs:token", "minLength": 4, "maxLength": 15}]]}, {"name": "UserCollaborateRoomListGetRequest", "tags": ["services"], "documentation": "Request the list of collaborate room instances for this specific user.\n        The response is either a UserCollaborateRoomListGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCollaborateRoomModifyRequest", "tags": ["services"], "documentation": "Request to modify room settings for a specific Project Room or My Room.\n        Request to modify room settings for a specific Instant Room is responded\n        with an ErrorResponse. The roomSchedule parameter is applicable for\n        Project Room only. If the roomSchedule parameter is specified in the\n        request to modify My Room, the request will be failed.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "roomId", "required": true, "array": false, "type": "CollaborateRoomId", "type_schema": "xs:token", "minLength": 4, "maxLength": 15}, {"name": "roomName", "required": false, "array": false, "type": "CollaborateRoomName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "attendeeNotification", "required": false, "array": false, "type": "CollaborateRoomAttendeeNotification", "type_schema": "xs:token", "enum": ["Play Tone", "No Notification"]}, {"name": "endCollaborateRoomSessionOnOwnerExit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "ownerRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "roomSchedule", "required": false, "array": false, "type": "CollaborateRoomSchedule", "schema": [[{"choice": [{"name": "scheduleReservationless", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "endTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}]]}, {"name": "scheduleOneTime", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "duration", "required": true, "array": false, "type": "CollaborateRoomScheduleDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "CollaborateRoomScheduleDurationMinutes", "type_schema": "xs:int"}]]}]]}, {"name": "scheduleRecurring", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "duration", "required": true, "array": false, "type": "CollaborateRoomScheduleDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "CollaborateRoomScheduleDurationMinutes", "type_schema": "xs:int"}]]}, {"name": "recurrence", "required": true, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}]]}]}]]}]]}, {"name": "UserCommPilotExpressGetRequest", "tags": ["services"], "documentation": "Get the user's commPilot express service setting.\n        The response is either a UserCommPilotExpressGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCommPilotExpressModifyRequest", "tags": ["services"], "documentation": "Modify the user's commPilot express service setting.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "profile", "required": false, "array": false, "type": "CommPilotExpressProfile", "type_schema": "xs:token", "enum": ["Available In Office", "Available Out Of Office", "Busy", "Unavailable"]}, {"name": "availableInOffice", "required": false, "array": false, "type": "CommPilotExpressAvailableInOfficeModify", "schema": [[{"name": "additionalPhoneNumberToRing", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "busySetting", "required": false, "array": false, "type": "CommPilotExpressRedirectionModify", "schema": [[{"name": "action", "required": false, "array": false, "type": "CommPilotExpressRedirectionAction", "type_schema": "xs:token", "enum": ["Transfer To Voice Mail", "Forward"]}, {"name": "forwardingPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "noAnswerSetting", "required": false, "array": false, "type": "CommPilotExpressRedirectionModify", "schema": [[{"name": "action", "required": false, "array": false, "type": "CommPilotExpressRedirectionAction", "type_schema": "xs:token", "enum": ["Transfer To Voice Mail", "Forward"]}, {"name": "forwardingPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "availableOutOfOffice", "required": false, "array": false, "type": "CommPilotExpressAvailableOutOfOfficeModify", "schema": [[{"name": "incomingCalls", "required": false, "array": false, "type": "CommPilotExpressRedirectionModify", "schema": [[{"name": "action", "required": false, "array": false, "type": "CommPilotExpressRedirectionAction", "type_schema": "xs:token", "enum": ["Transfer To Voice Mail", "Forward"]}, {"name": "forwardingPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "incomingCallNotify", "required": false, "array": false, "type": "CommPilotExpressEmailNotifyModify", "schema": [[{"name": "sendEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "emailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "busy", "required": false, "array": false, "type": "CommPilotExpressBusyModify", "schema": [[{"name": "incomingCalls", "required": false, "array": false, "type": "CommPilotExpressRedirectionWithExceptionModify", "schema": [[{"name": "sendCallsToVoiceMailExceptExcludedNumbers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "excludedPhoneNumber01", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "excludedPhoneNumber02", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "excludedPhoneNumber03", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "forwardExcludedNumbersTo", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "voiceMailNotify", "required": false, "array": false, "type": "CommPilotExpressEmailNotifyModify", "schema": [[{"name": "sendEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "emailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "unavailable", "required": false, "array": false, "type": "CommPilotExpressUnavailableModify", "schema": [[{"name": "incomingCalls", "required": false, "array": false, "type": "CommPilotExpressRedirectionWithExceptionModify", "schema": [[{"name": "sendCallsToVoiceMailExceptExcludedNumbers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "excludedPhoneNumber01", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "excludedPhoneNumber02", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "excludedPhoneNumber03", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "forwardExcludedNumbersTo", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "voiceMailGreeting", "required": false, "array": false, "type": "CommPilotExpressVoiceMailGreeting", "type_schema": "xs:token", "enum": ["No Answer", "Unavailable"]}]]}]]}, {"name": "SystemCommunicationBarringUserControlGetRequest", "tags": ["services"], "documentation": "Gets the Communication Barring system level settings.\n        The response is either SystemCommunicationBarringUserControlGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCommunicationBarringUserControlModifyRequest", "tags": ["services"], "documentation": "Modifies the system's Communication Barring User-Control settings.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "enableLockout", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxNumberOfFailedAttempts", "required": false, "array": false, "type": "CommunicationBarringUserControlNumberOfAttempts", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "lockoutMinutes", "required": false, "array": false, "type": "CommunicationBarringUserControlLockoutMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 600.0}]]}, {"name": "UserCommunicationBarringUserControlGetRequest", "tags": ["services"], "documentation": "Lists the Communication Barring profiles available to a user and\n        indicates which profile if any is currently active for the user..\n        The response is either UserCommunicationBarringUserControlGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCommunicationBarringUserControlModifyRequest", "tags": ["services"], "documentation": "Enabling a profile automatically disables the currently active profile.\n        Also allows the passcode for the service to be modified and the lockout to be reset.\n        Admins only need to populate the newPasscode field when changing the passcode.\n        Users must populate both the oldPasscode and new Passcode fields when changing the passcode.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableProfile", "required": false, "array": false, "type": "CommunicationBarringUserControlProfileCode", "type_schema": "xs:int", "minimum": 0.0, "maximum": 9.0}, {"name": "oldPasscode", "required": false, "array": false, "type": "Passcode", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "newPasscode", "required": false, "array": false, "type": "Passcode", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "resetLockout", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderBroadWorksCommunicatorGetRequest", "tags": ["services"], "documentation": "Request to get Configuration Server for a specified service\n        provider. The response is either a ServiceProviderBroadWorksCommunicatorGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderBroadWorksCommunicatorModifyRequest", "tags": ["services"], "documentation": "Request to modify the Configuration URL. The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": false, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "configurationServerURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "UserBroadWorksCommunicatorGetRequest", "tags": ["services"], "documentation": "Request to get the Configuration Server for a specified user.\n        The response is either a UserBroadWorksCommunicatorGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "SystemConnectedLineIdentificationPresentationGetRequest", "tags": ["services"], "documentation": "Request the system level data associated with the COLP service.\n        The response is either a\n        SystemConnectedLineIdentificationPresentationGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemConnectedLineIdentificationPresentationModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with the COLP Service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "enforceUserServiceAssignment", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserConnectedLineIdentificationRestrictionGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Connected Line ID Restriction.\n        The response is either a UserConnectedLineIdentificationRestrictionGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserConnectedLineIdentificationRestrictionModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Connected Line ID Restriction.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SystemCustomerOriginatedTraceGetRequest", "tags": ["services"], "documentation": "Request the system level data associated with Customer Originated Trace.\n        The response is either a SystemCustomerOriginatedTraceGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemCustomerOriginatedTraceModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Customer Originated Trace.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "screenMaliciousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupCustomRingbackGroupGetRequest20", "tags": ["services"], "documentation": "Get the group's custom ring back service settings.\n        The response is either a GroupCustomRingbackGroupGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupCustomRingbackGroupModifyRequest20", "tags": ["services"], "documentation": "Modify the group's custom ring back service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "audioSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioFile", "required": false, "array": false, "type": "ExtendedMediaFileResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoFile", "required": false, "array": false, "type": "ExtendedMediaFileResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}]]}, {"name": "UserCustomRingbackUserAddCriteriaRequest20", "tags": ["services"], "documentation": "Add a criteria to the user's custom ringback service.\n        For the callToNumber, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "CriteriaFromDn", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "callToNumber", "required": false, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}, {"name": "audioSelection", "required": true, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioFile", "required": false, "array": false, "type": "ExtendedMediaFileLevelResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoSelection", "required": true, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoFile", "required": false, "array": false, "type": "ExtendedMediaFileLevelResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "callWaitingAudioSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "callWaitingAudioFile", "required": false, "array": false, "type": "ExtendedMediaFileLevelResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "callWaitingVideoSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "callWaitingVideoFile", "required": false, "array": false, "type": "ExtendedMediaFileLevelResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}]]}, {"name": "UserCustomRingbackUserDeleteCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the user's custom ringback service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserCustomRingbackUserGetCriteriaListRequest", "tags": ["services"], "documentation": "Get the user's custom ringback service criteria listing.\n        The response is either a UserCustomRingbackUserGetCriteriaListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCustomRingbackUserGetCriteriaRequest21", "tags": ["services"], "documentation": "Get a criteria for the user's custom ringback service.\n        The response is either a UserCustomRingbackUserGetCriteriaResponse21 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserCustomRingbackUserModifyActiveCriteriaListRequest", "tags": ["services"], "documentation": "Modify the user's custom ringback service criteria's active setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserCustomRingbackUserModifyCriteriaRequest20", "tags": ["services"], "documentation": "Modify a criteria for the user's custom ringback service.\n        For the callToNumbers in the callToNumberList, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "CriteriaFromDnModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "callToNumberList", "required": false, "array": false, "type": "ReplacementCallToNumberList", "schema": [[{"name": "callToNumber", "required": true, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}, {"name": "audioSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioFile", "required": false, "array": false, "type": "ExtendedMediaFileLevelResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoFile", "required": false, "array": false, "type": "ExtendedMediaFileLevelResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "callWaitingAudioSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "callWaitingAudioFile", "required": false, "array": false, "type": "ExtendedMediaFileLevelResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "callWaitingVideoSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "callWaitingVideoFile", "required": false, "array": false, "type": "ExtendedMediaFileLevelResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}]]}, {"name": "UserDirectedCallPickupWithBargeInGetRequest14sp7", "tags": ["services"], "documentation": "Request the user level data associated with Directed Call Pickup With Barge In.\n        The response is either a UserDirectedCallPickupWithBargeInGetResponse14sp7 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserDirectedCallPickupWithBargeInModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Directed Call Pickup With Barge In.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableBargeInWarningTone", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAutomaticTargetSelection", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupDirectoryNumberHuntingGetAvailableUserListRequest", "tags": ["services"], "documentation": "Request to get the agents of a call center or hunt group that are available\n        to be assigned to a directory number hunting group.  They are agents that\n        are not already assigned to any other directory number hunting group.\n        The response is either\n        GroupDirectoryNumberHuntingGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupDirectoryNumberHuntingGetRequest17sp1", "tags": ["services"], "documentation": "Request to get the properties of the DNH service for a specified serviceUserId.\n        It gets the agents of a call center or hunt group that are members\n        of a directory number hunting group.  They are agents that are not already\n        assigned to any other directory number hunting group.\n        The response is either GroupDirectoryNumberHuntingGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupDirectoryNumberHuntingModifyRequest", "tags": ["services"], "documentation": "Replaces a list of users as agents for a directory number hunting group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "agentUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "useTerminateCallToAgentFirst", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useOriginalAgentServicesForBusyAndNoAnswerCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserDirectRouteGetRequest", "tags": ["services"], "documentation": "Get the direct route setting and the list of DTGs/Trunk Identities assigned to a user.\n        The response is either UserDirectRouteGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserDirectRouteModifyRequest", "tags": ["services"], "documentation": "Modify the direct route setting and the list of DTGs/Trunk Identities assigned to a user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "outgoingDTGPolicy", "required": false, "array": false, "type": "DirectRouteOutgoingDTGPolicy", "type_schema": "xs:token", "enum": ["Direct Route DTG", "Trunk Group DTG"]}, {"name": "outgoingTrunkIdentityPolicy", "required": false, "array": false, "type": "DirectRouteOutgoingTrunkIdentityPolicy", "type_schema": "xs:token", "enum": ["Direct Route Trunk Identity", "Trunk Group Trunk Identity"]}, {"name": "directRouteIdentityList", "required": false, "array": false, "type": "DirectRouteReplacementIdentityList", "schema": [[{"choice": [{"name": "dtgIdentity", "required": true, "array": false, "type": "OtgDtgIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "trunkIdentity", "required": true, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]]}]]}, {"name": "UserDoNotDisturbGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Do Not Disturb.\n        The response is either a UserDoNotDisturbGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserDoNotDisturbModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Do Not Disturb.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "ringSplash", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupEmergencyZonesAddHomeZoneListRequest", "tags": ["services"], "documentation": "Add a list of home zones and/or home zone ranges to the group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "homeZoneIpAddress", "required": false, "array": true, "type": "IPAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 39}, {"name": "homeZoneIpAddressRange", "required": false, "array": true, "type": "IPAddressRange", "schema": [[{"name": "minIpAddress", "required": true, "array": false, "type": "IPAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 39}, {"name": "maxIpAddress", "required": true, "array": false, "type": "IPAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 39}]]}]]}, {"name": "GroupEmergencyZonesDeleteHomeZoneListRequest", "tags": ["services"], "documentation": "Delete a list of home zones and/or home zone ranges to the group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "homeZoneIpAddress", "required": false, "array": true, "type": "IPAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 39}, {"name": "homeZoneIpAddressRange", "required": false, "array": true, "type": "IPAddressRange", "schema": [[{"name": "minIpAddress", "required": true, "array": false, "type": "IPAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 39}, {"name": "maxIpAddress", "required": true, "array": false, "type": "IPAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 39}]]}]]}, {"name": "GroupEmergencyZonesGetHomeZoneListRequest", "tags": ["services"], "documentation": "Request the group level data associated with Emergency Zones.\n        The response is either a GroupEmergencyZonesGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupEmergencyZonesGetRequest", "tags": ["services"], "documentation": "Request the group level data associated with Emergency Zones.\n        The response is either a GroupEmergencyZonesGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupEmergencyZonesModifyHomeZoneListRequest", "tags": ["services"], "documentation": "Modify a list of home zones and/or home zone ranges.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "homeZoneIpAddressList", "type": null, "required": false, "array": true, "schema": [[{"name": "homeZoneIpAddress", "required": true, "array": false, "type": "IPAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 39}, {"name": "newHomeZoneIpAddress", "required": true, "array": false, "type": "IPAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 39}]]}, {"name": "homeZoneIpAddressRangeList", "type": null, "required": false, "array": true, "schema": [[{"name": "homeZoneIpAddressRange", "required": true, "array": false, "type": "IPAddressRange", "schema": [[{"name": "minIpAddress", "required": true, "array": false, "type": "IPAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 39}, {"name": "maxIpAddress", "required": true, "array": false, "type": "IPAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 39}]]}, {"name": "newHomeZoneIpAddressRange", "required": true, "array": false, "type": "IPAddressRange", "schema": [[{"name": "minIpAddress", "required": true, "array": false, "type": "IPAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 39}, {"name": "maxIpAddress", "required": true, "array": false, "type": "IPAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 39}]]}]]}]]}, {"name": "GroupEmergencyZonesModifyRequest", "tags": ["services"], "documentation": "Modify the group level data associated with Emergency Zones.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "emergencyZonesProhibition", "required": false, "array": false, "type": "EmergencyZonesProhibition", "type_schema": "xs:token", "enum": ["Prohibit all registrations and call originations", "Prohibit emergency call originations"]}, {"name": "sendEmergencyCallNotifyEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "emergencyCallNotifyEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ResellerEmergencyZonesGetRequest", "tags": ["services"], "documentation": "Request the reseller level data associated with Emergency Zones.\n        The response is either a ResellerEmergencyZonesGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}, {"name": "ResellerEmergencyZonesModifyRequest", "tags": ["services"], "documentation": "Modify the reseller level data associated with Emergency Zones.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "defaultFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemEmergencyZonesGetRequest", "tags": ["services"], "documentation": "Request the system level data associated with Emergency Zones.\n        The response is either a SystemEmergencyZonesGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemEmergencyZonesModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Emergency Zones.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "defaultFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupEnhancedCallLogsSchemaInstanceGetRequest", "tags": ["services"], "documentation": "Get the enhanced call log database schema instance associated with a group of\n      a service provider.\n      The response is either a GroupEnhancedCallLogsSchemaInstanceGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupEnhancedCallLogsSchemaInstanceModifyRequest", "tags": ["services"], "documentation": "Modify the Enhanced Call Logs schema instance associated with a group of a service provider.\n      The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": false, "array": false, "type": "DbSchemaInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderEnhancedCallLogsGetRequest17sp4", "tags": ["services"], "documentation": "Get the service provider's enhanced call log settings.\n        The response is either a ServiceProviderEnhancedCallLogsGetResponse17sp4 or an ErrorResponse.\n        This command will return an ErrorResponse if DBS is used as the call log server.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderEnhancedCallLogsModifyRequest", "tags": ["services"], "documentation": "Modify the Service Provider level data associated with Enhanced Call Logs.\n        Configures the maximum number of logged calls and maximum age of your user's call logs.\n        Log entries are deleted when either of the two limits is reached.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "maxLoggedCalls", "required": false, "array": false, "type": "EnhancedCallLogsMaxLoggedCalls17sp4", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99000.0}, {"name": "callExpirationDays", "required": false, "array": false, "type": "EnhancedCallLogsCallExpirationDays", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1000.0}]]}, {"name": "ServiceProviderEnhancedCallLogsSchemaInstanceGetRequest", "tags": ["services"], "documentation": "Get the enhanced call log database schema instance associated with this\n      service provider.\n      The response is either a ServiceProviderEnhancedCallLogsSchemaInstanceGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderEnhancedCallLogsSchemaInstanceModifyRequest", "tags": ["services"], "documentation": "Modify the Enhanced Call Logs schema instance associated with this Service Provider.\n      The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": false, "array": false, "type": "DbSchemaInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemEnhancedCallLogsActiveSchemaInstanceGetListRequest", "tags": ["services"], "documentation": "Request the system level database schema instances defined for Enhanced Call Logs.\n      For each instance, the number of actual users (users that have the Enhanced Call Logs service,\n      are assigned to that schema instance and have recorded call logs on the NDS) are given.\n      The response is either a SystemEnhancedCallLogsActiveSchemaInstanceGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemEnhancedCallLogsGetRequest22V2", "tags": ["services"], "documentation": "Request the system level data associated with Enhanced Call Logs. The response is either a\n        SystemEnhancedCallLogsGetResponse22V2 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemEnhancedCallLogsModifyRequest22", "tags": ["services"], "documentation": "Modify the system level data associated with Enhanced Call Logs.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "maxNonPagedResponseSize", "required": false, "array": false, "type": "EnhancedCallLogsNonPagedResponseSize", "type_schema": "xs:int", "minimum": 100.0, "maximum": 1000.0}, {"name": "eclQueryApplicationURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "eclQueryDataRepositoryURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "defaultSchema", "required": false, "array": false, "type": "DbSchemaInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemEnhancedCallLogsSchemaInstanceGetListRequest", "tags": ["services"], "documentation": "Request the system level database schema instances defined for Enhanced Call Logs.\n      For each instance, the number of actual users (users that have the Enhanced Call Logs service\n      and are assigned to that schema instance) and the number of potential users are given\n      (users part of a group or service provider using that schema instance).\n      The response is either a SystemEnhancedCallLogsSchemaInstanceGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "UserEnhancedCallLogsGetListRequest23", "tags": ["services"], "documentation": "Request user's call logs.\n        If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.\n        The filters \"dateTimeRange\", \"numberFilter\", \"redirectedNumberFilter\", \"accountAuthorizationCodeFilter\"\n        \"callAuthorizationCodeFilter\" and \"subscriberType\" are ignored if call logs are stored in CDS. When\n        \"ReceivedOrMissed\" is specified as \"callLogType\" and call logs are stored in CDS, all call logs including\n        placed will be returned.\n        It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl\n        is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control\n        the maximum number of call logs can be returned.\n        The response is either a UserEnhancedCallLogsGetListResponse23 or an ErrorResponse.\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          callAuthorizationCodeFilter", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callLogType", "required": false, "array": false, "type": "EnhancedCallLogsCallLogsRequestType", "type_schema": "xs:token", "enum": ["Placed", "Received", "Missed", "ReceivedOrMissed"]}, {"name": "dateTimeRange", "required": true, "array": false, "type": "EnhancedCallLogsTimeRange", "schema": [[{"name": "startDateTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "endDateTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}]]}, {"name": "numberFilter", "required": false, "array": false, "type": "EnhancedCallLogsNumberFilter", "schema": [[{"choice": [{"name": "includeBasicCallType", "required": true, "array": true, "type": "BasicCallType", "type_schema": "xs:token", "enum": ["Group", "Enterprise", "Network", "Network URL", "Repair", "Emergency"]}, {"name": "includeCallCategory", "required": true, "array": true, "type": "CallCategory", "type_schema": "xs:token", "enum": ["Local", "National", "Interlata", "Intralata", "International", "Private", "Emergency", "Other"]}, {"name": "includeConfigurableCallType", "required": true, "array": true, "type": "CommunicationBarringCallType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "searchCriteriaDialedNumber", "required": true, "array": true, "type": "SearchCriteriaOutgoingDNorSIPURI", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaCalledNumber", "required": true, "array": true, "type": "SearchCriteriaOutgoingDNorSIPURI", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaNetworkTranslatedNumber", "required": true, "array": true, "type": "SearchCriteriaOutgoingDNorSIPURI", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaCallingPresentationNumber", "required": true, "array": true, "type": "SearchCriteriaOutgoingDNorSIPURI", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]}]]}, {"name": "redirectedNumberFilter", "required": false, "array": false, "type": "EnhancedCallLogsRedirectedNumberFilter23", "schema": [[{"choice": [{"name": "redirectedCall", "required": true, "array": false, "type": "EnhancedCallLogsRedirectedCallSelection23", "schema": [[{"name": "redirectedCall", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "redirectType", "required": false, "array": true, "type": "ServiceInvocationDisposition23", "type_schema": "xs:token", "enum": ["Automatic Hold/Retrieve", "Call Forward Always", "Call Forward Always Secondary", "Call Forward Busy", "Call Forward No Answer", "Call Forward Not Reachable", "Call Forward Selective", "Call Park", "Call Pickup", "Deflection", "Directed Call Pickup", "Distribution from Call Center", "Distribution from Hunt Group", "Distribution from Route Point", "Do Not Disturb", "Fax Deposit", "Group Night Forwarding", "Sequential Ring", "Series Completion", "Simultaneous Ring", "Third Party Deflection", "Third Party Voice Mail Support", "Transfer Consult", "Trunk Group Forward Capacity Exceeded", "Trunk Group Forward Unreachable", "Trunk Group Forward Unconditional", "Voice Mail Transfer", "Voice Messaging", "Find-me/Follow-me", "Personal Assistant", "VoiceXML Script Termination", "Agent Wrap-Up"]}]]}, {"name": "includeServiceInvocationBasicCallType", "required": true, "array": true, "type": "BasicCallType", "type_schema": "xs:token", "enum": ["Group", "Enterprise", "Network", "Network URL", "Repair", "Emergency"]}, {"name": "includeServiceInvocationCallCategory", "required": true, "array": true, "type": "CallCategory", "type_schema": "xs:token", "enum": ["Local", "National", "Interlata", "Intralata", "International", "Private", "Emergency", "Other"]}, {"name": "includeServiceInvocationConfigurableCallType", "required": true, "array": true, "type": "CommunicationBarringCallType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "searchCriteriaServiceInvocationDialedNumber", "required": true, "array": true, "type": "SearchCriteriaOutgoingDNorSIPURI", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaServiceInvocationCalledNumber", "required": true, "array": true, "type": "SearchCriteriaOutgoingDNorSIPURI", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaServiceInvocationNetworkTranslatedNumber", "required": true, "array": true, "type": "SearchCriteriaOutgoingDNorSIPURI", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]}]]}, {"name": "accountAuthorizationCodeFilter", "required": false, "array": false, "type": "EnhancedCallLogsAccountAuthorizationCodeFilter", "schema": [[{"choice": [{"name": "callsWithCodes", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "accountAuthorizationCode", "required": true, "array": false, "type": "OutgoingCallingPlanAuthorizationCode", "type_schema": "xs:token", "minLength": 2, "maxLength": 14}]}]]}, {"name": "callAuthorizationCodeFilter", "required": false, "array": false, "type": "EnhancedCallLogsCallAuthorizationCodeFilter", "schema": [[{"choice": [{"name": "callsWithCodes", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "authorizationCode", "required": true, "array": false, "type": "OutgoingCallingPlanAuthorizationCode", "type_schema": "xs:token", "minLength": 2, "maxLength": 14}]}]]}, {"name": "subscriberType", "required": false, "array": false, "type": "EnhancedCallLogsSubscriberType20", "type_schema": "xs:token", "enum": ["Auto Attendant", "BroadWorks Anywhere Portal", "Call Center", "Find-me/Follow-me", "Flexible Seating Host", "Hunt Group", "Route Point", "User", "VoiceXML"]}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}]]}, {"name": "SystemExecutiveGetRequest", "tags": ["services"], "documentation": "Request to get the Executive system parameters.\n         The response is either SystemExecutiveGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemExecutiveModifyRequest", "tags": ["services"], "documentation": "Request to modify the Executive system parameters.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "treatVirtualOnNetCallsAsInternal", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserExecutiveAddFilteringSelectiveCriteriaRequest", "tags": ["services"], "documentation": "Add a filtering criteria to an executive user.\n        Both executive and the executive assistant can run this command.\n        For the callToNumber, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "filter", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "ExecutiveCallFilteringCriteriaFromDn", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "ExecutiveCallFilteringCriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Any Internal", "Any External", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "callToNumber", "required": false, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}, {"name": "UserExecutiveDeleteFilteringSelectiveCriteriaRequest", "tags": ["services"], "documentation": "Delete a filtering criteria from an executive user.\n        Both executive and the executive assistant can run this command.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserExecutiveGetAssistantRequest", "tags": ["services"], "documentation": "Get the assistant setting and the list of assistants assigned to an executive.\n        The response is either UserExecutiveGetAssistantsResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserExecutiveGetAvailableAssistantListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned to an executive.\n        Searching for users by group only makes sense when the executive user is part of an Enterprise.\n        The response is either UserExecutiveGetAvailableAssistantListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserExecutiveGetFilteringRequest", "tags": ["services"], "documentation": "Get the filtering setting and the list of filtering criteria defined for an executive user.\n        Both executive and the executive assistant can run this command.\n        The response is either UserExecutiveGetFilteringResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserExecutiveGetFilteringSelectiveCriteriaRequest21", "tags": ["services"], "documentation": "Get a filtering criteria for an executive user.\n        Both executive and the executive assistant can run this command.\n        The response is either UserExecutiveGetSelectiveCriteriaResponse21 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserExecutiveGetScreeningAlertingRequest", "tags": ["services"], "documentation": "Get the screening and alerting setting of an executive. Both executive and the executive assistant can run this command.\n        The response is either UserExecutiveGetScreeningAlertingResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserExecutiveModifyAssistantRequest", "tags": ["services"], "documentation": "Request to modify the assistant setting and the list of assistants assigned to an executive user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "allowOptInOut", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "assistantUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "UserExecutiveModifyFilteringRequest", "tags": ["services"], "documentation": "Modify the filtering setting for an executive user.\n        Both executive and the executive assistant can run this command.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableFiltering", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "filteringMode", "required": false, "array": false, "type": "ExecutiveCallFilteringMode", "type_schema": "xs:token", "enum": ["Simple", "Advanced"]}, {"name": "simpleFilterType", "required": false, "array": false, "type": "ExecutiveCallFilteringSimpleFilterType", "type_schema": "xs:token", "enum": ["All Calls", "All Internal Calls", "All External Calls"]}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserExecutiveModifyFilteringSelectiveCriteriaRequest", "tags": ["services"], "documentation": "Modify a filtering selective criteria for an executive.\n        Both executive and the executive assistant can run this command.\n        For the callToNumbers in the callToNumberList, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "filter", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "ExecutiveCallFilteringCriteriaFromDnModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "ExecutiveCallFilteringCriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Any Internal", "Any External", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "callToNumberList", "required": false, "array": false, "type": "ReplacementCallToNumberList", "schema": [[{"name": "callToNumber", "required": true, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]]}, {"name": "UserExecutiveModifyScreeningAlertingRequest", "tags": ["services"], "documentation": "Modify the screening and alerting setting of an executive.\n        Both executive and the executive assistant can run this command.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableScreening", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "screeningAlertType", "required": false, "array": false, "type": "ExecutiveScreeningAlertType", "type_schema": "xs:token", "enum": ["Silent", "Ring Splash"]}, {"name": "alertBroadWorksMobilityLocation", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertBroadWorksAnywhereLocations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertSharedCallAppearanceLocations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertingMode", "required": false, "array": false, "type": "ExecutiveAlertingMode", "type_schema": "xs:token", "enum": ["Simultaneous", "Sequential"]}, {"name": "alertingCallingLineIdNameMode", "required": false, "array": false, "type": "ExecutiveAlertingCallingLineIdNameMode", "type_schema": "xs:token", "enum": ["Executive", "Executive-Originator", "Originator-Executive", "Originator", "Custom"]}, {"name": "alertingCustomCallingLineIdName", "required": false, "array": false, "type": "ExecutiveAlertingCustomCallingLineIdName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "unicodeAlertingCustomCallingLineIdName", "required": false, "array": false, "type": "ExecutiveAlertingCustomCallingLineIdName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "alertingCallingLineIdPhoneNumberMode", "required": false, "array": false, "type": "ExecutiveAlertingCallingLineIdPhoneNumberMode", "type_schema": "xs:token", "enum": ["Executive", "Originator", "Custom"]}, {"name": "alertingCustomCallingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "callPushRecallNumberOfRings", "required": false, "array": false, "type": "ExecutiveCallPushRecallNumberOfRings", "type_schema": "xs:int", "minimum": 2.0, "maximum": 20.0}, {"name": "nextAssistantNumberOfRings", "required": false, "array": false, "type": "ExecutiveNextAssistantNumberOfRings", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}, {"name": "enableRollover", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "rolloverWaitTimeSeconds", "required": false, "array": false, "type": "ExecutiveRolloverWaitTimeSeconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 7200.0}, {"name": "rolloverAction", "required": false, "array": false, "type": "ExecutiveRolloverActionType", "type_schema": "xs:token", "enum": ["Voice Messaging", "Forward", "No Answer Processing"]}, {"name": "rolloverForwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserExecutiveAssistantGetRequest", "tags": ["services"], "documentation": "Get the setting of an executive assistant.\n        The response is either UserExecutiveAssistantGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserExecutiveAssistantModifyRequest", "tags": ["services"], "documentation": "Modify the setting for executive assistant.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableDivert", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "divertToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "optInStatus", "required": false, "array": true, "type": "ExecutiveAssistantOptInStatus", "schema": [[{"name": "executiveUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "optIn", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserExternalCallingLineIDDeliveryGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with External Calling Line ID Delivery.\n        The response is either a UserExternalCallingLineIDDeliveryGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserExternalCallingLineIDDeliveryModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with External Calling Line ID Delivery.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderExternalCustomRingbackGetRequest", "tags": ["services"], "documentation": "Request the service provider level data associated with External Custom Ringback.\n        The response is either a ServiceProviderExternalCustomRingbackGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderExternalCustomRingbackModifyRequest", "tags": ["services"], "documentation": "Modify the service provider level data associated with External Custom Ringback.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "prefixDigits", "required": false, "array": false, "type": "ExternalCustomRingbackPrefixDigits", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serverNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "serverPort", "required": false, "array": false, "type": "Port1025", "type_schema": "xs:int", "minimum": 1025.0, "maximum": 65535.0}, {"name": "timeoutSeconds", "required": false, "array": false, "type": "ExternalCustomRingbackTimeoutSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}]]}, {"name": "UserExternalCustomRingbackGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with External Custom Ringback.\n        The response is either a UserExternalCustomRingbackGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserExternalCustomRingbackModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with External Custom Ringback.\n        The user SIP URI, when selected, it replaces the SP address, port and prefix.\n        The user SIP URI, if selected, is the Request URI of the SIP INVITE sent\n        to the external server.  When the service provider data is used instead,\n        the Request URI is constructed using the prefix, address, port and the user DN.\n        The timeout value is the only SP configuration used when the user SIP URI is selected.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSettingLevel", "required": false, "array": false, "type": "ExternalCustomRingbackSettingLevel", "type_schema": "xs:token", "enum": ["Service Provider", "User"]}, {"name": "sipRequestURI", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}]]}, {"name": "SystemFaxMessagingGetRequest", "tags": ["services"], "documentation": "Request the system level data associated with Fax Messaging.\n        The response is either a SystemFaxMessagingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemFaxMessagingModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Fax Messaging.\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          statusDurationHours\n          statusAuditIntervalHours\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "statusDurationHours", "required": false, "array": false, "type": "FaxMessagingStatusDurationHours", "type_schema": "xs:int", "minimum": 1.0, "maximum": 24.0}, {"name": "statusAuditIntervalHours", "required": false, "array": false, "type": "FaxMessagingStatusAuditIntervalHours", "type_schema": "xs:int", "minimum": 1.0, "maximum": 24.0}, {"name": "maximumConcurrentFaxesPerUser", "required": false, "array": false, "type": "FaxMessagingMaximumConcurrentFaxesPerUser", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}]]}, {"name": "UserFaxMessagingGetRequest17sp1", "tags": ["services"], "documentation": "Request the user level data associated with Fax Messaging.\n        The response is either a UserFaxMessagingGetResponse17sp1 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserFaxMessagingModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Fax Messaging.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "GroupFindMeFollowMeAddAlertingGroupRequest", "tags": ["services"], "documentation": "Add an alerting group to a Find-me/Follow-me instance.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alertingGroupName", "required": true, "array": false, "type": "FindMeFollowMeAlertingGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "alertingGroupDescription", "required": false, "array": false, "type": "FindMeFollowMeAlertingGroupDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "useDiversionInhibitor", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "answerConfirmationRequired", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberOfRings", "required": true, "array": false, "type": "FindMeFollowMeAlertingGroupNumberOfRings", "type_schema": "xs:int", "minimum": 2.0, "maximum": 20.0}, {"choice": [{"name": "phoneNumber", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]]}, {"name": "GroupFindMeFollowMeAddAlertingGroupSelectiveCriteriaRequest", "tags": ["services"], "documentation": "Add a criteria to the Find-me/Follow-me alerting group.\n        For the callToNumber, the extension and number elements are not used and the only types accepted for each number are Primary and Alternates. If other type is specified the command fails.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alertingGroupName", "required": true, "array": false, "type": "FindMeFollowMeAlertingGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "CriteriaFromDn", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "callToNumber", "required": false, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}, {"name": "GroupFindMeFollowMeAddInstanceRequest", "tags": ["services"], "documentation": "Add a Find-me/Follow-me instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupFindMeFollowMeAlertingGroupGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned to a Find-me/Follow-me alerting group.\n        The response is either GroupFindMeFollowMeAlertingGroupGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupFindMeFollowMeDeleteAlertingGroupRequest", "tags": ["services"], "documentation": "Delete an alerting group from a Find-me/Follow-me instance.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alertingGroupName", "required": true, "array": false, "type": "FindMeFollowMeAlertingGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupFindMeFollowMeDeleteAlertingGroupSelectiveCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the Find-me/Follow-me alerting group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alertingGroupName", "required": true, "array": false, "type": "FindMeFollowMeAlertingGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupFindMeFollowMeDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a Find-me/Follow-me instance from a group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupFindMeFollowMeGetAlertingGroupListRequest", "tags": ["services"], "documentation": "Get a list of Find-me/Follow-me alerting groups within a group.\n        The response is either GroupFindMeFollowMeGetAlertingGroupListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupFindMeFollowMeGetAlertingGroupRequest", "tags": ["services"], "documentation": "Request to get all the information of a Find-me/Follow-me alerting group.\n        The response is either GroupFindMeFollowMeGetAlertingGroupResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alertingGroupName", "required": true, "array": false, "type": "FindMeFollowMeAlertingGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequest21", "tags": ["services"], "documentation": "Request to get all the information of a specific Find-me/Follow-me alerting group selective criteria.\n        The response is either GroupFindMeFollowMeGetAlertingGroupResponse21 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alertingGroupName", "required": true, "array": false, "type": "FindMeFollowMeAlertingGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupFindMeFollowMeGetInstanceListRequest", "tags": ["services"], "documentation": "Get a list of Find-me/Follow-me instances within a group.\n        The response is either GroupFindMeFollowMeGetInstanceListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupDepartmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupFindMeFollowMeGetInstanceRequest19sp1", "tags": ["services"], "documentation": "Request to get all the information of a Find-me/Follow-me instance.\n        The response is either GroupFindMeFollowMeGetInstanceResponse19sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupFindMeFollowMeModifyActiveInstanceListRequest", "tags": ["services"], "documentation": "Request to set the active status of Find-me/Follow-me instances.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceActivation", "required": false, "array": true, "type": "ServiceActivation", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupFindMeFollowMeModifyAlertingGroupListRequest", "tags": ["services"], "documentation": "Modify the priorities assigned to alerting groups\n        The response is either a SuccessResponse or an ErrorResponse.\n        NOTE: The command fails if all the alerting groups defined for the user are not provided.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alertingGroupName", "required": false, "array": true, "type": "FindMeFollowMeAlertingGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupFindMeFollowMeModifyAlertingGroupRequest", "tags": ["services"], "documentation": "Modify a Find-me/Follow-me alerting group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alertingGroupName", "required": true, "array": false, "type": "FindMeFollowMeAlertingGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "newAlertingGroupName", "required": false, "array": false, "type": "FindMeFollowMeAlertingGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "alertingGroupDescription", "required": false, "array": false, "type": "FindMeFollowMeAlertingGroupDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "useDiversionInhibitor", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "answerConfirmationRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberOfRings", "required": false, "array": false, "type": "FindMeFollowMeAlertingGroupNumberOfRings", "type_schema": "xs:int", "minimum": 2.0, "maximum": 20.0}, {"name": "phoneNumberOrUserList", "required": false, "array": false, "type": "FindMeFollowMeAlertingGroupReplacementOutgoingDNSIPURIorUserIdList", "schema": [[{"choice": [{"name": "phoneNumber", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]]}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupFindMeFollowMeModifyAlertingGroupSelectiveCriteriaRequest", "tags": ["services"], "documentation": "Modify a Find-me/Follow-me alerting group criteria.\n        For the callToNumbers in the callToNumberList, the extension and number elements are not used and the only types accepted for each number are Primary and Alternates. If other type is specified the command fails.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alertingGroupName", "required": true, "array": false, "type": "FindMeFollowMeAlertingGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "CriteriaFromDnModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callToNumberList", "required": false, "array": false, "type": "ReplacementCallToNumberList", "schema": [[{"name": "callToNumber", "required": true, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]]}, {"name": "GroupFindMeFollowMeModifyInstanceRequest", "tags": ["services"], "documentation": "Request to modify a Find-me/Follow-me instance.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupFlexibleSeatingAccessDeviceGetListRequest", "tags": ["services"], "documentation": "Requests the list of access devices available for assignment to a flexible\n        seating host or guest. The list includes devices created at the system, service\n        provider, and group levels that support device management.\n        The response is either GroupFlexibleSeatingAccessDeviceGetListResponse or\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupFlexibleSeatingHostAddInstanceRequest22", "tags": ["services"], "documentation": "Add a flexible seating host instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfileFlexibleSeatingHost", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "accessDeviceEndpoint", "required": false, "array": false, "type": "AccessDeviceMultipleContactEndpointAdd22", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": true, "type": "SIPContactInfo", "schema": [[{"name": "sipContact", "required": true, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupFlexibleSeatingHostDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a flexible seating host instance from a group. Host cannot be deleted when a guest is associated to a host.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupFlexibleSeatingHostGetInstanceListRequest", "tags": ["services"], "documentation": "Get a list of flexible seating host instances within a group.\n        The response is either GroupFlexibleSeatingHostGetInstanceListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupDepartmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaServiceInstanceName", "required": false, "array": true, "type": "SearchCriteriaServiceInstanceName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupFlexibleSeatingHostGetInstanceRequest22", "tags": ["services"], "documentation": "Request to get all the information of a flexible seating host instance.\n        The response is either GroupFlexibleSeatingHostGetInstanceResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupFlexibleSeatingHostGuestAssociationGetRequest", "tags": ["services"], "documentation": "Request the flexible seating host guest association details.\n        The response is either a GroupFlexibleSeatingHostGuestAssociationGetResponse or an ErrorResponse.\naccessLevel is always set to Group for a Service Provider", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupFlexibleSeatingHostGuestAssociationModifyRequest", "tags": ["services"], "documentation": "Modify the flexible seating host\u2019s guest association attributes.\n        The request fails if enforceAssociationLimit or associationLimitHours are changed when the host is associated to a guest.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enforceAssociationLimit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "associationLimitHours", "required": false, "array": false, "type": "FlexibleSeatingAssociationLimitHours", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "accessLevel", "required": false, "array": false, "type": "FlexibleSeatingHostAccessLevel", "type_schema": "xs:token", "enum": ["Enterprise", "Group"]}, {"name": "removeGuestAssociation", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupFlexibleSeatingHostModifyActiveInstanceListRequest", "tags": ["services"], "documentation": "Request to set the active status of flexible seating host instances. Host cannot be disabled when a flexible seating guest is associated.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceActivation", "required": false, "array": true, "type": "ServiceActivation", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupFlexibleSeatingHostModifyInstanceRequest22", "tags": ["services"], "documentation": "Request to modify a flexible seating host instance.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfileFlexibleSeatingHost", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "accessDeviceEndpoint", "required": false, "array": false, "type": "AccessDeviceMultipleContactEndpointModify22", "schema": [[{"name": "accessDevice", "required": false, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": false, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contactList", "required": false, "array": false, "type": "ReplacementContactList22", "schema": [[{"name": "contact", "required": true, "array": true, "type": "SIPContactInfo", "schema": [[{"name": "sipContact", "required": true, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}]]}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupFlexibleSeatingHostRoutingPoliciesGetRequest", "tags": ["services"], "documentation": "Get a flexible seating host\u2019s routing policies\n        The response is either a GroupFlexibleSeatingHostRoutingPoliciesGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupFlexibleSeatingHostRoutingPoliciesModifyRequest", "tags": ["services"], "documentation": "Modify a flexible seating host\u2019s routing policies\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "allowEmergencyCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowCallsToVoicePortal", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserFlexibleSeatingGuestGetAvailableHostListRequest", "tags": ["services"], "documentation": "Get a list of hosts that can be assigned to flexible seating guests.\n        The response is either UserFlexibleSeatingGuestGetAvailableUserListResponse or ErrorResponse. The response will include active hosts based on the following criteria.\n- host that has the equivalent device type as the guest, host already assigned to another guest and for a guest in a Service Provider host in the user\u2019s group and for a user in an Enterprise a host within the user\u2019s group and host in the user\u2019s enterprise that has the accessLevel set to Enterprise.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserFlexibleSeatingGuestGetRequest22", "tags": ["services"], "documentation": "Request the user level data associated with flexible seating guest.\n        The response is either a UserFlexibleSeatingGuestGetResponse22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserFlexibleSeatingGuestModifyRequest22", "tags": ["services"], "documentation": "Modify the user level data associated with flexible seating guest.\n\t\taccessDeviceEndpoint can only be configured by group or a higher level administrator.\n\t\tThe request fails if isActive is set to false and the guest is associated to a host.\n\t\tThe request fails when enableAssociationLimit, associationLimitHours, unlockPhonePINCode are changed when the guest is associated to a host.\n\t\tThe request fails when accessDeviceEndpoint is set in the request when the guest is associated to a host.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAssociationLimit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "associationLimitHours", "required": false, "array": false, "type": "FlexibleSeatingAssociationLimitHours", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "unlockPhonePINCode", "required": false, "array": false, "type": "FlexibleSeatingGuestUnlockPhonePINCode", "type_schema": "xs:token", "minLength": 4, "maxLength": 10}, {"name": "accessDeviceEndpoint", "required": false, "array": false, "type": "AccessDeviceMultipleContactEndpointModify22", "schema": [[{"name": "accessDevice", "required": false, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": false, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contactList", "required": false, "array": false, "type": "ReplacementContactList22", "schema": [[{"name": "contact", "required": true, "array": true, "type": "SIPContactInfo", "schema": [[{"name": "sipContact", "required": true, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}]]}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "hostUserId", "required": false, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupGroupNightForwardingGetRequest", "tags": ["services"], "documentation": "Request to get the Group Night Forwarding group parameters.\n        The response is either GroupGroupNightForwardingGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupGroupNightForwardingModifyRequest", "tags": ["services"], "documentation": "Request to modify the Group Night Forwarding group parameters.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "nightForwarding", "required": false, "array": false, "type": "GroupNightForwardingGroupServiceActivationMode", "type_schema": "xs:token", "enum": ["Auto On", "On", "Off"]}, {"name": "businessHours", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "SystemGroupNightForwardingGetRequest", "tags": ["services"], "documentation": "Request to get the Group Night Forwarding system parameters.\n        The response is either SystemGroupNightForwardingGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemGroupNightForwardingModifyRequest", "tags": ["services"], "documentation": "Request to modify the Group Night Forwarding system parameters.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "nightForwardGroupCallsWithinEnterprise", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserGroupNightForwardingGetRequest", "tags": ["services"], "documentation": "Request to get the Group Night Forwarding user parameters.\n        The response is either UserGroupNightForwardingGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserGroupNightForwardingModifyRequest", "tags": ["services"], "documentation": "Request to modify the Group Night Forwarding user parameters.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "nightForwarding", "required": false, "array": false, "type": "GroupNightForwardingUserServiceActivationMode", "type_schema": "xs:token", "enum": ["Use Group", "On", "Off"]}]]}, {"name": "GroupGroupPagingAddInstanceRequest", "tags": ["services"], "documentation": "Add a Group Paging instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following element is only used in AS data mode and ignored in XS data mode:\n           networkClassOfService", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "confirmationToneTimeoutSeconds", "required": true, "array": false, "type": "GroupPagingConfirmationToneTimeoutSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}, {"name": "deliverOriginatorCLIDInstead", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "originatorCLIDPrefix", "required": false, "array": false, "type": "GroupPagingOriginatorCLIDPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupGroupPagingAddOriginatorListRequest", "tags": ["services"], "documentation": "Add originator(s) to a paging group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "originatorUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupGroupPagingAddTargetListRequest", "tags": ["services"], "documentation": "Add target(s) to a paging group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "targetUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupGroupPagingDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a Group Paging instance from a group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupGroupPagingDeleteOriginatorListRequest", "tags": ["services"], "documentation": "Delete originator(s) from a paging group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "originatorUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupGroupPagingDeleteTargetListRequest", "tags": ["services"], "documentation": "Delete target(s) from a paging group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "targetUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupGroupPagingGetAvailableOriginatorListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned as originators to a given paging group.\n        Searching for users by group only makes sense when the paging group is part of an Enterprise.\n        The response is either GroupGroupPagingGetAvailableOriginatorListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupGroupPagingGetAvailableTargetListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned as targets to a given paging group.\n        Searching for users by group only makes sense when the paging group is part of an Enterprise.\n        The response is either GroupGroupPagingGetAvailableTargetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupGroupPagingGetInstanceListRequest", "tags": ["services"], "documentation": "Get a list of Paging Groups instances within a group.\n        The response is either GroupGroupPagingGetInstanceListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupDepartmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupGroupPagingGetInstanceRequest19sp1", "tags": ["services"], "documentation": "Request to get all the information of a Group Paging instance.\n        The response is either GroupGroupPagingGetInstanceResponse19sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupGroupPagingGetOriginatorListRequest", "tags": ["services"], "documentation": "Get a list of originators assigned to a paging group.\n        The response is either a\n        GroupGroupPagingGetOriginatorListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupGroupPagingGetTargetListRequest", "tags": ["services"], "documentation": "Get a list of targets assigned to a paging group.\n        The response is either a\n        GroupGroupPagingGetTargetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupGroupPagingModifyActiveInstanceListRequest", "tags": ["services"], "documentation": "Request to set the active status of Group Paging instances.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceActivation", "required": false, "array": true, "type": "ServiceActivation", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupGroupPagingModifyInstanceRequest", "tags": ["services"], "documentation": "Request to modify a Group Paging instance.\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following element is only used in AS data mode and ignored in XS data mode:\n           networkClassOfService", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "confirmationToneTimeoutSeconds", "required": false, "array": false, "type": "GroupPagingConfirmationToneTimeoutSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}, {"name": "deliverOriginatorCLIDInstead", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "originatorCLIDPrefix", "required": false, "array": false, "type": "GroupPagingOriginatorCLIDPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupGroupPagingModifyOriginatorListRequest", "tags": ["services"], "documentation": "Request to modify the originator list for a paging group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "originatorUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "GroupGroupPagingModifyTargetListRequest", "tags": ["services"], "documentation": "Request to modify the target list for a paging group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "targetUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "GroupGroupPagingTargetsCapacityGetRequest22", "tags": ["services"], "documentation": "Request the maximum number of target users per paging group configured for a group.\n        The response is either a GroupGroupPagingTargetsCapacityGetResponse22\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupGroupPagingTargetsCapacityModifyRequest22", "tags": ["services"], "documentation": "Modify the maximum number of target users per paging group configured for a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "maximumTargetUsers", "required": false, "array": false, "type": "GroupPagingMaxTargetCapacity22", "type_schema": "xs:int", "minimum": 1.0, "maximum": 294.0}]]}, {"name": "ServiceProviderGroupPagingTargetsCapacityGetRequest22", "tags": ["services"], "documentation": "Request the maximum number of target users per paging group configured for a service provider.\n        The response is either a ServiceProviderGroupPagingTargetsCapacityGetResponse22\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderGroupPagingTargetsCapacityModifyRequest22", "tags": ["services"], "documentation": "Modify the maximum number of target users per paging group configured for a service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "maximumTargetUsers", "required": false, "array": false, "type": "GroupPagingMaxTargetCapacity22", "type_schema": "xs:int", "minimum": 1.0, "maximum": 294.0}]]}, {"name": "UserGroupPagingGetListRequest", "tags": ["services"], "documentation": "Get the list of all the Paging Groups a user was assigned as an originator.\n        The response is either a UserGroupPagingGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserHotelingGuestGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned as Hoteling Guests.\n        The response is either UserHotelingGuestGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserHotelingGuestGetRequest14sp4", "tags": ["services"], "documentation": "Request the user level data associated with Hoteling Guest.\n        The response is either a UserHotelingGuestGetResponse14sp4 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserHotelingGuestModifyRequest21", "tags": ["services"], "documentation": "Modify the user level data associated with Hoteling Guest.\n        Provisioning error will be given when setting hostUserId to not nil value while Hoteling Guest feature is not active.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAssociationLimit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "associationLimitHours", "required": false, "array": false, "type": "HotelingAssociationLimitHours", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "hostUserId", "required": false, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserHotelingHostGetRequest17", "tags": ["services"], "documentation": "Request the user level data associated with Hoteling Host.\n        The response is either a UserHotelingHostGetResponse17 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserHotelingHostModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Hoteling Host.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enforceAssociationLimit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "associationLimitHours", "required": false, "array": false, "type": "HotelingAssociationLimitHours", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "accessLevel", "required": false, "array": false, "type": "HotelingHostAccessLevel", "type_schema": "xs:token", "enum": ["Enterprise", "Group"]}, {"name": "removeGuestAssociation", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupHuntGroupAddInstanceRequest20", "tags": ["services"], "documentation": "Add a Hunt Group instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in AS data mode:\n           useSystemHuntGroupCLIDSetting, use value \"true\" in XS data mode\n           includeHuntGroupNameInCLID, use value \"true\" in XS data mode", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "policy", "required": true, "array": false, "type": "HuntPolicy", "type_schema": "xs:token", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, {"name": "huntAfterNoAnswer", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "noAnswerNumberOfRings", "required": true, "array": false, "type": "HuntNoAnswerRings", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}, {"name": "forwardAfterTimeout", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forwardTimeoutSeconds", "required": true, "array": false, "type": "HuntForwardTimeoutSeconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 7200.0}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "agentUserId", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "allowCallWaitingForAgents", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSystemHuntGroupCLIDSetting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeHuntGroupNameInCLID", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableNotReachableForwarding", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "notReachableForwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "makeBusyWhenNotReachable", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowMembersToControlGroupBusy", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableGroupBusy", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "applyGroupBusyWhenTerminatingToAgent", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupHuntGroupConsolidatedAddInstanceRequest", "tags": ["services"], "documentation": "Add a Hunt Group instance to a group.\n        The domain is required in the serviceUserId.\n\n        If the phoneNumber has not been assigned to the group and addPhoneNumberToGroup is set to true,\n        it will be added to group if the command is executed by a service provider administrator or above\n        and the number is already assigned to the service provider. The command will fail otherwise.\n\n        The weight element inside the agentWeight element will only take effect if the policy element is\n        set to \"Weighted\" in the request.\n\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in AS data mode:\n           useSystemHuntGroupCLIDSetting, use value \"true\" in XS data mode\n           includeHuntGroupNameInCLID, use value \"true\" in XS data mode", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "addPhoneNumberToGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "policy", "required": true, "array": false, "type": "HuntPolicy", "type_schema": "xs:token", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, {"name": "huntAfterNoAnswer", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "noAnswerNumberOfRings", "required": true, "array": false, "type": "HuntNoAnswerRings", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}, {"name": "forwardAfterTimeout", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forwardTimeoutSeconds", "required": true, "array": false, "type": "HuntForwardTimeoutSeconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 7200.0}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "allowCallWaitingForAgents", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSystemHuntGroupCLIDSetting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeHuntGroupNameInCLID", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableNotReachableForwarding", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "notReachableForwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "makeBusyWhenNotReachable", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowMembersToControlGroupBusy", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableGroupBusy", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "applyGroupBusyWhenTerminatingToAgent", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "service", "required": false, "array": true, "type": "ConsolidatedUserServiceAssignment", "schema": [[{"name": "userServiceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"name": "authorizedQuantity", "required": false, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}]]}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "directoryNumberHuntingAgentUserIdList", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "directoryNumberHuntingUseTerminateCallToAgentFirst", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "directoryNumberHuntingUseOriginalAgentServicesForBusyAndNoAnswerCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"choice": [{"name": "agentUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "agentWeight", "required": true, "array": true, "type": "HuntAgentWeight", "schema": [[{"name": "agentUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "weight", "required": true, "array": false, "type": "HuntWeight", "type_schema": "xs:int", "minimum": 0.0, "maximum": 100.0}]]}]}]]}, {"name": "GroupHuntGroupConsolidatedDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a Hunt Group instance from a group.\n\n        If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be un-assigned from the group if the command is executed by a service provider administrator or above.\n        When set to 'Service Provider', they will be un-assigned from the group and service provider if the command is executed by a provisioning administrator or above.\n        When omitted, the number(s) will be left assigned to the group.\n        An ErrorResponse will be returned if any number cannot be unassigned because of insufficient privilege.\n\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "unassignPhoneNumbers", "required": false, "array": false, "type": "UnassignPhoneNumbersLevel", "type_schema": "xs:token", "enum": ["Group", "Service Provider"]}]]}, {"name": "GroupHuntGroupConsolidatedModifyInstanceRequest", "tags": ["services"], "documentation": "Request to modify a Hunt Group instance.\n\n        When phone numbers are un-assigned from the user, the unused numbers may be un-assigned from the group and service provider. If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be un-assigned from the group if the command is executed by a service provider administrator or above.\n        When set to 'Service Provider', they will be un-assigned from the group and service provider if the command is executed by a provisioning administrator or above.\n        When omitted, the number(s) will be left assigned to the group.\n        An ErrorResponse will be returned if any number cannot be unassigned because of insufficient privilege.\n\n        If the phoneNumber has not been assigned to the group and addPhoneNumberToGroup is set to true, it will be added to group if needed if the command is executed by a service provider administrator and above. The command will fail otherwise.\n\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in AS data mode:\n           useSystemHuntGroupCLIDSetting\n           includeHuntGroupNameInCLID", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "unassignPhoneNumbers", "required": false, "array": false, "type": "UnassignPhoneNumbersLevel", "type_schema": "xs:token", "enum": ["Group", "Service Provider"]}, {"name": "addPhoneNumberToGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "policy", "required": false, "array": false, "type": "HuntPolicy", "type_schema": "xs:token", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, {"name": "huntAfterNoAnswer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "noAnswerNumberOfRings", "required": false, "array": false, "type": "HuntNoAnswerRings", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}, {"name": "forwardAfterTimeout", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forwardTimeoutSeconds", "required": false, "array": false, "type": "HuntForwardTimeoutSeconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 7200.0}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "allowCallWaitingForAgents", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSystemHuntGroupCLIDSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeHuntGroupNameInCLID", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableNotReachableForwarding", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "notReachableForwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "makeBusyWhenNotReachable", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowMembersToControlGroupBusy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableGroupBusy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "applyGroupBusyWhenTerminatingToAgent", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "serviceList", "required": false, "array": false, "type": "ReplacementConsolidatedUserServiceAssignmentList", "schema": [[{"name": "userServiceServiceName", "required": true, "array": true, "type": "ConsolidatedUserServiceAssignment", "schema": [[{"name": "userServiceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"name": "authorizedQuantity", "required": false, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}]]}]]}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "directoryNumberHuntingAgentUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "directoryNumberHuntingUseTerminateCallToAgentFirst", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "directoryNumberHuntingUseOriginalAgentServicesForBusyAndNoAnswerCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"choice": [{"name": "agentUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "agentWeightList", "required": false, "array": false, "type": "ReplacementAgentWeightList", "schema": [[{"name": "agentWeight", "required": true, "array": true, "type": "HuntAgentWeight", "schema": [[{"name": "agentUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "weight", "required": true, "array": false, "type": "HuntWeight", "type_schema": "xs:int", "minimum": 0.0, "maximum": 100.0}]]}]]}]}]]}, {"name": "GroupHuntGroupDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a Hunt Group instance from a group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupHuntGroupGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned to a Hunt Group group.\n        Searching for users by group only makes sense when the hunt group is part of an Enterprise.\n        The response is either GroupHuntGroupGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupHuntGroupGetAvailableUserPagedSortedListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned to a Hunt Group group.\n        Searching for users by group only makes sense when the hunt group is part of an Enterprise.\n\n        A limitation to the search by DN activation exists when the Number Activation mode is set to\n        Off. In this case DNs not assigned to users are never returned by queries with the\n        \"dnActivationSearchCriteria\" included.\n\n        The response is either GroupHuntGroupGetAvailableUserPagedSortedListResponse or ErrorResponse.\n        If no sortOrder is included, the response is sorted by User Id ascending by default.\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1 by\n        default, and the responsePageSize will be set to the maximum responsePageSize by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is\n        included. Then the search criteria are logically ORed together.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupHuntGroupGetAvailableUserPagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactDnActivation", "required": false, "array": false, "type": "SearchCriteriaExactDnActivation", "schema": [[{"name": "activated", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupHuntGroupGetInstanceListRequest", "tags": ["services"], "documentation": "Get a list of Hunt Group instances within a group.\n        The response is either GroupHuntGroupGetInstanceListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupDepartmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupHuntGroupGetInstancePagedSortedListRequest", "tags": ["services"], "documentation": "Get a list of Hunt Group instances within a group.\n        The response is either GroupHuntGroupGetInstancePagedSortedListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.\n\n        The department in both the search criteria and sort by fields refer to the department to which\n        the dn belongs.\n        If no sortOrder is included, the response is sorted by User Id ascending by default.\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1 by\n        default, and the responsePageSize will be set to the maximum responsePageSize by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is\n        included. Then the search criteria are logically ORed together.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderGroupHuntGroupGetInstancePagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactDnActivation", "required": false, "array": false, "type": "SearchCriteriaExactDnActivation", "schema": [[{"name": "activated", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaServiceStatus", "required": false, "array": false, "type": "SearchCriteriaServiceStatus", "schema": [[{"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupHuntGroupGetInstanceRequest20", "tags": ["services"], "documentation": "Request to get all the information of a Hunt Group instance.\n        The response is either GroupHuntGroupGetInstanceResponse20 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupHuntGroupModifyActiveInstanceListRequest", "tags": ["services"], "documentation": "Request to set the active status of Hunt Group instances.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceActivation", "required": false, "array": true, "type": "ServiceActivation", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupHuntGroupModifyInstanceRequest", "tags": ["services"], "documentation": "Request to modify a Hunt Group instance.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in AS data mode:\n           useSystemHuntGroupCLIDSetting\n           includeHuntGroupNameInCLID\n           applyGroupBusyWhenTerminatingToAgent\n           networkClassOfService", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "policy", "required": false, "array": false, "type": "HuntPolicy", "type_schema": "xs:token", "enum": ["Circular", "Regular", "Simultaneous", "Uniform", "Weighted"]}, {"name": "huntAfterNoAnswer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "noAnswerNumberOfRings", "required": false, "array": false, "type": "HuntNoAnswerRings", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}, {"name": "forwardAfterTimeout", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forwardTimeoutSeconds", "required": false, "array": false, "type": "HuntForwardTimeoutSeconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 7200.0}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "agentUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "allowCallWaitingForAgents", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSystemHuntGroupCLIDSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeHuntGroupNameInCLID", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableNotReachableForwarding", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "notReachableForwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "makeBusyWhenNotReachable", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowMembersToControlGroupBusy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableGroupBusy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "applyGroupBusyWhenTerminatingToAgent", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupHuntGroupModifyInstanceWeightedCallDistributionRequest", "tags": ["services"], "documentation": "Request to modify the weighted call distribution of a Hunt Group instance.\n        The response is either SuccessResponse or ErrorResponse.\n        NOTE: Prior to release 14, any agents who were not in the list kept their\n        existing weight setting. In release 14, any agents who are not in the list\n        will have their weight set to 0.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "agentWeight", "required": false, "array": true, "type": "HuntAgentWeight", "schema": [[{"name": "agentUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "weight", "required": true, "array": false, "type": "HuntWeight", "type_schema": "xs:int", "minimum": 0.0, "maximum": 100.0}]]}]]}, {"name": "SystemHuntGroupGetRequest21", "tags": ["services"], "documentation": "Request the system level data associated with Hunt Group.\n        The response is either a SystemHuntGroupGetResponse21 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemHuntGroupModifyRequest21", "tags": ["services"], "documentation": "Modify the system level data associated with Hunt Group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "removeHuntGroupNameFromCLID", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "uniformCallDistributionPolicyScope", "required": false, "array": false, "type": "HuntGroupUniformCallDistributionPolicyScope", "type_schema": "xs:token", "enum": ["Agent", "Hunt Group"]}, {"name": "allowAgentDeviceInitiatedForward", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderInCallServiceActivationGetRequest17", "tags": ["services"], "documentation": "Request the service provider's DTMF based in-call service activation trigger attributes.The response is either a ServiceProviderInCallServiceActivationGetResponse17 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderInCallServiceActivationModifyRequest17", "tags": ["services"], "documentation": "Modifies the service provider's DTMF based in-call service activation trigger attributes.The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "flashActivationDigits", "required": false, "array": false, "type": "InCallServiceActivationDigits", "type_schema": "xs:token", "minLength": 1, "maxLength": 8}, {"name": "callTransferActivationDigits", "required": false, "array": false, "type": "InCallServiceActivationDigits", "type_schema": "xs:token", "minLength": 1, "maxLength": 8}]]}, {"name": "SystemInCallServiceActivationGetRequest17", "tags": ["services"], "documentation": "Request the system's DTMF based in-call service activation trigger attributes. The response is either a SystemInCallServiceActivationGetResponse17 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemInCallServiceActivationModifyRequest17", "tags": ["services"], "documentation": "Modifies the system's DTMF based in-call service activation trigger  attributes.The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "defaultFlashActivationDigits", "required": false, "array": false, "type": "InCallServiceActivationDigits", "type_schema": "xs:token", "minLength": 1, "maxLength": 8}, {"name": "defaultCallTransferActivationDigits", "required": false, "array": false, "type": "InCallServiceActivationDigits", "type_schema": "xs:token", "minLength": 1, "maxLength": 8}]]}, {"name": "UserInCallServiceActivationGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with In-Call Service Activation.\n        The response is either a UserInCallServiceActivationGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserInCallServiceActivationModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with In-Call Service Activation.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupIncomingCallingPlanGetListRequest", "tags": ["services"], "documentation": "Request the group's incoming calling plan settings.\n        The response is either a GroupIncomingCallingPlanGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupIncomingCallingPlanModifyListRequest", "tags": ["services"], "documentation": "Change the group's incoming calling plan settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupPermissions", "required": false, "array": false, "type": "IncomingCallingPlanPermissionsModify", "schema": [[{"name": "allowFromWithinGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowFromOutsideGroup", "required": false, "array": false, "type": "IncomingCallingPlanOutsideCallPermission", "type_schema": "xs:token", "enum": ["Allow", "Allow Only If Redirected From Another User", "Disallow"]}, {"name": "allowCollectCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "digitPatternPermission", "required": false, "array": true, "type": "IncomingCallingPlanDigitPatternPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "allow", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "departmentPermissions", "required": false, "array": true, "type": "IncomingCallingPlanDepartmentPermissionsModify", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "allowFromWithinGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowFromOutsideGroup", "required": false, "array": false, "type": "IncomingCallingPlanOutsideCallPermission", "type_schema": "xs:token", "enum": ["Allow", "Allow Only If Redirected From Another User", "Disallow"]}, {"name": "allowCollectCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "digitPatternPermission", "required": false, "array": true, "type": "IncomingCallingPlanDigitPatternPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "allow", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}]]}, {"name": "UserIncomingCallingPlanGetRequest", "tags": ["services"], "documentation": "Request the user's incoming calling plan settings.\n        The response is either a UserIncomingCallingPlanGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserIncomingCallingPlanModifyRequest", "tags": ["services"], "documentation": "Change the user's incoming calling plan settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userPermissions", "required": false, "array": false, "type": "IncomingCallingPlanPermissionsModify", "schema": [[{"name": "allowFromWithinGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowFromOutsideGroup", "required": false, "array": false, "type": "IncomingCallingPlanOutsideCallPermission", "type_schema": "xs:token", "enum": ["Allow", "Allow Only If Redirected From Another User", "Disallow"]}, {"name": "allowCollectCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "digitPatternPermission", "required": false, "array": true, "type": "IncomingCallingPlanDigitPatternPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "allow", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}]]}, {"name": "UserINIntegrationGetRequest", "tags": ["services"], "documentation": "Request to get the user level IN Integration service attributes\n        Response is either UserINIntegrationGetResponse or ErrorResponse", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserINIntegrationModifyRequest", "tags": ["services"], "documentation": "Request to modify the user level IN Integration service attributes\n        Response is either SuccessResponse or ErrorResponse", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "originatingServiceKey", "required": false, "array": false, "type": "MobilityManagerServiceKey", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999.0}, {"name": "terminatingServiceKey", "required": false, "array": false, "type": "MobilityManagerServiceKey", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999.0}]]}, {"name": "GroupInstantGroupCallAddInstanceRequest14", "tags": ["services"], "documentation": "Request to add an Instant Group Call service instance to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "destinationPhoneNumber", "required": false, "array": true, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isAnswerTimeoutEnabled", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "answerTimeoutMinutes", "required": false, "array": false, "type": "InstantGroupCallAnswerTimeoutMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupInstantGroupCallDeleteInstanceRequest", "tags": ["services"], "documentation": "Request to delete an Instant Group Call service instance from a group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupInstantGroupCallGetInstanceListRequest", "tags": ["services"], "documentation": "Request to get a list of Instant Group Call service instances within a group.\n        The response is either GroupInstantGroupCallGetInstanceListResponse or ErrorResponse.\n        It is possible to get the service instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupDepartmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupInstantGroupCallGetInstanceRequest19sp1", "tags": ["services"], "documentation": "Request to get all the information of an Instant Group Call service instance.\n        The response is either GroupInstantGroupCallGetInstanceResponse19sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupInstantGroupCallModifyActiveInstanceListRequest", "tags": ["services"], "documentation": "Request to set the active status of Instant Group Call service instances.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceActivation", "required": false, "array": true, "type": "ServiceActivation", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupInstantGroupCallModifyInstanceRequest", "tags": ["services"], "documentation": "Request to modify an Instant Group Call service instance.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "destinationPhoneNumberList", "required": false, "array": false, "type": "ReplacementOutgoingDNorSIPURIList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "isAnswerTimeoutEnabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "answerTimeoutMinutes", "required": false, "array": false, "type": "InstantGroupCallAnswerTimeoutMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "GroupIntegratedIMPGetRequest21sp1", "tags": ["services"], "documentation": "Get the Integrated IMP service attributes for the group.\n        The response is either GroupIntegratedIMPGetResponse21sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupIntegratedIMPModifyRequest", "tags": ["services"], "documentation": "Modify the Integrated IMP service attributes for the group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useServiceProviderSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceDomain", "required": false, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ResellerIntegratedIMPGetRequest22", "tags": ["services"], "documentation": "Get the Integrated IMP service attributes for the reseller.\n        The response is either ResellerIntegratedIMPGetResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}, {"name": "ResellerIntegratedIMPModifyRequest", "tags": ["services"], "documentation": "Modify the Integrated IMP service attributes for the reseller.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "useSystemServiceDomain", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceDomain", "required": false, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "servicePort", "required": false, "array": false, "type": "Port", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65535.0}, {"name": "useSystemMessagingServer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "provisioningUrl", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "provisioningUserId", "required": false, "array": false, "type": "ProvisioningBroadCloudAuthenticationUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "provisioningPassword", "required": false, "array": false, "type": "ProvisioningBroadCloudAuthenticationPassword", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "boshURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "defaultImpIdType", "required": false, "array": false, "type": "IntegratedIMPUserIDType", "type_schema": "xs:token", "enum": ["Primary", "Alternate"]}]]}, {"name": "ServiceProviderIntegratedIMPGetRequest22", "tags": ["services"], "documentation": "Get the Integrated IMP service attributes for the service provider.\n        The response is either ServiceProviderIntegratedIMPGetResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderIntegratedIMPModifyRequest", "tags": ["services"], "documentation": "Modify the Integrated IMP service attributes for the service provider.\n        The response is either a SuccessResponse or an ErrorResponse.\n        If the service provider is within a reseller, useSystemServiceDomain means using reseller level service\n        domain setting. And useSystemMessagingServer means using the reseller level messaging server setting.\n\n        The following elements are only used in AS data mode:\n          servicePort\n          useSystemMessagingServer\n          provisioningUrl\n          provisioningUserId\n          provisioningPassword\n          boshURL\n          defaultImpIdType\n          useResellerIMPIdSetting\n\n        The element useResellerIMPIdSetting is only applicable for a service provider within a reseller.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useSystemServiceDomain", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceDomain", "required": false, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "servicePort", "required": false, "array": false, "type": "Port", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65535.0}, {"name": "useSystemMessagingServer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "provisioningUrl", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "provisioningUserId", "required": false, "array": false, "type": "ProvisioningBroadCloudAuthenticationUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "provisioningPassword", "required": false, "array": false, "type": "ProvisioningBroadCloudAuthenticationPassword", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "boshURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"choice": [{"name": "defaultImpIdType", "required": true, "array": false, "type": "IntegratedIMPUserIDType", "type_schema": "xs:token", "enum": ["Primary", "Alternate"]}, {"name": "useResellerIMPIdSetting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]}]]}, {"name": "SystemIntegratedIMPGetRequest21", "tags": ["services"], "documentation": "Get the system Integrated IMP service attributes.\n        The response is either SystemIntegratedIMPGetResponse19 or ErrorResponse.", "type": "core:OCIRequest", "schema": []}, {"name": "SystemIntegratedIMPModifyRequest", "tags": ["services"], "documentation": "Modify the system Integrated IMP service attributes.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode:\n          boshURL\n          allowImpPasswordRetrieval", "type": "core:OCIRequest", "schema": [[{"name": "serviceDomain", "required": false, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "servicePort", "required": false, "array": false, "type": "Port", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65535.0}, {"name": "addServiceProviderInIMPUserId", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "boshURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "allowImpPasswordRetrieval", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserIntegratedIMPGeneratePasswordRequest", "tags": ["services"], "documentation": "Generate a new IMP password for the user. The new generated password is synchronized to BroadCloud/service Messaging Server.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserIntegratedIMPGetRequest21sp1", "tags": ["services"], "documentation": "Get the Integrated IMP specific service attribute for the user.\n        The response is either UserIMPGetResponse21sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserIntegratedIMPModifyRequest", "tags": ["services"], "documentation": "Modifies the Integrated IMP specific service attribute for the user.\n        The response is either a SuccessResponse or an ErrorResponse.\n        If the impId element is set in the request, the impId element does\n        not take effect on the service for the user unless the request also\n        has the isActive element set to true to turn the service from off\n        to on.\n        If impId is based on an alternate user ID and the impId and userId\n        are identical, isAlternateImpId should be set to true to determine\n        that impId is the user's alternate ID.\n        The following elements are only used in AS data mode and ignored in\n        XS data mode:\n          impId\n          isAlternateImpId", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "impId", "required": false, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "isAlternateImpId", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupInterceptGroupGetRequest21sp1", "tags": ["services"], "documentation": "Get the group's intercept group service settings.\n        The response is either a GroupInterceptGroupGetResponse21sp1 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupInterceptGroupModifyRequest21sp1", "tags": ["services"], "documentation": "Modify the group's intercept group service settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          exemptInboundMobilityCalls\n          exemptOutboundMobilityCalls\n          disableParallelRingingToNetworkLocations", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "announcementSelection", "required": false, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "inboundCallMode", "required": false, "array": false, "type": "InterceptInboundCall", "type_schema": "xs:token", "enum": ["Intercept All", "Allow All", "Allow System Dns"]}, {"name": "alternateBlockingAnnouncement", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "exemptInboundMobilityCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disableParallelRingingToNetworkLocations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "routeToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "playNewPhoneNumber", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "newPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "transferOnZeroToPhoneNumber", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "outboundCallMode", "required": false, "array": false, "type": "InterceptOutboundCall", "type_schema": "xs:token", "enum": ["Block All", "Allow Outbound Local Calls", "Allow Outbound Enterprise And Group Calls"]}, {"name": "exemptOutboundMobilityCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "rerouteOutboundCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "outboundReroutePhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "SystemInterceptUserAddDnListRequest", "tags": ["services"], "documentation": "Request to add an Intercept User number(s) to the system.\n          The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "interceptDNList", "required": true, "array": true, "type": "InterceptDNListEntry", "schema": [[{"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "InterceptPhoneNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "SystemInterceptUserDeleteDnListRequest", "tags": ["services"], "documentation": "Request to delete an Intercept User number(s) from the system.\n         The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "phoneNumbers", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "SystemInterceptUserGetDnListRequest", "tags": ["services"], "documentation": "Request to get a list of Intercept User dns defined in the system.\n          The response is either a SystemInterceptUserGetDnListResponse\n          or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemInterceptUserGetRequest", "tags": ["services"], "documentation": "Get the system-level intercept user service settings.\n        The response is either a SystemInterceptUserGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemInterceptUserModifyDnRequest", "tags": ["services"], "documentation": "Request to modify a Intercept User number's description in the system.\n          The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "InterceptPhoneNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemInterceptUserModifyRequest", "tags": ["services"], "documentation": "Modify the system-level intercept user service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "emergencyAndRepairIntercept", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserInterceptUserGetRequest21sp1", "tags": ["services"], "documentation": "Get the user's intercept user service settings.\n        The response is either a UserInterceptUserGetResponse21sp1 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserInterceptUserModifyRequest21sp1", "tags": ["services"], "documentation": "Modify the user's intercept user service settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          exemptInboundMobilityCalls\n          exemptOutboundMobilityCalls\n          disableParallelRingingToNetworkLocations", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "announcementSelection", "required": false, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "audioFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "inboundCallMode", "required": false, "array": false, "type": "InterceptInboundCall", "type_schema": "xs:token", "enum": ["Intercept All", "Allow All", "Allow System Dns"]}, {"name": "alternateBlockingAnnouncement", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "exemptInboundMobilityCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disableParallelRingingToNetworkLocations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "routeToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "playNewPhoneNumber", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "newPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "transferOnZeroToPhoneNumber", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "outboundCallMode", "required": false, "array": false, "type": "InterceptOutboundCall", "type_schema": "xs:token", "enum": ["Block All", "Allow Outbound Local Calls", "Allow Outbound Enterprise And Group Calls"]}, {"name": "exemptOutboundMobilityCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "rerouteOutboundCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "outboundReroutePhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserInternalCallingLineIDDeliveryGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Internal Calling Line ID Delivery.\n        The response is either a UserInternalCallingLineIDDeliveryGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserInternalCallingLineIDDeliveryModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Internal Calling Line ID Delivery.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupInventoryReportGetRequest", "tags": ["services"], "documentation": "Request the group's inventory report.\n        The response is either a GroupInventoryReportGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "includeUsers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeServices", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeDns", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeAccessDevices", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeDepartments", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "reportDeliveryEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemInventoryReportGetRequest", "tags": ["services"], "documentation": "Request the system level data associated with Inventory Report.\n        The response is either a SystemInventoryReportGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemInventoryReportModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Inventory Report.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "defaultFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemLegacyAutomaticCallbackGetLineTypeListRequest", "tags": ["services"], "documentation": "Request the system's legacy automatic callback line type settings.\n        The response is either a SystemLegacyAutomaticCallbackGetTypeLineListResponse or\n        an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemLegacyAutomaticCallbackGetRequest", "tags": ["services"], "documentation": "Request the system's legacy automatic callback attributes.\n        The response is either a SystemLegacyAutomaticCallbackGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemLegacyAutomaticCallbackModifyLineTypeRequest", "tags": ["services"], "documentation": "Modifies the system's legacy automatic callback line type attributes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "lineType", "required": true, "array": false, "type": "LegacyAutomaticCallbackLineType", "type_schema": "xs:token", "enum": ["Individual", "Coin", "Series", "Hunt", "Unassigned", "PBX", "Multiparty", "Choke", "Oos", "Nonspecific", "Telecampus", "ISDN", "Telekibutz", "Spare"]}, {"name": "matchAction", "required": false, "array": false, "type": "LegacyAutomaticCallbackLineMatchAction", "type_schema": "xs:token", "enum": ["Accept", "Deny"]}, {"name": "noMatchAction", "required": false, "array": false, "type": "LegacyAutomaticCallbackLineMatchAction", "type_schema": "xs:token", "enum": ["Accept", "Deny"]}]]}, {"name": "SystemLegacyAutomaticCallbackModifyRequest", "tags": ["services"], "documentation": "Modifies the system's legacy automatic callback attributes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "maxMonitorsPerOriginator", "required": false, "array": false, "type": "LegacyAutomaticCallbackMaxMonitorsPerOriginator", "type_schema": "xs:int", "minimum": 1.0, "maximum": 30.0}, {"name": "maxMonitorsPerTerminator", "required": false, "array": false, "type": "LegacyAutomaticCallbackMaxMonitorsPerTerminator", "type_schema": "xs:int", "minimum": 1.0, "maximum": 30.0}, {"name": "t2Minutes", "required": false, "array": false, "type": "LegacyAutomaticCallbackT2Minutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}, {"name": "t4Seconds", "required": false, "array": false, "type": "LegacyAutomaticCallbackT4Seconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 15.0}, {"name": "t5Seconds", "required": false, "array": false, "type": "LegacyAutomaticCallbackT5Seconds", "type_schema": "xs:int", "minimum": 2.0, "maximum": 10.0}, {"name": "t6Minutes", "required": false, "array": false, "type": "LegacyAutomaticCallbackT6Minutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "t7Minutes", "required": false, "array": false, "type": "LegacyAutomaticCallbackT7Minutes", "type_schema": "xs:int", "minimum": 5.0, "maximum": 180.0}, {"name": "t8Seconds", "required": false, "array": false, "type": "LegacyAutomaticCallbackT8Seconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 120.0}, {"name": "tRingSeconds", "required": false, "array": false, "type": "LegacyAutomaticCallbackTRingSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 120.0}, {"name": "t10OMinutes", "required": false, "array": false, "type": "LegacyAutomaticCallbackT10OMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 120.0}, {"name": "t10TMinutes", "required": false, "array": false, "type": "LegacyAutomaticCallbackT10TMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 120.0}]]}, {"name": "UserLegacyAutomaticCallbackGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Legacy Automatic Callback.\n        The response is either a UserLegacyAutomaticCallbackGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserLegacyAutomaticCallbackModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Legacy Automatic Callback.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SystemLocationBasedCallingRestrictionsGetRequest17sp3", "tags": ["services"], "documentation": "Gets system level the Location Based Calling Restrictions attributes.\n        The response is either a SystemLocationBasedCallingRestrictionsGetResponse17sp3 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemLocationBasedCallingRestrictionsModifyRequest", "tags": ["services"], "documentation": "Modifies the system level Location Based Calling Restriction attributes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "physicalLocationIndicator", "required": false, "array": false, "type": "PhysicalLocationIndicator", "type_schema": "xs:token", "enum": ["CI", "LAC-CI", "PANI", "Disregard Zones"]}, {"name": "enforceMscValidation", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableOfficeZoneAnnouncement", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enhanceOfficeZone", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderMaliciousCallTraceGetRequest", "tags": ["services"], "documentation": "Get the service provider's Malicious Call Trace settings.\n        The response is either a ServiceProviderMaliciousCallTraceGetResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderMaliciousCallTraceModifyRequest", "tags": ["services"], "documentation": "Modify the service provider's Malicious Call Trace settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useSystemPlayMCTWarningAnnouncement", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "playMCTWarningAnnouncement", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SystemMaliciousCallTraceGetRequest", "tags": ["services"], "documentation": "Get Malicious Call Trace system parameters and the list of users that use the\n        Malicious Call Trace feature.\n        The response is either a SystemMaliciousCallTraceGetResponse or\n        an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemMaliciousCallTraceModifyRequest", "tags": ["services"], "documentation": "Modify a Malicious Call Trace system parameter.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "playMCTWarningAnnouncement", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserMaliciousCallTraceGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Malicious Call Trace.\n        The response is either a UserMaliciousCallTraceGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserMaliciousCallTraceModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Malicious Call Trace.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "traceTypeSelection", "required": false, "array": false, "type": "MaliciousCallTraceCallTypeSelection", "type_schema": "xs:token", "enum": ["All Incoming", "Answered Incoming", "All Incoming And Outgoing"]}, {"name": "traceForTimePeriod", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "traceTimePeriod", "required": false, "array": false, "type": "MaliciousCallTraceTimePeriod", "schema": [[{"name": "startDateTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "stopDateTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}]]}]]}, {"name": "GroupMeetMeConferencingAddInstanceRequest19", "tags": ["services"], "documentation": "Add a Meet-Me Conferencing bridge to a group.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "allocatedPorts", "required": true, "array": false, "type": "MeetMeConferencingConferencePorts", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 0.0, "maximum": 999999.0, "type_schema": "xs:int"}]}]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "securityPinLength", "required": true, "array": false, "type": "MeetMeConferencingConferenceSecurityPinLength", "type_schema": "xs:int", "minimum": 4.0, "maximum": 12.0}, {"name": "allowIndividualOutDial", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "operatorNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceHostUserId", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "playWarningPrompt", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "conferenceEndWarningPromptMinutes", "required": true, "array": false, "type": "MeetMeConferencingConferenceEndWarningPromptMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 15.0}, {"name": "enableMaxConferenceDuration", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxConferenceDurationMinutes", "required": true, "array": false, "type": "MeetMeConferencingConferenceDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "MeetMeConferencingConferenceDurationMinutes", "type_schema": "xs:int"}]]}, {"name": "maxScheduledConferenceDurationMinutes", "required": true, "array": false, "type": "MeetMeConferencingConferenceDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "MeetMeConferencingConferenceDurationMinutes", "type_schema": "xs:int"}]]}]]}, {"name": "GroupMeetMeConferencingDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a Meet-Me Conferencing bridge from a group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupMeetMeConferencingGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned to a Meet-Me Conferencing bridge.\n        Searching for users by group only makes sense when the Meet-Me Conferencing is part of an Enterprise.\n        The response is either GroupMeetMeConferencingGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupMeetMeConferencingGetInstanceListRequest", "tags": ["services"], "documentation": "Get a list of Meet-Me Conferencing instances within a group.\n        The response is either GroupMeetMeConferencingGetInstanceListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "departmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupMeetMeConferencingGetInstanceRequest19sp1", "tags": ["services"], "documentation": "Request to get all the information of a Meet-Me Conferencing bridge.\n        The response is either GroupMeetMeConferencingGetInstanceResponse19sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupMeetMeConferencingGetRequest", "tags": ["services"], "documentation": "Request the group level data associated with Meet-Me Conferencing functions.\n        The response is either a GroupMeetMeConferencingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupMeetMeConferencingModifyActiveInstanceListRequest", "tags": ["services"], "documentation": "Request to set the active status of Meet-Me Conferencing instances.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceActivation", "required": false, "array": true, "type": "ServiceActivation", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupMeetMeConferencingModifyInstanceRequest", "tags": ["services"], "documentation": "Request to modify a Meet-Me Conferencing bridge.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "allocatedPorts", "required": false, "array": false, "type": "MeetMeConferencingConferencePorts", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 0.0, "maximum": 999999.0, "type_schema": "xs:int"}]}]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "securityPinLength", "required": false, "array": false, "type": "MeetMeConferencingConferenceSecurityPinLength", "type_schema": "xs:int", "minimum": 4.0, "maximum": 12.0}, {"name": "allowIndividualOutDial", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "operatorNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceHostUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "playWarningPrompt", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "conferenceEndWarningPromptMinutes", "required": false, "array": false, "type": "MeetMeConferencingConferenceEndWarningPromptMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 15.0}, {"name": "enableMaxConferenceDuration", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxConferenceDurationMinutes", "required": false, "array": false, "type": "MeetMeConferencingConferenceDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "MeetMeConferencingConferenceDurationMinutes", "type_schema": "xs:int"}]]}, {"name": "maxScheduledConferenceDurationMinutes", "required": false, "array": false, "type": "MeetMeConferencingConferenceDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "MeetMeConferencingConferenceDurationMinutes", "type_schema": "xs:int"}]]}]]}, {"name": "GroupMeetMeConferencingModifyRequest", "tags": ["services"], "documentation": "Modify the group level data associated with Meet-Me Conferencing functions.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "allocatedPorts", "required": false, "array": false, "type": "MeetMeConferencingConferencePorts", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 0.0, "maximum": 999999.0, "type_schema": "xs:int"}]}]}]]}, {"name": "ResellerMeetMeConferencingGetRequest22", "tags": ["services"], "documentation": "Request the reseller level data associated with Meet-Me Conferencing functions.\n        The response is either a ResellerMeetMeConferencingGetResponse22 or an\n        ErrorResponse.\n        The following data elements are only returned for System and Provisioning Administrators:\n\t\tmaxAllocatedPorts.\n\t\tThe following data elements are only returned for System and Provisioning Administrators and AS Mode Only:\n\t\tdisableUnlimitedMeetMePorts,\n\t\tenableMaxAllocatedPorts.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}, {"name": "ResellerMeetMeConferencingModifyRequest", "tags": ["services"], "documentation": "Modify the reseller level data associated with Meet-Me Conferencing functions.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following data elements are only modified for System and Provisioning Administrators:\n\t\tmaxAllocatedPorts.\n\t\tThe following data elements are only modified for System and Provisioning Administrators and AS Mode only:\n\t\tdisableUnlimitedMeetMePorts,\n\t\tenableMaxAllocatedPorts.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "conferenceFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "maxAllocatedPorts", "required": false, "array": false, "type": "ResellerMeetMeConferencingConferencePorts", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999999.0}, {"name": "disableUnlimitedMeetMePorts", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableMaxAllocatedPorts", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderMeetMeConferencingGetRequest", "tags": ["services"], "documentation": "Request the service provider/enterprise level data associated with Meet-Me Conferencing functions.\n        The response is either a ServiceProviderMeetMeConferencingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderMeetMeConferencingModifyRequest", "tags": ["services"], "documentation": "Modify the service provider/enterprise level data associated with Meet-Me Conferencing functions.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "allocatedPorts", "required": false, "array": false, "type": "MeetMeConferencingConferencePorts", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 0.0, "maximum": 999999.0, "type_schema": "xs:int"}]}]}]]}, {"name": "SystemMeetMeConferencingGetRequest19", "tags": ["services"], "documentation": "Request the system level data associated with Meet-Me Conferencing functions.\n        The response is either a SystemMeetMeConferencingGetResponse19 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemMeetMeConferencingModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Meet-Me Conferencing.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "conferenceIdLength", "required": false, "array": false, "type": "MeetMeConferencingConferencePassCodeLength", "type_schema": "xs:int", "minimum": 6.0, "maximum": 12.0}, {"name": "moderatorPinLength", "required": false, "array": false, "type": "MeetMeConferencingConferencePassCodeLength", "type_schema": "xs:int", "minimum": 6.0, "maximum": 12.0}, {"name": "enableConferenceEndDateRestriction", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "conferenceEndDateRestrictionMonths", "required": false, "array": false, "type": "MeetMeConferencingConferenceEndDateRestrictionMonths", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "deleteExpiredConferencesAfterHoldPeriod", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "expiredConferenceHoldPeriodDays", "required": false, "array": false, "type": "MeetMeConferencingExpiredConferenceHoldPeriodDays", "type_schema": "xs:int", "enum": ["1", "2", "3", "4", "5", "6", "7", "15", "30", "60"]}, {"name": "recordingWebAppURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "recordingFileFormat", "required": false, "array": false, "type": "MeetMeConferencingRecordingFileFormat", "type_schema": "xs:token", "enum": ["WAV", "MP3"]}, {"name": "terminateAfterGracePeriod", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "conferenceGracePeriodMinutes", "required": false, "array": false, "type": "MeetMeConferencingConferenceDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "MeetMeConferencingConferenceDurationMinutes", "type_schema": "xs:int"}]]}, {"name": "conferenceParticipantEarlyEntryMinutes", "required": false, "array": false, "type": "MeetMeConferencingParticipantEarlyEntryMinutes", "type_schema": "xs:int", "minimum": 0.0, "maximum": 15.0}, {"name": "enableConferenceExpiryNotification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableActiveConferenceNotification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "conferenceFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "conferenceActiveTalkerRefreshIntervalSeconds", "required": false, "array": false, "type": "MeetMeConferencingActiveTalkerRefreshIntervalSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 5.0}]]}, {"name": "UserMeetMeConferencingAddConferenceRequest23", "tags": ["services"], "documentation": "Add a Meet-Me conference.\n        The response is either UserMeetMeConferencingAddConferenceResponse23 or ErrorResponse.\n        The startTime element is adjusted to the first occurrence of the recurrent schedule that comes at or after the startTime.\n        The startTime, endTime and recurrence information for a conferenceSchedule element will be adjusted to the user Host time zone.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "bridgeId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "title", "required": true, "array": false, "type": "MeetMeConferencingConferenceTitle", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "estimatedParticipants", "required": false, "array": false, "type": "MeetMeConferencingNumberOfParticipants", "type_schema": "xs:int", "minimum": 1.0, "maximum": 294.0}, {"name": "accountCode", "required": false, "array": false, "type": "MeetMeConferencingConferenceAccountCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "muteAllAttendeesOnEntry", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "endConferenceOnModeratorExit", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "moderatorRequired", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "requireSecurityPin", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowUniqueIdentifier", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "attendeeNotification", "required": true, "array": false, "type": "MeetMeConferencingConferenceAttendeeNotification", "type_schema": "xs:token", "enum": ["Play Tone", "Play Recorded Name", "No Notification"]}, {"name": "conferenceSchedule", "required": true, "array": false, "type": "MeetMeConferencingConferenceSchedule", "schema": [[{"choice": [{"name": "scheduleReservationless", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "endTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}]]}, {"name": "scheduleOneTime", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "duration", "required": true, "array": false, "type": "MeetMeConferencingConferenceDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "MeetMeConferencingConferenceDurationMinutes", "type_schema": "xs:int"}]]}]]}, {"name": "scheduleRecurring", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "duration", "required": true, "array": false, "type": "MeetMeConferencingConferenceDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "MeetMeConferencingConferenceDurationMinutes", "type_schema": "xs:int"}]]}, {"name": "recurrence", "required": true, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}]]}]}]]}, {"name": "allowParticipantUnmuteInAutoLectureMode", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"choice": [{"name": "restrictParticipants", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxParticipants", "required": true, "array": false, "type": "MeetMeConferencingNumberOfParticipants", "type_schema": "xs:int", "minimum": 1.0, "maximum": 294.0}]}]]}, {"name": "UserMeetMeConferencingDeleteConferenceListRequest", "tags": ["services"], "documentation": "Request to delete one or more conferences which are owned by the user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceKey", "required": true, "array": true, "type": "MeetMeConferencingConferenceKey", "schema": [[{"name": "bridgeId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceId", "required": true, "array": false, "type": "MeetMeConferencingConferencePassCode", "type_schema": "xs:token", "minLength": 6, "maxLength": 12}]]}]]}, {"name": "UserMeetMeConferencingDeleteConferenceRecordingListRequest", "tags": ["services"], "documentation": "Request to delete one or more conference recordings owned by the user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "recordingKey", "required": true, "array": true, "type": "MeetMeConferencingConferenceRecordingKey", "schema": [[{"name": "bridgeId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceId", "required": true, "array": false, "type": "MeetMeConferencingConferencePassCode", "type_schema": "xs:token", "minLength": 6, "maxLength": 12}, {"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}]]}]]}, {"name": "UserMeetMeConferencingGetAvailableDelegateListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned as a delegate to a Meet-Me Conference.\n        Searching for users, who are host on a Meet-Me Conferencing bridge.\n        The response is either UserMeetMeConferencingGetAvailableDelegateListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceKey", "required": true, "array": false, "type": "MeetMeConferencingConferenceKey", "schema": [[{"name": "bridgeId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceId", "required": true, "array": false, "type": "MeetMeConferencingConferencePassCode", "type_schema": "xs:token", "minLength": 6, "maxLength": 12}]]}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}]]}, {"name": "UserMeetMeConferencingGetBridgeListRequest", "tags": ["services"], "documentation": "Get the list of Meet-Me Conferencing bridges for which the user is a host.\n        The response is either UserMeetMeConferencingGetBridgeListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserMeetMeConferencingGetConferenceDelegateListRequest", "tags": ["services"], "documentation": "Get the conference delegates for this conference.\n        The response is either UserMeetMeConferencingGetConferenceDelegateListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceKey", "required": true, "array": false, "type": "MeetMeConferencingConferenceKey", "schema": [[{"name": "bridgeId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceId", "required": true, "array": false, "type": "MeetMeConferencingConferencePassCode", "type_schema": "xs:token", "minLength": 6, "maxLength": 12}]]}]]}, {"name": "UserMeetMeConferencingGetConferenceGreetingRequest20", "tags": ["services"], "documentation": "Get the information of a conference custom greeting.\n        The response is either UserMeetMeConferencingGetConferenceGreetingResponse20 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceKey", "required": true, "array": false, "type": "MeetMeConferencingConferenceKey", "schema": [[{"name": "bridgeId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceId", "required": true, "array": false, "type": "MeetMeConferencingConferencePassCode", "type_schema": "xs:token", "minLength": 6, "maxLength": 12}]]}]]}, {"name": "UserMeetMeConferencingGetConferenceListRequest", "tags": ["services"], "documentation": "Get the list of all conferences for which user is a host or a delegate.\n        The response is either UserMeetMeConferencingGetConferenceListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "bridgeId", "required": false, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserMeetMeConferencingGetConferenceRecordingListRequest", "tags": ["services"], "documentation": "Get the list of recordings of the conferences owned by the host.\n        The response is either UserMeetMeConferencingGetConferenceRecordingListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserMeetMeConferencingGetConferenceRequest23", "tags": ["services"], "documentation": "Get the information of a conference owned by the user.\n        The response is either UserMeetMeConferencingGetConferenceResponse23 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceKey", "required": true, "array": false, "type": "MeetMeConferencingConferenceKey", "schema": [[{"name": "bridgeId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceId", "required": true, "array": false, "type": "MeetMeConferencingConferencePassCode", "type_schema": "xs:token", "minLength": 6, "maxLength": 12}]]}]]}, {"name": "UserMeetMeConferencingModifyConferenceDelegateListRequest", "tags": ["services"], "documentation": "Modify the existing conference delegates list.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceKey", "required": true, "array": false, "type": "MeetMeConferencingConferenceKey", "schema": [[{"name": "bridgeId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceId", "required": true, "array": false, "type": "MeetMeConferencingConferencePassCode", "type_schema": "xs:token", "minLength": 6, "maxLength": 12}]]}, {"name": "conferenceDelegateUserList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "UserMeetMeConferencingModifyConferenceGreetingRequest20", "tags": ["services"], "documentation": "Modify an existing custom greeting audio file.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceKey", "required": true, "array": false, "type": "MeetMeConferencingConferenceKey", "schema": [[{"name": "bridgeId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceId", "required": true, "array": false, "type": "MeetMeConferencingConferencePassCode", "type_schema": "xs:token", "minLength": 6, "maxLength": 12}]]}, {"name": "playEntranceGreeting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "entranceGreetingFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}]]}, {"name": "UserMeetMeConferencingModifyConferenceRequest", "tags": ["services"], "documentation": "Modify an existing conference.\n        The response is either SuccessResponse or ErrorResponse.\n        The startTime element is adjusted to the first occurrence of the recurrent schedule that comes at or after the startTime.\n        The startTime, endTime and recurrence information for a conferenceSchedule element will be adjusted to the user Host time zone.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceKey", "required": true, "array": false, "type": "MeetMeConferencingConferenceKey", "schema": [[{"name": "bridgeId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "conferenceId", "required": true, "array": false, "type": "MeetMeConferencingConferencePassCode", "type_schema": "xs:token", "minLength": 6, "maxLength": 12}]]}, {"name": "title", "required": false, "array": false, "type": "MeetMeConferencingConferenceTitle", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "estimatedParticipants", "required": false, "array": false, "type": "MeetMeConferencingNumberOfParticipants", "type_schema": "xs:int", "minimum": 1.0, "maximum": 294.0}, {"name": "accountCode", "required": false, "array": false, "type": "MeetMeConferencingConferenceAccountCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "muteAllAttendeesOnEntry", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "endConferenceOnModeratorExit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "moderatorRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "requireSecurityPin", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowUniqueIdentifier", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "attendeeNotification", "required": false, "array": false, "type": "MeetMeConferencingConferenceAttendeeNotification", "type_schema": "xs:token", "enum": ["Play Tone", "Play Recorded Name", "No Notification"]}, {"name": "conferenceSchedule", "required": false, "array": false, "type": "MeetMeConferencingConferenceSchedule", "schema": [[{"choice": [{"name": "scheduleReservationless", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "endTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}]]}, {"name": "scheduleOneTime", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "duration", "required": true, "array": false, "type": "MeetMeConferencingConferenceDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "MeetMeConferencingConferenceDurationMinutes", "type_schema": "xs:int"}]]}]]}, {"name": "scheduleRecurring", "type": null, "required": true, "array": false, "schema": [[{"name": "startTime", "required": true, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "duration", "required": true, "array": false, "type": "MeetMeConferencingConferenceDuration", "schema": [[{"name": "hours", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minutes", "required": true, "array": false, "type": "MeetMeConferencingConferenceDurationMinutes", "type_schema": "xs:int"}]]}, {"name": "recurrence", "required": true, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}]]}]}]]}, {"name": "allowParticipantUnmuteInAutoLectureMode", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"choice": [{"name": "restrictParticipants", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxParticipants", "required": true, "array": false, "type": "MeetMeConferencingNumberOfParticipants", "type_schema": "xs:int", "minimum": 1.0, "maximum": 294.0}]}]]}, {"name": "GroupMusicOnHoldAddInstanceRequest23", "tags": ["services"], "documentation": "Add a Music on Hold Instance to a department.\n        The response is either SuccessResponse or ErrorResponse.\n        The following elements are only used in AS data mode and ignored in XS data mode:\n      \t- useDynamicMOHDuringCallHold", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "department", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "isActiveDuringCallHold", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isActiveDuringCallPark", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isActiveDuringBusyCampOn", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "source", "required": true, "array": false, "type": "MusicOnHoldSourceAdd22", "schema": [[{"name": "audioFilePreferredCodec", "required": true, "array": false, "type": "AudioFileCodec22", "type_schema": "xs:token", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB", "OPUS", "EVRC0", "EVRCNW", "EVRCNW0"]}, {"name": "messageSourceSelection", "required": true, "array": false, "type": "MusicOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["System", "External", "Custom"]}, {"name": "externalSource", "type": null, "required": false, "array": false, "schema": [[{"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "AccessDeviceEndpointAdd", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "authenticationRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "authenticationUserName", "required": false, "array": false, "type": "SIPAuthenticationUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "authenticationPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"choice": [{"name": "labeledCustomSourceMediaFiles", "type": null, "required": true, "array": false, "schema": [[{"name": "audioFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "announcementCustomSourceMediaFiles", "type": null, "required": true, "array": false, "schema": [[{"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}]]}]}]]}, {"name": "useAlternateSourceForInternalCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "internalSource", "required": false, "array": false, "type": "MusicOnHoldSourceAdd22", "schema": [[{"name": "audioFilePreferredCodec", "required": true, "array": false, "type": "AudioFileCodec22", "type_schema": "xs:token", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB", "OPUS", "EVRC0", "EVRCNW", "EVRCNW0"]}, {"name": "messageSourceSelection", "required": true, "array": false, "type": "MusicOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["System", "External", "Custom"]}, {"name": "externalSource", "type": null, "required": false, "array": false, "schema": [[{"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "AccessDeviceEndpointAdd", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "authenticationRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "authenticationUserName", "required": false, "array": false, "type": "SIPAuthenticationUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "authenticationPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"choice": [{"name": "labeledCustomSourceMediaFiles", "type": null, "required": true, "array": false, "schema": [[{"name": "audioFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "announcementCustomSourceMediaFiles", "type": null, "required": true, "array": false, "schema": [[{"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}]]}]}]]}, {"name": "useDynamicMOHDuringCallHold", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupMusicOnHoldDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a Music On Hold department instance.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "department", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "GroupMusicOnHoldGetDepartmentListRequest", "tags": ["services"], "documentation": "Returns a list of all departments that have a Music On Hold instance.\n        The response is either GroupMusicOnHoldGetDepartmentListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupDepartmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupMusicOnHoldGetInstanceRequest23V2", "tags": ["services"], "documentation": "Get a Music On Hold data for a group or department instance.\n        The response is either GroupMusicOnHoldGetInstanceResponse23V2 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "GroupMusicOnHoldModifyInstanceRequest22", "tags": ["services"], "documentation": "Modify data for a group or department Music On Hold Instance.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "isActiveDuringCallHold", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isActiveDuringCallPark", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isActiveDuringBusyCampOn", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "source", "required": false, "array": false, "type": "MusicOnHoldSourceModify22", "schema": [[{"name": "audioFilePreferredCodec", "required": false, "array": false, "type": "AudioFileCodec22", "type_schema": "xs:token", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB", "OPUS", "EVRC0", "EVRCNW", "EVRCNW0"]}, {"name": "messageSourceSelection", "required": false, "array": false, "type": "MusicOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["System", "External", "Custom"]}, {"name": "externalSource", "type": null, "required": false, "array": false, "schema": [[{"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "authenticationRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "authenticationUserName", "required": false, "array": false, "type": "SIPAuthenticationUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "authenticationPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"choice": [{"name": "labeledCustomSourceMediaFiles", "type": null, "required": true, "array": false, "schema": [[{"name": "audioFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "announcementCustomSourceMediaFiles", "type": null, "required": true, "array": false, "schema": [[{"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}]]}]}]]}, {"name": "useAlternateSourceForInternalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "internalSource", "required": false, "array": false, "type": "MusicOnHoldSourceModify22", "schema": [[{"name": "audioFilePreferredCodec", "required": false, "array": false, "type": "AudioFileCodec22", "type_schema": "xs:token", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB", "OPUS", "EVRC0", "EVRCNW", "EVRCNW0"]}, {"name": "messageSourceSelection", "required": false, "array": false, "type": "MusicOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["System", "External", "Custom"]}, {"name": "externalSource", "type": null, "required": false, "array": false, "schema": [[{"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "authenticationRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "authenticationUserName", "required": false, "array": false, "type": "SIPAuthenticationUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "authenticationPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"choice": [{"name": "labeledCustomSourceMediaFiles", "type": null, "required": true, "array": false, "schema": [[{"name": "audioFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "announcementCustomSourceMediaFiles", "type": null, "required": true, "array": false, "schema": [[{"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}]]}]}]]}, {"name": "useDynamicMOHDuringCallHold", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SystemMusicOnHoldGetRequest", "tags": ["services"], "documentation": "Request the system level data associated with Music On Hold.\n        The response is either a SystemMusicOnHoldGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemMusicOnHoldModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Music On Hold.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "delayMilliseconds", "required": false, "array": false, "type": "MusicOnHoldDelayMilliseconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 5000.0}]]}, {"name": "UserMusicOnHoldGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Music On Hold.\n        The response is either a UserMusicOnHoldGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserMusicOnHoldModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Music On Hold.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserMusicOnHoldUserGetRequest20", "tags": ["services"], "documentation": "Request the user level data associated with Music On Hold User.\n        The response is either a UserMusicOnHoldUserGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserMusicOnHoldUserModifyRequest20", "tags": ["services"], "documentation": "Modify data for Music On Hold User.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "source", "required": false, "array": false, "type": "MusicOnHoldUserSourceModify20", "schema": [[{"name": "messageSourceSelection", "required": false, "array": false, "type": "MusicOnHoldUserMessageSelection", "type_schema": "xs:token", "enum": ["Group", "Custom"]}, {"name": "customSource", "type": null, "required": false, "array": false, "schema": [[{"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}]]}]]}, {"name": "useAlternateSourceForInternalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "internalSource", "required": false, "array": false, "type": "MusicOnHoldUserSourceModify20", "schema": [[{"name": "messageSourceSelection", "required": false, "array": false, "type": "MusicOnHoldUserMessageSelection", "type_schema": "xs:token", "enum": ["Group", "Custom"]}, {"name": "customSource", "type": null, "required": false, "array": false, "schema": [[{"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}]]}]]}]]}, {"name": "GroupMWIDeliveryToMobileEndpointCustomTemplateAddRequest", "tags": ["services"], "documentation": "Create a MWI Delivery to Mobile Endpoint Custom Template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "type", "required": true, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateType", "type_schema": "xs:token", "enum": ["Default", "Single New No Previous Message", "Single New With Previous Message", "Multiple New Messages"]}, {"name": "isEnabled", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "templateBody", "required": true, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateBody", "schema": [[{"name": "line", "required": true, "array": true, "type": "MWIDeliveryToMobileEndpointTemplateLine", "schema": [[{"name": "prefix", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplatePhrase", "type_schema": "xs:string", "minLength": 1, "maxLength": 128}, {"name": "tag", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateTag", "type_schema": "xs:token", "enum": ["Voice Mail Number", "New Messages Count", "Total Messages Count", "Caller Name", "Caller Number"]}, {"name": "postfix", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplatePhrase", "type_schema": "xs:string", "minLength": 1, "maxLength": 128}]]}]]}]]}, {"name": "GroupMWIDeliveryToMobileEndpointCustomTemplateDeleteRequest", "tags": ["services"], "documentation": "Delete a MWI Delivery to Mobile Endpoint Custom Template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "type", "required": true, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateType", "type_schema": "xs:token", "enum": ["Default", "Single New No Previous Message", "Single New With Previous Message", "Multiple New Messages"]}]]}, {"name": "GroupMWIDeliveryToMobileEndpointCustomTemplateGetRequest", "tags": ["services"], "documentation": "Request a MWI Delivery to Mobile Endpoint Custom Template.\n        The response is either a GroupMWIDeliveryToMobileEndpointCustomTemplateGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "type", "required": true, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateType", "type_schema": "xs:token", "enum": ["Default", "Single New No Previous Message", "Single New With Previous Message", "Multiple New Messages"]}]]}, {"name": "GroupMWIDeliveryToMobileEndpointCustomTemplateModifyRequest", "tags": ["services"], "documentation": "Modify a MWI Delivery to Mobile Endpoint Custom Template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "type", "required": true, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateType", "type_schema": "xs:token", "enum": ["Default", "Single New No Previous Message", "Single New With Previous Message", "Multiple New Messages"]}, {"name": "isEnabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "templateBody", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateBody", "schema": [[{"name": "line", "required": true, "array": true, "type": "MWIDeliveryToMobileEndpointTemplateLine", "schema": [[{"name": "prefix", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplatePhrase", "type_schema": "xs:string", "minLength": 1, "maxLength": 128}, {"name": "tag", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateTag", "type_schema": "xs:token", "enum": ["Voice Mail Number", "New Messages Count", "Total Messages Count", "Caller Name", "Caller Number"]}, {"name": "postfix", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplatePhrase", "type_schema": "xs:string", "minLength": 1, "maxLength": 128}]]}]]}]]}, {"name": "GroupMWIDeliveryToMobileEndpointGetRequest", "tags": ["services"], "documentation": "Requests group MWI custom notifications settings.\n        The response is either a GroupMWIDeliveryToMobileEndpointGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupMWIDeliveryToMobileEndpointModifyRequest", "tags": ["services"], "documentation": "Modify the group level MWI custom notifications settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        If the request is executed by a group administrator and modifies the useSettingLevel, the request is rejected.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useSettingLevel", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointGroupSettingLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group"]}, {"name": "templateActivation", "required": false, "array": true, "type": "MWIDeliveryToMobileEndpointTemplateActivation", "schema": [[{"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "type", "required": true, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateType", "type_schema": "xs:token", "enum": ["Default", "Single New No Previous Message", "Single New With Previous Message", "Multiple New Messages"]}, {"name": "isEnabled", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ServiceProviderMWIDeliveryToMobileEndpointCustomTemplateAddRequest", "tags": ["services"], "documentation": "Create a MWI Delivery to Mobile Endpoint Custom Template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "type", "required": true, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateType", "type_schema": "xs:token", "enum": ["Default", "Single New No Previous Message", "Single New With Previous Message", "Multiple New Messages"]}, {"name": "isEnabled", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "templateBody", "required": true, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateBody", "schema": [[{"name": "line", "required": true, "array": true, "type": "MWIDeliveryToMobileEndpointTemplateLine", "schema": [[{"name": "prefix", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplatePhrase", "type_schema": "xs:string", "minLength": 1, "maxLength": 128}, {"name": "tag", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateTag", "type_schema": "xs:token", "enum": ["Voice Mail Number", "New Messages Count", "Total Messages Count", "Caller Name", "Caller Number"]}, {"name": "postfix", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplatePhrase", "type_schema": "xs:string", "minLength": 1, "maxLength": 128}]]}]]}]]}, {"name": "ServiceProviderMWIDeliveryToMobileEndpointCustomTemplateDeleteRequest", "tags": ["services"], "documentation": "Delete a MWI Delivery to Mobile Endpoint Custom Template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "type", "required": true, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateType", "type_schema": "xs:token", "enum": ["Default", "Single New No Previous Message", "Single New With Previous Message", "Multiple New Messages"]}]]}, {"name": "ServiceProviderMWIDeliveryToMobileEndpointCustomTemplateGetRequest", "tags": ["services"], "documentation": "Request a MWI Delivery to Mobile Endpoint Custom Template.\n        The response is either a ServiceProviderMWIDeliveryToMobileEndpointCustomTemplateGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "type", "required": true, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateType", "type_schema": "xs:token", "enum": ["Default", "Single New No Previous Message", "Single New With Previous Message", "Multiple New Messages"]}]]}, {"name": "ServiceProviderMWIDeliveryToMobileEndpointCustomTemplateModifyRequest", "tags": ["services"], "documentation": "Modify a MWI Delivery to Mobile Endpoint Custom Template.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "type", "required": true, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateType", "type_schema": "xs:token", "enum": ["Default", "Single New No Previous Message", "Single New With Previous Message", "Multiple New Messages"]}, {"name": "isEnabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "templateBody", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateBody", "schema": [[{"name": "line", "required": true, "array": true, "type": "MWIDeliveryToMobileEndpointTemplateLine", "schema": [[{"name": "prefix", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplatePhrase", "type_schema": "xs:string", "minLength": 1, "maxLength": 128}, {"name": "tag", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateTag", "type_schema": "xs:token", "enum": ["Voice Mail Number", "New Messages Count", "Total Messages Count", "Caller Name", "Caller Number"]}, {"name": "postfix", "required": false, "array": false, "type": "MWIDeliveryToMobileEndpointTemplatePhrase", "type_schema": "xs:string", "minLength": 1, "maxLength": 128}]]}]]}]]}, {"name": "ServiceProviderMWIDeliveryToMobileEndpointGetRequest", "tags": ["services"], "documentation": "Request the service provider level data associated with MWI Delivery to Mobile Endpoint service.\n        The response is either a ServiceProviderMWIDeliveryToMobileEndpointGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderMWIDeliveryToMobileEndpointModifyRequest", "tags": ["services"], "documentation": "Modify the service provider level MWI custom notifications settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "templateActivation", "required": false, "array": true, "type": "MWIDeliveryToMobileEndpointTemplateActivation", "schema": [[{"name": "language", "required": true, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "type", "required": true, "array": false, "type": "MWIDeliveryToMobileEndpointTemplateType", "type_schema": "xs:token", "enum": ["Default", "Single New No Previous Message", "Single New With Previous Message", "Multiple New Messages"]}, {"name": "isEnabled", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserMWIDeliveryToMobileEndpointGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with MWI Delivery to Mobile Endpoint service.\n        The response is either a UserMWIDeliveryToMobileEndpointGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserMWIDeliveryToMobileEndpointModifyRequest", "tags": ["services"], "documentation": "Request to modify the user level data associated with MWI Delivery to Mobile Endpoint service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mobilePhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "UserNumberPortabilityAnnouncementGetRequest", "tags": ["services"], "documentation": "Get the Number Portability Announcement attributes for the user.\n        The response is either UserNumberPortabilityAnnouncementGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserNumberPortabilityAnnouncementModifyRequest", "tags": ["services"], "documentation": "Modify the Number Portability Announcement attributes for the user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enable", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupOutgoingCallingPlanAuthorizationCodeGetListRequest", "tags": ["services"], "documentation": "Request the list of authorization codes for a group default and it's departments.\n        The response is either a GroupOutgoingCallingPlanAuthorizationCodeGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanCallMeNowGetListRequest", "tags": ["services"], "documentation": "Request the Call Me Now call permissions for a group default and it's departments.\n        The response is either a GroupOutgoingCallingPlanCallMeNowGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanCallMeNowModifyListRequest", "tags": ["services"], "documentation": "Modify the Call Me Now call permissions for a group default and it's departments.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanCallMeNowPermissionsModify", "schema": [[{"name": "group", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "local", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tollFree", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "toll", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "international", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "operatorAssisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "chargeableDirectoryAssisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "specialServicesI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "specialServicesII", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "premiumServicesI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "premiumServicesII", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "casual", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "urlDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "unknown", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "departmentPermissions", "required": false, "array": true, "type": "OutgoingCallingPlanCallMeNowDepartmentPermissionsModify", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "permissions", "required": true, "array": false, "type": "OutgoingCallingPlanCallMeNowPermissionsModify", "schema": [[{"name": "group", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "local", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tollFree", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "toll", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "international", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "operatorAssisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "chargeableDirectoryAssisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "specialServicesI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "specialServicesII", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "premiumServicesI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "premiumServicesII", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "casual", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "urlDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "unknown", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}]]}, {"name": "GroupOutgoingCallingPlanDepartmentAuthorizationCodeAddListRequest", "tags": ["services"], "documentation": "Add a list of authorization codes to the group's default or a department. When department is not\n        specified, it is for the group default.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "departmentKey", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "codeEntry", "required": true, "array": true, "type": "OutgoingCallingPlanAuthorizationCodeEntry", "schema": [[{"name": "code", "required": true, "array": false, "type": "OutgoingCallingPlanAuthorizationCode", "type_schema": "xs:token", "minLength": 2, "maxLength": 14}, {"name": "description", "required": false, "array": false, "type": "OutgoingCallingPlanAuthorizationCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "GroupOutgoingCallingPlanDepartmentAuthorizationCodeDeleteListRequest", "tags": ["services"], "documentation": "Delete a list of authorization codes from the group's default or a department. When department is not\n        specified, it is for the group default.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "departmentKey", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "code", "required": true, "array": true, "type": "OutgoingCallingPlanAuthorizationCode", "type_schema": "xs:token", "minLength": 2, "maxLength": 14}]]}, {"name": "GroupOutgoingCallingPlanDepartmentAuthorizationCodeGetListRequest", "tags": ["services"], "documentation": "Request the list of authorization codes for a group default or a department.  When department is not\n        specified, it is for the group default.\n        The response is either a GroupOutgoingCallingPlanDepartmentAuthorizationCodeGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "departmentKey", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "GroupOutgoingCallingPlanDigitPlanCallMeNowGetListRequest", "tags": ["services"], "documentation": "Request the Call Me Now call permissions for digit patterns for a group default and it's departments.\n        The response is either a GroupOutgoingCallingPlanDigitPlanCallMeNowGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanDigitPlanCallMeNowModifyListRequest", "tags": ["services"], "documentation": "Modify the Call Me Now call permissions for digit patterns for a group default and it's departments.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanDigitPatternCallMeNowPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingCallingPlanDigitPatternCallMeNowPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "departmentPermissions", "required": false, "array": true, "type": "OutgoingCallingPlanDigitPatternCallMeNowDepartmentPermissionsModify", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "digitPatternPermissions", "required": true, "array": false, "type": "OutgoingCallingPlanDigitPatternCallMeNowPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingCallingPlanDigitPatternCallMeNowPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}]]}]]}, {"name": "GroupOutgoingCallingPlanDigitPlanOriginatingGetListRequest", "tags": ["services"], "documentation": "Request the originating permissions for digit patterns for a group default and it's departments.\n        The response is either a GroupOutgoingCallingPlanDigitPlanOriginatingGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanDigitPlanOriginatingModifyListRequest", "tags": ["services"], "documentation": "Modify the originating permissions for digit patterns for a group default and it's departments.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanDigitPatternOriginatingPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingCallingPlanDigitPatternOriginatingPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}]]}]]}, {"name": "departmentPermissions", "required": false, "array": true, "type": "OutgoingCallingPlanDigitPatternOriginatingDepartmentPermissionsModify", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "digitPatternPermissions", "required": true, "array": false, "type": "OutgoingCallingPlanDigitPatternOriginatingPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingCallingPlanDigitPatternOriginatingPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}]]}]]}]]}]]}, {"name": "GroupOutgoingCallingPlanDigitPlanRedirectingGetListRequest", "tags": ["services"], "documentation": "Request the redirecting permissions for digit patterns for a group default and it's departments.\n        The response is either a GroupOutgoingCallingPlanDigitPlanRedirectingGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanDigitPlanRedirectingModifyListRequest", "tags": ["services"], "documentation": "Modify the redirecting permissions for digit patterns for a group default and it's departments.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanDigitPatternRedirectingPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingCallingPlanDigitPatternRedirectingPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "departmentPermissions", "required": false, "array": true, "type": "OutgoingCallingPlanDigitPatternRedirectingDepartmentPermissionsModify", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "digitPatternPermissions", "required": true, "array": false, "type": "OutgoingCallingPlanDigitPatternRedirectingPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingCallingPlanDigitPatternRedirectingPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}]]}]]}, {"name": "GroupOutgoingCallingPlanOriginatingGetListRequest", "tags": ["services"], "documentation": "Request the originating permissions for a group default and it's departments.\n        The response is either a GroupOutgoingCallingPlanOriginatingGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanOriginatingModifyListRequest", "tags": ["services"], "documentation": "Modify the originating permissions for a group default and it's departments.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermissionsModify", "schema": [[{"name": "group", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "local", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "tollFree", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "toll", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "international", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "operatorAssisted", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "chargeableDirectoryAssisted", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "specialServicesI", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "specialServicesII", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "premiumServicesI", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "premiumServicesII", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "casual", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "urlDialing", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "unknown", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}]]}, {"name": "departmentPermissions", "required": false, "array": true, "type": "OutgoingCallingPlanOriginatingDepartmentPermissionsModify", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "permissions", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermissionsModify", "schema": [[{"name": "group", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "local", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "tollFree", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "toll", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "international", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "operatorAssisted", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "chargeableDirectoryAssisted", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "specialServicesI", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "specialServicesII", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "premiumServicesI", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "premiumServicesII", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "casual", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "urlDialing", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "unknown", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}]]}]]}]]}, {"name": "GroupOutgoingCallingPlanPinholeDigitPatternAddRequest", "tags": ["services"], "documentation": "Add a new calling plan Pinhole digit string.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "digitPattern", "required": true, "array": false, "type": "CallingPlanDigitPattern", "type_schema": "CallingPlanDigitPattern"}]]}, {"name": "GroupOutgoingCallingPlanPinholeDigitPatternDeleteListRequest", "tags": ["services"], "documentation": "Delete one or more calling plan Pinhole digit strings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": true, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanPinholeDigitPatternGetListRequest", "tags": ["services"], "documentation": "Get the list of calling plan Pinhole digit strings for a group.\n        The response is either a GroupOutgoingCallingPlanPinholeDigitPatternGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanPinholeDigitPatternModifyRequest", "tags": ["services"], "documentation": "Modify a calling plan Pinhole digit string. The name is a key; it cannot be changed.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "digitPattern", "required": false, "array": false, "type": "CallingPlanDigitPattern", "type_schema": "CallingPlanDigitPattern"}]]}, {"name": "GroupOutgoingCallingPlanPinholeDigitPlanCallMeNowGetListRequest", "tags": ["services"], "documentation": "Request the Call Me Now permissions for Pinhole digit patterns for a group default and its departments.\n        The response is either a GroupOutgoingCallingPlanPinholeDigitPlanCallMeNowGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanPinholeDigitPlanCallMeNowModifyListRequest", "tags": ["services"], "documentation": "Modify the Call Me Now permissions for Pinhole digit patterns for a group default and its departments.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupPermissions", "required": false, "array": false, "type": "OutgoingPinholeDigitPlanDigitPatternCallMeNowPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingPinholeDigitPlanDigitPatternCallMeNowPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "OutgoingPinholeDigitPlanCallMeNowPermission", "type_schema": "xs:token", "enum": ["Ignore", "Allow"]}]]}]]}, {"name": "departmentPermissions", "required": false, "array": true, "type": "OutgoingPinholeDigitPlanDigitPatternCallMeNowDepartmentPermissionsModify", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "digitPatternPermissions", "required": true, "array": false, "type": "OutgoingPinholeDigitPlanDigitPatternCallMeNowPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingPinholeDigitPlanDigitPatternCallMeNowPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "OutgoingPinholeDigitPlanCallMeNowPermission", "type_schema": "xs:token", "enum": ["Ignore", "Allow"]}]]}]]}]]}]]}, {"name": "GroupOutgoingCallingPlanPinholeDigitPlanOriginatingGetListRequest", "tags": ["services"], "documentation": "Request the originating permissions for Pinhole digit patterns for a group default and its departments.\n        The response is either a GroupOutgoingCallingPlanPinholeDigitPlanOriginatingGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanPinholeDigitPlanOriginatingModifyListRequest", "tags": ["services"], "documentation": "Modify the originating permissions for Pinhole digit patterns for a group default and its departments.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupPermissions", "required": false, "array": false, "type": "OutgoingPinholeDigitPlanDigitPatternOriginatingPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingPinholeDigitPlanDigitPatternOriginatingPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "OutgoingPinholeDigitPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Ignore", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}]]}]]}, {"name": "departmentPermissions", "required": false, "array": true, "type": "OutgoingPinholeDigitPlanDigitPatternOriginatingDepartmentPermissionsModify", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "digitPatternPermissions", "required": true, "array": false, "type": "OutgoingPinholeDigitPlanDigitPatternOriginatingPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingPinholeDigitPlanDigitPatternOriginatingPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "OutgoingPinholeDigitPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Ignore", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}]]}]]}]]}]]}, {"name": "GroupOutgoingCallingPlanPinholeDigitPlanRedirectingGetListRequest", "tags": ["services"], "documentation": "Request the redirecting permissions for Pinhole digit patterns for a group default and its departments.\n        The response is either a GroupOutgoingCallingPlanPinholeDigitPlanRedirectingGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanPinholeDigitPlanRedirectingModifyListRequest", "tags": ["services"], "documentation": "Modify the redirecting permissions for Pinhole digit patterns for a group default and its departments.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupPermissions", "required": false, "array": false, "type": "OutgoingPinholeDigitPlanDigitPatternRedirectingPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingPinholeDigitPlanDigitPatternRedirectingPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "OutgoingPinholeDigitPlanRedirectingPermission", "type_schema": "xs:token", "enum": ["Ignore", "Allow"]}]]}]]}, {"name": "departmentPermissions", "required": false, "array": true, "type": "OutgoingPinholeDigitPlanDigitPatternRedirectingDepartmentPermissionsModify", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "digitPatternPermissions", "required": true, "array": false, "type": "OutgoingPinholeDigitPlanDigitPatternRedirectingPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingPinholeDigitPlanDigitPatternRedirectingPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "OutgoingPinholeDigitPlanRedirectingPermission", "type_schema": "xs:token", "enum": ["Ignore", "Allow"]}]]}]]}]]}]]}, {"name": "GroupOutgoingCallingPlanRedirectedGetListRequest", "tags": ["services"], "documentation": "Request the call forwarded/transferred permissions for a group default and it's departments.\n        The response is either a GroupOutgoingCallingPlanRedirectedGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanRedirectedModifyListRequest", "tags": ["services"], "documentation": "Modify the call forwarded/transferred permissions for a group default and it's departments.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanRedirectedPermissionsModify", "schema": [[{"name": "outsideGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "departmentPermissions", "required": false, "array": true, "type": "OutgoingCallingPlanRedirectedDepartmentPermissionsModify", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "permissions", "required": true, "array": false, "type": "OutgoingCallingPlanRedirectedPermissionsModify", "schema": [[{"name": "outsideGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}]]}, {"name": "GroupOutgoingCallingPlanRedirectingGetListRequest", "tags": ["services"], "documentation": "Request the initiating call forwards/transfer permissions for a group default and it's departments.\n        The response is either a GroupOutgoingCallingPlanRedirectingGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanRedirectingModifyListRequest", "tags": ["services"], "documentation": "Modify the initiating call forwards/transfer permissions for a group default and it's departments.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanRedirectingPermissionsModify", "schema": [[{"name": "group", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "local", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tollFree", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "toll", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "international", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "operatorAssisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "chargeableDirectoryAssisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "specialServicesI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "specialServicesII", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "premiumServicesI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "premiumServicesII", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "casual", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "urlDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "unknown", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "departmentPermissions", "required": false, "array": true, "type": "OutgoingCallingPlanRedirectingDepartmentPermissionsModify", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "permissions", "required": true, "array": false, "type": "OutgoingCallingPlanRedirectingPermissionsModify", "schema": [[{"name": "group", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "local", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tollFree", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "toll", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "international", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "operatorAssisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "chargeableDirectoryAssisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "specialServicesI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "specialServicesII", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "premiumServicesI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "premiumServicesII", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "casual", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "urlDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "unknown", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}]]}, {"name": "GroupOutgoingCallingPlanTransferNumbersGetListRequest", "tags": ["services"], "documentation": "Request the list of transfer numbers for a group default and it's departments.\n        The response is either a GroupOutgoingCallingPlanTransferNumbersGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupOutgoingCallingPlanTransferNumbersModifyListRequest", "tags": ["services"], "documentation": "Modify the list of transfer numbers for a group default and it's departments.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupNumbers", "required": false, "array": false, "type": "OutgoingCallingPlanTransferNumbersModify", "schema": [[{"name": "phoneNumber01", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber02", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber03", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "departmentNumbers", "required": false, "array": true, "type": "OutgoingCallingPlanDepartmentTransferNumbersModify", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "transferNumbers", "required": false, "array": false, "type": "OutgoingCallingPlanTransferNumbersModify", "schema": [[{"name": "phoneNumber01", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber02", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber03", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}]]}, {"name": "SystemOutgoingCallingPlanCallTypeAddMappingRequest", "tags": ["services"], "documentation": "Add a system outgoing calling plan call type mapping.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}, {"name": "digitMap", "required": true, "array": false, "type": "CallTypeDigitMap", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callType", "required": true, "array": false, "type": "OutgoingCallingPlanCallType", "type_schema": "xs:token", "enum": ["Casual Calls", "Chargeable Directory Assistance", "International", "Local", "Operator Assisted", "Premium Services I", "Premium Services II", "Special Services I", "Special Services II", "Toll", "Toll Free"]}]]}, {"name": "SystemOutgoingCallingPlanCallTypeDeleteMappingRequest", "tags": ["services"], "documentation": "Delete a system outgoing calling plan call type mapping.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}, {"name": "digitMap", "required": true, "array": false, "type": "CallTypeDigitMap", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "SystemOutgoingCallingPlanCallTypeGetListRequest", "tags": ["services"], "documentation": "Request to get the list of call types of outgoing calling plan\n        Response is SystemOutgoingCallingPlanCallTypeGetListRequest or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemOutgoingCallingPlanCallTypeGetMappingListRequest", "tags": ["services"], "documentation": "Get a list of system outgoing calling plan call type mappings.\n        The response is either SystemOutgoingCallingPlanCallTypeGetMappingListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "countryCode", "required": false, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}]]}, {"name": "SystemOutgoingCallingPlanGetRequest17sp3", "tags": ["services"], "documentation": "Request the system level data associated with Outgoing Calling Plan.\n        The response is either a SystemOutgoingCallingPlanGetResponse17sp3 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemOutgoingCallingPlanModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Outgoing Calling Plan.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "directTransferScreening", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableEnhancedTollCallTyping", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserOutgoingCallingPlanAuthorizationCodeAddListRequest", "tags": ["services"], "documentation": "Add a list of authorization codes to a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "codeEntry", "required": true, "array": true, "type": "OutgoingCallingPlanAuthorizationCodeEntry", "schema": [[{"name": "code", "required": true, "array": false, "type": "OutgoingCallingPlanAuthorizationCode", "type_schema": "xs:token", "minLength": 2, "maxLength": 14}, {"name": "description", "required": false, "array": false, "type": "OutgoingCallingPlanAuthorizationCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "UserOutgoingCallingPlanAuthorizationCodeDeleteListRequest", "tags": ["services"], "documentation": "Delete a list of authorization codes from a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "code", "required": true, "array": true, "type": "OutgoingCallingPlanAuthorizationCode", "type_schema": "xs:token", "minLength": 2, "maxLength": 14}]]}, {"name": "UserOutgoingCallingPlanAuthorizationCodeGetListRequest", "tags": ["services"], "documentation": "Request the list of authorization codes for a user.\n        The response is either a UserOutgoingCallingPlanAuthorizationCodeGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanAuthorizationCodeGetRequest", "tags": ["services"], "documentation": "Request the authorization code setting for a user.\n        The response is either a UserOutgoingCallingPlanAuthorizationCodeGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanAuthorizationCodeModifyRequest", "tags": ["services"], "documentation": "Modify the authorization setting for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserOutgoingCallingPlanCallMeNowGetRequest", "tags": ["services"], "documentation": "Request the Call Me Now call permissions for a user.\n        The response is either a UserOutgoingCallingPlanCallMeNowGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanCallMeNowModifyRequest", "tags": ["services"], "documentation": "Modify the Call Me Now call permissions for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanCallMeNowPermissionsModify", "schema": [[{"name": "group", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "local", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tollFree", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "toll", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "international", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "operatorAssisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "chargeableDirectoryAssisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "specialServicesI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "specialServicesII", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "premiumServicesI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "premiumServicesII", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "casual", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "urlDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "unknown", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserOutgoingCallingPlanDigitPlanCallMeNowGetRequest", "tags": ["services"], "documentation": "Request the Call Me Now call permissions for digit patterns for a user.\n        The response is either a UserOutgoingCallingPlanDigitPlanCallMeNowGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanDigitPlanCallMeNowModifyRequest", "tags": ["services"], "documentation": "Modify the Call Me Now call permissions for digit patterns for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanDigitPatternCallMeNowPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingCallingPlanDigitPatternCallMeNowPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}]]}, {"name": "UserOutgoingCallingPlanDigitPlanOriginatingGetRequest", "tags": ["services"], "documentation": "Request the originating permissions for digit patterns for a user.\n        The response is either a UserOutgoingCallingPlanDigitPlanOriginatingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanDigitPlanOriginatingModifyRequest", "tags": ["services"], "documentation": "Modify the originating permissions for digit patterns for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanDigitPatternOriginatingPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingCallingPlanDigitPatternOriginatingPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}]]}]]}]]}, {"name": "UserOutgoingCallingPlanDigitPlanRedirectingGetRequest", "tags": ["services"], "documentation": "Request the redirecting permissions for digit patterns for a user.\n        The response is either a UserOutgoingCallingPlanDigitPlanRedirectingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanDigitPlanRedirectingModifyRequest", "tags": ["services"], "documentation": "Modify the redirecting permissions for digit patterns for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanDigitPatternRedirectingPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingCallingPlanDigitPatternRedirectingPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}]]}, {"name": "UserOutgoingCallingPlanOriginatingGetRequest", "tags": ["services"], "documentation": "Request the originating permissions for a user.\n        The response is either a UserOutgoingCallingPlanOriginatingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanOriginatingModifyRequest", "tags": ["services"], "documentation": "Modify the originating permissions for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermissionsModify", "schema": [[{"name": "group", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "local", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "tollFree", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "toll", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "international", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "operatorAssisted", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "chargeableDirectoryAssisted", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "specialServicesI", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "specialServicesII", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "premiumServicesI", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "premiumServicesII", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "casual", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "urlDialing", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}, {"name": "unknown", "required": false, "array": false, "type": "OutgoingCallingPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Disallow", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}]]}]]}, {"name": "UserOutgoingCallingPlanPinholeDigitPlanCallMeNowGetRequest", "tags": ["services"], "documentation": "Request the Call Me Now permissions for Pinhole digit patterns for a user.\n        The response is either a UserOutgoingCallingPlanPinholeDigitPlanCallMeNowgGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanPinholeDigitPlanCallMeNowModifyRequest", "tags": ["services"], "documentation": "Modify the Call Me Now permissions for Pinhole digit patterns for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userPermissions", "required": false, "array": false, "type": "OutgoingPinholeDigitPlanDigitPatternCallMeNowPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingPinholeDigitPlanDigitPatternCallMeNowPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "OutgoingPinholeDigitPlanCallMeNowPermission", "type_schema": "xs:token", "enum": ["Ignore", "Allow"]}]]}]]}]]}, {"name": "UserOutgoingCallingPlanPinholeDigitPlanOriginatingGetRequest", "tags": ["services"], "documentation": "Request the originating permissions for Pinhole digit patterns for a user.\n        The response is either a UserOutgoingCallingPlanPinholeDigitPlanOriginatingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanPinholeDigitPlanOriginatingModifyRequest", "tags": ["services"], "documentation": "Modify the originating permissions for Pinhole digit patterns for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userPermissions", "required": false, "array": false, "type": "OutgoingPinholeDigitPlanDigitPatternOriginatingPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingPinholeDigitPlanDigitPatternOriginatingPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "OutgoingPinholeDigitPlanOriginatingPermission", "type_schema": "xs:token", "enum": ["Ignore", "Allow", "Authorization Code Required", "Transfer To First Transfer Number", "Transfer To Second Transfer Number", "Transfer To Third Transfer Number"]}]]}]]}]]}, {"name": "UserOutgoingCallingPlanPinholeDigitPlanRedirectingGetRequest", "tags": ["services"], "documentation": "Request the redirecting permissions for Pinhole digit patterns for a user.\n        The response is either a UserOutgoingCallingPlanPinholeDigitPlanRedirectingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanPinholeDigitPlanRedirectingModifyRequest", "tags": ["services"], "documentation": "Modify the redirecting permissions for Pinhole digit patterns for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userPermissions", "required": false, "array": false, "type": "OutgoingPinholeDigitPlanDigitPatternRedirectingPermissions", "schema": [[{"name": "digitPatternPermissions", "required": true, "array": true, "type": "OutgoingPinholeDigitPlanDigitPatternRedirectingPermission", "schema": [[{"name": "digitPatternName", "required": true, "array": false, "type": "CallingPlanDigitPatternName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "permission", "required": true, "array": false, "type": "OutgoingPinholeDigitPlanRedirectingPermission", "type_schema": "xs:token", "enum": ["Ignore", "Allow"]}]]}]]}]]}, {"name": "UserOutgoingCallingPlanRedirectedGetRequest", "tags": ["services"], "documentation": "Request the call forwarded/transferred permissions for a user.\n        The response is either a UserOutgoingCallingPlanRedirectedGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanRedirectedModifyRequest", "tags": ["services"], "documentation": "Modify the call forwarded/transferred permissions for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanRedirectedPermissionsModify", "schema": [[{"name": "outsideGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserOutgoingCallingPlanRedirectingGetRequest", "tags": ["services"], "documentation": "Request the initiating call forwards/transfer permissions for a user.\n        The response is either a UserOutgoingCallingPlanRedirectingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanRedirectingModifyRequest", "tags": ["services"], "documentation": "Modify the initiating call forwards/transfer permissions for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userPermissions", "required": false, "array": false, "type": "OutgoingCallingPlanRedirectingPermissionsModify", "schema": [[{"name": "group", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "local", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tollFree", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "toll", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "international", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "operatorAssisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "chargeableDirectoryAssisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "specialServicesI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "specialServicesII", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "premiumServicesI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "premiumServicesII", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "casual", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "urlDialing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "unknown", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserOutgoingCallingPlanSustainedAuthorizationCodeGetRequest", "tags": ["services"], "documentation": "Request the sustained authorization code setting for a user.\n        The response is either a UserOutgoingCallingPlanSustainedAuthorizationCodeGetResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanSustainedAuthorizationCodeModifyRequest", "tags": ["services"], "documentation": "Modify or clear the sustained authorization code for a user.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "code", "required": false, "array": false, "type": "OutgoingCallingPlanAuthorizationCode", "type_schema": "xs:token", "minLength": 2, "maxLength": 14}]]}, {"name": "UserOutgoingCallingPlanTransferNumbersGetRequest", "tags": ["services"], "documentation": "Request the transfer numbers for a user.\n        The response is either a UserOutgoingCallingPlanTransferNumbersGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOutgoingCallingPlanTransferNumbersModifyRequest", "tags": ["services"], "documentation": "Modify the transfer numbers for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useCustomSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userNumbers", "required": false, "array": false, "type": "OutgoingCallingPlanTransferNumbersModify", "schema": [[{"name": "phoneNumber01", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber02", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber03", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}, {"name": "SystemPersonalAssistantGetRequest", "tags": ["services"], "documentation": "Get system Personal Assistant Parameters.\n        The response is either SystemPersonalAssistantGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": []}, {"name": "SystemPersonalAssistantModifyRequest", "tags": ["services"], "documentation": "Modify system Personal Assistant Parameters.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "transferToAttendantKey", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "transferToVoiceMessagingKey", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "UserCallToNumberGetAvailableListRequest", "tags": ["services"], "documentation": "Request to get the user available Call to Number List information. The response is either a UserCallToNumberGetAvailableListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPersonalAssistantCallToNumberGetListRequest", "tags": ["services"], "documentation": "Request to get the user assigned Call to Number List information. The response is either a UserPersonalAssistantCallToNumberGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPersonalAssistantCallToNumberModifyListRequest", "tags": ["services"], "documentation": "Request to modify the user assigned Call to Number List information.\n        The response is either a SuccessResponse or an ErrorResponse.\n        For the callToNumbers in the callToNumberList, the extension element\n        is not used and the number element is only used when the type is BroadWorks Mobility.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callToNumberList", "required": false, "array": false, "type": "ReplacementCallToNumberList", "schema": [[{"name": "callToNumber", "required": true, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]]}, {"name": "UserPersonalAssistantExclusionNumberAddRequest", "tags": ["services"], "documentation": "Add a User Personal Assistant Exclusion Number.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "exclusionNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "PersonalAssistantExclusionNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "UserPersonalAssistantExclusionNumberDeleteListRequest", "tags": ["services"], "documentation": "Delete a list of User Personal Assistant Exclusion Number.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "exclusionNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "UserPersonalAssistantExclusionNumberGetListRequest", "tags": ["services"], "documentation": "Request to get the User Personal Assistant Exclusion Number List information.\n        The response is either a userPersonalAssistantExclusionNumberGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "searchCriteriaPersonalAssistantExclusionNumber", "required": false, "array": true, "type": "SearchCriteriaPersonalAssistantExclusionNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaPersonalAssistantExclusionNumberDescription", "required": false, "array": true, "type": "SearchCriteriaPersonalAssistantExclusionNumberDescription", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "PersonalAssistantExclusionNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}]]}, {"name": "UserPersonalAssistantExclusionNumberGetRequest", "tags": ["services"], "documentation": "Get a Personal Assistant Exclusion Number.\n        The response is either UserPersonalAssistantExclusionNumberGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "exclusionNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "UserPersonalAssistantExclusionNumberModifyRequest", "tags": ["services"], "documentation": "Modify an existing User Personal Assistant Exclusion Number description.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "exclusionNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "PersonalAssistantExclusionNumberDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "UserPersonalAssistantGetRequest22", "tags": ["services"], "documentation": "Request to get the User Personal Assistant information.\n        The response is either a UserPersonalAssistantGetResponse22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPersonalAssistantModifyRequest", "tags": ["services"], "documentation": "Modify the User Personal Assistant information.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "presence", "required": false, "array": false, "type": "PersonalAssistantPresence", "type_schema": "xs:token", "enum": ["None", "Business Trip", "Gone for the Day", "Lunch", "Meeting", "Out Of Office", "Temporarily Out", "Training", "Unavailable", "Vacation"]}, {"name": "enableTransferToAttendant", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "attendantNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableRingSplash", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableExpirationTime", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "expirationTime", "required": false, "array": false, "type": "xs:dateTime", "type_schema": "xs:dateTime"}, {"name": "alertMeFirst", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertMeFirstNumberOfRings", "required": false, "array": false, "type": "PersonalAssistantAlertMeFirstNumberOfRings", "type_schema": "xs:int", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}]]}, {"name": "SystemPhysicalLocationGetRequest", "tags": ["services"], "documentation": "Request to get the list of Physical Location system parameters.\n        The response is either SystemPhysicalLocationGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemPhysicalLocationModifyRequest", "tags": ["services"], "documentation": "Request to modify Physical Location system parameters.\n         The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "alwaysAllowEmergencyCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserPhysicalLocationGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Physical Location.\n        The response is either a UserPhysicalLocationGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPhysicalLocationModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Physical Location.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupPolycomPhoneServicesGetRequest", "tags": ["services"], "documentation": "Request the group's Polycom Phone Services attributes.\n        The response is either a GroupPolycomPhoneServicesGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupPolycomPhoneServicesModifyRequest", "tags": ["services"], "documentation": "Modify the group's Polycom Phone Services attributes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "includeGroupCommonPhoneListInDirectory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeGroupCustomContactDirectoryInDirectory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "groupCustomContactDirectory", "required": false, "array": false, "type": "CustomContactDirectoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "UserPolycomPhoneServicesGetPrimaryEndpointListRequest", "tags": ["services"], "documentation": "Request the user's list of device profiles on which the user is the primary user.\n        The response is either a UserPolycomPhoneServicesGetPrimaryEndpointListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPolycomPhoneServicesGetRequest", "tags": ["services"], "documentation": "Request the user's Polycom Phone Services attributes.\n        The response is either a UserPolycomPhoneServicesGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "UserPolycomPhoneServicesModifyRequest", "tags": ["services"], "documentation": "Modify the user's Polycom Phone Services attributes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "integratePhoneDirectoryWithBroadWorks", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUserPersonalPhoneListInDirectory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeGroupCustomContactDirectoryInDirectory", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "groupCustomContactDirectory", "required": false, "array": false, "type": "CustomContactDirectoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "EnterprisePreAlertingAnnouncementGetRequest", "tags": ["services"], "documentation": "Get the Enterprise pre-alerting service settings.\n        The response is either a EnterprisePreAlertingAnnouncementGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterprisePreAlertingAnnouncementModifyRequest", "tags": ["services"], "documentation": "Modify the enterprise level pre-alerting service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "announcementInterruption", "required": false, "array": false, "type": "PreAlertingAnnouncementInterrupt", "type_schema": "xs:token", "enum": ["Not Allowed", "Any Digit", "Digit Sequence"]}, {"name": "interruptionDigitSequence", "required": false, "array": false, "type": "PreAlertingAnnouncementInterruptDigits", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "audioSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioFile", "required": false, "array": false, "type": "ExtendedMediaFileResource", "schema": [[{"name": "file", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoFile", "required": false, "array": false, "type": "ExtendedMediaFileResource", "schema": [[{"name": "file", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}]]}, {"name": "GroupPreAlertingAnnouncementGetRequest20", "tags": ["services"], "documentation": "Get the group\u2019s PreAlertingservice settings.\n        The response is either a GroupPreAlertingAnnouncementGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupPreAlertingAnnouncementModifyRequest20", "tags": ["services"], "documentation": "Modify the group level pre-alerting service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "announcementInterruption", "required": false, "array": false, "type": "PreAlertingAnnouncementInterrupt", "type_schema": "xs:token", "enum": ["Not Allowed", "Any Digit", "Digit Sequence"]}, {"name": "interruptionDigitSequence", "required": false, "array": false, "type": "PreAlertingAnnouncementInterruptDigits", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "audioSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioFile", "required": false, "array": false, "type": "ExtendedMediaFileResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoFile", "required": false, "array": false, "type": "ExtendedMediaFileResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}]]}, {"name": "UserPreAlertingAnnouncementAddCriteriaRequest", "tags": ["services"], "documentation": "Add a criteria to the user's pre-alerting service.\n        The following elements are only used in AS data mode:\n          callToNumber\n\n        For the callToNumber, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "CriteriaFromDn", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "callToNumber", "required": false, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}, {"name": "UserPreAlertingAnnouncementDeleteCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the user's pre-alerting service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserPreAlertingAnnouncementGetCriteriaRequest21", "tags": ["services"], "documentation": "Get a criteria for the user's pre-alerting service.\n        The response is either a UserPreAlertingAnnouncementGetCriteriaResponse21 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserPreAlertingAnnouncementGetRequest20", "tags": ["services"], "documentation": "Get the user's pre-alerting service setting.\n        The response is either a UserPreAlertingAnnouncementGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPreAlertingAnnouncementModifyCriteriaRequest", "tags": ["services"], "documentation": "Modify a criteria for the user's pre-alerting service.\n        The following elements are only used in AS data mode:\n          callToNumber\n\n        For the callToNumbers in the callToNumberList, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "CriteriaFromDnModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "callToNumberList", "required": false, "array": false, "type": "ReplacementCallToNumberList", "schema": [[{"name": "callToNumber", "required": true, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]]}, {"name": "UserPreAlertingAnnouncementModifyRequest20", "tags": ["services"], "documentation": "Modify the user's pre-alerting service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "audioSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioFile", "required": false, "array": false, "type": "ExtendedMediaFileLevelResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoFile", "required": false, "array": false, "type": "ExtendedMediaFileLevelResource20", "schema": [[{"name": "file", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "url", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupPreferredCarrierGroupGetRequest", "tags": ["services"], "documentation": "Requests the currently configured carriers for a group.\n        The response is either a GroupPreferredCarrierGroupGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupPreferredCarrierGroupModifyRequest", "tags": ["services"], "documentation": "Modifies the currently configured carriers for a group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "intraLataCarrier", "required": false, "array": false, "type": "GroupPreferredCarrierNameModify", "schema": [[{"name": "useServiceProviderPreferredCarrier", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "carrier", "required": false, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "interLataCarrier", "required": false, "array": false, "type": "GroupPreferredCarrierNameModify", "schema": [[{"name": "useServiceProviderPreferredCarrier", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "carrier", "required": false, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "internationalCarrier", "required": false, "array": false, "type": "GroupPreferredCarrierNameModify", "schema": [[{"name": "useServiceProviderPreferredCarrier", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "carrier", "required": false, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "ServiceProviderPreferredCarrierAddRequest", "tags": ["services"], "documentation": "Add the country code preferred carriers for a service provider or enterprise. For each\n        combination of service provider and country code, you can assign an intra-lata, inter-lata,\n        and international carrier. Each of the three types of carriers is optional.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Note: At the system level, more than one carrier may be assigned to each country code.\n        At the service provider level, you must choose from the carriers assigned at the system level.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}, {"name": "intraLataCarrier", "required": false, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "interLataCarrier", "required": false, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "internationalCarrier", "required": false, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderPreferredCarrierDeleteRequest", "tags": ["services"], "documentation": "Delete the country code preferred carriers for a service provider or enterprise.\n        Note that this is different from unassigning all 3 types of carriers with\n        the ServiceProviderPreferredCarrierModifyRequest.\n        The response is either a SuccessResponse or an ErrorResponse.\n        An ErrorResponse will be returned if the country code preferred carriers were never added or\n        were already deleted.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}]]}, {"name": "ServiceProviderPreferredCarrierGetAvailableCountryCodeListRequest", "tags": ["services"], "documentation": "Requests the default country code and the list of unused country codes for a service provider / enterprise.\n        The response is either a ServiceProviderPreferredCarrierGetAvailableCountryCodeListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderPreferredCarrierGetCarrierListRequest", "tags": ["services"], "documentation": "Requests the lists of carriers for a specified country code for a service provider / enterprise.\n        The response is either a ServiceProviderPreferredCarrierGetCarrierListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}]]}, {"name": "ServiceProviderPreferredCarrierGetListRequest", "tags": ["services"], "documentation": "Requests a table of all the carriers defined in a specified service provider or enterprise.\n        The response is either a ServiceProviderPreferredCarrierGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderPreferredCarrierGetRequest", "tags": ["services"], "documentation": "Requests the currently configured carriers for a specified country code for a service provider / enterprise.\n        The response is either a ServiceProviderPreferredCarrierGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}]]}, {"name": "ServiceProviderPreferredCarrierModifyRequest", "tags": ["services"], "documentation": "Modify the country code preferred carriers for a service provider or enterprise. For each\n        combination of service provider and country code, you can assign an intra-lata, inter-lata,\n        and international carrier. Each of the 3 types of carriers is optional.\n        If an optional carrier is not specified, the assignment will not change.\n        To clear a preferred carrier, set the value to an empty string.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Note: At the system level, more than one carrier may be assigned to each country code.\n        At the service provider level, you must choose from the carriers assigned at the system level.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}, {"name": "intraLataCarrier", "required": false, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "interLataCarrier", "required": false, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "internationalCarrier", "required": false, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemPreferredCarrierAddRequest", "tags": ["services"], "documentation": "Add a carrier to the system.\n        More than one carrier may be assigned to each country code.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "carrier", "required": true, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "cic", "required": true, "array": false, "type": "PreferredCarrierIdCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 6}, {"name": "countryCode", "required": true, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}, {"name": "isIntraLata", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isInterLata", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isInternational", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SystemPreferredCarrierDeleteRequest", "tags": ["services"], "documentation": "Delete a carrier from the system.\n        The response is either a SuccessResponse or an ErrorResponse.\n        An ErrorResponse is returned if the carrier is in use, or if the carrier didn't exist prior to deletion..", "type": "core:OCIRequest", "schema": [[{"name": "carrier", "required": true, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemPreferredCarrierGetGroupListRequest", "tags": ["services"], "documentation": "Requests a list of groups using the specified carrier.  It is possible to restrict the\n        number of rows returned by specifying various search criteria. Multiple search criteria\n        are logically ANDed together.\n        The response is either a SystemPreferredCarrierGetGroupListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "carrier", "required": true, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupName", "required": false, "array": true, "type": "SearchCriteriaGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactServiceProvider", "required": false, "array": false, "type": "SearchCriteriaExactServiceProvider", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemPreferredCarrierGetListRequest", "tags": ["services"], "documentation": "Requests a table of all the carriers defined in the system.\n        The response is either a SystemPreferredCarrierGetListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemPreferredCarrierGetRequest", "tags": ["services"], "documentation": "Requests the attributes of carrier.\n        The response is either a SystemPreferreredCarrierGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "carrier", "required": true, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemPreferredCarrierGetUserListRequest", "tags": ["services"], "documentation": "Requests a list of users using the specified carrier.  It is possible to restrict the\n        number of rows returned by specifying various search criteria. Multiple search criteria\n        are logically ANDed together.\n        The response is either a SystemPreferreredCarrierGetUserListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "carrier", "required": true, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemPreferredCarrierModifyRequest", "tags": ["services"], "documentation": "Modify the attributes of a carrier.\n        The response is either a SuccessResponse or an ErrorResponse.\n        An ErrorResponse is returned if countryCode modification is attempted while the carrier is assigned to a service provider.\n        An ErrorResponse is returned if an attempt to set isIntraLata to false is made while the carrier is used as an intra-LATA carrier.\n        An ErrorResponse is returned if an attempt to set isInternational to false is made while the carrier is used as an international carrier.", "type": "core:OCIRequest", "schema": [[{"name": "carrier", "required": true, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "cic", "required": false, "array": false, "type": "PreferredCarrierIdCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 6}, {"name": "countryCode", "required": false, "array": false, "type": "CountryCode", "type_schema": "xs:NMTOKEN", "maxLength": 3}, {"name": "isIntraLata", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isInterLata", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isInternational", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserPreferredCarrierUserGetRequest", "tags": ["services"], "documentation": "Requests the currently configured preferred carriers for a user.\n        The response is either a UserPreferredCarrierUserGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPreferredCarrierUserModifyRequest", "tags": ["services"], "documentation": "Modifies the currently configured preferred carriers for a user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "intraLataCarrier", "required": false, "array": false, "type": "UserPreferredCarrierNameModify", "schema": [[{"name": "useGroupPreferredCarrier", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "carrier", "required": false, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "interLataCarrier", "required": false, "array": false, "type": "UserPreferredCarrierNameModify", "schema": [[{"name": "useGroupPreferredCarrier", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "carrier", "required": false, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "internationalCarrier", "required": false, "array": false, "type": "UserPreferredCarrierNameModify", "schema": [[{"name": "useGroupPreferredCarrier", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "carrier", "required": false, "array": false, "type": "PreferredCarrierName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "UserPrepaidGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Prepaid.\n        The response is either a UserPrepaidGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPrepaidModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Prepaid.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserPriorityAlertAddCriteriaRequest16", "tags": ["services"], "documentation": "Add a criteria to the user's priority alert service.\n        The following elements are only used in AS data mode:\n          callToNumber\n\n        For the callToNumber, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "PriorityAlertCriteriaFromDn", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "PriorityAlertCriteriaFromDnSelection", "type_schema": "xs:token", "enum": ["Any External", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "callToNumber", "required": false, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}, {"name": "UserPriorityAlertDeleteCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the user's priority alert service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserPriorityAlertGetCriteriaListRequest", "tags": ["services"], "documentation": "Get the user's priority alert criteria listing.\n        The response is either a UserPriorityAlertGetCriteriaListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPriorityAlertGetCriteriaRequest21", "tags": ["services"], "documentation": "Get a criteria for the user's priority alert service.\n        The response is either a UserPriorityAlertGetCriteriaResponse21 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserPriorityAlertModifyActiveCriteriaListRequest", "tags": ["services"], "documentation": "Activate the user's priority alert criteria list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserPriorityAlertModifyCriteriaRequest", "tags": ["services"], "documentation": "Modify a criteria for the user's priority alert service.\n        The following elements are only used in AS data mode:\n          callToNumberList\n\n        For the callToNumbers in the callToNumberList, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "PriorityAlertCriteriaFromDnModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "PriorityAlertCriteriaFromDnSelection", "type_schema": "xs:token", "enum": ["Any External", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callToNumberList", "required": false, "array": false, "type": "ReplacementCallToNumberList", "schema": [[{"name": "callToNumber", "required": true, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]]}, {"name": "GroupServiceInstancePrivacyGetRequest17sp4", "tags": ["services"], "documentation": "Request the data associated with Privacy for a service instance.\n        The response is either a GroupServiceInstancePrivacyGetResponse17sp4\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupServiceInstancePrivacyModifyRequest", "tags": ["services"], "documentation": "Modify the data associated with Privacy for a service instance.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableDirectoryPrivacy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAutoAttendantExtensionDialingPrivacy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAutoAttendantNameDialingPrivacy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserPrivacyGetAvailableMonitorsUserListRequest", "tags": ["services"], "documentation": "Retrieves a list of users in the enterprise or group available\n        for phone status monitoring the user specified in the userId\n        element.  The response is either\n        UserPrivacyGetAvailableMonitorsUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaImpId", "required": false, "array": true, "type": "SearchCriteriaImpId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserPrivacyGetRequest13mp17", "tags": ["services"], "documentation": "Request the user level data associated with Privacy.\n        This command is supported for regular users only.\n        The response is either a UserPrivacyGetResponse13mp17\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPrivacyModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Privacy.\n        This command is supported for regular users only.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableDirectoryPrivacy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAutoAttendantExtensionDialingPrivacy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAutoAttendantNameDialingPrivacy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enablePhoneStatusPrivacy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "permittedMonitorUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "UserPushToTalkGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of available users for the push to talk service.\n        The response is either UserPushToTalkGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaImpId", "required": false, "array": true, "type": "SearchCriteriaImpId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserPushToTalkGetRequest", "tags": ["services"], "documentation": "Request the push to talk service setting.\n        The response is either a UserPushToTalkGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPushToTalkModifyRequest", "tags": ["services"], "documentation": "Change the push to talk service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "allowAutoAnswer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "outgoingConnectionSelection", "required": false, "array": false, "type": "PushToTalkOutgoingConnectionSelection", "type_schema": "xs:token", "enum": ["One Way", "Two Way"]}, {"name": "accessListSelection", "required": false, "array": false, "type": "PushToTalkAccessListSelection", "type_schema": "xs:token", "enum": ["Allow Calls From Selected Users", "Allow Calls From Everyone Except Selected Users"]}, {"name": "selectedUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "SystemBroadWorksReceptionistEnterpriseGetRequest", "tags": ["services"], "documentation": "Request to get the list of BroadWorks Receptionist - Enterprise parameters.\n        The response is either SystemBroadWorksReceptionistEnterpriseGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemBroadWorksReceptionistEnterpriseModifyRequest", "tags": ["services"], "documentation": "Request to modify BroadWorks Receptionist - Enterprise settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "maxMonitoredUsers", "required": false, "array": false, "type": "MaximumMonitoredUsers", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1000.0}]]}, {"name": "UserBroadWorksReceptionistEnterpriseAddUserListRequest", "tags": ["services"], "documentation": "Add users to the BroadWorks Receptionist - Enterprise monitored user list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "monitoredUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserBroadWorksReceptionistEnterpriseDeleteUserListRequest", "tags": ["services"], "documentation": "Remove selected users from the BroadWorks Receptionist - Enterprise monitored user list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "monitoredUserId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserBroadWorksReceptionistEnterpriseGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of available users for BroadWorks Receptionist - Enterprise monitoring.\n        The response is either UserBroadWorksReceptionistEnterpriseGetAvailableUserListResponse or ErrorResponse.\n        The Receptionist Note column is only populated, if the user sending the request is the owner of the\n        Receptionist Note and a Note exists.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaImpId", "required": false, "array": true, "type": "SearchCriteriaImpId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaReceptionistNote", "required": false, "array": true, "type": "SearchCriteriaReceptionistNote", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ReceptionistNote", "type_schema": "xs:string", "minLength": 1, "maxLength": 256}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserBroadWorksReceptionistEnterpriseGetRequest", "tags": ["services"], "documentation": "Request the monitored users list for the BroadWorks Receptionist - Enterprise service.\n        The response is either a UserBroadWorksReceptionistEnterpriseGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserBroadWorksReceptionistEnterpriseModifyRequest", "tags": ["services"], "documentation": "Replace the BroadWorks Receptionist - Enterprise monitored user list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "monitoredUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "UserBroadWorksReceptionistEnterpriseNoteGetRequest", "tags": ["services"], "documentation": "Request the Receptionist notes for the specified Receptionist and Contact User IDs.\n        The response is either a UserBroadWorksReceptionistEnterpriseNoteGetResponse or an\n        ErrorResponse.  If the user sending the request is the not the owner of the\n        Receptionist Note, then an ErrorResponse will be returned.", "type": "core:OCIRequest", "schema": [[{"name": "receptionistUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"choice": [{"name": "contactUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "vonUser", "required": true, "array": false, "type": "VirtualOnNetUserKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]}]]}, {"name": "UserBroadWorksReceptionistEnterpriseNoteModifyListRequest", "tags": ["services"], "documentation": "Add a list of notes for an existing Receptionist user.\n        The response is either a SuccessResponse or an ErrorResponse.\n        If some of the users add and some users fail to add, then the\n        response will contain a WarningResponse containing only the\n        a comma delimited list of users that failed to add. If the user\n        sending the request is the not the owner of the Receptionist Note,\n        then an ErrorResponse will be returned.", "type": "core:OCIRequest", "schema": [[{"name": "receptionistUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "receptionistUserAndNote", "required": true, "array": true, "type": "ReceptionistContactUserAndNote", "schema": [[{"name": "note", "required": true, "array": false, "type": "ReceptionistNote", "type_schema": "xs:string", "minLength": 1, "maxLength": 256}, {"choice": [{"name": "contactUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "vonUser", "required": true, "array": false, "type": "VirtualOnNetUserKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]}]]}]]}, {"name": "UserBroadWorksReceptionistOfficeGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get the Receptionist Office available user list.\n        The response is either UserBroadWorksReceptionistOfficeGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaImpId", "required": false, "array": true, "type": "SearchCriteriaImpId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserBroadWorksReceptionistOfficeGetRequest", "tags": ["services"], "documentation": "Request the Receptionist Office parameters.\n        The response is either a UserBroadWorksReceptionistOfficeGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserBroadWorksReceptionistOfficeModifyRequest", "tags": ["services"], "documentation": "Replace the Receptionist Office monitored user list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "monitoredUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "UserBroadWorksReceptionistSmallBusinessGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of available users for the Receptionist Small Business service.\n        The response is either UserBroadWorksReceptionistSmallBusinessGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaImpId", "required": false, "array": true, "type": "SearchCriteriaImpId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserBroadWorksReceptionistSmallBusinessGetRequest", "tags": ["services"], "documentation": "Request the Receptionist Small Business parameters.\n        The response is either a UserBroadWorksReceptionistSmallBusinessGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserBroadWorksReceptionistSmallBusinessModifyRequest", "tags": ["services"], "documentation": "Replace the Receptionist Small Business monitored user list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "monitoredUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "UserRemoteOfficeGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Remote Office.\n        The response is either a UserRemoteOfficeGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserRemoteOfficeModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Remote Office.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "remoteOfficePhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "ResellerResourcePriorityGetRequest", "tags": ["services"], "documentation": "Get the Resource Priority service attributes for the reseller.\n        The response is either ResellerResourcePriorityGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}, {"name": "ResellerResourcePriorityModifyRequest", "tags": ["services"], "documentation": "Modify the Resource Priority service attributes for the reseller.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "useSystemSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sendResourcePriorityToNetwork", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "resourcePriority", "required": false, "array": false, "type": "ResourcePriorityValue", "type_schema": "xs:token", "enum": ["q735.0", "q735.1", "q735.2", "q735.3", "q735.4"]}]]}, {"name": "SystemResourcePriorityGetRequest", "tags": ["services"], "documentation": "Get the system Resource Priority service attributes.\n        The response is either SystemResourcePriorityGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": []}, {"name": "SystemResourcePriorityModifyRequest", "tags": ["services"], "documentation": "Modify the system Resource Priority service attributes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "sendResourcePriorityToNetwork", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "resourcePriority", "required": false, "array": false, "type": "ResourcePriorityValue", "type_schema": "xs:token", "enum": ["q735.0", "q735.1", "q735.2", "q735.3", "q735.4"]}]]}, {"name": "UserResourcePriorityGetRequest", "tags": ["services"], "documentation": "Get the Resource Priority settings of a user.\n        The response is either UserResourcePriorityGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserResourcePriorityModifyRequest", "tags": ["services"], "documentation": "Modify the Resource Priority settings of a user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useDefaultResourcePriority", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userResourcePriority", "required": false, "array": false, "type": "ResourcePriorityValue", "type_schema": "xs:token", "enum": ["q735.0", "q735.1", "q735.2", "q735.3", "q735.4"]}]]}, {"name": "EnterpriseRouteListEnterpriseTrunkNumberPrefixGetAvailableListRequest", "tags": ["services"], "documentation": "Request a list of number prefixes that are assigned to an enterprise and still available for assignment to users within the enterprise.\n        The response is either EnterpriseRouteListEnterpriseTrunkNumberPrefixGetAvailableListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseRouteListEnterpriseTrunkNumberPrefixGetSummaryListRequest", "tags": ["services"], "documentation": "Request a summary table of all enterprise trunk number prefixes in the enterprise.\n        The response is either EnterpriseRouteListEnterpriseTrunkNumberPrefixGetSummaryListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseRouteListEnterpriseTrunkNumberRangeGetAvailableListRequest", "tags": ["services"], "documentation": "Request a list of number ranges that are assigned to an enterprise and still available for assignment to users within the enterprise.\n        The response is either EnterpriseRouteListEnterpriseTrunkNumberRangeGetAvailableListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseRouteListEnterpriseTrunkNumberRangeGetSummaryListRequest", "tags": ["services"], "documentation": "Request a summary table of all enterprise trunk number ranges in the enterprise.\n        The response is either EnterpriseRouteListEnterpriseTrunkNumberRangeGetSummaryListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupRouteListEnterpriseTrunkNumberPrefixAssignListRequest", "tags": ["services"], "documentation": "Assign a list of service provider number prefixes to a group.\n        The number prefixes must have previously been added to the service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberPrefix", "required": false, "array": true, "type": "EnterpriseTrunkNumberPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "GroupRouteListEnterpriseTrunkNumberPrefixGetAvailableListRequest", "tags": ["services"], "documentation": "Request a list of number prefixess that are assigned to a group and still available for assignment to users within the group.\n        The response is either GroupRouteListEnterpriseTrunkNumberPrefixGetAvailableListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupRouteListEnterpriseTrunkNumberPrefixGetSummaryListRequest", "tags": ["services"], "documentation": "Get the list of assigned and unassigned enterprise trunknumber prefixes in a group.\n        The response is either GroupRouteListEnterpriseTrunkNumberPrefixGetSummaryListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupRouteListEnterpriseTrunkNumberPrefixUnassignListRequest", "tags": ["services"], "documentation": "Unassign a list of service provider number prefixes from a group. The number prefixes then become available for assignment to other groups.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberPrefix", "required": false, "array": true, "type": "EnterpriseTrunkNumberPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "GroupRouteListEnterpriseTrunkNumberRangeAssignListRequest", "tags": ["services"], "documentation": "Assign a list of service provider number ranges to a group.\n        The number ranges must have previously been added to the service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberRangeStart", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "GroupRouteListEnterpriseTrunkNumberRangeGetAvailableListRequest", "tags": ["services"], "documentation": "Request a list of number ranges that are assigned to a group and still available for assignment to users within the group.\n        The response is either GroupRouteListEnterpriseTrunkNumberRangeGetAvailableListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupRouteListEnterpriseTrunkNumberRangeGetSummaryListRequest", "tags": ["services"], "documentation": "Get the list of assigned and unassigned enterprise trunknumber ranges in a group.\n        The response is either GroupRouteListEnterpriseTrunkNumberRangeGetSummaryListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupRouteListEnterpriseTrunkNumberRangeUnassignListRequest", "tags": ["services"], "documentation": "Unassign a list of service provider number ranges from a group. The number ranges then become available for assignment to other groups.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberRangeStart", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberPrefixActivateListRequest", "tags": ["services"], "documentation": "Activate number prefixes in a service provider.\n        It is not an error to activate an already activated number prefix.\n        The command fails if executed when system level enterprise trunk number prefix activation is disabled.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberPrefix", "required": true, "array": true, "type": "EnterpriseTrunkNumberPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberPrefixAddListRequest22", "tags": ["services"], "documentation": "Add number prefixes to a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "prefix", "required": true, "array": true, "type": "EnterpriseTrunkNumberPrefix22", "schema": [[{"name": "numberPrefix", "required": true, "array": false, "type": "EnterpriseTrunkNumberPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extensionRange", "required": false, "array": false, "type": "ExtensionRange17", "schema": [[{"name": "minExtension", "required": true, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "maxExtension", "required": true, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberPrefixDeactivateListRequest", "tags": ["services"], "documentation": "Deactivate number prefixes in a service provider.\n        It is not an error to deactivate an already deactivated number prefix.\n        The command fails if executed when system level enterprise trunk number prefix activation is disabled.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberPrefix", "required": true, "array": true, "type": "EnterpriseTrunkNumberPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberPrefixDeleteListRequest", "tags": ["services"], "documentation": "Delete number prefixes from a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberPrefix", "required": true, "array": true, "type": "EnterpriseTrunkNumberPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberPrefixGetAvailableListRequest", "tags": ["services"], "documentation": "Request a list of available number prefixes not yet assigned to any group.\n        The response is either ServiceProviderRouteListEnterpriseTrunkNumberPrefixGetAvailableListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberPrefixGetSummaryListRequest", "tags": ["services"], "documentation": "Request a summary table of all enterprise trunk number prefixes in the service provider.\n        The response is either ServiceProviderRouteListEnterpriseTrunkPrefixGetSummaryListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberPrefixModifyListRequest", "tags": ["services"], "documentation": "Modify a list of number prefixes in a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberPrefix", "required": false, "array": true, "type": "EnterpriseTrunkNumberPrefixModify", "schema": [[{"name": "numberPrefix", "required": true, "array": false, "type": "EnterpriseTrunkNumberPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extensionRange", "required": false, "array": false, "type": "ExtensionRange17", "schema": [[{"name": "minExtension", "required": true, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "maxExtension", "required": true, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberRangeActivateListRequest", "tags": ["services"], "documentation": "Activate number ranges in a service provider.\n        It is not an error to activate an already activated number range.\n        The command fails if executed when system level enterprise trunk number range activation is disabled.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberRangeStart", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberRangeAddListRequest22", "tags": ["services"], "documentation": "Add number ranges to a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberRange", "required": true, "array": true, "type": "EnterpriseTrunkNumberRange", "schema": [[{"name": "dnRange", "required": true, "array": false, "type": "DNRange", "schema": [[{"name": "minPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "maxPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "extensionLength", "required": false, "array": false, "type": "ExtensionLength", "type_schema": "xs:int", "minimum": 2.0, "maximum": 20.0}]]}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberRangeDeactivateListRequest", "tags": ["services"], "documentation": "Deactivate number ranges in a service provider.\n        It is not an error to deactivate an already deactivated number range.\n        The command fails if executed when system level enterprise trunk number range activation is disabled.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberRangeStart", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberRangeDeleteListRequest", "tags": ["services"], "documentation": "Delete number ranges from a service provider.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberRangeStart", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberRangeGetAvailableListRequest", "tags": ["services"], "documentation": "Request a list of available number ranges not yet assigned to any group.\n        The response is either ServiceProviderRouteListEnterpriseTrunkNumberRangeGetAvailableListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberRangeGetSummaryListRequest", "tags": ["services"], "documentation": "Request a summary table of all enterprise trunk number ranges in the service provider.\n        The response is either ServiceProviderRouteListEnterpriseTrunkNumberRangeGetSummaryListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderRouteListEnterpriseTrunkNumberRangeModifyListRequest", "tags": ["services"], "documentation": "Modify a list of number ranges in a service provider\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "numberRange", "required": false, "array": true, "type": "EnterpriseTrunkNumberRangeModify", "schema": [[{"name": "dnRangeStart", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extensionLength", "required": false, "array": false, "type": "ExtensionLength", "type_schema": "xs:int", "minimum": 2.0, "maximum": 20.0}]]}]]}, {"name": "SystemRouteListEnterpriseTrunkNumberPrefixGetSummaryListRequest", "tags": ["services"], "documentation": "Request a summary table of all enterprise trunk prefixes in the system.\n        If resellerId is specified, only the prefixes assigned to the enterprise/service provider within\n        the given reseller are returned.\n        If reseller administrator sends the request and resellerId is not specified, the administrator's resellerId is used.\n\n        The response is either SystemRouteListEnterpriseTrunkNumberPrefixGetSummaryListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": false, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}, {"name": "SystemRouteListEnterpriseTrunkNumberRangeGetSummaryListRequest", "tags": ["services"], "documentation": "Request a summary table of all enterprise trunk number ranges in the system.\n        If resellerId is specified, the number ranges assigned to the enterprises/service providers\n        within the reseller are returned.\n        If reseller administrator sends the request and resellerId is not specified, the administrator's resellerId is used.\n\n        The response is either SystemRouteListEnterpriseTrunkNumberRangeGetSummaryListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": false, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}, {"name": "UserRouteListGetRequest22", "tags": ["services"], "documentation": "Get the route list setting and the list of number ranges assigned to a user.\n        The response is either UserRouteListGetResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserRouteListModifyRequest", "tags": ["services"], "documentation": "Modify the route list setting and the list of number ranges and number prefixes assigned to a user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "treatOriginationsAndPBXRedirectionsAsScreened", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useRouteListIdentityForNonEmergencyCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useRouteListIdentityForEmergencyCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "assignedNumberRangeStartList", "required": false, "array": false, "type": "ReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "assignedNumberPrefixList", "required": false, "array": false, "type": "EnterpriseTrunkReplacementNumberPrefixList", "schema": [[{"name": "numberPrefix", "required": true, "array": true, "type": "EnterpriseTrunkNumberPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "GroupRoutePointAddDNISRequest", "tags": ["services"], "documentation": "Add a Route Point DNIS.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "dnisPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "useCustomCLIDSettings", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useCustomDnisAnnouncementSettings", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowOutgoingACDCall", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupRoutePointAddInstanceRequest23", "tags": ["services"], "documentation": "Add a Route Point instance to a group.\n        The Route Point is a Call Center queue that performs the same function but\n        allows an external system to perform the distribution of calls instead of making\n        those decisions itself.\n        The domain is required in the serviceUserId.\n        The response is either SuccessResponse or ErrorResponse.\n        The Following elements are only used in AS data mode and ignored in XS data mode:\n\t      - sendCallAdmissionNotification, use value \u2018false\u2019 in XS data mode.\n\t      - callAdmissionTimerSeconds, use value \u20183\u2019 in XS data mode.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "externalPreferredAudioCodec", "required": true, "array": false, "type": "AudioFileCodec22", "type_schema": "xs:token", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB", "OPUS", "EVRC0", "EVRCNW", "EVRCNW0"]}, {"name": "internalPreferredAudioCodec", "required": true, "array": false, "type": "AudioFileCodec22", "type_schema": "xs:token", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB", "OPUS", "EVRC0", "EVRCNW", "EVRCNW0"]}, {"name": "queueLength", "required": true, "array": false, "type": "CallCenterQueueLength16", "type_schema": "xs:int", "minimum": 0.0, "maximum": 525.0}, {"name": "noAnswerTimeoutRings", "required": true, "array": false, "type": "NoAnswerTimeoutRings", "type_schema": "xs:int", "minimum": 2.0, "maximum": 20.0}, {"name": "enableVideo", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "playRingingWhenOfferingCall", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "overrideAgentWrapUpTime", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wrapUpSeconds", "required": false, "array": false, "type": "CallCenterWrapUpSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 3600.0}, {"name": "enableAutomaticStateChangeForAgents", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "agentStateAfterCall", "required": true, "array": false, "type": "AgentACDAutomaticState", "type_schema": "xs:token", "enum": ["Available", "Unavailable", "Wrap-Up"]}, {"name": "agentUnavailableCode", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "forceDeliveryOfCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceDeliveryWaitTimeSeconds", "required": false, "array": false, "type": "CallCenterForceDeliveryWaitTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "sendCallAdmissionNotification", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callAdmissionTimerSeconds", "required": true, "array": false, "type": "RoutePointCallAdmissionTimerSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "enableUnlimitedQueueLength", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupRoutePointBouncedCallGetRequest", "tags": ["services"], "documentation": "Get a route point's bounced call settings.\n        The response is either a GroupRoutePointBouncedCallGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointBouncedCallModifyRequest", "tags": ["services"], "documentation": "Modify a route point's bounced call settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "numberOfRingsBeforeBouncingCall", "required": false, "array": false, "type": "HuntNoAnswerRings", "type_schema": "xs:int", "minimum": 1.0, "maximum": 20.0}, {"name": "enableTransfer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "bounceCallWhenAgentUnavailable", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupRoutePointDeleteDNISRequest", "tags": ["services"], "documentation": "Delete a route point's DNIS.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "GroupRoutePointDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a Route Point instance from a group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointDistinctiveRingingGetRequest", "tags": ["services"], "documentation": "Get the distinctive ringing configuration values for route point.\n        The response is either a GroupRoutePointDistinctiveRingingGetResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointDistinctiveRingingModifyRequest", "tags": ["services"], "documentation": "Modify the distinctive ringing configuration values for route point.\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableDistinctiveRinging", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "distinctiveRingingRingPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}, {"name": "distinctiveRingingForceDeliveryRingPattern", "required": false, "array": false, "type": "RingPattern", "type_schema": "xs:token", "enum": ["Normal", "Long-Long", "Short-Short-Long", "Short-Long-Short"]}]]}, {"name": "GroupRoutePointForcedForwardingGetRequest20", "tags": ["services"], "documentation": "Get a route point's forced forwarding settings.\n        The response is either a GroupRoutePointForcedForwardingGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointForcedForwardingModifyRequest20", "tags": ["services"], "documentation": "Modify a route point's forced forwarding settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forwardToPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "playAnnouncementBeforeForwarding", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "audioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "videoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}]]}, {"name": "GroupRoutePointGetAnnouncementRequest22", "tags": ["services"], "documentation": "Get a route point's announcement settings.\n        The response is either a GroupRoutePointGetAnnouncementResponse22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointGetDNISAgentListRequest", "tags": ["services"], "documentation": "Get a list of agent who selected the DNIS as the outgoing call.\n        The response is either GroupRoutePointGetDNISAgentListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "GroupRoutePointGetDNISAnnouncementRequest22", "tags": ["services"], "documentation": "Get a route point's DNIS Announcements\n        The response is either a GroupRoutePointGetDNISAnnouncementResponse22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "GroupRoutePointGetDNISListRequest", "tags": ["services"], "documentation": "Get a list of DNIS that are configured for a Route Point.\n        The response is either GroupRoutePointGetDNISListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointGetDNISRequest", "tags": ["services"], "documentation": "Get a route point's DNIS.\n        The response is either a GroupRoutePointGetDNISResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "GroupRoutePointGetFailoverPolicyRequest", "tags": ["services"], "documentation": "Get the route point failover policy.\n        The response is either a GroupRoutePointGetFailoverPolicyResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointGetInstanceListRequest", "tags": ["services"], "documentation": "Get a list of Route Point instances within a group.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        The response is either GroupRoutePointGetInstanceListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupDepartmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaRoutePointName", "required": false, "array": true, "type": "SearchCriteriaRoutePointName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupRoutePointGetInstanceRequest23", "tags": ["services"], "documentation": "Request to get all the information of a Route Point instance.\n        The response is either GroupRoutePointGetInstanceResponse19sp1 or ErrorResponse.\n        The Following elements are only used in AS data mode and ignored in XS data mode:\n\t    - sendCallAdmissionNotification, use value \u2018false\u2019 in XS data mode.\n\t    - callAdmissionTimerSeconds, use value \u20183\u2019 in XS data mode.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointHolidayServiceGetRequest20", "tags": ["services"], "documentation": "Get a route point's holiday service settings.\n        The response is either a GroupRoutePointHolidayServiceGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointHolidayServiceModifyRequest20", "tags": ["services"], "documentation": "Modify a route point's holiday service settings.\n        Only Group and Enterprise level schedules are accepted.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "action", "required": false, "array": false, "type": "CallCenterScheduledServiceAction", "type_schema": "xs:token", "enum": ["None", "Busy", "Transfer"]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "playAnnouncementBeforeAction", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "audioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "videoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}]]}, {"name": "GroupRoutePointManualFailoverRequest", "tags": ["services"], "documentation": "Initiate manual failover for the Route Point.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointModifyActiveInstanceListRequest", "tags": ["services"], "documentation": "Request to set the active status of Route Point instances.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceActivation", "required": false, "array": true, "type": "ServiceActivation", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupRoutePointModifyAnnouncementRequest20", "tags": ["services"], "documentation": "Modify a route point's announcement settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "mediaOnHoldSource", "required": false, "array": false, "type": "CallCenterMediaOnHoldSourceModify20", "schema": [[{"name": "audioMessageSourceSelection", "required": false, "array": false, "type": "CallCenterMediaOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["Default", "URL", "Custom", "External"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "externalAudioSource", "required": false, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "videoMessageSourceSelection", "required": false, "array": false, "type": "CallCenterMediaOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["Default", "URL", "Custom", "External"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "externalVideoSource", "required": false, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}]]}]]}, {"name": "GroupRoutePointModifyDNISAnnouncementRequest20", "tags": ["services"], "documentation": "Modify a route point DNIS announcement settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "mediaOnHoldSource", "required": false, "array": false, "type": "CallCenterMediaOnHoldSourceModify20", "schema": [[{"name": "audioMessageSourceSelection", "required": false, "array": false, "type": "CallCenterMediaOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["Default", "URL", "Custom", "External"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "externalAudioSource", "required": false, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}, {"name": "videoMessageSourceSelection", "required": false, "array": false, "type": "CallCenterMediaOnHoldMessageSelection", "type_schema": "xs:token", "enum": ["Default", "URL", "Custom", "External"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "externalVideoSource", "required": false, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}]]}]]}, {"name": "GroupRoutePointModifyDNISParametersRequest", "tags": ["services"], "documentation": "Modify the setting that are configured for all the DNIS in a Route Point.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "displayDNISNumber", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "displayDNISName", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupRoutePointModifyDNISRequest", "tags": ["services"], "documentation": "Modify a route point's DNIS settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "dnisKey", "required": true, "array": false, "type": "DNISKey", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "newDNISName", "required": false, "array": false, "type": "DNISName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "dnisPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "useCustomCLIDSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useCustomDnisAnnouncementSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowOutgoingACDCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupRoutePointModifyFailoverPolicyRequest", "tags": ["services"], "documentation": "Modify the route point failover policy.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableFailoverSupport", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "externalSystem", "required": false, "array": false, "type": "RoutePointExternalSystem", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "failoverPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "perCallEnableFailoverSupport", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "perCallCallFailureTimeoutSeconds", "required": false, "array": false, "type": "RoutePointCallFailureTimeout", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "perCallOutboundCallFailureTimeoutSeconds", "required": false, "array": false, "type": "RoutePointCallFailureTimeout", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "perCallFailoverPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointModifyInstanceRequest22", "tags": ["services"], "documentation": "Request to modify a Route Point instance.\n        The response is either SuccessResponse or ErrorResponse.\n        The Following elements are only used in AS data mode and ignored in XS data mode:\n\t    - sendCallAdmissionNotification, use value \u2018false\u2019 in XS data mode.\n\t    - callAdmissionTimerSeconds, use value \u20183\u2019 in XS data mode.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "externalPreferredAudioCodec", "required": false, "array": false, "type": "AudioFileCodec22", "type_schema": "xs:token", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB", "OPUS", "EVRC0", "EVRCNW", "EVRCNW0"]}, {"name": "internalPreferredAudioCodec", "required": false, "array": false, "type": "AudioFileCodec22", "type_schema": "xs:token", "enum": ["None", "G711", "G722", "G729", "G726", "AMR", "AMR-WB", "OPUS", "EVRC0", "EVRCNW", "EVRCNW0"]}, {"name": "queueLength", "required": false, "array": false, "type": "CallCenterQueueLength16", "type_schema": "xs:int", "minimum": 0.0, "maximum": 525.0}, {"name": "noAnswerTimeoutRings", "required": false, "array": false, "type": "NoAnswerTimeoutRings", "type_schema": "xs:int", "minimum": 2.0, "maximum": 20.0}, {"name": "enableVideo", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "playRingingWhenOfferingCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "overrideAgentWrapUpTime", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wrapUpSeconds", "required": false, "array": false, "type": "CallCenterWrapUpSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 3600.0}, {"name": "enableAutomaticStateChangeForAgents", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "agentStateAfterCall", "required": false, "array": false, "type": "AgentACDAutomaticState", "type_schema": "xs:token", "enum": ["Available", "Unavailable", "Wrap-Up"]}, {"name": "agentUnavailableCode", "required": false, "array": false, "type": "CallCenterAgentUnavailableCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "forceDeliveryOfCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceDeliveryWaitTimeSeconds", "required": false, "array": false, "type": "CallCenterForceDeliveryWaitTimeSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "sendCallAdmissionNotification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callAdmissionTimerSeconds", "required": false, "array": false, "type": "RoutePointCallAdmissionTimerSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "enableUnlimitedQueueLength", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupRoutePointNightServiceGetRequest20", "tags": ["services"], "documentation": "Get a route point's night service settings.\n        The response is either a GroupRoutePointNightServiceGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointNightServiceModifyRequest20", "tags": ["services"], "documentation": "Modify a route point's night service settings.\n        Only Group and Enterprise level schedules are accepted.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "action", "required": false, "array": false, "type": "CallCenterScheduledServiceAction", "type_schema": "xs:token", "enum": ["None", "Busy", "Transfer"]}, {"name": "businessHours", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "forceNightService", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "playAnnouncementBeforeAction", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "audioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "videoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "manualAnnouncementMode", "required": false, "array": false, "type": "CallCenterManualNightServiceAnnouncementMode", "type_schema": "xs:token", "enum": ["Normal Announcement", "Manual Announcement"]}, {"name": "manualAudioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "manualAudioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "manualAudioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "manualVideoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "manualVideoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "manualVideoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}]]}, {"name": "GroupRoutePointOverflowGetRequest20", "tags": ["services"], "documentation": "Get a route point's overflow settings.\n        The response is either a GroupRoutePointOverflowGetResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointOverflowModifyRequest20", "tags": ["services"], "documentation": "Modify a route point's overflow settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "action", "required": false, "array": false, "type": "CallCenterOverflowProcessingAction", "type_schema": "xs:token", "enum": ["Busy", "Transfer", "Ringing"]}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "overflowAfterTimeout", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "timeoutSeconds", "required": false, "array": false, "type": "HuntForwardTimeoutSeconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 7200.0}, {"name": "playAnnouncementBeforeOverflowProcessing", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "audioMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "audioUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "audioFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "videoMessageSelection", "required": false, "array": false, "type": "ExtendedFileResourceSelection", "type_schema": "xs:token", "enum": ["File", "URL", "Default"]}, {"name": "videoUrlList", "required": false, "array": false, "type": "CallCenterAnnouncementURLListModify", "schema": [[{"name": "url1", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url2", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url3", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "url4", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "videoFileList", "required": false, "array": false, "type": "CallCenterAnnouncementFileListModify20", "schema": [[{"name": "file1", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file2", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file3", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "file4", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}]]}, {"name": "GroupRoutePointQueueCallDispositionCodeAddRequest", "tags": ["services"], "documentation": "Add a Route Point Call Disposition Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "CallDispositionCode"}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "CallDispositionCodeDescription", "type_schema": "CallDispositionCodeDescription"}]]}, {"name": "GroupRoutePointQueueCallDispositionCodeDeleteRequest", "tags": ["services"], "documentation": "Delete a Route Point Call Disposition Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "CallDispositionCode"}]]}, {"name": "GroupRoutePointQueueCallDispositionCodeGetListRequest", "tags": ["services"], "documentation": "Get the list of Route Point Level and Organization Level Call Disposition Codes.\n        The response is either GroupRoutePointQueueCallDispositionCodeGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointQueueCallDispositionCodeGetRequest", "tags": ["services"], "documentation": "Get a Route Point Call Disposition Code.\n        The response is either GroupRoutePointQueueCallDispositionCodeGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "CallDispositionCode"}]]}, {"name": "GroupRoutePointQueueCallDispositionCodeModifyRequest", "tags": ["services"], "documentation": "Modify a Route Point Call Disposition Code.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "code", "required": true, "array": false, "type": "CallDispositionCode", "type_schema": "CallDispositionCode"}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "description", "required": false, "array": false, "type": "CallDispositionCodeDescription", "type_schema": "CallDispositionCodeDescription"}]]}, {"name": "GroupRoutePointQueueCallDispositionCodeSettingsGetRequest", "tags": ["services"], "documentation": "Request the queue level data associated with Route Point Call Disposition Code Settings.\n        The response is either an GroupRoutePointQueueCallDispositionCodeSettingsGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupRoutePointQueueCallDispositionCodeSettingsModifyRequest", "tags": ["services"], "documentation": "Modify the queue level data associated with Route Point Agents Unavailable Code Settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableCallDispositionCodes", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeOrganizationCodes", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "forceUseOfCallDispositionCodes", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "defaultCallDispositionCode", "required": false, "array": false, "type": "CallDispositionCodeWithLevel", "type_schema": "CallDispositionCodeWithLevel"}, {"name": "callDispositionCodeActivation", "required": false, "array": true, "type": "CallDispositionCodeActivation", "type_schema": "CallDispositionCodeActivation"}]]}, {"name": "UserRoutePointCallDispositionCodeGetAvailableListRequest", "tags": ["services"], "documentation": "Get the list of available Route Point Call Disposition Codes to be used by a client.\n        The response is either UserRoutePointCallDispositionCodeGetAvailableListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserRoutePointSupervisorGetListRequest", "tags": ["services"], "documentation": "Get a list of Route Point supervisors assigned to a user.\n        The response is either a\n        UserRoutePointSupervisorGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserRoutePointSupervisorModifyListRequest", "tags": ["services"], "documentation": "Request to modify the Route Point supervisor list for a user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "supervisorUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "GroupTrunkGroupSecurityClassificationGetRequest", "tags": ["services"], "documentation": "Get a trunk group's Security Classifications configuration.\n        The response is either GroupTrunkGroupSecurityClassificationGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "trunkGroupKey", "required": true, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}, {"name": "GroupTrunkGroupSecurityClassificationModifyRequest", "tags": ["services"], "documentation": "Modify a trunk group's Security Classification configuration\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "trunkGroupKey", "required": true, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "defaultSecurityClassification", "required": true, "array": false, "type": "SecurityClassificationName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "SystemSecurityClassificationAddClassificationRequest", "tags": ["services"], "documentation": "Add a new Security Classification\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "securityClassificationName", "required": true, "array": false, "type": "SecurityClassificationName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "audioFile", "required": true, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "SystemSecurityClassificationDeleteClassificationRequest", "tags": ["services"], "documentation": "Delete a System Security Classification\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "securityClassificationName", "required": true, "array": false, "type": "SecurityClassificationName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "SystemSecurityClassificationGetClassificationRequest", "tags": ["services"], "documentation": "Get a system Security Classification.\n        The response is either SystemSecurityClassificationGetClassificationResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "securityClassificationName", "required": true, "array": false, "type": "SecurityClassificationName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "SystemSecurityClassificationGetClassificationTrunkGroupUsageListRequest", "tags": ["services"], "documentation": "Get a list of users that currently have the specified Security Classification assigned.\n        The response is either SystemSecurityClassificationGetClassificationTrunkGroupUsageListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "securityClassification", "required": true, "array": false, "type": "SecurityClassificationName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaTrunkGroupName", "required": false, "array": true, "type": "SearchCriteriaTrunkGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactOrganizationType", "required": false, "array": false, "type": "SearchCriteriaExactOrganizationType", "schema": [[{"name": "organizationType", "required": true, "array": false, "type": "OrganizationType", "type_schema": "xs:token", "enum": ["Service Provider", "Enterprise"]}]]}]]}, {"name": "SystemSecurityClassificationGetClassificationUserUsageListRequest", "tags": ["services"], "documentation": "Get a list of users that currently have the specified Security Classification assigned.\n        The response is either SystemSecurityClassificationGetClassificationUserUsageListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "securityClassification", "required": true, "array": false, "type": "SecurityClassificationName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemSecurityClassificationGetRequest21", "tags": ["services"], "documentation": "Get system Security Classifications parameters.\n        The response is either SystemSecurityClassificationGetResponse21 or ErrorResponse.", "type": "core:OCIRequest", "schema": []}, {"name": "SystemSecurityClassificationModifyClassificationRequest", "tags": ["services"], "documentation": "Modify a Security Classification\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "securityClassificationName", "required": true, "array": false, "type": "SecurityClassificationName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "newSecurityClassificationName", "required": false, "array": false, "type": "SecurityClassificationName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "audioFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "SystemSecurityClassificationModifyRequest", "tags": ["services"], "documentation": "Modify security classification parameters.\n        The response is either a SuccessResponse or an ErrorResponse.\n        NOTE: The security classifications must be specified in order of priority. The command fails if all the security classifications defined for the system are not provided.", "type": "core:OCIRequest", "schema": [[{"name": "meetMeAnncThreshold", "required": false, "array": false, "type": "SecurityClassificationMeetMeConferenceAnnouncementThresholdSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 30.0}, {"name": "playTrunkUserSecurityClassificationAnnouncement", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "securityClassificationName", "required": false, "array": true, "type": "SecurityClassificationName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "UserSecurityClassificationGetRequest22", "tags": ["services"], "documentation": "Get a user's Security Classifications configuration.\n        The response is either UserSecurityClassificationGetResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSecurityClassificationModifyRequest", "tags": ["services"], "documentation": "Modify a user's Security Classification configuration\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "securityClassification", "required": true, "array": false, "type": "SecurityClassificationName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "UserSelectiveCallAcceptanceAddCriteriaRequest16", "tags": ["services"], "documentation": "Add a criteria to the user's selective call acceptance service.\n        The following elements are only used in AS data mode:\n          callToNumber\n\n        For the callToNumber, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "CriteriaFromDn", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "callToNumber", "required": false, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}, {"name": "UserSelectiveCallAcceptanceDeleteCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the user's selective call acceptance service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserSelectiveCallAcceptanceGetCriteriaListRequest", "tags": ["services"], "documentation": "Get the user's selective call acceptance criteria listing.\n        The response is either a UserSelectiveCallAcceptanceGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSelectiveCallAcceptanceGetCriteriaRequest21", "tags": ["services"], "documentation": "Get a criteria for the user's selective call acceptance service.\n        The response is either a UserSelectiveCallAcceptanceGetCriteriaResponse21 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserSelectiveCallAcceptanceModifyActiveCriteriaListRequest", "tags": ["services"], "documentation": "Activate the user's selective call acceptance criteria list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserSelectiveCallAcceptanceModifyCriteriaRequest", "tags": ["services"], "documentation": "Modify a criteria for the user's selective call acceptance service.\n        The following elements are only used in AS data mode:\n          callToNumberList\n\n        For the callToNumbers in the callToNumberList, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "CriteriaFromDnModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callToNumberList", "required": false, "array": false, "type": "ReplacementCallToNumberList", "schema": [[{"name": "callToNumber", "required": true, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]]}, {"name": "UserSelectiveCallRejectionAddCriteriaRequest16", "tags": ["services"], "documentation": "Add a criteria to the user's selective call rejection service.\n        The following elements are only used in AS data mode:\n          callToNumber\n\n        For the callToNumber, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "SelectiveCallRejectionCriteriaCallType", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "SelectiveCallRejectionCriteriaCallTypeSelection", "type_schema": "xs:token", "enum": ["Any", "Forwarded", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callToNumber", "required": false, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}, {"name": "UserSelectiveCallRejectionDeleteCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the user's selective call rejection service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserSelectiveCallRejectionGetCriteriaListRequest", "tags": ["services"], "documentation": "Get the user's selective call rejection criteria listing.\n        The response is either a UserSelectiveCallRejectionGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSelectiveCallRejectionGetCriteriaRequest21", "tags": ["services"], "documentation": "Get a criteria for the user's selective call rejection service.\n        The response is either a UserSelectiveCallRejectionGetCriteriaResponse21 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserSelectiveCallRejectionModifyActiveCriteriaListRequest", "tags": ["services"], "documentation": "Activate the user's selective call rejection criteria list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserSelectiveCallRejectionModifyCriteriaRequest16", "tags": ["services"], "documentation": "Modify a criteria for the user's selective call rejection service.\n        The following elements are only used in AS data mode:\n          callToNumberList\n\n        For the callToNumbers in the callToNumberList, the extension element is not used and the number element is only used when the type is BroadWorks Mobility.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "SelectiveCallRejectionCriteriaCallTypeModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "SelectiveCallRejectionCriteriaCallTypeSelection", "type_schema": "xs:token", "enum": ["Any", "Forwarded", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callToNumberList", "required": false, "array": false, "type": "ReplacementCallToNumberList", "schema": [[{"name": "callToNumber", "required": true, "array": true, "type": "CallToNumber", "schema": [[{"name": "type", "required": true, "array": false, "type": "CallToNumberType", "type_schema": "xs:token", "enum": ["Primary", "Alternate1", "Alternate2", "Alternate3", "Alternate4", "Alternate5", "Alternate6", "Alternate7", "Alternate8", "Alternate9", "Alternate10", "BroadWorks Mobility"]}, {"name": "number", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]]}, {"name": "UserSequentialRingAddCriteriaRequest16", "tags": ["services"], "documentation": "Add a criteria to the user's sequential ring service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "CriteriaFromDn", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "UserSequentialRingDeleteCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the user's sequential ring service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserSequentialRingGetCriteriaRequest16", "tags": ["services"], "documentation": "Get a criteria for the user's sequential ring service.\n        The response is either a UserSequentialRingGetCriteriaResponse16 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserSequentialRingGetRequest14sp4", "tags": ["services"], "documentation": "Get the user's sequential ring service setting.\n        The response is either a UserSequentialRingGetResponse14sp4 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSequentialRingModifyCriteriaRequest", "tags": ["services"], "documentation": "Modify a criteria for the user's sequential ring service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "CriteriaFromDnModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserSequentialRingModifyRequest", "tags": ["services"], "documentation": "Modify the user's sequential ring service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "ringBaseLocationFirst", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "baseLocationNumberOfRings", "required": false, "array": false, "type": "SequentialRingNumberOfRings", "type_schema": "xs:int", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}, {"name": "continueIfBaseLocationIsBusy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "callerMayStopSearch", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "Location01", "required": false, "array": false, "type": "SequentialRingLocationModify", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "numberOfRings", "required": false, "array": false, "type": "SequentialRingNumberOfRings", "type_schema": "xs:int", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}, {"name": "answerConfirmationRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "Location02", "required": false, "array": false, "type": "SequentialRingLocationModify", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "numberOfRings", "required": false, "array": false, "type": "SequentialRingNumberOfRings", "type_schema": "xs:int", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}, {"name": "answerConfirmationRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "Location03", "required": false, "array": false, "type": "SequentialRingLocationModify", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "numberOfRings", "required": false, "array": false, "type": "SequentialRingNumberOfRings", "type_schema": "xs:int", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}, {"name": "answerConfirmationRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "Location04", "required": false, "array": false, "type": "SequentialRingLocationModify", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "numberOfRings", "required": false, "array": false, "type": "SequentialRingNumberOfRings", "type_schema": "xs:int", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}, {"name": "answerConfirmationRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "Location05", "required": false, "array": false, "type": "SequentialRingLocationModify", "schema": [[{"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "numberOfRings", "required": false, "array": false, "type": "SequentialRingNumberOfRings", "type_schema": "xs:int", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}, {"name": "answerConfirmationRequired", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupSeriesCompletionAddInstanceRequest", "tags": ["services"], "documentation": "Adds a Series Completion group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userId", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupSeriesCompletionDeleteInstanceRequest", "tags": ["services"], "documentation": "Deletes a Series Completion group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupSeriesCompletionGetAvailableUserListRequest", "tags": ["services"], "documentation": "Get a list of users that can be assigned to a Series Completion group.\n        The available user list for a new Series Completion group can be obtained\n        by not setting the name.\n        The response is either GroupSeriesCompletionGetAvailableUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": false, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupSeriesCompletionGetInstanceListRequest", "tags": ["services"], "documentation": "Request to get a list of Series Completion instances within a group.\n        The response is either GroupSeriesCompletionGetInstanceListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupSeriesCompletionGetInstanceRequest", "tags": ["services"], "documentation": "Gets a Series Completion group.\n        The response is either GroupSeriesCompletionGetInstanceResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupSeriesCompletionModifyInstanceRequest", "tags": ["services"], "documentation": "Modifies a Series Completion group. Replaces the entire list of users in the group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newName", "required": false, "array": false, "type": "ServiceInstanceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "UserSeriesCompletionGetRequest", "tags": ["services"], "documentation": "Gets the details of the Series Completion group that a user belongs to (if any).\n        Any user can only belong to one Series Completion group.\n        The response is either UserSeriesCompletionGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSharedCallAppearanceAddEndpointRequest22", "tags": ["services"], "documentation": "Associate an access device instance to the user's Shared Call Appearance.\n\n        The following elements are ignored in XS data mode:\n          allowVideo, useValue true in AS data mode\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "AccessDeviceEndpointAndHotlineAdd", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "privateIdentity", "required": false, "array": false, "type": "AccessDeviceEndpointPrivateIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}, {"name": "useHotline", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowOrigination", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowTermination", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowVideo", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserSharedCallAppearanceDeleteEndpointListRequest14", "tags": ["services"], "documentation": "Disassociate one or more of a user's Shared Call Appearance endpoints.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "accessDeviceEndpoint", "required": true, "array": true, "type": "AccessDeviceEndpointKey", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "UserSharedCallAppearanceGetEndpointRequest22", "tags": ["services"], "documentation": "Get the user's Shared Call Appearance endpoint setting.\n        The response is either a UserSharedCallAppearanceGetEndpointResponse22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "AccessDeviceEndpointKey", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "UserSharedCallAppearanceGetRequest21sp1", "tags": ["services"], "documentation": "Get the user's Shared Call Appearance service setting.\n        The response is either a UserSharedCallAppearanceGetResponse21sp1 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSharedCallAppearanceModifyEndpointRequest", "tags": ["services"], "documentation": "Associate/Disassociate an access device instance to the user's Shared Call Appearance.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          useHotline\n          hotlineContact\n\n         The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "AccessDeviceEndpointKey", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowOrigination", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowTermination", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useHotline", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSharedCallAppearanceModifyRequest", "tags": ["services"], "documentation": "Modify the user's Shared Call Appearance service setting.\n         The response is either a SuccessResponse or an ErrorResponse.\n\n         The following elements are only used in XS data mode and ignored in AS data mode:\n           useUserPrimaryWithAlternateCallsSetting\n           allowSimultaneousPrimaryAndAlternate\n           restrictCallRetrieveOfPrimary\n           restrictCallBridgingOfPrimary", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alertAllAppearancesForClickToDialCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "alertAllAppearancesForGroupPagingCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowSCACallRetrieve", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "multipleCallArrangementIsActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowBridgingBetweenLocations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "bridgeWarningTone", "required": false, "array": false, "type": "SharedCallAppearanceBridgeWarningTone", "type_schema": "xs:token", "enum": ["None", "Barge-In", "Barge-In and Repeat"]}, {"name": "enableCallParkNotification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useUserPrimaryWithAlternateCallsSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowSimultaneousPrimaryAndAlternateCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "restrictCallRetrieveOfPrimaryCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "restrictCallBridgingOfPrimaryCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserSilentAlertingGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Silent Alerting service.\n        The response is either a UserSilentAlertingGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSilentAlertingModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Silent Alerting service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserSimultaneousRingFamilyAddCriteriaRequest", "tags": ["services"], "documentation": "Add a criteria to the user's simultaneous ring family service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "CriteriaFromDn", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "UserSimultaneousRingFamilyDeleteCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the user's simultaneous ring family service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserSimultaneousRingFamilyGetCriteriaRequest", "tags": ["services"], "documentation": "Get a criteria for the user's simultaneous ring family service.\n        The response is either a UserSimultaneousRingFamilyGetCriteriaResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserSimultaneousRingFamilyGetRequest17", "tags": ["services"], "documentation": "Get the user's simultaneous ring family service setting.\n        The response is either a UserSimultaneousRingFamilyGetResponse17 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSimultaneousRingFamilyModifyCriteriaRequest", "tags": ["services"], "documentation": "Modify a criteria for the user's simultaneous ring family service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "CriteriaFromDnModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}]]}, {"name": "UserSimultaneousRingFamilyModifyRequest17", "tags": ["services"], "documentation": "Modify the user's simultaneous ring family service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "doNotRingIfOnCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "simultaneousRingNumberList", "required": false, "array": false, "type": "SimultaneousRingReplacementNumberList", "schema": [[{"name": "simultaneousRingNumber", "required": true, "array": true, "type": "SimultaneousRingNumber", "schema": [[{"name": "phoneNumber", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "answerConfirmationRequired", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserSimultaneousRingPersonalAddCriteriaRequest", "tags": ["services"], "documentation": "Add a criteria to the user's simultaneous ring personal service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": true, "array": false, "type": "CriteriaFromDn", "schema": [[{"name": "fromDnCriteriaSelection", "required": true, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "UserSimultaneousRingPersonalDeleteCriteriaRequest", "tags": ["services"], "documentation": "Delete a criteria from the user's simultaneous ring personal service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserSimultaneousRingPersonalGetCriteriaRequest", "tags": ["services"], "documentation": "Get a criteria for the user's simultaneous ring personal service.\n        The response is either a UserSimultaneousRingPersonalGetCriteriaResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserSimultaneousRingPersonalGetRequest17", "tags": ["services"], "documentation": "Get the user's simultaneous ring personal service setting.\n        The response is either a UserSimultaneousRingPersonalGetResponse17 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSimultaneousRingPersonalModifyCriteriaRequest", "tags": ["services"], "documentation": "Modify a criteria for the user's simultaneous ring personal service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newCriteriaName", "required": false, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "timeSchedule", "required": false, "array": false, "type": "TimeSchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "holidaySchedule", "required": false, "array": false, "type": "HolidaySchedule", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}, {"name": "name", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "blacklisted", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "fromDnCriteria", "required": false, "array": false, "type": "CriteriaFromDnModify", "schema": [[{"name": "fromDnCriteriaSelection", "required": false, "array": false, "type": "CriteriaDnSelection", "type_schema": "xs:token", "enum": ["Any", "Specified Only"]}, {"name": "includeAnonymousCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeUnavailableCallers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "phoneNumberList", "required": false, "array": false, "type": "CriteriaReplacementDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}]]}, {"name": "UserSimultaneousRingPersonalModifyRequest17", "tags": ["services"], "documentation": "Modify the user's simultaneous ring personal service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "doNotRingIfOnCall", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "simultaneousRingNumberList", "required": false, "array": false, "type": "SimultaneousRingReplacementNumberList", "schema": [[{"name": "simultaneousRingNumber", "required": true, "array": true, "type": "SimultaneousRingNumber", "schema": [[{"name": "phoneNumber", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "answerConfirmationRequired", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "criteriaActivation", "required": false, "array": true, "type": "CriteriaActivation", "schema": [[{"name": "criteriaName", "required": true, "array": false, "type": "CriteriaName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemSMDIMessageDeskAddServerRequest", "tags": ["services"], "documentation": "Request to add a SMDI Server to the system.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "deviceName", "required": true, "array": false, "type": "SMDIDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "netAddress", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": true, "array": false, "type": "Port", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65535.0}, {"name": "description", "required": false, "array": false, "type": "SMDIServerDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemSMDIMessageDeskAddServerRouteRequest", "tags": ["services"], "documentation": "Request to add a SMDI Server route to the system.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "routeDestination", "required": true, "array": false, "type": "SMDIServerRouteDestination", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "deviceName", "required": true, "array": true, "type": "SMDIDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "SystemSMDIMessageDeskDeleteServerRequest", "tags": ["services"], "documentation": "Request to delete a SMDI Server from the system.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "deviceName", "required": true, "array": false, "type": "SMDIDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "SystemSMDIMessageDeskDeleteServerRouteRequest", "tags": ["services"], "documentation": "Request to delete a SMDI Server route from the system.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "routeDestination", "required": true, "array": false, "type": "SMDIServerRouteDestination", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}]]}, {"name": "SystemSMDIMessageDeskGetServerListRequest", "tags": ["services"], "documentation": "Request to get a list of SMDI Servers defined in the system.\n        The response is either a SystemSMDIMessageDeskGetServerListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemSMDIMessageDeskGetServerRouteListRequest", "tags": ["services"], "documentation": "Request to get a list of SMDI Servers routes in the system.\n        The response is either a SystemSMDIMessageDeskGetServerRouteListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemSMDIMessageDeskModifyServerRequest", "tags": ["services"], "documentation": "Request to modify a SMDI Server in the system.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "deviceName", "required": true, "array": false, "type": "SMDIDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "netAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": false, "array": false, "type": "Port", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65535.0}, {"name": "description", "required": false, "array": false, "type": "SMDIServerDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemSMDIMessageDeskModifyServerRouteRequest", "tags": ["services"], "documentation": "Replace the list of devices associated with a SMDI server route destination.\n        There must be at least one device in the list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "routeDestination", "required": true, "array": false, "type": "SMDIServerRouteDestination", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "deviceNameList", "type": null, "required": false, "array": false, "schema": [[{"name": "deviceName", "required": true, "array": true, "type": "SMDIDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "UserSMDIMessageDeskAddServerRequest", "tags": ["services"], "documentation": "Request to add a SMDI Server for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "deviceName", "required": true, "array": false, "type": "SMDIDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "netAddress", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": true, "array": false, "type": "Port", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65535.0}]]}, {"name": "UserSMDIMessageDeskDeleteServerListRequest", "tags": ["services"], "documentation": "Request to delete a list of SMDI Servers for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "deviceName", "required": true, "array": true, "type": "SMDIDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "UserSMDIMessageDeskGetRequest", "tags": ["services"], "documentation": "Get the user's SMDI Message Desk service personal setting.\n        The response is either a UserSMDIMessageDeskGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSMDIMessageDeskGetServerListRequest", "tags": ["services"], "documentation": "Request to get a list of SMDI Servers defined for a user.\n        The response is either a UserSMDIMessageDeskGetServerListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSMDIMessageDeskModifyRequest", "tags": ["services"], "documentation": "Modify the user's SMDI Message Desk service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "messageDeskNumber", "required": false, "array": false, "type": "SMDIMessageDeskNumber", "type_schema": "xs:token", "minLength": 1, "maxLength": 3}]]}, {"name": "GroupSpeedDial100GetRequest17sp1", "tags": ["services"], "documentation": "Get the speed dial 100 service settings for a group.\n        The response is either a GroupSpeedDial100GetResponse17sp1 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupSpeedDial100ModifyRequest", "tags": ["services"], "documentation": "Modify the speed dial 100 prefix setting for a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "prefix", "required": false, "array": false, "type": "SpeedDialPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 2}]]}, {"name": "SystemSpeedDial100GetRequest17sp1", "tags": ["services"], "documentation": "Get the speed dial 100 system-wide default setting.\n        The response is either a SystemSpeedDial100GetResponse17sp1 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemSpeedDial100ModifyRequest", "tags": ["services"], "documentation": "Modify the speed dial 100 system-wide default prefix setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "prefix", "required": false, "array": false, "type": "SpeedDialPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 2}]]}, {"name": "UserSpeedDial100AddListRequest", "tags": ["services"], "documentation": "Add one or more speed dial 100 settings for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "speedDialEntry", "required": true, "array": true, "type": "SpeedDial100Entry", "schema": [[{"name": "speedCode", "required": true, "array": false, "type": "SpeedDial100Code", "type_schema": "xs:int", "minimum": 0.0, "maximum": 99.0}, {"name": "phoneNumber", "required": true, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "description", "required": false, "array": false, "type": "SpeedDialDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "UserSpeedDial100DeleteListRequest", "tags": ["services"], "documentation": "Delete one or more speed dial 100 settings for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "speedCode", "required": false, "array": true, "type": "SpeedDial100Code", "type_schema": "xs:int", "minimum": 0.0, "maximum": 99.0}]]}, {"name": "UserSpeedDial100GetListRequest17sp1", "tags": ["services"], "documentation": "Get the speed dial 100 settings for a user.\n        The response is either a UserSpeedDial100GetListResponse17sp1 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSpeedDial100GetRequest", "tags": ["services"], "documentation": "Get speed dial 100 settings for a speed code.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "speedCode", "required": true, "array": false, "type": "SpeedDial100Code", "type_schema": "xs:int", "minimum": 0.0, "maximum": 99.0}]]}, {"name": "UserSpeedDial100ModifyListRequest", "tags": ["services"], "documentation": "Modify the speed dial 100 settings for a user.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "speedDialEntry", "required": false, "array": true, "type": "SpeedDial100EntryModify", "schema": [[{"name": "speedCode", "required": true, "array": false, "type": "SpeedDial100Code", "type_schema": "xs:int", "minimum": 0.0, "maximum": 99.0}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "description", "required": false, "array": false, "type": "SpeedDialDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "UserSpeedDial8GetListRequest", "tags": ["services"], "documentation": "Get the speed dial 8 settings for a user.\n        The response is either a UserSpeedDial8GetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserSpeedDial8ModifyListRequest", "tags": ["services"], "documentation": "Modify the speed dial 8 settings for a user.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "speedDialEntry", "required": false, "array": true, "type": "SpeedDial8Entry", "schema": [[{"name": "speedCode", "required": true, "array": false, "type": "SpeedDial8Code", "type_schema": "xs:int", "minimum": 2.0, "maximum": 9.0}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "description", "required": false, "array": false, "type": "SpeedDialDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "SystemThirdPartyIMPGetRequest19", "tags": ["services"], "documentation": "Get the system Third-Party IMP service attributes.\n        The response is either SystemThirdPartyIMPGetResponse19 or ErrorResponse.", "type": "core:OCIRequest", "schema": []}, {"name": "SystemThirdPartyIMPModifyRequest", "tags": ["services"], "documentation": "Modify the system Third-Party IMP service attributes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "servicePort", "required": false, "array": false, "type": "Port", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65535.0}, {"name": "boshURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}]]}, {"name": "GroupThirdPartyVoiceMailSupportGetRequest", "tags": ["services"], "documentation": "Request the group level data associated with Third-Party Voice Mail Support.\n        The response is either a GroupThirdPartyVoiceMailSupportGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupThirdPartyVoiceMailSupportModifyRequest", "tags": ["services"], "documentation": "Modify the Third Party Voice Mail Support settings for a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "groupServer", "required": false, "array": false, "type": "ThirdPartyVoiceMailSupportMailServer", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "SystemThirdPartyVoiceMailSupportAddDnRequest", "tags": ["services"], "documentation": "Request to add a ThirdPartyVoiceMailSupport User DN to the system.\n       The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "ThirdPartyVoiceMailDestinationDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemThirdPartyVoiceMailSupportDeleteDnRequest", "tags": ["services"], "documentation": "Request to delete a ThirdPartyVoiceMailSupport User DN from the system.\n       The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "SystemThirdPartyVoiceMailSupportGetDnListRequest", "tags": ["services"], "documentation": "Request to get a list of ThirdPartyVoiceMailSupport User DN's defined in the system.\n       The response is either a SystemThirdPartyVoiceMailSupportGetDnListResponse or an ErrorResponse.\n       The search can be done using multiple criterion.", "type": "core:OCIRequest", "schema": [[{"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaSystemServiceDn", "required": false, "array": true, "type": "SearchCriteriaSystemServiceDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemThirdPartyVoiceMailSupportGetRequest17sp4", "tags": ["services"], "documentation": "Request the system level data associated with Third-party Voice Mail Support.\n        The response is either a SystemThirdPartyVoiceMailSupportGetResponse17sp4 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemThirdPartyVoiceMailSupportModifyDnRequest", "tags": ["services"], "documentation": "Request to modify a ThirdPartyVoiceMailSupport User DN and description in the system.\n       The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "ThirdPartyVoiceMailDestinationDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemThirdPartyVoiceMailSupportModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Third-party Voice Mail Support.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS data mode:\n          stripDiversionOnVMDestinationRetrieval", "type": "core:OCIRequest", "schema": [[{"name": "overrideAltCallerIdForVMRetrieval", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "stripDiversionOnVMDestinationRetrieval", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserThirdPartyVoiceMailSupportGetRequest17", "tags": ["services"], "documentation": "Request the user level data associated with Third-Party Voice Mail Support.\n        The response is either a UserThirdPartyVoiceMailSupportGetResponse17 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserThirdPartyVoiceMailSupportModifyRequest", "tags": ["services"], "documentation": "Modify the Third Party Voice Mail Support settings for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "busyRedirectToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "noAnswerRedirectToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serverSelection", "required": false, "array": false, "type": "ThirdPartyVoiceMailSupportServerSelection", "type_schema": "xs:token", "enum": ["Group Mail Server", "User Specific Mail Server"]}, {"name": "userServer", "required": false, "array": false, "type": "ThirdPartyVoiceMailSupportMailServer", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "mailboxIdType", "required": false, "array": false, "type": "ThirdPartyVoiceMailSupportMailboxIdType", "type_schema": "xs:token", "enum": ["User Or Group Phone Number", "URL"]}, {"name": "mailboxURL", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "noAnswerNumberOfRings", "required": false, "array": false, "type": "ThirdPartyVoiceMailSupportNumberOfRings", "type_schema": "xs:int", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}, {"name": "alwaysRedirectToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "outOfPrimaryZoneRedirectToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "EnterpriseEnterpriseTrunkAddRequest21", "tags": ["services"], "documentation": "Request to add an enterprise trunk in an enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "maximumRerouteAttempts", "required": true, "array": false, "type": "EnterpriseTrunkMaximumRerouteAttempts", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "routeExhaustionAction", "required": true, "array": false, "type": "EnterpriseTrunkRouteExhaustionAction", "type_schema": "xs:token", "enum": ["None", "Forward"]}, {"name": "routeExhaustionForwardAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableCapacityManagement", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxActiveCalls", "required": false, "array": false, "type": "MaxActiveCalls", "type_schema": "xs:int", "minimum": 1.0}, {"name": "capacityExceededTrapInitialCalls", "required": false, "array": false, "type": "TrapInitialThreshold", "type_schema": "xs:int", "minimum": 0.0}, {"name": "capacityExceededTrapOffsetCalls", "required": false, "array": false, "type": "TrapOffsetThreshold", "type_schema": "xs:int", "minimum": 0.0}, {"name": "maximumActiveIncomingCallsAllowed", "required": false, "array": false, "type": "EnterpriseTrunkMaximumActiveIncomingCallsAllowed", "type_schema": "xs:int", "minimum": 0.0}, {"name": "maximumActiveOutgoingCallsAllowed", "required": false, "array": false, "type": "EnterpriseTrunkMaximumActiveOutgoingCallsAllowed", "type_schema": "xs:int", "minimum": 0.0}, {"name": "minimumActiveCallsReserved", "required": false, "array": false, "type": "EnterpriseTrunkReservedCapacity", "type_schema": "xs:int", "minimum": 0.0}, {"choice": [{"name": "orderedRouting", "type": null, "required": true, "array": false, "schema": [[{"name": "trunkGroup", "required": false, "array": true, "type": "EnterpriseTrunkTrunkGroupKey", "schema": [[{"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "trunkGroupName", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "orderingAlgorithm", "required": true, "array": false, "type": "EnterpriseTrunkOrderingAlgorithm", "type_schema": "xs:token", "enum": ["Ordered Load Balancing", "Overflow", "Most Idle", "Least Idle"]}]]}, {"name": "priorityWeightedRouting", "type": null, "required": true, "array": false, "schema": [[{"name": "maximumRerouteAttemptsWithinPriority", "required": true, "array": false, "type": "EnterpriseTrunkMaximumRerouteAttempts", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "priorityWeightedTrunkGroup", "required": false, "array": true, "type": "EnterpriseEnterpriseTrunkPriorityWeightedTrunkGroup", "schema": [[{"name": "trunkGroup", "required": true, "array": false, "type": "EnterpriseTrunkTrunkGroupKey", "schema": [[{"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "trunkGroupName", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "priority", "required": true, "array": false, "type": "EnterpriseTrunkTrunkGroupPriority", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "weight", "required": true, "array": false, "type": "EnterpriseTrunkTrunkGroupWeight", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65536.0}]]}]]}]}]]}, {"name": "EnterpriseEnterpriseTrunkAddUserListRequest", "tags": ["services"], "documentation": "Request to add users to an enterprise trunk in an enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "EnterpriseEnterpriseTrunkDeleteRequest", "tags": ["services"], "documentation": "Request to delete an enterprise trunk in an enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseEnterpriseTrunkDeleteUserListRequest", "tags": ["services"], "documentation": "Request to delete users from an enterprise trunk in an enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "EnterpriseEnterpriseTrunkForceAssignUserListRequest", "tags": ["services"], "documentation": "Request to add users to an enterprise trunk in an enterprise. If the user is already assigned to another enterprise trunk,\n        it will be unassigned from the old enterprise trunk and assigned to the new enterprise trunk specified in this request.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "EnterpriseEnterpriseTrunkGetAvailableTrunkGroupListRequest", "tags": ["services"], "documentation": "Request to get the list of all available trunk groups defined in an enterprise.  It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either a EnterpriseEnterpriseTrunkGetAvailableTrunkGroupListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaTrunkGroupName", "required": false, "array": true, "type": "SearchCriteriaTrunkGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "EnterpriseEnterpriseTrunkGetAvailableUserListRequest", "tags": ["services"], "documentation": "Request the list of users that are available to be added to an enterprise trunk.  This list contains users in the enterprise that are trunk users and not already assigned to an enterprise trunk.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either an EnterpriseEnterpriseTrunkGetAvailableUserListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAlternateTrunkIdentity", "required": false, "array": true, "type": "SearchCriteriaAlternateTrunkIdentity", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AlternateTrunkIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAlternateTrunkIdentityDomain", "required": false, "array": true, "type": "SearchCriteriaAlternateTrunkIdentityDomain", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}]]}, {"name": "EnterpriseEnterpriseTrunkGetListRequest", "tags": ["services"], "documentation": "Request to get the list of all enterprise trunks defined in an enterprise.\n        The response is either a EnterpriseEnterpriseTrunkGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseEnterpriseTrunkGetRequest22", "tags": ["services"], "documentation": "Request to get an enterprise trunk\n        The response is either an EnterpriseEnterpriseTrunkGetResponse21 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "EnterpriseEnterpriseTrunkGetUserListRequest", "tags": ["services"], "documentation": "Request the list of users in an enterprise trunk.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either a EnterpriseEnterpriseTrunkGetUserListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAlternateTrunkIdentity", "required": false, "array": true, "type": "SearchCriteriaAlternateTrunkIdentity", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AlternateTrunkIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAlternateTrunkIdentityDomain", "required": false, "array": true, "type": "SearchCriteriaAlternateTrunkIdentityDomain", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserRouteListAssigned", "required": false, "array": false, "type": "SearchCriteriaExactUserRouteListAssigned", "schema": [[{"name": "routeListAssigned", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "EnterpriseEnterpriseTrunkModifyRequest", "tags": ["services"], "documentation": "Request to modify an enterprise trunk in an enterprise.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "newEnterpriseTrunkName", "required": false, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "maximumRerouteAttempts", "required": false, "array": false, "type": "EnterpriseTrunkMaximumRerouteAttempts", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "routeExhaustionAction", "required": false, "array": false, "type": "EnterpriseTrunkRouteExhaustionAction", "type_schema": "xs:token", "enum": ["None", "Forward"]}, {"name": "routeExhaustionForwardAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableCapacityManagement", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxActiveCalls", "required": false, "array": false, "type": "MaxActiveCalls", "type_schema": "xs:int", "minimum": 1.0}, {"name": "capacityExceededTrapInitialCalls", "required": false, "array": false, "type": "TrapInitialThreshold", "type_schema": "xs:int", "minimum": 0.0}, {"name": "capacityExceededTrapOffsetCalls", "required": false, "array": false, "type": "TrapOffsetThreshold", "type_schema": "xs:int", "minimum": 0.0}, {"name": "maximumActiveIncomingCallsAllowed", "required": false, "array": false, "type": "EnterpriseTrunkMaximumActiveIncomingCallsAllowed", "type_schema": "xs:int", "minimum": 0.0}, {"name": "maximumActiveOutgoingCallsAllowed", "required": false, "array": false, "type": "EnterpriseTrunkMaximumActiveOutgoingCallsAllowed", "type_schema": "xs:int", "minimum": 0.0}, {"name": "minimumActiveCallsReserved", "required": false, "array": false, "type": "EnterpriseTrunkReservedCapacity", "type_schema": "xs:int", "minimum": 0.0}, {"choice": [{"name": "orderedRouting", "type": null, "required": true, "array": false, "schema": [[{"name": "trunkGroupList", "required": false, "array": false, "type": "ReplacementEnterpriseEnterpriseTrunkTrunkGroupKeyList", "schema": [[{"name": "trunkGroup", "required": true, "array": true, "type": "EnterpriseTrunkTrunkGroupKey", "schema": [[{"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "trunkGroupName", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}, {"name": "orderingAlgorithm", "required": false, "array": false, "type": "EnterpriseTrunkOrderingAlgorithm", "type_schema": "xs:token", "enum": ["Ordered Load Balancing", "Overflow", "Most Idle", "Least Idle"]}]]}, {"name": "priorityWeightedRouting", "type": null, "required": true, "array": false, "schema": [[{"name": "maximumRerouteAttemptsWithinPriority", "required": false, "array": false, "type": "EnterpriseTrunkMaximumRerouteAttempts", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "priorityWeightedTrunkGroupList", "required": false, "array": false, "type": "ReplacementEnterpriseEnterpriseTrunkPriorityWeightedTrunkGroupList", "schema": [[{"name": "trunkGroup", "required": true, "array": true, "type": "EnterpriseEnterpriseTrunkPriorityWeightedTrunkGroup", "schema": [[{"name": "trunkGroup", "required": true, "array": false, "type": "EnterpriseTrunkTrunkGroupKey", "schema": [[{"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "trunkGroupName", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "priority", "required": true, "array": false, "type": "EnterpriseTrunkTrunkGroupPriority", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "weight", "required": true, "array": false, "type": "EnterpriseTrunkTrunkGroupWeight", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65536.0}]]}]]}]]}]}]]}, {"name": "EnterpriseLocalGatewayGetPagedSortedListRequest", "tags": ["services"], "documentation": "Get a list of local gateways defined within an enterprise. Only the local gateways having device associated are returned.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        If no sortOrder is included the response is sorted by Trunk group name  ascending by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n        The response is either a EnterpriseLocalGatewayGetPagedSortedListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortByTrunkGroupName", "required": false, "array": false, "type": "SortByTrunkGroupName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "searchCriteriaTrunkGroupName", "required": false, "array": true, "type": "SearchCriteriaTrunkGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "EnterpriseLocalGatewayGetUsageRequest", "tags": ["services"], "documentation": "Get usage details of a local gateway under an enterprise.\n        The response is either EnterpriseLocalGatewayGetUsageResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "trunkGroupName", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupEnterpriseTrunkAddRequest21", "tags": ["services"], "documentation": "Request to add an enterprise trunk in a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "maximumRerouteAttempts", "required": true, "array": false, "type": "EnterpriseTrunkMaximumRerouteAttempts", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "routeExhaustionAction", "required": true, "array": false, "type": "EnterpriseTrunkRouteExhaustionAction", "type_schema": "xs:token", "enum": ["None", "Forward"]}, {"name": "routeExhaustionForwardAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableCapacityManagement", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxActiveCalls", "required": false, "array": false, "type": "MaxActiveCalls", "type_schema": "xs:int", "minimum": 1.0}, {"name": "capacityExceededTrapInitialCalls", "required": false, "array": false, "type": "TrapInitialThreshold", "type_schema": "xs:int", "minimum": 0.0}, {"name": "capacityExceededTrapOffsetCalls", "required": false, "array": false, "type": "TrapOffsetThreshold", "type_schema": "xs:int", "minimum": 0.0}, {"name": "maximumActiveIncomingCallsAllowed", "required": false, "array": false, "type": "EnterpriseTrunkMaximumActiveIncomingCallsAllowed", "type_schema": "xs:int", "minimum": 0.0}, {"name": "maximumActiveOutgoingCallsAllowed", "required": false, "array": false, "type": "EnterpriseTrunkMaximumActiveOutgoingCallsAllowed", "type_schema": "xs:int", "minimum": 0.0}, {"name": "minimumActiveCallsReserved", "required": false, "array": false, "type": "EnterpriseTrunkReservedCapacity", "type_schema": "xs:int", "minimum": 0.0}, {"choice": [{"name": "orderedRouting", "type": null, "required": true, "array": false, "schema": [[{"name": "trunkGroup", "required": false, "array": true, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "orderingAlgorithm", "required": true, "array": false, "type": "EnterpriseTrunkOrderingAlgorithm", "type_schema": "xs:token", "enum": ["Ordered Load Balancing", "Overflow", "Most Idle", "Least Idle"]}]]}, {"name": "priorityWeightedRouting", "type": null, "required": true, "array": false, "schema": [[{"name": "maximumRerouteAttemptsWithinPriority", "required": true, "array": false, "type": "EnterpriseTrunkMaximumRerouteAttempts", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "priorityWeightedTrunkGroup", "required": false, "array": true, "type": "GroupEnterpriseTrunkPriorityWeightedTrunkGroup", "schema": [[{"name": "trunkGroup", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "priority", "required": true, "array": false, "type": "EnterpriseTrunkTrunkGroupPriority", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "weight", "required": true, "array": false, "type": "EnterpriseTrunkTrunkGroupWeight", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65536.0}]]}]]}]}]]}, {"name": "GroupEnterpriseTrunkAddUserListRequest", "tags": ["services"], "documentation": "Request to add users to an enterprise trunk in a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupEnterpriseTrunkDeleteRequest", "tags": ["services"], "documentation": "Request to delete an enterprise trunk in a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupEnterpriseTrunkDeleteUserListRequest", "tags": ["services"], "documentation": "Request to delete users from an enterprise trunk in a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupEnterpriseTrunkForceAssignUserListRequest", "tags": ["services"], "documentation": "Request to add users to an enterprise trunk in a group. If the user is already assigned to another enterprise trunk,\n        it will be unassigned from the old enterprise trunk and assigned to the new enterprise trunk specified in this request.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupEnterpriseTrunkGetAvailableTrunkGroupListRequest", "tags": ["services"], "documentation": "Request to get the list of all available trunk groups defined in a group.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either a GroupEnterpriseTrunkGetAvailableTrunkGroupListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaTrunkGroupName", "required": false, "array": true, "type": "SearchCriteriaTrunkGroupName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupEnterpriseTrunkGetAvailableUserListRequest", "tags": ["services"], "documentation": "Request the list of users that are available to be added to an enterprise trunk.  This list contains users in the group that are trunk users and not already assigned to an enterprise trunk.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either a GroupEnterpriseTrunkGetAvailableUserListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAlternateTrunkIdentity", "required": false, "array": true, "type": "SearchCriteriaAlternateTrunkIdentity", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AlternateTrunkIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAlternateTrunkIdentityDomain", "required": false, "array": true, "type": "SearchCriteriaAlternateTrunkIdentityDomain", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}]]}, {"name": "GroupEnterpriseTrunkGetListRequest", "tags": ["services"], "documentation": "Request to get the list of all enterprise trunks defined in a group.\n        The response is either a GroupEnterpriseTrunkGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupEnterpriseTrunkGetRequest22", "tags": ["services"], "documentation": "Request to get an enterprise trunk\n        The response is either an GroupEnterpriseTrunkGetResponse22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupEnterpriseTrunkGetUserListRequest", "tags": ["services"], "documentation": "Request the list of users in an enterprise trunk.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either a GroupEnterpriseTrunkGetUserListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAlternateTrunkIdentity", "required": false, "array": true, "type": "SearchCriteriaAlternateTrunkIdentity", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AlternateTrunkIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaAlternateTrunkIdentityDomain", "required": false, "array": true, "type": "SearchCriteriaAlternateTrunkIdentityDomain", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserRouteListAssigned", "required": false, "array": false, "type": "SearchCriteriaExactUserRouteListAssigned", "schema": [[{"name": "routeListAssigned", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupEnterpriseTrunkModifyRequest", "tags": ["services"], "documentation": "Request to modify an enterprise trunk in a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enterpriseTrunkName", "required": true, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "newEnterpriseTrunkName", "required": false, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "maximumRerouteAttempts", "required": false, "array": false, "type": "EnterpriseTrunkMaximumRerouteAttempts", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "routeExhaustionAction", "required": false, "array": false, "type": "EnterpriseTrunkRouteExhaustionAction", "type_schema": "xs:token", "enum": ["None", "Forward"]}, {"name": "routeExhaustionForwardAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "enableCapacityManagement", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxActiveCalls", "required": false, "array": false, "type": "MaxActiveCalls", "type_schema": "xs:int", "minimum": 1.0}, {"name": "capacityExceededTrapInitialCalls", "required": false, "array": false, "type": "TrapInitialThreshold", "type_schema": "xs:int", "minimum": 0.0}, {"name": "capacityExceededTrapOffsetCalls", "required": false, "array": false, "type": "TrapOffsetThreshold", "type_schema": "xs:int", "minimum": 0.0}, {"name": "maximumActiveIncomingCallsAllowed", "required": false, "array": false, "type": "EnterpriseTrunkMaximumActiveIncomingCallsAllowed", "type_schema": "xs:int", "minimum": 0.0}, {"name": "maximumActiveOutgoingCallsAllowed", "required": false, "array": false, "type": "EnterpriseTrunkMaximumActiveOutgoingCallsAllowed", "type_schema": "xs:int", "minimum": 0.0}, {"name": "minimumActiveCallsReserved", "required": false, "array": false, "type": "EnterpriseTrunkReservedCapacity", "type_schema": "xs:int", "minimum": 0.0}, {"choice": [{"name": "orderedRouting", "type": null, "required": true, "array": false, "schema": [[{"name": "trunkGroupList", "required": false, "array": false, "type": "ReplacementGroupEnterpriseTrunkTrunkGroupList", "schema": [[{"name": "trunkGroup", "required": true, "array": true, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "orderingAlgorithm", "required": false, "array": false, "type": "EnterpriseTrunkOrderingAlgorithm", "type_schema": "xs:token", "enum": ["Ordered Load Balancing", "Overflow", "Most Idle", "Least Idle"]}]]}, {"name": "priorityWeightedRouting", "type": null, "required": true, "array": false, "schema": [[{"name": "maximumRerouteAttemptsWithinPriority", "required": false, "array": false, "type": "EnterpriseTrunkMaximumRerouteAttempts", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "priorityWeightedTrunkGroupList", "required": false, "array": false, "type": "ReplacementGroupEnterpriseTrunkPriorityWeightedTrunkGroupList", "schema": [[{"name": "trunkGroup", "required": true, "array": true, "type": "GroupEnterpriseTrunkPriorityWeightedTrunkGroup", "schema": [[{"name": "trunkGroup", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "priority", "required": true, "array": false, "type": "EnterpriseTrunkTrunkGroupPriority", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "weight", "required": true, "array": false, "type": "EnterpriseTrunkTrunkGroupWeight", "type_schema": "xs:int", "minimum": 1.0, "maximum": 65536.0}]]}]]}]]}]}]]}, {"name": "GroupTrunkGroupAddInstanceRequest22", "tags": ["services"], "documentation": "Add a Trunk Group instance to a group.\n        The command will fail if enableNetworkAddressIdentity is set to\n        true and administrator is not System/Provisioning level administrator.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Following attributes are only used in IMS mode:\n          implicitRegistrationSetSupportPolicy\n          useSystemImplicitRegistrationSetSupportPolicy\n          sipIdentityForPilotAndProxyTrunkModesPolicy\n          useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "pilotUser", "required": false, "array": false, "type": "TrunkGroupMultipleContactPilotUser22", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "lastName", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "firstName", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": true, "type": "SIPContactInfo", "schema": [[{"name": "sipContact", "required": true, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "accessDevice", "required": false, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "maxActiveCalls", "required": true, "array": false, "type": "MaxActiveCalls", "type_schema": "xs:int", "minimum": 1.0}, {"name": "maxIncomingCalls", "required": false, "array": false, "type": "MaxIncomingCalls20sp1", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999999.0}, {"name": "maxOutgoingCalls", "required": false, "array": false, "type": "MaxOutgoingCalls20sp1", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999999.0}, {"name": "enableBursting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "burstingMaxActiveCalls", "required": false, "array": false, "type": "BurstingMaxActiveCalls", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999999.0}, {"name": "burstingMaxIncomingCalls", "required": false, "array": false, "type": "BurstingMaxIncomingCalls", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999999.0}, {"name": "burstingMaxOutgoingCalls", "required": false, "array": false, "type": "BurstingMaxOutgoingCalls", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999999.0}, {"name": "capacityExceededAction", "required": false, "array": false, "type": "TrunkGroupCapacityExceededAction", "type_schema": "xs:token", "enum": ["Forward", "Reroute"]}, {"name": "capacityExceededForwardAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "capacityExceededRerouteTrunkGroupKey", "required": false, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "capacityExceededTrapInitialCalls", "required": true, "array": false, "type": "TrapInitialThreshold", "type_schema": "xs:int", "minimum": 0.0}, {"name": "capacityExceededTrapOffsetCalls", "required": true, "array": false, "type": "TrapOffsetThreshold", "type_schema": "xs:int", "minimum": 0.0}, {"name": "unreachableDestinationAction", "required": false, "array": false, "type": "TrunkGroupUnreachableDestinationAction", "type_schema": "xs:token", "enum": ["Forward", "Reroute"]}, {"name": "unreachableDestinationForwardAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "unreachableDestinationRerouteTrunkGroupKey", "required": false, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "invitationTimeout", "required": true, "array": false, "type": "TrunkGroupInvitationTimeoutSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 255.0}, {"name": "requireAuthentication", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sipAuthenticationUserName", "required": false, "array": false, "type": "SIPAuthenticationUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "sipAuthenticationPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "hostedUserId", "required": false, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "trunkGroupIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "otgDtgIdentity", "required": false, "array": false, "type": "OtgDtgIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "allowTerminationToTrunkGroupIdentity", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowTerminationToDtgIdentity", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeTrunkGroupIdentity", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeDtgIdentity", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeTrunkGroupIdentityForNetworkCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeOtgIdentityForNetworkCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableNetworkAddressIdentity", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowUnscreenedCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowUnscreenedEmergencyCalls", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "pilotUserCallingLineIdentityForExternalCallsPolicy", "required": true, "array": false, "type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy", "type_schema": "xs:token", "enum": ["All Originating Calls", "Unscreened Originating Calls", "No Calls"]}, {"name": "pilotUserChargeNumberPolicy", "required": true, "array": false, "type": "TrunkGroupPilotUserChargeNumberUsagePolicy", "type_schema": "xs:token", "enum": ["All Originating Calls", "Unscreened Originating Calls", "No Calls"]}, {"name": "callForwardingAlwaysAction", "required": false, "array": false, "type": "TrunkGroupCallForwardingAlwaysAction", "type_schema": "xs:token", "enum": ["Forward", "Reroute"]}, {"name": "callForwardingAlwaysForwardAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callForwardingAlwaysRerouteTrunkGroupKey", "required": false, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "peeringDomain", "required": false, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "routeToPeeringDomain", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "prefixEnabled", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "prefix", "required": false, "array": false, "type": "TrunkGroupPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 15}, {"name": "statefulReroutingEnabled", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sendContinuousOptionsMessage", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "continuousOptionsSendingIntervalSeconds", "required": true, "array": false, "type": "TrunkGroupContinuousOptionsSendingIntervalSeconds", "type_schema": "xs:int", "minimum": 30.0, "maximum": 86400.0}, {"name": "failureOptionsSendingIntervalSeconds", "required": true, "array": false, "type": "TrunkGroupFailureOptionsSendingIntervalSeconds", "type_schema": "xs:int", "minimum": 10.0, "maximum": 86400.0}, {"name": "failureThresholdCounter", "required": true, "array": false, "type": "TrunkGroupThresholdCounter", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "successThresholdCounter", "required": true, "array": false, "type": "TrunkGroupThresholdCounter", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "inviteFailureThresholdCounter", "required": true, "array": false, "type": "TrunkGroupThresholdCounter", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "inviteFailureThresholdWindowSeconds", "required": true, "array": false, "type": "TrunkGroupFailureThresholdWindowSeconds", "type_schema": "xs:int", "minimum": 30.0, "maximum": 240.0}, {"name": "pilotUserCallingLineAssertedIdentityPolicy", "required": true, "array": false, "type": "TrunkGroupPilotUserCallingLineAssertedIdentityUsagePolicy", "type_schema": "xs:token", "enum": ["All Originating Calls", "Unscreened Originating Calls"]}, {"name": "useSystemCallingLineAssertedIdentityPolicy", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "pilotUserCallOptimizationPolicy", "required": true, "array": false, "type": "TrunkGroupPilotUserCallOptimizationPolicy", "type_schema": "xs:token", "enum": ["Optimize For User Services", "Optimize For High Call Volume"]}, {"name": "clidSourceForScreenedCallsPolicy", "required": true, "array": false, "type": "TrunkGroupCLIDSourceForScreenedCallsPolicy", "type_schema": "xs:token", "enum": ["Profile Name Profile Number", "Received Name Profile Number", "Received Name Received Number"]}, {"name": "useSystemCLIDSourceForScreenedCallsPolicy", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userLookupPolicy", "required": true, "array": false, "type": "TrunkGroupUserLookupPolicy", "type_schema": "xs:token", "enum": ["Basic", "Extended", "Basic Lookup Prefer From"]}, {"name": "useSystemUserLookupPolicy", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "pilotUserCallingLineIdentityForEmergencyCallsPolicy", "required": true, "array": false, "type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy", "type_schema": "xs:token", "enum": ["All Originating Calls", "Unscreened Originating Calls", "No Calls"]}, {"name": "pilotUserNetworkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "implicitRegistrationSetSupportPolicy", "required": true, "array": false, "type": "TrunkGroupImplicitRegistrationSetSupportPolicy", "type_schema": "xs:token", "enum": ["Enabled", "Disabled"]}, {"name": "useSystemImplicitRegistrationSetSupportPolicy", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sipIdentityForPilotAndProxyTrunkModesPolicy", "required": true, "array": false, "type": "TrunkGroupSIPIdentityForPilotAndProxyTrunkModesPolicy", "type_schema": "xs:token", "enum": ["Pilot User", "User"]}, {"name": "useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSystemSupportConnectedIdentityPolicy", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "supportConnectedIdentityPolicy", "required": true, "array": false, "type": "TrunkGroupSupportConnectedIdentityPolicy", "type_schema": "xs:token", "enum": ["Enabled", "Disabled"]}]]}, {"name": "GroupTrunkGroupDeleteInstanceRequest14sp4", "tags": ["services"], "documentation": "Delete a Trunk Group Instance from a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "trunkGroupKey", "required": true, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}, {"name": "GroupTrunkGroupGetAvailableHostedUserListRequest", "tags": ["services"], "documentation": "Get a list of hosted users that can be assigned to a Trunk Group.\n        The response is either GroupTrunkGroupGetAvailableHostedUserListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "trunkGroupKey", "required": true, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupTrunkGroupGetInstanceListRequest14sp4", "tags": ["services"], "documentation": "Get a list of Trunk Groups for the group or enterprise.\n        It is possible to restrict the results to a particular department, or expand the list to the entire enterprise.\n        The response is either a GroupTrunkGroupGetInstanceListResponse14sp4 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "onlyTrunkGroupsWithDevice", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"choice": [{"name": "groupDepartmentName", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "includeEnterpriseTrunkGroups", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]}]]}, {"name": "GroupTrunkGroupGetInstanceRequest23", "tags": ["services"], "documentation": "Get a Trunk Group Instance's profile.\n        The response is either a GroupTrunkGroupGetInstanceResponse23 or an ErrorResponse.\n        The response contains a hosted user table with column headings: \"User Id\", \"Last Name\",\n        \"First Name\", \"Hiragana Last Name\", \"Hiragana First Name\", \"Phone Number\", \"Extension\",\n        \"Department\", \"Email Address\".", "type": "core:OCIRequest", "schema": [[{"name": "trunkGroupKey", "required": true, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}, {"name": "GroupTrunkGroupGetInstanceUserListRequest14sp4", "tags": ["services"], "documentation": "Get a list of user's on a Trunk Group Instance.\n        The response is either a GroupTrunkGroupGetInstanceUserListResponse14sp4 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "trunkGroupKey", "required": true, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupTrunkGroupGetRequest23", "tags": ["services"], "documentation": "Get the maximum and bursting maximum permissible active trunk group calls for the group.\n        The response is either a GroupTrunkGroupGetResponse23 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupTrunkGroupModifyInstanceRequest20sp1", "tags": ["services"], "documentation": "Modify a Trunk Group Instance in a group.\n      The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.\n          The command will fail if enableNetworkAddressIdentity is set and\n          administrator is not System/Provisioning level administrator.\n      Following attributes are only used in IMS mode:\n        implicitRegistrationSetSupportPolicy\n        useSystemImplicitRegistrationSetSupportPolicy\n        sipIdentityForPilotAndProxyTrunkModesPolicy\n        useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy\n      The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "trunkGroupKey", "required": true, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "newName", "required": false, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "pilotUserId", "required": false, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "accessDevice", "required": false, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "maxActiveCalls", "required": false, "array": false, "type": "MaxActiveCalls", "type_schema": "xs:int", "minimum": 1.0}, {"name": "maxIncomingCalls", "required": false, "array": false, "type": "MaxIncomingCalls20sp1", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999999.0}, {"name": "maxOutgoingCalls", "required": false, "array": false, "type": "MaxOutgoingCalls20sp1", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999999.0}, {"name": "enableBursting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "burstingMaxActiveCalls", "required": false, "array": false, "type": "BurstingMaxActiveCalls", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999999.0}, {"name": "burstingMaxIncomingCalls", "required": false, "array": false, "type": "BurstingMaxIncomingCalls", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999999.0}, {"name": "burstingMaxOutgoingCalls", "required": false, "array": false, "type": "BurstingMaxOutgoingCalls", "type_schema": "xs:int", "minimum": 0.0, "maximum": 999999.0}, {"name": "capacityExceededAction", "required": false, "array": false, "type": "TrunkGroupCapacityExceededAction", "type_schema": "xs:token", "enum": ["Forward", "Reroute"]}, {"name": "capacityExceededForwardAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "capacityExceededRerouteTrunkGroupKey", "required": false, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "capacityExceededTrapInitialCalls", "required": false, "array": false, "type": "TrapInitialThreshold", "type_schema": "xs:int", "minimum": 0.0}, {"name": "capacityExceededTrapOffsetCalls", "required": false, "array": false, "type": "TrapOffsetThreshold", "type_schema": "xs:int", "minimum": 0.0}, {"name": "unreachableDestinationAction", "required": false, "array": false, "type": "TrunkGroupUnreachableDestinationAction", "type_schema": "xs:token", "enum": ["Forward", "Reroute"]}, {"name": "unreachableDestinationForwardAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "unreachableDestinationRerouteTrunkGroupKey", "required": false, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "invitationTimeout", "required": false, "array": false, "type": "TrunkGroupInvitationTimeoutSeconds", "type_schema": "xs:int", "minimum": 1.0, "maximum": 255.0}, {"name": "requireAuthentication", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sipAuthenticationUserName", "required": false, "array": false, "type": "SIPAuthenticationUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "sipAuthenticationPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "hostedUserIdList", "required": false, "array": false, "type": "ReplacementUserIdList", "schema": [[{"name": "userId", "required": true, "array": true, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "trunkGroupIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "otgDtgIdentity", "required": false, "array": false, "type": "OtgDtgIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "allowTerminationToTrunkGroupIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowTerminationToDtgIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeTrunkGroupIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeDtgIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeTrunkGroupIdentityForNetworkCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "includeOtgIdentityForNetworkCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableNetworkAddressIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowUnscreenedCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowUnscreenedEmergencyCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "pilotUserCallingLineIdentityForExternalCallsPolicy", "required": false, "array": false, "type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy", "type_schema": "xs:token", "enum": ["All Originating Calls", "Unscreened Originating Calls", "No Calls"]}, {"name": "pilotUserChargeNumberPolicy", "required": false, "array": false, "type": "TrunkGroupPilotUserChargeNumberUsagePolicy", "type_schema": "xs:token", "enum": ["All Originating Calls", "Unscreened Originating Calls", "No Calls"]}, {"name": "callForwardingAlwaysAction", "required": false, "array": false, "type": "TrunkGroupCallForwardingAlwaysAction", "type_schema": "xs:token", "enum": ["Forward", "Reroute"]}, {"name": "callForwardingAlwaysForwardAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callForwardingAlwaysRerouteTrunkGroupKey", "required": false, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "peeringDomain", "required": false, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "routeToPeeringDomain", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "prefixEnabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "prefix", "required": false, "array": false, "type": "TrunkGroupPrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 15}, {"name": "statefulReroutingEnabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sendContinuousOptionsMessage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "continuousOptionsSendingIntervalSeconds", "required": false, "array": false, "type": "TrunkGroupContinuousOptionsSendingIntervalSeconds", "type_schema": "xs:int", "minimum": 30.0, "maximum": 86400.0}, {"name": "failureOptionsSendingIntervalSeconds", "required": false, "array": false, "type": "TrunkGroupFailureOptionsSendingIntervalSeconds", "type_schema": "xs:int", "minimum": 10.0, "maximum": 86400.0}, {"name": "failureThresholdCounter", "required": false, "array": false, "type": "TrunkGroupThresholdCounter", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "successThresholdCounter", "required": false, "array": false, "type": "TrunkGroupThresholdCounter", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "inviteFailureThresholdCounter", "required": false, "array": false, "type": "TrunkGroupThresholdCounter", "type_schema": "xs:int", "minimum": 1.0, "maximum": 60.0}, {"name": "inviteFailureThresholdWindowSeconds", "required": false, "array": false, "type": "TrunkGroupFailureThresholdWindowSeconds", "type_schema": "xs:int", "minimum": 30.0, "maximum": 240.0}, {"name": "pilotUserCallingLineAssertedIdentityPolicy", "required": false, "array": false, "type": "TrunkGroupPilotUserCallingLineAssertedIdentityUsagePolicy", "type_schema": "xs:token", "enum": ["All Originating Calls", "Unscreened Originating Calls"]}, {"name": "useSystemCallingLineAssertedIdentityPolicy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "pilotUserCallOptimizationPolicy", "required": false, "array": false, "type": "TrunkGroupPilotUserCallOptimizationPolicy", "type_schema": "xs:token", "enum": ["Optimize For User Services", "Optimize For High Call Volume"]}, {"name": "clidSourceForScreenedCallsPolicy", "required": false, "array": false, "type": "TrunkGroupCLIDSourceForScreenedCallsPolicy", "type_schema": "xs:token", "enum": ["Profile Name Profile Number", "Received Name Profile Number", "Received Name Received Number"]}, {"name": "useSystemCLIDSourceForScreenedCallsPolicy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "userLookupPolicy", "required": false, "array": false, "type": "TrunkGroupUserLookupPolicy", "type_schema": "xs:token", "enum": ["Basic", "Extended", "Basic Lookup Prefer From"]}, {"name": "useSystemUserLookupPolicy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "pilotUserCallingLineIdentityForEmergencyCallsPolicy", "required": false, "array": false, "type": "TrunkGroupPilotUserCallingLineIdentityUsagePolicy", "type_schema": "xs:token", "enum": ["All Originating Calls", "Unscreened Originating Calls", "No Calls"]}, {"name": "implicitRegistrationSetSupportPolicy", "required": false, "array": false, "type": "TrunkGroupImplicitRegistrationSetSupportPolicy", "type_schema": "xs:token", "enum": ["Enabled", "Disabled"]}, {"name": "useSystemImplicitRegistrationSetSupportPolicy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sipIdentityForPilotAndProxyTrunkModesPolicy", "required": false, "array": false, "type": "TrunkGroupSIPIdentityForPilotAndProxyTrunkModesPolicy", "type_schema": "xs:token", "enum": ["Pilot User", "User"]}, {"name": "useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSystemSupportConnectedIdentityPolicy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "supportConnectedIdentityPolicy", "required": false, "array": false, "type": "TrunkGroupSupportConnectedIdentityPolicy", "type_schema": "xs:token", "enum": ["Enabled", "Disabled"]}, {"name": "useSystemOptionsMessageResponseStatusCodes", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "deleteOptionsMessageResponseStatusCode", "required": false, "array": true, "type": "SIPOptionsMessageResponseStatusCodePattern", "type_schema": "xs:token", "minLength": 3, "maxLength": 40}]]}, {"name": "GroupTrunkGroupModifyRequest14sp9", "tags": ["services"], "documentation": "Modify the maximum and bursting maximum permissible active Trunk Group calls for the group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "maxActiveCalls", "required": false, "array": false, "type": "xs:int", "type_schema": "xs:int"}, {"name": "burstingMaxActiveCalls", "required": false, "array": false, "type": "UnboundedNonNegativeInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 0.0, "type_schema": "xs:int"}]}]}, {"name": "numberOfBurstingBTLUs", "required": false, "array": false, "type": "xs:int", "type_schema": "xs:int"}]]}, {"name": "GroupTrunkGroupOptionsMessageResponseStatusCodeAddListRequest", "tags": ["services"], "documentation": "Add a list of trunk group level successful SIP OPTIONS message respoonse status codes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "trunkGroupKey", "required": true, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "statusCode", "required": true, "array": true, "type": "SIPOptionsMessageResponseStatusCodePattern", "type_schema": "xs:token", "minLength": 3, "maxLength": 40}]]}, {"name": "GroupTrunkGroupUserCreationTaskAddRequest14sp4", "tags": ["services"], "documentation": "Add a user creation task for a trunk group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "trunkGroupKey", "required": true, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "taskName", "required": true, "array": false, "type": "TrunkGroupUserCreationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userIdFormat", "required": true, "array": false, "type": "TrunkGroupUserCreationUserIdFormat", "type_schema": "xs:token", "enum": ["Extension", "National DN", "E164 Format No Plus"]}, {"name": "userIdDomain", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "populateExtension", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "linePortFormat", "required": true, "array": false, "type": "TrunkGroupUserCreationSIPURIFormat", "type_schema": "xs:token", "enum": ["Extension", "National DN", "E164 Format No Plus", "E164 Format"]}, {"name": "linePortDomain", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "populateContact", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "contactFormat", "required": false, "array": false, "type": "TrunkGroupUserCreationSIPURIFormat", "type_schema": "xs:token", "enum": ["Extension", "National DN", "E164 Format No Plus", "E164 Format"]}, {"name": "contactDomain", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "servicePackName", "required": false, "array": true, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userService", "required": false, "array": true, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"choice": [{"name": "userPhoneNumbers", "type": null, "required": true, "array": false, "schema": [[{"name": "phoneNumber", "required": false, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "dnRange", "required": false, "array": true, "type": "DNRange", "schema": [[{"name": "minPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "maxPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}]]}, {"name": "userExtensions", "type": null, "required": true, "array": false, "schema": [[{"name": "extension", "required": false, "array": true, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "extensionRange", "required": false, "array": true, "type": "ExtensionRange17", "schema": [[{"name": "minExtension", "required": true, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "maxExtension", "required": true, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}]]}]}]]}, {"name": "GroupTrunkGroupUserCreationTaskDeleteRequest14sp4", "tags": ["services"], "documentation": "Delete a user creation task for a trunk group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "trunkGroupKey", "required": true, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "taskName", "required": true, "array": false, "type": "TrunkGroupUserCreationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "GroupTrunkGroupUserCreationTaskGetListRequest14sp4", "tags": ["services"], "documentation": "Get the list of user creation tasks for a trunk group.\n        The response is either GroupTrunkGroupUserCreationTaskGetListResponse14sp4 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "trunkGroupKey", "required": true, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}, {"name": "GroupTrunkGroupUserCreationTaskGetRequest14sp4", "tags": ["services"], "documentation": "Request the details of a specified user creation task for a trunk group.\n        The response is either GroupTrunkGroupUserCreationTaskGetResponse14sp4 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "trunkGroupKey", "required": true, "array": false, "type": "TrunkGroupKey", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "taskName", "required": true, "array": false, "type": "TrunkGroupUserCreationTaskName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderTrunkGroupGetRequest23", "tags": ["services"], "documentation": "Get the maximum and bursting maximum permissible active Trunk Group calls for the service provider.\n        The response is either a ServiceProviderTrunkGroupGetResponse23 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderTrunkGroupModifyRequest", "tags": ["services"], "documentation": "Modify the maximum and bursting maximum permissible active Trunk Group calls for the service provider.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "maxActiveCalls", "required": false, "array": false, "type": "UnboundedNonNegativeInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 0.0, "type_schema": "xs:int"}]}]}, {"name": "burstingMaxActiveCalls", "required": false, "array": false, "type": "UnboundedNonNegativeInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 0.0, "type_schema": "xs:int"}]}]}, {"name": "numberOfBurstingBTLUs", "required": false, "array": false, "type": "UnboundedNonNegativeInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 0.0, "type_schema": "xs:int"}]}]}]]}, {"name": "SystemEnterpriseTrunkGetRequest", "tags": ["services"], "documentation": "Request the system level data associated with the Enterprise Trunk service.\n        The response is either SystemEnterpriseTrunkGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemEnterpriseTrunkModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with the Enterprise Trunk Service.\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "enableHoldoverOfHighwaterCallCounts", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "holdoverPeriod", "required": false, "array": false, "type": "EnterpriseTrunkHighwateCallCountHoldoverPeriodMinutes", "type_schema": "xs:token", "enum": ["5", "10", "15", "20", "30", "60"]}, {"name": "timeZoneOffsetMinutes", "required": false, "array": false, "type": "EnterpriseTrunkTimeZoneOffsetMinutes", "type_schema": "xs:token", "enum": ["0", "30", "45"]}]]}, {"name": "SystemTrunkGroupGetRequest24", "tags": ["services"], "documentation": "Request the system level data associated with the Trunk Group service.\n        The response is either SystemTrunkGroupGetResponse24 or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemTrunkGroupModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with the Trunk Group Service.\n        Following attributes are only used in IMS mode. The values are saved if specified not in IMS mode:\n          implicitRegistrationSetSupportPolicy\n          sipIdentityForPilotAndProxyTrunkModesPolicy\n          useMostRecentEntryOnDeflection\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "enforceCLIDServiceAssignmentForPilotUser", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "terminateUnreachableTriggerDetectionOnReceiptOf18x", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "pilotUserCallingLineAssertedIdentityPolicy", "required": false, "array": false, "type": "TrunkGroupPilotUserCallingLineAssertedIdentityUsagePolicy", "type_schema": "xs:token", "enum": ["All Originating Calls", "Unscreened Originating Calls"]}, {"name": "enforceOutOfDialogPBXRedirectionPolicies", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "unscreenedRedirectionHandling", "required": false, "array": false, "type": "TrunkGroupUnscreenedRedirectionHandling", "type_schema": "xs:token", "enum": ["Reject", "Ignore", "Ignore If Unscreened Calls Disallowed", "Reject If Unscreened Calls Disallowed"]}, {"name": "enableHoldoverOfHighwaterCallCounts", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "holdoverPeriod", "required": false, "array": false, "type": "TrunkGroupHighwaterCallCountHoldoverPeriodMinutes", "type_schema": "xs:int", "enum": ["5", "10", "15", "20", "30", "60"]}, {"name": "timeZoneOffsetMinutes", "required": false, "array": false, "type": "TrunkGroupTimeZoneOffsetMinutes", "type_schema": "xs:int", "enum": ["0", "30", "45"]}, {"name": "clidSourceForScreenedCallsPolicy", "required": false, "array": false, "type": "TrunkGroupCLIDSourceForScreenedCallsPolicy", "type_schema": "xs:token", "enum": ["Profile Name Profile Number", "Received Name Profile Number", "Received Name Received Number"]}, {"name": "userLookupPolicy", "required": false, "array": false, "type": "TrunkGroupUserLookupPolicy", "type_schema": "xs:token", "enum": ["Basic", "Extended", "Basic Lookup Prefer From"]}, {"name": "outOfDialogPBXRedirectionCLIDMapping", "required": false, "array": false, "type": "TrunkGroupOutOfDialogPBXRedirectionCLIDMapping", "type_schema": "xs:token", "enum": ["Disabled", "Enabled And Ignore Policies", "Enabled And Apply Policies"]}, {"name": "enforceOutOfDialogPBXRedirectionTrunkGroupCapacity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "implicitRegistrationSetSupportPolicy", "required": false, "array": false, "type": "TrunkGroupImplicitRegistrationSetSupportPolicy", "type_schema": "xs:token", "enum": ["Enabled", "Disabled"]}, {"name": "sipIdentityForPilotAndProxyTrunkModesPolicy", "required": false, "array": false, "type": "TrunkGroupSIPIdentityForPilotAndProxyTrunkModesPolicy", "type_schema": "xs:token", "enum": ["Pilot User", "User"]}, {"name": "supportConnectedIdentityPolicy", "required": false, "array": false, "type": "TrunkGroupSupportConnectedIdentityPolicy", "type_schema": "xs:token", "enum": ["Enabled", "Disabled"]}, {"name": "useUnmappedSessionsForTrunkUsers", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowPAILookupForOutOfDialogPBXRedirection", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "outOfDialogPBXRedirectionOriginatorLookupPolicy", "required": false, "array": false, "type": "TrunkGroupOutOfDialogPBXRedirectionOriginatorLookupPolicy", "type_schema": "xs:token", "enum": ["Asserted", "Presentation", "Asserted Or Presentation"]}, {"name": "allowTrunkIdentityForAllOriginations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMostRecentEntryOnDeflection", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SystemTrunkGroupOptionsMessageResponseStatusCodeAddListRequest", "tags": ["services"], "documentation": "Add a list of system level successful SIP OPTIONS message respoonse status codes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "statusCode", "required": true, "array": true, "type": "SIPOptionsMessageResponseStatusCodePattern", "type_schema": "xs:token", "minLength": 3, "maxLength": 40}]]}, {"name": "SystemTrunkGroupOptionsMessageResponseStatusCodeDeleteListRequest", "tags": ["services"], "documentation": "Delete a list of system level successful SIP OPTIONS message respoonse status codes.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "statusCode", "required": true, "array": true, "type": "SIPOptionsMessageResponseStatusCodePattern", "type_schema": "xs:token", "minLength": 3, "maxLength": 40}]]}, {"name": "SystemTrunkGroupOptionsMessageResponseStatusCodeGetListRequest", "tags": ["services"], "documentation": "Get the list of system level successful SIP OPTIONS message respoonse status codes.\n        The response is either SystemTrunkGroupOptionsMessageResponseStatusCodeGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemTrunkGroupUserCreationTaskGetListRequest14sp4", "tags": ["services"], "documentation": "Get the list of user creation tasks in the system.\n        The response is either SystemTrunkGroupUserCreationTaskGetListResponse14sp4 or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemTwoStageDialingAddDnRequest", "tags": ["services"], "documentation": "Request to add Two Stage Dialing number to the system.\n             The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "TwoStageDialingDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "SystemTwoStageDialingDeleteDnRequest", "tags": ["services"], "documentation": "Request to delete a Two Stage Dialing number from the system.\n          The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "SystemTwoStageDialingGetDnListRequest", "tags": ["services"], "documentation": "Request to get a list of Two Stage Dialing dns defined in the system.\n          The response is either a SystemTwoStageDialingGetDnListResponse\n          or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaSystemServiceDn", "required": false, "array": true, "type": "SearchCriteriaSystemServiceDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "SystemTwoStageDialingModifyDnRequest", "tags": ["services"], "documentation": "Request to modify a Two Stage Dialing number's description in the system.\n          The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "description", "required": false, "array": false, "type": "TwoStageDialingDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "UserTwoStageDialingGetRequest13Mp20", "tags": ["services"], "documentation": "Request the user level data associated with Two Stage Dialing.\n          The response is either a UserTwoStageDialingGetResponse13Mp20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserTwoStageDialingModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Two Stage Dialing.\n          The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowActivationWithUserAddresses", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserVideoAddOnGetRequest22", "tags": ["services"], "documentation": "Get the user's Video Add-On service setting.\n        The response is either a UserVideoAddOnGetResponse22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserVideoAddOnModifyRequest14", "tags": ["services"], "documentation": "Modify the user's Video Add-On service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxOriginatingCallDelaySeconds", "required": false, "array": false, "type": "VideoAddOnMaxOriginatingCallDelaySeconds", "type_schema": "xs:int", "enum": ["2", "5", "10"]}, {"name": "accessDeviceEndpoint", "required": false, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}]]}, {"name": "EnterpriseVirtualOnNetEnterpriseExtensionsGetUserListRequest", "tags": ["services"], "documentation": "Request the list of Virtual On-Net users in an Enterprise.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either a  EnterpriseVirtualOnNetEnterpriseExtensionsGetUserListResponse or\n        an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupLocationCode", "required": false, "array": true, "type": "SearchCriteriaGroupLocationCode", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LocationDialingCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 15}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactVirtualOnNetCallTypeName", "required": false, "array": false, "type": "SearchCriteriaExactVirtualOnNetCallTypeName", "schema": [[{"name": "virtualOnNetCallTypeName", "required": true, "array": false, "type": "VirtualOnNetCallTypeName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "GroupVirtualOnNetEnterpriseExtensionsAddUserRequest", "tags": ["services"], "documentation": "Adds Virtual On-Net users to a Group. It is possible to add\n        either: a single user,  or a list of users, or a range of users,\n        or any combination thereof.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "virtualOnNetUser", "required": false, "array": true, "type": "VirtualOnNetUser", "schema": [[{"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": true, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "firstName", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "lastName", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "virtualOnNetCallTypeName", "required": true, "array": false, "type": "VirtualOnNetCallTypeName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "virtualOnNetUserRange", "required": false, "array": false, "type": "VirtualOnNetUserRange", "schema": [[{"name": "dnRange", "required": true, "array": false, "type": "DNRange", "schema": [[{"name": "minPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "maxPhoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "extensionRange", "required": true, "array": false, "type": "ExtensionRange17", "schema": [[{"name": "minExtension", "required": true, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "maxExtension", "required": true, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}]]}, {"name": "firstName", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "lastName", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "virtualOnNetCallTypeName", "required": true, "array": false, "type": "VirtualOnNetCallTypeName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "GroupVirtualOnNetEnterpriseExtensionsDeleteUserRequest", "tags": ["services"], "documentation": "Delete an existing Virtual On-Net user from a Group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "GroupVirtualOnNetEnterpriseExtensionsGetUserListRequest", "tags": ["services"], "documentation": "Request the list of Virtual On-Net users in a Group.\n        It is possible to search by various criteria to restrict the number\n        of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either a\n        GroupVirtualOnNetEnterpriseExtensionsGetUserListResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactVirtualOnNetCallTypeName", "required": false, "array": false, "type": "SearchCriteriaExactVirtualOnNetCallTypeName", "schema": [[{"name": "virtualOnNetCallTypeName", "required": true, "array": false, "type": "VirtualOnNetCallTypeName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "GroupVirtualOnNetEnterpriseExtensionsGetUserRequest", "tags": ["services"], "documentation": "Get an existing Virtual On-Net user from a Group.\n        The response is either a\n        GroupVirtualOnNetEnterpriseExtensionsGetUserResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "GroupVirtualOnNetEnterpriseExtensionsModifyUserRequest", "tags": ["services"], "documentation": "Modify an existing Virtual On-Net user of a Group.\n        The serviceProviderId, groupId and phoneNumber combination uniquely\n        identifies a Virtual On-Net User.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "firstName", "required": false, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "lastName", "required": false, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "virtualOnNetCallTypeName", "required": false, "array": false, "type": "VirtualOnNetCallTypeName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "SystemVirtualOnNetCallTypeAddRequest", "tags": ["services"], "documentation": "Add a Virtual On-Net Call Type.\n         The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "virtualOnNetCallTypeName", "required": true, "array": false, "type": "VirtualOnNetCallTypeName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "virtualOnNetCallTypeCdrValue", "required": true, "array": false, "type": "VirtualOnNetCallTypeCdrValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 6}]]}, {"name": "SystemVirtualOnNetCallTypeDeleteRequest", "tags": ["services"], "documentation": "Delete a Virtual On-Net Call Type.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "virtualOnNetCallTypeName", "required": true, "array": false, "type": "VirtualOnNetCallTypeName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "SystemVirtualOnNetCallTypeGetListRequest", "tags": ["services"], "documentation": "Get the list Virtual On-Net Call Types in the system.\n        The response is either a SystemVirtualOnNetCallTypeGetListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemVirtualOnNetCallTypeModifyRequest", "tags": ["services"], "documentation": "Modify a Virtual On-Net Call Type.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "virtualOnNetCallTypeName", "required": true, "array": false, "type": "VirtualOnNetCallTypeName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "virtualOnNetCallTypeCdrValue", "required": false, "array": false, "type": "VirtualOnNetCallTypeCdrValue", "type_schema": "xs:token", "minLength": 1, "maxLength": 6}]]}, {"name": "GroupVoiceMessagingGroupConsolidatedModifyVoicePortalRequest", "tags": ["services"], "documentation": "Request to modify the group's voice messaging settings and voice portal branding settings.\n        If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be un-assigned from the group if the command is executed by a service provider administrator or above.\n        When set to 'Service Provider', they will be un-assigned from the group and service provider if the command is executed by a provisioning administrator or above.\n        When omitted, the number(s) will be left assigned to the group.\n        An ErrorResponse will be returned if any number cannot be unassigned because of insufficient privilege.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "unassignPhoneNumbers", "required": false, "array": false, "type": "UnassignPhoneNumbersLevel", "type_schema": "xs:token", "enum": ["Group", "Service Provider"]}, {"name": "addPhoneNumberToGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableExtendedScope", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowIdentificationByPhoneNumberOrVoiceMailAliasesOnLogin", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useVoicePortalWizard", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "voicePortalExternalRoutingScope", "required": false, "array": false, "type": "VoicePortalExternalRoutingScope", "type_schema": "xs:token", "enum": ["System", "Group"]}, {"name": "useExternalRouting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "externalRoutingAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "homeZoneName", "required": false, "array": false, "type": "ZoneName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "voicePortalGreetingSelection", "required": false, "array": false, "type": "VoiceMessagingBrandingSelection", "type_schema": "xs:token", "enum": ["Default", "Branded"]}, {"name": "voicePortalGreetingFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "voiceMessagingGreetingSelection", "required": false, "array": false, "type": "VoiceMessagingBrandingSelection", "type_schema": "xs:token", "enum": ["Default", "Branded"]}, {"name": "voiceMessagingGreetingFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}]]}, {"name": "GroupVoiceMessagingGroupGetRequest", "tags": ["services"], "documentation": "Requests the group's Voice Messaging settings.\n        The response is either GroupVoiceMessagingGroupGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupVoiceMessagingGroupGetVoicePortalBrandingRequest20", "tags": ["services"], "documentation": "Get the group's voice portal branding settings.\n        The response is either a GroupVoiceMessagingGroupGetVoicePortalBrandingResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupVoiceMessagingGroupGetVoicePortalRequest21sp1", "tags": ["services"], "documentation": "Request to get the group voice portal information for a voice messaging group.\n        The response is either GroupVoiceMessagingGroupGetVoicePortalResponse21sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "GroupVoiceMessagingGroupModifyRequest", "tags": ["services"], "documentation": "Request to modify the group's voice messaging settings.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "useMailServerSetting", "required": false, "array": false, "type": "VoiceMessagingGroupMailServerChoices", "type_schema": "xs:token", "enum": ["System Mail Server", "Group Mail Server"]}, {"name": "warnCallerBeforeRecordingVoiceMessage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowUsersConfiguringAdvancedSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowComposeOrForwardMessageToEntireGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mailServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mailServerProtocol", "required": false, "array": false, "type": "VoiceMessagingMailServerProtocol", "type_schema": "xs:token", "enum": ["POP3", "IMAP"]}, {"name": "realDeleteForImap", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxMailboxLengthMinutes", "required": false, "array": false, "type": "VoiceMessagingMailboxLengthMinutes", "type_schema": "xs:int", "enum": ["10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "200", "300", "400", "500", "600", "700", "800", "900"]}, {"name": "doesMessageAge", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "holdPeriodDays", "required": false, "array": false, "type": "VoiceMessagingHoldPeriodDays", "type_schema": "xs:int", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "15", "30", "60"]}]]}, {"name": "GroupVoiceMessagingGroupModifyVoicePortalBrandingRequest20", "tags": ["services"], "documentation": "Modify the group's voice portal branding settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "voicePortalGreetingSelection", "required": false, "array": false, "type": "VoiceMessagingBrandingSelection", "type_schema": "xs:token", "enum": ["Default", "Branded"]}, {"name": "voicePortalGreetingFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "voiceMessagingGreetingSelection", "required": false, "array": false, "type": "VoiceMessagingBrandingSelection", "type_schema": "xs:token", "enum": ["Default", "Branded"]}, {"name": "voiceMessagingGreetingFile", "required": false, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}]]}, {"name": "GroupVoiceMessagingGroupModifyVoicePortalRequest", "tags": ["services"], "documentation": "Request to modify the group voice portal information for a voice messaging group.\n        The following elements are only used in AS data mode:\n          networkClassOfService\n        The following elements are only used in AS data mode and ignored in XS data mode:\n         expressMode\n\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableExtendedScope", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowIdentificationByPhoneNumberOrVoiceMailAliasesOnLogin", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useVoicePortalWizard", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "voicePortalExternalRoutingScope", "required": false, "array": false, "type": "VoicePortalExternalRoutingScope", "type_schema": "xs:token", "enum": ["System", "Group"]}, {"name": "useExternalRouting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "externalRoutingAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "homeZoneName", "required": false, "array": false, "type": "ZoneName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "expressMode", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ResellerVoiceMessagingGroupGetRequest", "tags": ["services"], "documentation": "Request the reseller level data associated with Voice Messaging.\n        The response is either a ResellerVoiceMessagingGroupGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}, {"name": "ResellerVoiceMessagingGroupModifyRequest", "tags": ["services"], "documentation": "Modify the reseller level data associated with Voice Messaging.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "deliveryFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "notificationFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "voicePortalLockoutFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "ServiceProviderVoiceMessagingGroupGetRequest", "tags": ["services"], "documentation": "Requests the service provider's or enterprise's voice messaging settings.\n        The response is either ServiceProviderVoiceMessagingGroupGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequest16", "tags": ["services"], "documentation": "Get the service provider's voice portal branding settings.\n        The response is either a ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingResponse16 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderVoiceMessagingGroupGetVoicePortalRequest", "tags": ["services"], "documentation": "Requests the service provider's or enterprise's voice portal settings.\n        The response is either ServiceProviderVoiceMessagingGroupGetVoicePortalResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderVoiceMessagingGroupModifyRequest", "tags": ["services"], "documentation": "Request to modify a service provider's or enterprise's voice messaging settings.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "deliveryFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "notificationFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "voicePortalLockoutFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "useSystemDefaultDeliveryFromAddress", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSystemDefaultNotificationFromAddress", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useSystemDefaultVoicePortalLockoutFromAddress", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequest16", "tags": ["services"], "documentation": "Modify the service provider's voice portal branding settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "voicePortalGreetingSelection", "required": false, "array": false, "type": "VoiceMessagingBrandingSelection", "type_schema": "xs:token", "enum": ["Default", "Branded"]}, {"name": "voicePortalGreetingFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"name": "voiceMessagingGreetingSelection", "required": false, "array": false, "type": "VoiceMessagingBrandingSelection", "type_schema": "xs:token", "enum": ["Default", "Branded"]}, {"name": "voiceMessagingGreetingFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "ServiceProviderVoiceMessagingGroupModifyVoicePortalRequest", "tags": ["services"], "documentation": "Request to change the service provider's or enterprise's voice portal settings.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "voicePortalScope", "required": false, "array": false, "type": "ServiceProviderVoicePortalScope", "type_schema": "xs:token", "enum": ["Group", "Service Provider"]}]]}, {"name": "SystemVoiceMessageSummaryUpdateGetRequest", "tags": ["services"], "documentation": "Requests system voice mail message summary update parameter settings.\n        The response is either SystemVoiceMessageSummaryUpdateGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemVoiceMessageSummaryUpdateModifyRequest", "tags": ["services"], "documentation": "Modify the system level data associated with Voice Messaging.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "sendSavedAndUrgentMWIOnNotification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sendMessageSummaryUpdateOnRegister", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "minTimeBetweenMWIOnRegister", "required": false, "array": false, "type": "VoiceMessageSummaryUpdateSeconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 86400.0}]]}, {"name": "SystemVoiceMessagingGroupGetRequest22V2", "tags": ["services"], "documentation": "Request the system level data associated with Voice Messaging.\n        The response is either a SystemVoiceMessagingGroupGetResponse22V2 or an ErrorResponse.", "type": "core:OCIRequest", "schema": ["core:OCIRequest"]}, {"name": "SystemVoiceMessagingGroupGetVoicePortalMenusRequest21", "tags": ["services"], "documentation": "Requests the system voice portal Menus setting.\n        The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse21 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "getDefaultMenuKeys", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SystemVoiceMessagingGroupModifyRequest16", "tags": ["services"], "documentation": "Modify the system level data associated with Voice Messaging.\n        The response is either a SuccessResponse or an ErrorResponse.\n\n        The following elements are only used in AS/Amplify data mode:\n           realDeleteForImap\n           useDnInMailBody\n           useShortSubjectLine\n           maxMessageLengthMinutes\n           maxMailboxLengthMinutes\n           doesMessageAge\n           holdPeriodDays\n           mailServerNetAddress\n           mailServerProtocol\n           defaultDeliveryFromAddress\n           defaultNotificationFromAddress\n           useOutgoingMWIOnSMDI\n           mwiDelayInSeconds\n           voicePortalScope\n           enterpriseVoicePortalLicensed\n           networkWideMessaging\n           useExternalRouting\n           defaultExternalRoutingAddress\n           vmOnlySystem, element is ignored in Amplify data mode.\n           clientInitiatedMailServerSessionTimeoutMinutes\n           recordingAudioFileFormat\n           allowVoicePortalAccessFromVMDepositMenu\n        The following elements are only used in AS data mode and ignored in XS data mode:\n           storageSelection\n           vmBucketName", "type": "core:OCIRequest", "schema": [[{"name": "realDeleteForImap", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useDnInMailBody", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useShortSubjectLine", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxMessageLengthMinutes", "required": false, "array": false, "type": "VoiceMessagingMaxMessageLengthMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "maxMailboxLengthMinutes", "required": false, "array": false, "type": "VoiceMessagingMailboxLengthMinutes", "type_schema": "xs:int", "enum": ["10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "200", "300", "400", "500", "600", "700", "800", "900"]}, {"name": "doesMessageAge", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "holdPeriodDays", "required": false, "array": false, "type": "VoiceMessagingHoldPeriodDays", "type_schema": "xs:int", "enum": ["0", "1", "2", "3", "4", "5", "6", "7", "15", "30", "60"]}, {"name": "mailServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mailServerProtocol", "required": false, "array": false, "type": "VoiceMessagingMailServerProtocol", "type_schema": "xs:token", "enum": ["POP3", "IMAP"]}, {"name": "defaultDeliveryFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "defaultNotificationFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "defaultVoicePortalLockoutFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "useOutgoingMWIOnSMDI", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "mwiDelayInSeconds", "required": false, "array": false, "type": "VoiceMessagingMessageWaitingIndicatorDelayInSeconds", "type_schema": "xs:int", "minimum": 0.0, "maximum": 300.0}, {"name": "voicePortalScope", "required": false, "array": false, "type": "SystemVoicePortalScope", "type_schema": "xs:token", "enum": ["Service Provider", "System"]}, {"name": "networkWideMessaging", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useExternalRouting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "defaultExternalRoutingAddress", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "vmOnlySystem", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "clientInitiatedMailServerSessionTimeoutMinutes", "required": false, "array": false, "type": "VoiceMessagingClientInitiatedMailServerSessionTimeoutMinutes", "type_schema": "xs:int", "minimum": 1.0, "maximum": 10.0}, {"name": "recordingAudioFileFormat", "required": false, "array": false, "type": "VoiceMessagingRecordingAudioFileFormat", "type_schema": "xs:token", "enum": ["WAV", "MP3"]}, {"name": "allowVoicePortalAccessFromVMDepositMenu", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "storageSelection", "required": false, "array": false, "type": "VoiceMessagingStorageMode", "type_schema": "xs:token", "enum": ["Cloud", "Mail Server"]}, {"name": "vmBucketName", "required": false, "array": false, "type": "BucketName", "type_schema": "xs:token", "minLength": 3, "maxLength": 256}]]}, {"name": "SystemVoiceMessagingGroupModifyVoicePortalMenusRequest19", "tags": ["services"], "documentation": "Request to modify the system voice portal menus setting.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "useVoicePortalCustomization", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "voicePortalMainMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "voiceMessaging", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "commPilotExpressProfile", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "greetings", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "callForwardingOptions", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "voicePortalCalling", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "hoteling", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "passcode", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "exitVoicePortal", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "externalRouting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "announcementMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "personalAssistant", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "announcementMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "recordAudio", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "recordAudioVideo", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "announcementRecordingMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "acceptRecording", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "rejectRerecord", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "end", "required": false, "array": false, "type": "VoicePortalDigitSequence", "type_schema": "xs:token", "minLength": 1, "maxLength": 3}]]}, {"name": "greetingsMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "personalizedName", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "conferenceGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "conferenceGreetingMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "activateConfGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "deactivateConfGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "recordNewConfGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "listenToCurrentConfGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "voiceMessagingMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "playMessages", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "changeBusyGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "changeNoAnswerGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "changeExtendedAwayGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "composeMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "deleteAllMessages", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "passcode", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "personalizedName", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "messageDeposit", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "playGreetingMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "skipBackward", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "pauseOrResume", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "skipForward", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "jumpToBegin", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "jumpToEnd", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "changeBusyOrNoAnswerGreetingMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "recordNewGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "listenToCurrentGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "revertToSystemDefaultGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "changeExtendedAwayGreetingMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "activateExtendedAwayGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "deactivateExtendedAwayGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "recordNewGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "listenToCurrentGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "enableMessageDeposit", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "disableMessageDeposit", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "recordNewGreetingOrPersonalizedNameMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "endRecording", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "deleteAllMessagesMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "confirmDeletion", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "cancelDeletion", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "commPilotExpressProfileMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "activateAvailableInOfficeProfile", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "activateAvailableOutOfOfficeProfile", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "activateBusyProfile", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "activateUnavailableProfile", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "noProfile", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "personalizedNameMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "recordNewPersonalizedName", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "listenToCurrentPersonalizedName", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "deletePersonalizedName", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "callForwardingOptionsMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "activateCallForwarding", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "deactivateCallForwarding", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "changeCallForwardingDestination", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "listenToCallForwardingStatus", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "changeCallForwardingDestinationMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "finishEnteringNewDestinationNumber", "required": false, "array": false, "type": "DigitStarPound", "type_schema": "xs:token"}]]}, {"name": "voicePortalCallingMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "endCurrentCallAndGoBackToPreviousMenu", "required": false, "array": false, "type": "VoicePortalDigitSequence", "type_schema": "xs:token", "minLength": 1, "maxLength": 3}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "hotelingMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "checkHostStatus", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "associateWithHost", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "disassociateFromHost", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "disassociateFromRemoteHost", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "passcodeMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "finishEnteringOrReenteringPasscode", "required": false, "array": false, "type": "DigitStarPound", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitStarPound", "type_schema": "xs:token"}]]}, {"name": "playMessagesMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "saveMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "deleteMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "playMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "previousMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "playEnvelope", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "nextMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "callbackCaller", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "composeMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "replyMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "forwardMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "additionalMessageOptions", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "personalizedName", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "passcode", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "playMessageMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "skipBackward", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "pauseOrResume", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "skipForward", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "jumpToBegin", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "jumpToEnd", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "additionalMessageOptionsMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "saveMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "deleteMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "playEnvelope", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "callbackCaller", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "composeMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "replyMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "forwardMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "personalizedName", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "passcode", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "forwardOrComposeMessageMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "sendToPerson", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "sendToAllGroupMembers", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "sendToDistributionList", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "changeCurrentIntroductionOrMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "listenToCurrentIntroductionOrMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setOrClearUrgentIndicator", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setOrClearConfidentialIndicator", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "replyMessageMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "sendReplyToCaller", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "changeCurrentReply", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "listenToCurrentReply", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setOrClearUrgentIndicator", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setOrClearConfidentialIndicator", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "sendToDistributionListMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "sendMessageToSelectedDistributionList", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "selectDistributionList", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "reviewSelectedDistributionList", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "selectDistributionListMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitStarPound", "type_schema": "xs:token"}, {"name": "repeatMenuOrFinishEnteringDistributionListNumber", "required": false, "array": false, "type": "DigitStarPound", "type_schema": "xs:token"}]]}, {"name": "reviewSelectedDistributionListMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "interruptPlaybackAndReturnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "sendMessageToSelectedDistributionListMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "confirmSendingToDistributionList", "required": false, "array": false, "type": "DigitStarPound", "type_schema": "xs:token"}, {"name": "cancelSendingToDistributionList", "required": false, "array": false, "type": "DigitStarPound", "type_schema": "xs:token"}]]}, {"name": "sendToAllGroupMembersMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "confirmSendingToEntireGroup", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "cancelSendingToEntireGroup", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "sendToPersonMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "confirmSendingMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "cancelSendingMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "finishEnteringNumberWhereToSendMessageTo", "required": false, "array": false, "type": "DigitStarPound", "type_schema": "xs:token"}, {"name": "finishForwardingOrSendingMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "changeCurrentIntroductionOrMessageOrReplyMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "endRecording", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "voicePortalLoginMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "accessUsingOtherMailboxId", "required": false, "array": false, "type": "VoicePortalDigitSequence", "type_schema": "xs:token", "minLength": 1, "maxLength": 3}]]}, {"name": "faxMessagingMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "saveFaxMessageAndSkipToNext", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "previousFaxMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "playEnvelope", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "nextFaxMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "deleteFaxMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "printFaxMessage", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "messageDepositMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "enableMessageDeposit", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "disableMessageDeposit", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "listenToMessageDepositStatus", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "disableMessageDepositMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "disconnectAfterGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "forwardAfterGreeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "changeForwardingDestination", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}, {"name": "greetingOnlyForwardingDestinationMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "greetingOnlyForwardingDestination", "required": false, "array": false, "type": "DigitStarPound", "type_schema": "xs:token"}]]}, {"name": "personalAssistantMenuKeys", "type": null, "required": false, "array": false, "schema": [[{"name": "setPresenceToNone", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setPresenceToBusinessTrip", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setPresenceToGoneForTheDay", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setPresenceToLunch", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setPresenceToMeeting", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setPresenceToOutOfOffice", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setPresenceToTemporarilyOut", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setPresenceToTraining", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setPresenceToUnavailable", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "setPresenceToVacation", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "returnToPreviousMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}, {"name": "repeatMenu", "required": false, "array": false, "type": "DigitAny", "type_schema": "xs:token"}]]}]]}, {"name": "UserVoiceMessagingUserAddAliasListRequest", "tags": ["services"], "documentation": "Add one or more voice mail aliases to a users voice message.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "UserVoiceMessagingUserDeleteAliasListRequest", "tags": ["services"], "documentation": "Delete one or more voice mail aliases from a users voice message.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "UserVoiceMessagingUserGetAdvancedVoiceManagementRequest14sp3", "tags": ["services"], "documentation": "Get the user's voice messaging advanced voice management service setting.\n        The response is either a UserVoiceMessagingUserGetAdvancedVoiceManagementResponse14sp3 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserVoiceMessagingUserGetAliasListRequest", "tags": ["services"], "documentation": "Get the voice mail aliases for a users voice message.\n        The response is either a UserVoiceMessagingUserGetAliasListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserVoiceMessagingUserGetDistributionListRequest", "tags": ["services"], "documentation": "Get a voice mail distribution list for a users voice message.\n        The response is either UserVoiceMessagingUserGetDistributionListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "listId", "required": true, "array": false, "type": "VoiceMessagingDistributionListId", "type_schema": "xs:int", "minimum": 0.0, "maximum": 14.0}]]}, {"name": "UserVoiceMessagingUserGetGreetingRequest20", "tags": ["services"], "documentation": "Get the user's voice messaging greeting information.\n        The response is either a UserVoiceMessagingUserGetGreetingResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserVoiceMessagingUserGetOutgoingSMDIMWIRequest", "tags": ["services"], "documentation": "Get the user's voice messaging outgoing SMDI message waiting indicator service setting.\n        The response is either a UserVoiceMessagingUserGetOutgoingSMDIMWIResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserVoiceMessagingUserGetVoiceManagementRequest17", "tags": ["services"], "documentation": "Get the user's voice messaging voice management service settings.\n        The response is either a UserVoiceMessagingUserGetVoiceManagementResponse17 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserVoiceMessagingUserGetVoicePortalRequest20", "tags": ["services"], "documentation": "Get the user's voice messaging voice portal settings.\n        The response is either a UserVoiceMessagingUserGetVoicePortalResponse20 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserVoiceMessagingUserModifyAdvancedVoiceManagementRequest", "tags": ["services"], "documentation": "Modify the user's voice messaging advanced voice management service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "mailServerSelection", "required": false, "array": false, "type": "VoiceMessagingUserMailServerSelection", "type_schema": "xs:token", "enum": ["Group Mail Server", "Personal Mail Server"]}, {"name": "groupMailServerEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "groupMailServerUserId", "required": false, "array": false, "type": "VoiceMessagingMailServerUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "groupMailServerPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "personalMailServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "personalMailServerProtocol", "required": false, "array": false, "type": "VoiceMessagingMailServerProtocol", "type_schema": "xs:token", "enum": ["POP3", "IMAP"]}, {"name": "personalMailServerRealDeleteForImap", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "personalMailServerEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "personalMailServerUserId", "required": false, "array": false, "type": "VoiceMessagingMailServerUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "personalMailServerPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"choice": [{"name": "useGroupDefaultMailServerFullMailboxLimit", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "groupMailServerFullMailboxLimit", "required": true, "array": false, "type": "VoiceMessagingMailboxLengthMinutes", "type_schema": "xs:int", "enum": ["10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "200", "300", "400", "500", "600", "700", "800", "900"]}]}]]}, {"name": "UserVoiceMessagingUserModifyDistributionListRequest", "tags": ["services"], "documentation": "Modify a voice mail distribution list for a users voice message.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "listId", "required": true, "array": false, "type": "VoiceMessagingDistributionListId", "type_schema": "xs:int", "minimum": 0.0, "maximum": 14.0}, {"name": "description", "required": false, "array": false, "type": "VoiceMessagingDistributionListDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "phoneNumberList", "required": false, "array": false, "type": "ReplacementOutgoingDNorSIPURIList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "UserVoiceMessagingUserModifyGreetingRequest20", "tags": ["services"], "documentation": "Modify the user's voice messaging greeting.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.\n        The following elements are only used in AS data mode:\n          disableMessageDeposit\n          disableMessageDepositAction\n          greetingOnlyForwardDestination", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "busyAnnouncementSelection", "required": false, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "busyPersonalAudioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "busyPersonalVideoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "noAnswerAnnouncementSelection", "required": false, "array": false, "type": "VoiceMessagingNoAnswerGreetingSelection", "type_schema": "xs:token", "enum": ["Default", "Personal", "Alternate01", "Alternate02", "Alternate03"]}, {"name": "noAnswerPersonalAudioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "noAnswerPersonalVideoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "noAnswerAlternateGreeting01", "required": false, "array": false, "type": "VoiceMessagingAlternateNoAnswerGreetingModify20", "schema": [[{"name": "name", "required": false, "array": false, "type": "VoiceMessagingAlternateNoAnswerGreetingName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "noAnswerAlternateGreeting02", "required": false, "array": false, "type": "VoiceMessagingAlternateNoAnswerGreetingModify20", "schema": [[{"name": "name", "required": false, "array": false, "type": "VoiceMessagingAlternateNoAnswerGreetingName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "noAnswerAlternateGreeting03", "required": false, "array": false, "type": "VoiceMessagingAlternateNoAnswerGreetingModify20", "schema": [[{"name": "name", "required": false, "array": false, "type": "VoiceMessagingAlternateNoAnswerGreetingName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "extendedAwayEnabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "extendedAwayDisableMessageDeposit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "extendedAwayAudioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "extendedAwayVideoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "noAnswerNumberOfRings", "required": false, "array": false, "type": "VoiceMessagingNumberOfRings", "type_schema": "xs:int", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}, {"name": "disableMessageDeposit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disableMessageDepositAction", "required": false, "array": false, "type": "VoiceMessagingDisableMessageDepositSelection", "type_schema": "xs:token", "enum": ["Disconnect", "Forward"]}, {"name": "greetingOnlyForwardDestination", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserVoiceMessagingUserModifyOutgoingSMDIMWIRequest", "tags": ["services"], "documentation": "Modify the user's voice messaging outgoing message waiting indicator service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "outgoingSMDIMWIPhoneNumberList", "required": false, "array": false, "type": "ReplacementOutgoingDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}, {"name": "UserVoiceMessagingUserModifyRequest23", "tags": ["services"], "documentation": "Modify the user's voice messaging advanced voice management service setting.\n        Modify a voice mail distribution list for a users voice message.\n        Modify the user's voice messaging greeting.\n        Modify the user's voice messaging outgoing message waiting indicator service setting.\n        Modify the user's voice messaging voice portal settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "mailServerSelection", "required": false, "array": false, "type": "VoiceMessagingUserMailServerSelection", "type_schema": "xs:token", "enum": ["Group Mail Server", "Personal Mail Server"]}, {"name": "groupMailServerEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "groupMailServerUserId", "required": false, "array": false, "type": "VoiceMessagingMailServerUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "groupMailServerPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "personalMailServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "personalMailServerProtocol", "required": false, "array": false, "type": "VoiceMessagingMailServerProtocol", "type_schema": "xs:token", "enum": ["POP3", "IMAP"]}, {"name": "personalMailServerRealDeleteForImap", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "personalMailServerEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "personalMailServerUserId", "required": false, "array": false, "type": "VoiceMessagingMailServerUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "personalMailServerPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "voiceMessagingDistributionList", "required": false, "array": true, "type": "VoiceMessagingDistributionListModify", "schema": [[{"name": "listId", "required": true, "array": false, "type": "VoiceMessagingDistributionListId", "type_schema": "xs:int", "minimum": 0.0, "maximum": 14.0}, {"name": "description", "required": false, "array": false, "type": "VoiceMessagingDistributionListDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "phoneNumberList", "required": false, "array": false, "type": "ReplacementOutgoingDNorSIPURIList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "busyAnnouncementSelection", "required": false, "array": false, "type": "AnnouncementSelection", "type_schema": "xs:token", "enum": ["Default", "Personal"]}, {"name": "busyPersonalAudioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "busyPersonalVideoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "noAnswerAnnouncementSelection", "required": false, "array": false, "type": "VoiceMessagingNoAnswerGreetingSelection", "type_schema": "xs:token", "enum": ["Default", "Personal", "Alternate01", "Alternate02", "Alternate03"]}, {"name": "noAnswerPersonalAudioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "noAnswerPersonalVideoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "noAnswerAlternateGreeting01", "required": false, "array": false, "type": "VoiceMessagingAlternateNoAnswerGreetingModify20", "schema": [[{"name": "name", "required": false, "array": false, "type": "VoiceMessagingAlternateNoAnswerGreetingName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "noAnswerAlternateGreeting02", "required": false, "array": false, "type": "VoiceMessagingAlternateNoAnswerGreetingModify20", "schema": [[{"name": "name", "required": false, "array": false, "type": "VoiceMessagingAlternateNoAnswerGreetingName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "noAnswerAlternateGreeting03", "required": false, "array": false, "type": "VoiceMessagingAlternateNoAnswerGreetingModify20", "schema": [[{"name": "name", "required": false, "array": false, "type": "VoiceMessagingAlternateNoAnswerGreetingName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "audioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "videoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "extendedAwayEnabled", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "extendedAwayDisableMessageDeposit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "extendedAwayAudioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "extendedAwayVideoFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "noAnswerNumberOfRings", "required": false, "array": false, "type": "VoiceMessagingNumberOfRings", "type_schema": "xs:int", "enum": ["0", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"]}, {"name": "disableMessageDeposit", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "disableMessageDepositAction", "required": false, "array": false, "type": "VoiceMessagingDisableMessageDepositSelection", "type_schema": "xs:token", "enum": ["Disconnect", "Forward"]}, {"name": "greetingOnlyForwardDestination", "required": false, "array": false, "type": "OutgoingDNorSIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "outgoingSMDIMWIisActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "outgoingSMDIMWIPhoneNumberList", "required": false, "array": false, "type": "ReplacementOutgoingDNList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "voiceManagementisActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "processing", "required": false, "array": false, "type": "VoiceMessagingMessageProcessing", "type_schema": "xs:token", "enum": ["Unified Voice and Email Messaging", "Deliver To Email Address Only"]}, {"name": "voiceMessageDeliveryEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "usePhoneMessageWaitingIndicator", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sendVoiceMessageNotifyEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "voiceMessageNotifyEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "sendCarbonCopyVoiceMessage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "voiceMessageCarbonCopyEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "transferOnZeroToPhoneNumber", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "alwaysRedirectToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "busyRedirectToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "noAnswerRedirectToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "outOfPrimaryZoneRedirectToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "usePersonalizedName", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "voicePortalAutoLogin", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "personalizedNameAudioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}, {"name": "userMessagingAliasList", "required": false, "array": false, "type": "VoiceMessagingAliasReplacementList", "schema": [[{"name": "phoneNumber", "required": true, "array": true, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"choice": [{"name": "useGroupDefaultMailServerFullMailboxLimit", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "groupMailServerFullMailboxLimit", "required": true, "array": false, "type": "VoiceMessagingMailboxLengthMinutes", "type_schema": "xs:int", "enum": ["10", "20", "30", "40", "50", "60", "70", "80", "90", "100", "200", "300", "400", "500", "600", "700", "800", "900"]}]}]]}, {"name": "UserVoiceMessagingUserModifyVoiceManagementRequest", "tags": ["services"], "documentation": "Modify the user's voice messaging voice management service setting.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "processing", "required": false, "array": false, "type": "VoiceMessagingMessageProcessing", "type_schema": "xs:token", "enum": ["Unified Voice and Email Messaging", "Deliver To Email Address Only"]}, {"name": "voiceMessageDeliveryEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "usePhoneMessageWaitingIndicator", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sendVoiceMessageNotifyEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "voiceMessageNotifyEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "sendCarbonCopyVoiceMessage", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "voiceMessageCarbonCopyEmailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "transferOnZeroToPhoneNumber", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "transferPhoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "alwaysRedirectToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "busyRedirectToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "noAnswerRedirectToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "outOfPrimaryZoneRedirectToVoiceMail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserVoiceMessagingUserModifyVoicePortalRequest20", "tags": ["services"], "documentation": "Modify the user's voice messaging voice portal settings.\n        The response is either a SuccessResponse or an ErrorResponse.\n        Engineering Note: This command is used internally by Call Processing.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "usePersonalizedName", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "voicePortalAutoLogin", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "personalizedNameAudioFile", "required": false, "array": false, "type": "AnnouncementFileLevelKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"name": "level", "required": true, "array": false, "type": "AnnouncementRepositoryType", "type_schema": "xs:token", "enum": ["Group", "User"]}]]}]]}, {"name": "UserVoicePortalCallingGetRequest", "tags": ["services"], "documentation": "Request the user level data associated with Voice Portal Calling.\n        The response is either a UserVoicePortalCallingGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserVoicePortalCallingModifyRequest", "tags": ["services"], "documentation": "Modify the user level data associated with Voice Portal Calling.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "GroupVoiceXmlAddInstanceRequest", "tags": ["services"], "documentation": "Add a VoiceXML instance to a group.\n        The domain is required in the serviceUserId.  For a valid voiceXml instance to work properly,\n        a device with Static Registration is expected with a valid contact.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": true, "array": false, "type": "ServiceInstanceAddProfile", "schema": [[{"name": "name", "required": true, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "accessDeviceEndpoint", "required": false, "array": false, "type": "AccessDeviceEndpointAdd", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}]]}, {"name": "GroupVoiceXmlDeleteInstanceRequest", "tags": ["services"], "documentation": "Delete a VoiceXML instance from a group.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupVoiceXmlGetInstanceListRequest", "tags": ["services"], "documentation": "Get a list of VoiceXML instances within a group.\n        The response is either GroupVoiceXmlGetInstanceListResponse or ErrorResponse.\n        It is possible to get the instances within a specified department.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupDepartmentName", "required": false, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "GroupVoiceXmlGetInstanceRequest22", "tags": ["services"], "documentation": "Request to get all the information of a VoiceXML instance.\n        The response is either GroupVoiceXmlGetInstanceResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "GroupVoiceXmlModifyActiveInstanceListRequest", "tags": ["services"], "documentation": "Request to set the active status of VoiceXML instances.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceActivation", "required": false, "array": true, "type": "ServiceActivation", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "GroupVoiceXmlModifyInstanceRequest", "tags": ["services"], "documentation": "Request to modify a VoiceXML instance. For a valid voiceXml instance to work properly,\n        a device with Static Registration is expected with a valid contact.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceInstanceProfile", "required": false, "array": false, "type": "ServiceInstanceModifyProfile", "schema": [[{"name": "name", "required": false, "array": false, "type": "ServiceInstanceProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "publicUserIdentity", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "accessDeviceEndpoint", "required": false, "array": false, "type": "AccessDeviceEndpointModify", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}]]}]]}, {"name": "ServiceProviderZoneCallingRestrictionsGetRequest", "tags": ["services"], "documentation": "Gets the Service Provider/Enterprise level Zone Calling Restrictions Policies.\n        The response is ServiceProviderZoneCallingRestrictionsGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "ServiceProviderZoneCallingRestrictionsModifyRequest", "tags": ["services"], "documentation": "Modifies the Service Provider/Enterprise level Zone Calling Restrictions Policies.\n        The response is SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "enableZoneCallingRestrictions", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableOriginationRoamingRestrictions", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableEmergencyOriginationRoamingRestrictions", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableTerminationRoamingRestrictions", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserZoneCallingRestrictionsGetRequest", "tags": ["services"], "documentation": "Gets the home zone for a user\n        The response is either a UserZoneCallingRestrictionsGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserZoneCallingRestrictionsModifyRequest", "tags": ["services"], "documentation": "Modify the home zone for a user\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "homeZoneName", "required": false, "array": false, "type": "ZoneName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]
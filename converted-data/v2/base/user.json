[{"name": "PlaceModifyRequest", "tags": ["User"], "documentation": "Request to configure a WebEx room/place to have the primary endpoint of WebEx Teams device.\n\n        placeUserId refers to a WebEx room/place.\n        webExSIPAddress specifies the WebEx SIP address of the place. The format of this parameter is: user@domain.\n        The user part specified in webExSIPAddress will be set to the lineport of the place\u2019s primary endpoint. The endpoint\n        will have a static address with URI set to \"sip:user@domain\".\n        The domain specified in webExSIPAddress will be:\n        - added to the system if it does not exist yet.\n        - assigned to the service provider/enterprise which the place belongs to, if it has not been assigned yet.\n        - assigned to the group which the place belongs to, if it has not been assigned yet.\n\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "placeUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "webExSIPAddress", "required": false, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserAccessDeviceDeviceActivationGetListRequest", "tags": ["User"], "documentation": "Requests the list of access devices associated to a user and their device activation information.\n        The response is either UserAccessDeviceDeviceActivationGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserAccessDeviceFileGetListRequest", "tags": ["User"], "documentation": "Request to get the list of Device Management user modifiable files.\n        The response is either UserAccessDeviceFileGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "UserAccessDeviceFileGetRequest", "tags": ["User"], "documentation": "Request to get a user modifiable file.\n        The response is either UserAccessDeviceFileGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "fileFormat", "required": true, "array": false, "type": "DeviceManagementFileFormat", "type_schema": "xs:token", "minLength": 1, "maxLength": 128}]]}, {"name": "UserAccessDeviceFileModifyRequest", "tags": ["User"], "documentation": "Request to modify a user modifiable access device file.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "fileFormat", "required": true, "array": false, "type": "DeviceManagementFileFormat", "type_schema": "xs:token", "minLength": 1, "maxLength": 128}, {"name": "uploadFile", "required": true, "array": false, "type": "FileResource", "schema": [[{"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "fileContent", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "UserAccessDeviceResetRequest", "tags": ["User"], "documentation": "Reset a specific user SIP device that supports the reset operation.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "UserAccessDeviceTagsGetRequest", "tags": ["User"], "documentation": "Request to get all the device tag names and values for a specific device. The resolved tags are returned only if the device is the main device for this user.\n        The response is either a UserAccessDeviceTagsGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}]]}, {"name": "UserAddRequest22V2", "tags": ["User"], "documentation": "Request to add a user.\n        The domain is required in the userId.\n        The password is not required if external authentication is enabled.\n\n        The following elements are only used in AS data mode and will fail in XS data mode:\n          trunkAddressing\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          nameDialingName\n          alternateUserId\n\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          allowVideo\n\n        The response is either SuccessResponse or ErrorResponse.\n\n        The following elements can only be used by a system administrator:.\n          allowVideo\n          alternateUserId\n\n        The following elements can only be used by a provisioning administrator:.\n          alternateUserId\n\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "lastName", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "firstName", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "nameDialingName", "required": false, "array": false, "type": "NameDialingName", "schema": [[{"name": "nameDialingLastName", "required": true, "array": false, "type": "NameDialingLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "nameDialingFirstName", "required": true, "array": false, "type": "NameDialingFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "title", "required": false, "array": false, "type": "Title", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "pagerPhoneNumber", "required": false, "array": false, "type": "InformationalDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "mobilePhoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "emailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "yahooId", "required": false, "array": false, "type": "YahooId", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "addressLocation", "required": false, "array": false, "type": "AddressLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "address", "required": false, "array": false, "type": "StreetAddress", "schema": [[{"name": "addressLine1", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "addressLine2", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "city", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvince", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvinceDisplayName", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "zipOrPostalCode", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "country", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "alternateUserId", "required": false, "array": true, "type": "AlternateUserIdEntry", "schema": [[{"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "description", "required": false, "array": false, "type": "AlternateUserIdDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"choice": [{"name": "accessDeviceEndpoint", "required": false, "array": false, "type": "AccessDeviceMultipleIdentityAndContactEndpointAdd22V2", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "privateIdentity", "required": false, "array": false, "type": "AccessDeviceEndpointPrivateIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": true, "type": "SIPContactInfo", "schema": [[{"name": "sipContact", "required": true, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}, {"name": "useHotline", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "trunkAddressing", "required": false, "array": false, "type": "TrunkAddressingMultipleContactAdd22", "schema": [[{"name": "trunkGroupDeviceEndpoint", "required": false, "array": false, "type": "TrunkGroupDeviceMultipleContactEndpointAdd22", "schema": [[{"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": true, "type": "SIPContactInfo", "schema": [[{"name": "sipContact", "required": true, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}]]}, {"name": "enterpriseTrunkName", "required": false, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "alternateTrunkIdentity", "required": false, "array": false, "type": "AlternateTrunkIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "alternateTrunkIdentityDomain", "required": false, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "physicalLocation", "required": false, "array": false, "type": "AccessDevicePhysicalLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}]}]]}, {"name": "UserAlternateUserIdAddRequest", "tags": ["User"], "documentation": "Request to add an alternate user Id to an user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "description", "required": false, "array": false, "type": "AlternateUserIdDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "UserAlternateUserIdDeleteRequest", "tags": ["User"], "documentation": "Request to delete an alternate user id of a user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserAlternateUserIdGetListRequest", "tags": ["User"], "documentation": "Request to get the user id and the list of alternate user ids of an user.\n        The response is either UserAlternateUserIdGetListResponse or ErrorResponse.\n        The \"userId\" can be either the user Id or an alternate user Id.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserAlternateUserIdModifyRequest", "tags": ["User"], "documentation": "Request to modify an alternate user id of a user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "newAlternateUserId", "required": false, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "description", "required": false, "array": false, "type": "AlternateUserIdDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "UserAnnouncementFileAddRequest", "tags": ["User"], "documentation": "Add an announcement to the user announcement repository\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          announcementFileExternalId\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "announcementFile", "required": true, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"choice": [{"name": "announcementFileName", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "announcementFileExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}]}]]}, {"name": "UserAnnouncementFileDeleteListRequest", "tags": ["User"], "documentation": "Delete one or more announcements from the user announcement repository\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          announcementFileExternalId\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"choice": [{"name": "announcementFileKey", "required": true, "array": true, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "announcementFileExternalId", "required": true, "array": true, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}]}]]}, {"name": "UserAnnouncementFileGetAvailableListRequest", "tags": ["User"], "documentation": "Get the list of available announcement files for a User from the Announcement Repository,\n        for Virtual subscribers the list will also include the announcements for it's group.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "announcementFileType", "required": false, "array": false, "type": "AnnouncementFileType", "type_schema": "xs:token", "enum": ["Audio", "Video"]}]]}, {"name": "UserAnnouncementFileGetListRequest", "tags": ["User"], "documentation": "Get the list of announcement names with associated media type and filesize for a User and\n        given Announcement Repository Type\n        The response is either a UserAnnouncementFileGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "announcementFileType", "required": false, "array": false, "type": "AnnouncementFileType", "type_schema": "xs:token", "enum": ["Audio", "Video"]}, {"name": "includeAnnouncementTable", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaAnnouncementFileName", "required": false, "array": true, "type": "SearchCriteriaAnnouncementFileName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserAnnouncementFileGetPagedSortedListRequest", "tags": ["User"], "documentation": "Get the list of announcement files for a user.\n        If the responsePagingControl element is not provided,\n        the paging startIndex will be set to 1 by default,\n        and the responsePageSize will be set to the maximum responsePageSize by\n        default.\n        If no sortOrder is provided, the response is sorted by Name ascending by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n        The response is either a\n        UserAnnouncementFileGetPagedSortedListResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "searchCriteriaAnnouncementFileName", "required": false, "array": true, "type": "SearchCriteriaAnnouncementFileName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactAnnouncementFileType", "required": false, "array": false, "type": "SearchCriteriaExactAnnouncementFileType", "schema": [[{"name": "type", "required": true, "array": false, "type": "AnnouncementFileType", "type_schema": "xs:token", "enum": ["Audio", "Video"]}]]}, {"name": "searchCriteriaExactMediaFileType", "required": false, "array": true, "type": "SearchCriteriaExactMediaFileType", "schema": [[{"name": "type", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"choice": [{"name": "sortByAnnouncementFileName", "required": true, "array": false, "type": "SortByAnnouncementFileName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByAnnouncementFileSize", "required": true, "array": false, "type": "SortByAnnouncementFileSize", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]]}, {"name": "UserAnnouncementFileGetRequest22", "tags": ["User"], "documentation": "Request to get the announcement repository file information.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          announcementFileExternalId\n\n        The response is either UserAnnouncementFileGetResponse22 or ErrorResponse.", "type": "core:OCIRequest", "schema": [{"choice": [{"name": "announcementFileExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}, [{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "announcementFileKey", "required": true, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}]]}]}, {"name": "UserAnnouncementFileModifyRequest", "tags": ["User"], "documentation": "This command is used to change the name of the file or upload a new announcement file for\n        an existing announcement in the user repository.\n        When modifying the file type the command will fail if the media type of the new file changes\n        the announcement from audio to video (or vice versa).\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          announcementFileExternalId\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "newAnnouncementFileName", "required": false, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "announcementFile", "required": false, "array": false, "type": "LabeledMediaFileResource", "schema": [[{"name": "description", "required": true, "array": false, "type": "FileDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 256}, {"name": "mediaType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}, {"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": 1}, {"name": "content", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}, {"choice": [{"name": "announcementFileExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}, [{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "announcementFileKey", "required": true, "array": false, "type": "AnnouncementFileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "AnnouncementFileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "mediaFileType", "required": true, "array": false, "type": "MediaFileType", "type_schema": "xs:token", "enum": ["WMA", "WAV", "3GP", "MOV"]}]]}]]}]]}, {"name": "UserAnnouncementRepositoryGetSettingsRequest", "tags": ["User"], "documentation": "Return the disk space being used.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserAssignedServicesGetListRequest", "tags": ["User"], "documentation": "Get the list of assigned User and Group Services for the specified user.\n        The response is either an UserAssignedServicesGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": false, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallLogsClearRequest14sp4", "tags": ["User"], "documentation": "Clear a user's call logs associated with Basic Call Logs and Enhanced\n        Call Logs features. The calls logs are deleted from both Basic Call Logs\n        and Enhanced Call Logs if both features are assigned.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"choice": [{"name": "deleteAllCallLogs", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "deleteSpecifiedCallLogs", "type": null, "required": true, "array": false, "schema": [[{"name": "placedCallLogId", "required": false, "array": true, "type": "CallLogId17sp4", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "receivedCallLogId", "required": false, "array": true, "type": "CallLogId17sp4", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "missedCallLogId", "required": false, "array": true, "type": "CallLogId17sp4", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}]]}]}]]}, {"name": "UserCallPoliciesGetRequest19sp1", "tags": ["User"], "documentation": "Request the user level data associated with Call Policies.\n        The response is either a UserCallPoliciesGetResponse19sp1\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallPoliciesModifyRequest", "tags": ["User"], "documentation": "Modify the user level data associated with Call Policies.\n        The following elements are only used in AS data mode:\n          callingLineIdentityForRedirectedCalls\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "redirectedCallsCOLPPrivacy", "required": false, "array": false, "type": "ConnectedLineIdentificationPrivacyOnRedirectedCalls", "type_schema": "xs:token", "enum": ["No Privacy", "Privacy For External Calls", "Privacy For All Calls"]}, {"name": "callBeingForwardedResponseCallType", "required": false, "array": false, "type": "CallBeingForwardedResponseCallType", "type_schema": "xs:token", "enum": ["Never", "Internal Calls", "All Calls"]}, {"name": "callingLineIdentityForRedirectedCalls", "required": false, "array": false, "type": "CallingLineIdentityForRedirectedCalls", "type_schema": "xs:token", "enum": ["Originating Identity", "Redirecting User Identity For External Redirections", "Redirecting User Identity For All Redirections"]}]]}, {"name": "UserCallProcessingGetPolicyRequest22V2", "tags": ["User"], "documentation": "Request the user level data associated with Call Processing Policy.\n        The response is either a UserCallProcessingGetPolicyResponse22V2 or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCallProcessingModifyPolicyRequest14sp7", "tags": ["User"], "documentation": "Modify the user level data associated with Call Processing Policy.\n          The response is either a SuccessResponse or an ErrorResponse.\n\n          The useUserCLIDSetting attribute controls the CLID settings\n          (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowConfigurableCLIDForRedirectingIdentity, allowDepartmentCLIDNameOverride)\n\n          The useUserMediaSetting attribute controls the Media settings\n          (medisPolicySelection, supportedMediaSetName)\n\n          The useUserCallLimitsSetting attribute controls the Call Limits setting\n          (useMaxSimultaneousCalls, maxSimultaneousCalls, useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls,\n          maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls,\n          useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations,\n          useMaxConcurrentTerminatingAlertingRequests, maxConcurrentTerminatingAlertingRequests,\n          includeRedirectionsInMaximumNumberOfConcurrentCalls)\n\n          The useUserDCLIDSetting controls the Dialable Caller ID settings (enableDialableCallerID)\n\n          The useUserPhoneListLookupSetting controls the Caller ID Lookup settings (enablePhoneListLookup)\n\n          The useUserTranslationRoutingSetting attribute controls the routing and translation settings (routeOverrideDomain, routeOverridePrefix)\n\n          The following elements are only used in AS data mode:\n           useUserDCLIDSetting\n           enableDialableCallerID\n           allowConfigurableCLIDForRedirectingIdentity\n           allowDepartmentCLIDNameOverride\n\n          The following elements are only used in AS data mode and ignored in XS data mode:\n           useUserPhoneListLookupSetting\n           enablePhoneListLookup\n           useMaxConcurrentTerminatingAlertingRequests\n           maxConcurrentTerminatingAlertingRequests\n           includeRedirectionsInMaximumNumberOfConcurrentCalls\n           allowMobileDNForRedirectingIdentity\n\n\n          The following elements are only used in XS data mode and ignored in AS data mode:\n           useUserTranslationRoutingSetting\n           routeOverrideDomain\n           routeOverridePrefix", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useUserCLIDSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useUserMediaSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useUserCallLimitsSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useUserDCLIDSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useUserTranslationRoutingSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMaxSimultaneousCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxSimultaneousCalls", "required": false, "array": false, "type": "CallProcessingMaxSimultaneousCalls19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999999.0}, {"name": "useMaxSimultaneousVideoCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxSimultaneousVideoCalls", "required": false, "array": false, "type": "CallProcessingMaxSimultaneousCalls19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999999.0}, {"name": "useMaxCallTimeForAnsweredCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxCallTimeForAnsweredCallsMinutes", "required": false, "array": false, "type": "CallProcessingMaxCallTimeForAnsweredCallsMinutes16", "type_schema": "xs:int", "minimum": 3.0, "maximum": 2880.0}, {"name": "useMaxCallTimeForUnansweredCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxCallTimeForUnansweredCallsMinutes", "required": false, "array": false, "type": "CallProcessingMaxCallTimeForUnansweredCallsMinutes19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2880.0}, {"name": "mediaPolicySelection", "required": false, "array": false, "type": "MediaPolicySelection", "type_schema": "xs:token", "enum": ["Use Uncompressed Codec", "Use Supported Media Set", "No Restrictions"]}, {"name": "supportedMediaSetName", "required": false, "array": false, "type": "MediaSetName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "useMaxConcurrentRedirectedCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxConcurrentRedirectedCalls", "required": false, "array": false, "type": "CallProcessingMaxConcurrentRedirectedCalls19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999999.0}, {"name": "useMaxFindMeFollowMeDepth", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxFindMeFollowMeDepth", "required": false, "array": false, "type": "CallProcessingMaxFindMeFollowMeDepth19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 100.0}, {"name": "maxRedirectionDepth", "required": false, "array": false, "type": "CallProcessingMaxRedirectionDepth19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 100.0}, {"name": "useMaxConcurrentFindMeFollowMeInvocations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxConcurrentFindMeFollowMeInvocations", "required": false, "array": false, "type": "CallProcessingMaxConcurrentFindMeFollowMeInvocations19sp1", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999999.0}, {"name": "clidPolicy", "required": false, "array": false, "type": "GroupCLIDPolicy", "type_schema": "xs:token", "enum": ["Use DN", "Use Configurable CLID", "Use Group CLID"]}, {"name": "emergencyClidPolicy", "required": false, "array": false, "type": "GroupCLIDPolicy", "type_schema": "xs:token", "enum": ["Use DN", "Use Configurable CLID", "Use Group CLID"]}, {"name": "allowAlternateNumbersForRedirectingIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useGroupName", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableDialableCallerID", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "blockCallingNameForExternalCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowConfigurableCLIDForRedirectingIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowDepartmentCLIDNameOverride", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useUserPhoneListLookupSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enablePhoneListLookup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useMaxConcurrentTerminatingAlertingRequests", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxConcurrentTerminatingAlertingRequests", "required": false, "array": false, "type": "CallProcessingMaxConcurrentTerminatingAlertingRequests", "type_schema": "xs:int", "minimum": 1.0, "maximum": 50.0}, {"name": "includeRedirectionsInMaximumNumberOfConcurrentCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "routeOverrideDomain", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "routeOverridePrefix", "required": false, "array": false, "type": "RouteOverridePrefix", "type_schema": "xs:token", "minLength": 1, "maxLength": 10}, {"name": "allowMobileDNForRedirectingIdentity", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserCommunicationBarringAuthorizationCodeAddListRequest", "tags": ["User"], "documentation": "Add a list of Communication Barring Authorization codes to a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "code", "required": true, "array": true, "type": "CommunicationBarringAuthorizationCodeEntry", "schema": [[{"name": "code", "required": true, "array": false, "type": "CommunicationBarringAuthorizationCode", "type_schema": "xs:token", "minLength": 2, "maxLength": 14}, {"name": "description", "required": false, "array": false, "type": "CommunicationBarringAuthorizationCodeDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "UserCommunicationBarringAuthorizationCodeDeleteListRequest", "tags": ["User"], "documentation": "Delete a list of Communication Barring Authorization codes from a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "code", "required": true, "array": true, "type": "CommunicationBarringAuthorizationCode", "type_schema": "xs:token", "minLength": 2, "maxLength": 14}]]}, {"name": "UserCommunicationBarringAuthorizationCodeGetListRequest", "tags": ["User"], "documentation": "Get a list of Communication Barring Authorization Code for a user.\n        The response is either a UserCommunicationBarringAuthorizationCodeGetListResponse\n        or an ErorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCommunicationBarringGetRequest", "tags": ["User"], "documentation": "Gets the Communication Barring settings for a user.\n        The response is either a UserCommunicationBarringGetResponse or an ErrorResponse.\n        This command only applies to groups in an Enterprise. This command will fail for groups in a Service Provider.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserCommunicationBarringModifyRequest", "tags": ["User"], "documentation": "Modify the Communication Barring settings for a user. If useDefaultServiceProviderProfile is set to false, a profile name must be present.\n        The response is either a SuccessResponse or an ErrorResponse.\n        This command only applies to groups in an Enterprise. This command will fail for groups in a Service Provider.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "useGroupSetting", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "profileName", "required": false, "array": false, "type": "CommunicationBarringProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "UserConsolidatedAddRequest22", "tags": ["User"], "documentation": "The response is either SuccessResponse or ErrorResponse.\n\n         In AS and Amplify  Data Mode:\n           The group user limit will be increased by one if needed.\n\n           The group will be added if it does not exist and if the command is executed by a Service\n           Provider level administrator or above. If the group needs to be created, the\n           groupProperties element must be set or the request will fail.\n           The groupProperties element will be ignored if the group already exists.\n\n           If the domain has not been assigned to the group, it will be added to group if the\n           command is executed by a Service provider level administrator or above.\n           If the domain has not been assigned to the service provider, it will be added to the\n           service provider if the command is executed by a Provisioning level administrator or\n           above. The command will fail otherwise.\n\n           If the phoneNumber has not been assigned to the group and addPhoneNumberToGroup is set\n           to true, it will be added to group if the command is executed by a service provider\n           administrator or above and the number is already assigned to the service provider. The\n           command will fail otherwise.\n\n           The password is not required if external authentication is enabled.\n           Alternate user ids can be added by a group level administrator or above.\n\n           When sharedCallAppearanceAccessDeviceEndpoint element is included and the Shared Call\n           Appearance is not included in the service/service pack of the request or in the\n           \"new user template\", the request will fail.\n\n           The userService/servicePack will be authorized to the group if it has not been\n           authorized to the group if the command is executed by a Service Provider level\n           administrator or above. The command will fail otherwise.\n           The authorizedQuantity will be set to unlimited if not present.\n\n           When thirdPartyVoiceMail elements are included and the Third Party Voice Mail Support\n           service is not included in the service/service pack of the request or in the\n           \"new user template\", the request will fail.\n\n           When sipAuthenticationData element is included and the Authentication service is not\n           included in the service/service pack of the request or in the \"new user template\",\n           the request will fail.\n\n\n         In XS data mode:\n           only the System level administrator has the authorization level to execute the command.\n           The group will be added if it does not exist. If the group needs to be created, the\n           groupProperties element must be set or the request will fail.\n           The groupProperties element will be ignored if the group already exists.\n\n           If the phoneNumber has not been assigned to the group, it will be added to group and\n           service provider if needed.\n\n           When sharedCallAppearanceAccessDeviceEndpoint element is included and the Shared\n           Call Appearance is not included in the service/service pack of the request, the request\n           will fail.\n\n         The following elements are ignored in XS data mode:\n           addPhoneNumberToGroup\n           nameDialingName\n           alternateUserId\n           passcode\n           trunkAddressing\n           thirdPartyVoiceMailServerSelection\n           thirdPartyVoiceMailServerUserServer\n           thirdPartyVoiceMailServerMailboxIdType\n           thirdPartyVoiceMailMailboxURL\n           sipAuthenticationData", "type": "core:OCIRequest", "schema": [[{"name": "groupProperties", "required": false, "array": false, "type": "ConsolidatedGroupProperties", "schema": [[{"name": "defaultDomain", "required": true, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "userLimit", "required": true, "array": false, "type": "GroupUserLimit", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999999.0}, {"name": "groupName", "required": false, "array": false, "type": "GroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "callingLineIdName", "required": false, "array": false, "type": "GroupCallingLineIdName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "locationDialingCode", "required": false, "array": false, "type": "LocationDialingCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 15}, {"name": "contact", "required": false, "array": false, "type": "Contact", "schema": [[{"name": "contactName", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 30, "type_schema": "xs:token"}, {"name": "contactNumber", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 30, "type_schema": "xs:token"}, {"name": "contactEmail", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "address", "required": false, "array": false, "type": "StreetAddress", "schema": [[{"name": "addressLine1", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "addressLine2", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "city", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvince", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvinceDisplayName", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "zipOrPostalCode", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "country", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}]]}, {"name": "networkClassOfService", "required": false, "array": true, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "defaultNetworkClassOfService", "required": false, "array": false, "type": "DefaultNetworkClassOfService", "schema": [{"choice": [{"name": "useExisting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfServiceName", "required": true, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]}]}, {"name": "groupService", "required": false, "array": true, "type": "ConsolidatedGroupServiceAssignment", "schema": [[{"name": "groupServiceName", "required": true, "array": false, "type": "GroupService", "type_schema": "xs:token", "enum": ["Account/Authorization Codes", "Auto Attendant", "Auto Attendant - Video", "Auto Attendant - Standard", "Call Capacity Management", "Call Park", "Call Pickup", "City-Wide Centrex", "Custom Ringback Group", "Custom Ringback Group - Video", "Emergency Zones", "Enhanced Outgoing Calling Plan", "Find-me/Follow-me", "Group Paging", "Hunt Group", "Incoming Calling Plan", "Instant Group Call", "Intercept Group", "Inventory Report", "LDAP Integration", "Meet-Me Conferencing", "Music On Hold", "Music On Hold - Video", "Outgoing Calling Plan", "Preferred Carrier Group", "Route Point", "Series Completion", "Service Scripts Group", "Trunk Group", "Voice Messaging Group", "VoiceXML"]}, {"name": "authorizedQuantity", "required": false, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}]]}, {"name": "servicePolicy", "required": false, "array": false, "type": "ServicePolicyName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "userExternalId", "required": false, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}, {"name": "addPhoneNumberToGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "lastName", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "firstName", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": true, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": true, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "nameDialingName", "required": false, "array": false, "type": "NameDialingName", "schema": [[{"name": "nameDialingLastName", "required": true, "array": false, "type": "NameDialingLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "nameDialingFirstName", "required": true, "array": false, "type": "NameDialingFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "alternateUserId", "required": false, "array": true, "type": "AlternateUserIdEntry", "schema": [[{"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "description", "required": false, "array": false, "type": "AlternateUserIdDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "passcode", "required": false, "array": false, "type": "Passcode", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "alias", "required": false, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "sharedCallAppearanceAccessDeviceEndpoint", "required": false, "array": true, "type": "ConsolidatedSharedCallAppearanceAccessDeviceMultipleIdentityEndpointAdd22", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "privateIdentity", "required": false, "array": false, "type": "AccessDeviceEndpointPrivateIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowOrigination", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowTermination", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "deviceType", "required": false, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "protocol", "required": false, "array": false, "type": "AccessDeviceProtocol", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "netAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": false, "array": false, "type": "Port1025", "type_schema": "xs:int", "minimum": 1025.0, "maximum": 65535.0}, {"name": "outboundProxyServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "stunServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "macAddress", "required": false, "array": false, "type": "AccessDeviceMACAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 12}, {"name": "serialNumber", "required": false, "array": false, "type": "AccessDeviceSerialNumber", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "AccessDeviceDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "physicalLocation", "required": false, "array": false, "type": "AccessDevicePhysicalLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "transportProtocol", "required": false, "array": false, "type": "ExtendedTransportProtocol", "type_schema": "xs:token", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, {"name": "useCustomUserNamePassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "accessDeviceCredentials", "required": false, "array": false, "type": "DeviceManagementUserNamePassword16", "schema": [[{"name": "userName", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "password", "required": true, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"name": "useHotline", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "title", "required": false, "array": false, "type": "Title", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "pagerPhoneNumber", "required": false, "array": false, "type": "InformationalDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "mobilePhoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "emailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "yahooId", "required": false, "array": false, "type": "YahooId", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "addressLocation", "required": false, "array": false, "type": "AddressLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "address", "required": false, "array": false, "type": "StreetAddress", "schema": [[{"name": "addressLine1", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "addressLine2", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "city", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvince", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvinceDisplayName", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "zipOrPostalCode", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "country", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "userService", "required": false, "array": true, "type": "ConsolidatedUserServiceAssignment", "schema": [[{"name": "userServiceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"name": "authorizedQuantity", "required": false, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}]]}, {"name": "servicePack", "required": false, "array": true, "type": "ConsolidatedServicePackAssignment", "schema": [[{"name": "servicePackName", "required": true, "array": false, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "authorizedQuantity", "required": false, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}]]}, {"name": "thirdPartyVoiceMailServerSelection", "required": false, "array": false, "type": "ThirdPartyVoiceMailSupportServerSelection", "type_schema": "xs:token", "enum": ["Group Mail Server", "User Specific Mail Server"]}, {"name": "thirdPartyVoiceMailServerUserServer", "required": false, "array": false, "type": "ThirdPartyVoiceMailSupportMailServer", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "thirdPartyVoiceMailServerMailboxIdType", "required": false, "array": false, "type": "ThirdPartyVoiceMailSupportMailboxIdType", "type_schema": "xs:token", "enum": ["User Or Group Phone Number", "URL"]}, {"name": "thirdPartyVoiceMailMailboxURL", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "sipAuthenticationData", "required": false, "array": false, "type": "SIPAuthenticationUserNamePassword", "schema": [[{"name": "sipAuthenticationUserName", "required": true, "array": false, "type": "SIPAuthenticationUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "sipAuthenticationPassword", "required": true, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"choice": [[{"name": "groupExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}, [{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]], [{"name": "accessDeviceEndpoint", "required": false, "array": false, "type": "ConsolidatedAccessDeviceMultipleIdentityEndpointAndContactAdd22", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "privateIdentity", "required": false, "array": false, "type": "AccessDeviceEndpointPrivateIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": true, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}, {"name": "deviceType", "required": false, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "protocol", "required": false, "array": false, "type": "AccessDeviceProtocol", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "netAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": false, "array": false, "type": "Port1025", "type_schema": "xs:int", "minimum": 1025.0, "maximum": 65535.0}, {"name": "outboundProxyServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "stunServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "macAddress", "required": false, "array": false, "type": "AccessDeviceMACAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 12}, {"name": "serialNumber", "required": false, "array": false, "type": "AccessDeviceSerialNumber", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "AccessDeviceDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "physicalLocation", "required": false, "array": false, "type": "AccessDevicePhysicalLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "transportProtocol", "required": false, "array": false, "type": "ExtendedTransportProtocol", "type_schema": "xs:token", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, {"name": "useCustomUserNamePassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "accessDeviceCredentials", "required": false, "array": false, "type": "DeviceManagementUserNamePassword16", "schema": [[{"name": "userName", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "password", "required": true, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"name": "useHotline", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "trunkAddressing", "required": false, "array": false, "type": "TrunkAddressingMultipleContactAdd", "schema": [[{"name": "trunkGroupDeviceEndpoint", "required": false, "array": false, "type": "TrunkGroupDeviceMultipleContactEndpointAdd", "schema": [[{"name": "name", "required": true, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": true, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}]]}, {"name": "enterpriseTrunkName", "required": false, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "alternateTrunkIdentity", "required": false, "array": false, "type": "AlternateTrunkIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "alternateTrunkIdentityDomain", "required": false, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "physicalLocation", "required": false, "array": false, "type": "AccessDevicePhysicalLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}]]}]]}, {"name": "UserConsolidatedDeleteRequest", "tags": ["User"], "documentation": "Request to delete a user.\n\n        If deleteExistingDevices is set to true, after the user is deleted, any device that is only used by the deleted user prior to the deletion will be deleted if the command is executed with the correct priviledge.\n         Group administrator or above running this command can delete any group level devices. Service provider administrator or above can delete any service provider and group devices. Provisioning administrator or above can delete any devices.\n         An ErrorResponse will be returned if any device cannot be deleted because of insufficient privilege.\n\n         If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be un-assigned from the group if the command is executed by a service provider administrator or above.\n          When set to 'Service Provider', they will be un-assigned from the group and service provider if the command is executed by a provisioning administrator or above.\n          When omitted, the number(s) will be left assigned to the group.\n         An ErrorResponse will be returned if any number cannot be unassigned because of insufficient privilege.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "deleteExistingDevices", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "unassignPhoneNumbers", "required": false, "array": false, "type": "UnassignPhoneNumbersLevel", "type_schema": "xs:token", "enum": ["Group", "Service Provider"]}]]}, {"name": "UserConsolidatedModifyRequest22", "tags": ["User"], "documentation": "Request to modify a user.\n\n        If deleteExistingDevices is set to true, when the devices for the main endpoint or SCA service are changed, devices with no more endpoint will be deleted if the command is executed with the correct privilege.\n        Group administrator or above running this command can delete any group level devices.\n        Service provider administrator or above can delete any service provider and group devices.\n        Provisioning administrator or above can delete any devices.\n        An ErrorResponse will be returned if any device cannot be deleted because of insufficient privilege.\n\n        When phone numbers are un-assigned from the user, the unused numbers may be un-assigned from the group and service provider. If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be un-assigned from the group if the command is executed by a service provider administrator or above.\n        When set to 'Service Provider', they will be un-assigned from the group and service provider if the command is executed by a provisioning administrator or above.\n        When omitted, the number(s) will be left assigned to the group.\n        An ErrorResponse will be returned if any number cannot be unassigned because of insufficient privilege.\n\n       If the phoneNumber has not been assigned to the group and addPhoneNumberToGroup is set to true, it will be added to group if needed if the command is executed by a service provider administrator and above. The command will fail otherwise.\n\n        Alternate user ids can be added by a group level administrator or above.\n\n        The password is not required if external authentication is enabled.\n        When sharedCallAppearanceAccessDeviceEndpoint element is included and the Shared Call Appearance service is not assigned after this request, the request will fail.\n\n        The userService/servicePackwill be authorized to the group if it has not been authorized to the group and the command is excuted by a service provider administrator. The request will fail otherwise.\n        If not present, the authorizedQuantity will be set to unlimited if allowed.\n\n        If any of the third party voice mail elements are included but the service is not assigned after this request, the request will fail.\n\n         If the sip authentication elements are included but the SPI Authentication service is not assigned after this request, the request will fail.\n\n         If the impPassword element is included but the Integrated IMP service is not assigned after this request, the request will fail.\n\n\n         The following elements are ignored in XS data mode:\n          nameDialingName\n          alternateUserIdList\n          passcode\n          trunkAddressing\n          thirdPartyVoiceMailServerSelection\n          thirdPartyVoiceMailServerUserServer\n          thirdPartyVoiceMailServerMailboxIdType\n          thirdPartyVoiceMailMailboxURL\n          sipAuthenticationData\n          newUserExternalId\n\n         The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "deleteExistingDevices", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "unassignPhoneNumbers", "required": false, "array": false, "type": "UnassignPhoneNumbersLevel", "type_schema": "xs:token", "enum": ["Group", "Service Provider"]}, {"name": "addPhoneNumberToGroup", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "newUserId", "required": false, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "lastName", "required": false, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "firstName", "required": false, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "nameDialingName", "required": false, "array": false, "type": "NameDialingName", "schema": [[{"name": "nameDialingLastName", "required": true, "array": false, "type": "NameDialingLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "nameDialingFirstName", "required": true, "array": false, "type": "NameDialingFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "alternateUserIdList", "required": false, "array": false, "type": "ReplacementAlternateUserIdEntryList", "schema": [[{"name": "alternateUserId", "required": true, "array": true, "type": "AlternateUserIdEntry", "schema": [[{"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "description", "required": false, "array": false, "type": "AlternateUserIdDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "oldPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "newPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "endpoint", "type": null, "required": false, "array": false, "schema": [{"choice": [{"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "ConsolidatedAccessDeviceMultipleIdentityEndpointAndContactModify", "schema": [[{"name": "accessDevice", "required": false, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": false, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "privateIdentity", "required": false, "array": false, "type": "AccessDeviceEndpointPrivateIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contactList", "required": false, "array": false, "type": "ReplacementContactList", "schema": [[{"name": "contact", "required": true, "array": true, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}]]}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}, {"name": "deviceType", "required": false, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "protocol", "required": false, "array": false, "type": "AccessDeviceProtocol", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "netAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": false, "array": false, "type": "Port1025", "type_schema": "xs:int", "minimum": 1025.0, "maximum": 65535.0}, {"name": "outboundProxyServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "stunServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "macAddress", "required": false, "array": false, "type": "AccessDeviceMACAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 12}, {"name": "serialNumber", "required": false, "array": false, "type": "AccessDeviceSerialNumber", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "AccessDeviceDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "physicalLocation", "required": false, "array": false, "type": "AccessDevicePhysicalLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "transportProtocol", "required": false, "array": false, "type": "ExtendedTransportProtocol", "type_schema": "xs:token", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, {"name": "useCustomUserNamePassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "accessDeviceCredentials", "required": false, "array": false, "type": "DeviceManagementUserNamePassword16", "schema": [[{"name": "userName", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "password", "required": true, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"name": "useHotline", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "trunkAddressing", "required": true, "array": false, "type": "TrunkAddressingMultipleContactModify", "schema": [[{"name": "trunkGroupDeviceEndpoint", "required": false, "array": false, "type": "TrunkGroupDeviceMultipleContactEndpointModify", "schema": [[{"name": "name", "required": false, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "linePort", "required": false, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contactList", "required": false, "array": false, "type": "ReplacementContactList", "schema": [[{"name": "contact", "required": true, "array": true, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}]]}]]}, {"name": "enterpriseTrunkName", "required": false, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "alternateTrunkIdentity", "required": false, "array": false, "type": "AlternateTrunkIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "alternateTrunkIdentityDomain", "required": false, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "physicalLocation", "required": false, "array": false, "type": "AccessDevicePhysicalLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}]}]}, {"name": "sharedCallAppearanceAccessDeviceEndpointList", "required": false, "array": false, "type": "ReplacementConsolidatedSharedCallAppearanceAccessDeviceMultipleIdentityEndpointList22", "schema": [[{"name": "sharedCallAppearanceAccessDeviceEndpoint", "required": true, "array": true, "type": "ConsolidatedSharedCallAppearanceAccessDeviceMultipleIdentityEndpointAdd22", "schema": [[{"name": "accessDevice", "required": true, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": true, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "privateIdentity", "required": false, "array": false, "type": "AccessDeviceEndpointPrivateIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contact", "required": false, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}, {"name": "isActive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowOrigination", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowTermination", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "deviceType", "required": false, "array": false, "type": "AccessDeviceType", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "protocol", "required": false, "array": false, "type": "AccessDeviceProtocol", "type_schema": "xs:token", "minLength": 1, "maxLength": 20}, {"name": "netAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "port", "required": false, "array": false, "type": "Port1025", "type_schema": "xs:int", "minimum": 1025.0, "maximum": 65535.0}, {"name": "outboundProxyServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "stunServerNetAddress", "required": false, "array": false, "type": "NetAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "macAddress", "required": false, "array": false, "type": "AccessDeviceMACAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 12}, {"name": "serialNumber", "required": false, "array": false, "type": "AccessDeviceSerialNumber", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "description", "required": false, "array": false, "type": "AccessDeviceDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "physicalLocation", "required": false, "array": false, "type": "AccessDevicePhysicalLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "transportProtocol", "required": false, "array": false, "type": "ExtendedTransportProtocol", "type_schema": "xs:token", "enum": ["UDP", "TCP", "TLS", "Unspecified"]}, {"name": "useCustomUserNamePassword", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "accessDeviceCredentials", "required": false, "array": false, "type": "DeviceManagementUserNamePassword16", "schema": [[{"name": "userName", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "password", "required": true, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}]]}, {"name": "useHotline", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}]]}, {"name": "title", "required": false, "array": false, "type": "Title", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "pagerPhoneNumber", "required": false, "array": false, "type": "InformationalDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "mobilePhoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "emailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "yahooId", "required": false, "array": false, "type": "YahooId", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "addressLocation", "required": false, "array": false, "type": "AddressLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "address", "required": false, "array": false, "type": "StreetAddress", "schema": [[{"name": "addressLine1", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "addressLine2", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "city", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvince", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvinceDisplayName", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "zipOrPostalCode", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "country", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "userServiceList", "required": false, "array": false, "type": "ReplacementConsolidatedUserServiceAssignmentList", "schema": [[{"name": "userServiceServiceName", "required": true, "array": true, "type": "ConsolidatedUserServiceAssignment", "schema": [[{"name": "userServiceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"name": "authorizedQuantity", "required": false, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}]]}]]}, {"name": "servicePackList", "required": false, "array": false, "type": "ReplacementConsolidatedServicePackAssignmentList", "schema": [[{"name": "servicePack", "required": true, "array": true, "type": "ConsolidatedServicePackAssignment", "schema": [[{"name": "servicePackName", "required": true, "array": false, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "authorizedQuantity", "required": false, "array": false, "type": "UnboundedPositiveInt", "schema": [{"choice": [{"name": "unlimited", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "quantity", "required": true, "array": false, "type": "xs:int", "minimum": 1.0, "type_schema": "xs:int"}]}]}]]}]]}, {"name": "thirdPartyVoiceMailServerSelection", "required": false, "array": false, "type": "ThirdPartyVoiceMailSupportServerSelection", "type_schema": "xs:token", "enum": ["Group Mail Server", "User Specific Mail Server"]}, {"name": "thirdPartyVoiceMailServerUserServer", "required": false, "array": false, "type": "ThirdPartyVoiceMailSupportMailServer", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "thirdPartyVoiceMailServerMailboxIdType", "required": false, "array": false, "type": "ThirdPartyVoiceMailSupportMailboxIdType", "type_schema": "xs:token", "enum": ["User Or Group Phone Number", "URL"]}, {"name": "thirdPartyVoiceMailMailboxURL", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "sipAuthenticationUserName", "required": false, "array": false, "type": "SIPAuthenticationUserName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "newSipAuthenticationPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "OldSipAuthenticationPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "newPasscode", "required": false, "array": false, "type": "Passcode", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "oldPasscode", "required": false, "array": false, "type": "Passcode", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "impPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "newUserExternalId", "required": false, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}]]}, {"name": "UserDeleteRequest", "tags": ["User"], "documentation": "Request to delete a user.  The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserDeviceActivationPolicyInEffectGetRequest", "tags": ["User"], "documentation": "Request the Device Activation policies in effect for the user.\n        The response is either a UserDeviceActivationPolicyInEffectGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserDevicePoliciesGetRequest21", "tags": ["User"], "documentation": "Request the user level data associated with Device Policy.\n          The response is either a UserDevicePoliciesGetResponse21 or an\n          ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserDevicePoliciesModifyRequest", "tags": ["User"], "documentation": "Modify the user level data associated with Device Policy. enableDeviceFeatureSynchronization and enableCallDecline can be\n          configured by the admin regardless of lineMode, but is ignored by the application server in Multiple User Shared mode.\n\n          enableCallDecline can be modified by the user when the admin has set the mode to \u2018Single User Private and Shared Lines mode\u2019.\n          This is the only element that the user can modify. In XS data mode,  the lineMode is ignored and enabledCallDecline is the only element that can be configured.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          lineMode\n          enableDeviceFeatureSynchronization\n          enableDnd\n          enableCallForwardingAlways\n          enableCallForwardingBusy\n          enableCallForwardingNoAnswer\n          enableAcd\n          enableExecutive\n          enableExecutiveAssistant\n          enableSecurityClassification\n          enableCallRecording\n\n          The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "lineMode", "required": false, "array": false, "type": "UserDevicePolicyLineMode", "type_schema": "xs:token", "enum": ["Single User Private and Shared", "Multiple User Shared"]}, {"name": "enableDeviceFeatureSynchronization", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableDnd", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableCallForwardingAlways", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableCallForwardingBusy", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableCallForwardingNoAnswer", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableAcd", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableExecutive", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableExecutiveAssistant", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableSecurityClassification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableCallRecording", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableCallDecline", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserDnGetActivationListRequest", "tags": ["User"], "documentation": "Request to get a list of DNs associated with a user and their activation state.\n        The response is either UserDnGetActivationListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserEnterpriseCommonPhoneListGetPagedSortedListRequest", "tags": ["User"], "documentation": "Get an enterprise's common phone list for a user.\n\t\t\t\tThe response is either a UserEnterpriseCommonPhoneListGetPagedSortedListResponse\n\t\t\t\tor an ErrorResponse.\n\t\t\t\tThe search can be done using multiple criterion.\n\t\t\t\tIf the searchCriteriaModeOr is present, any result matching any one\n\t\t\t\tcriteria is included in the results.\n\t\t\t\tOtherwise, only results matching all the search criterion are included in the\n\t\t\t\tresults.\n\t\t\t\tIf no search criteria is specified, all results are returned.\n\t\t\t\tSpecifying searchCriteriaModeOr without any search criteria results\n\t\t\t\tin an ErrorResponse.\n\t\t\t\tThe sort can be done on the name or the number in the common phone list.\n\t\t\t\tThe following elements are only used in AS data mode and ignored in XS data\n\t\t\t\tmode:\n\t\t\t\t\tsearchCriteriaEnterpriseCommonMultiPartPhoneListName", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responsePagingControl", "required": true, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "searchCriteriaEnterpriseCommonPhoneListName", "required": false, "array": true, "type": "SearchCriteriaEnterpriseCommonPhoneListName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "PhoneListEntryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEnterpriseCommonPhoneListNumber", "required": false, "array": true, "type": "SearchCriteriaEnterpriseCommonPhoneListNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEnterpriseCommonMultiPartPhoneListName", "required": false, "array": true, "type": "SearchCriteriaEnterpriseCommonMultiPartPhoneListName", "schema": [[{"name": "value", "required": true, "array": true, "type": "PhoneListEntryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"choice": [{"name": "sortByEnterpriseCommonPhoneListNumber", "required": true, "array": false, "type": "SortByEnterpriseCommonPhoneListNumber", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByEnterpriseCommonPhoneListName", "required": true, "array": false, "type": "SortByEnterpriseCommonPhoneListName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]]}, {"name": "UserFeatureAccessCodeGetListRequest21", "tags": ["User"], "documentation": "Get the list of feature access codes for a user.\n        The response is either a UserFeatureAccessCodeGetListResponse20 or an ErrorResponse.\n\n        In release 20 the \"Call Recording\" FAC name is changed to\n        \"Call Recording Start\".", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserFeatureAccessCodeModifyListRequest", "tags": ["User"], "documentation": "Enable or disable a list of feature access codes for a user.\n          The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "featureAccessCode", "required": false, "array": true, "type": "UserFeatureAccessCodeModifyEntry", "schema": [[{"name": "featureAccessCodeName", "required": true, "array": false, "type": "FeatureAccessCodeName", "type_schema": "xs:token", "minLength": 1}, {"name": "enableFAC", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserGetListInGroupPagedSortedListRequest", "tags": ["User"], "documentation": "Request the list of users in a group.\n        The response is either a UserGetListInGroupPagedSortedListResponse or an ErrorResponse.\n\n        If the responsePagingControl element is not provided, the paging startIndex will be set to 1\n        by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.\n        It is possible to search by various criteria to restrict the number of rows returned.\n\n        If no sortOrder is included the response is sorted by User Id ascending by default.\n\n        A limitation to the search by DN activation exists when the Number Activation mode is set to\n        Off. In this case DNs not assigned to users are never returned by queries with the\n        \"dnActivationSearchCriteria\" included.\n\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.\n        Then the search criteria are logically ORed together.\n\n\n        The following elements are used in AS data mode and ignored in XS data mode:\n           groupExternalId", "type": "core:OCIRequest", "schema": [[{"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortOrder", "required": false, "array": true, "type": "SortOrderUserGetListInGroupPagedSortedList", "schema": [{"choice": [{"name": "sortByUserId", "required": true, "array": false, "type": "SortByUserId", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDepartmentName", "required": true, "array": false, "type": "SortByDepartmentName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByDn", "required": true, "array": false, "type": "SortByDn", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByExtension", "required": true, "array": false, "type": "SortByExtension", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByEmailAddress", "required": true, "array": false, "type": "SortByEmailAddress", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserInTrunkGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserInTrunkGroup", "schema": [[{"name": "userInTrunkGroup", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactDnActivation", "required": false, "array": false, "type": "SearchCriteriaExactDnActivation", "schema": [[{"name": "activated", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"choice": [{"name": "groupExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}, [{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}, {"name": "UserGetListInGroupRequest", "tags": ["User"], "documentation": "Request the list of users in a group.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either a UserGetListInGroupResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "GroupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserInTrunkGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserInTrunkGroup", "schema": [[{"name": "userInTrunkGroup", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserGetListInServiceProviderRequest", "tags": ["User"], "documentation": "Request the list of users in a service provider or enterprise.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n\n        The following elements are only used in AS data mode and ignored in XS data mode:\n           serviceProviderExternalId\n\n        The response is either a UserGetListInServiceProviderResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserInTrunkGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserInTrunkGroup", "schema": [[{"name": "userInTrunkGroup", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"choice": [{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "serviceProviderExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}]}]]}, {"name": "UserGetListInSystemRequest", "tags": ["User"], "documentation": "Request the list of users in the system.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        If reseller administrator sends the request, searchCriteriaResellerId is ignored. All the users\n        in the administrator's reseller meeting the search criteria are returned.\n\n        The response is either a UserGetListInSystemResponse or an ErrorResponse.\n\n        The following data elements are only used in AS data mode:\n          searchCriteriaResellerId", "type": "core:OCIRequest", "schema": [[{"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactServiceProvider", "required": false, "array": false, "type": "SearchCriteriaExactServiceProvider", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserInTrunkGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserInTrunkGroup", "schema": [[{"name": "userInTrunkGroup", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserNetworkClassOfService", "required": false, "array": false, "type": "SearchCriteriaExactUserNetworkClassOfService", "schema": [[{"name": "networkClassOfService", "required": true, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaResellerId", "required": false, "array": true, "type": "SearchCriteriaResellerId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserGetRegistrationListRequest", "tags": ["User"], "documentation": "Request to get a list of registrations for a user.\n        The response is either a UserGetRegistrationListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserGetRequest22V8", "tags": ["User"], "documentation": "Request to get the user information.  The response is either\n        UserGetResponse22V8 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserGetServiceInstanceListInServiceProviderRequest", "tags": ["User"], "documentation": "Request the list of Service Instances in a service provider or an enterprise.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together. searchCriteriaExactUserDepartment criteria is only applicable for an enterprise and is ignored if set for a service provider.\n        The response is either a UserGetServiceInstanceListInServiceProviderResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "SearchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "SearchCriteriaExactServiceType", "required": false, "array": false, "type": "SearchCriteriaExactServiceType", "schema": [[{"name": "serviceType", "required": true, "array": false, "type": "ServiceType", "type_schema": "xs:token", "enum": ["Auto Attendant", "Auto Attendant - Standard", "BroadWorks Anywhere Portal", "Call Center", "Collaborate Bridge", "Find-me/Follow-me", "Flexible Seating Host", "Group Paging", "Hunt Group", "Instant Group Call", "Instant Conference Bridge", "Meet-Me Conference Bridge", "Route Point", "VoiceXML"]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}]]}, {"name": "UserGetServiceInstanceListInSystemRequest", "tags": ["User"], "documentation": "Request the list of Service Instances in the system.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        If reseller administrator sends the request, searchCriteriaResellerId is ignored. All the service\n        instances in the administrator's reseller meeting the search criteria are returned.\n\n        The response is either a UserGetServiceInstanceListInSystemResponse or an ErrorResponse.\n\n        The following data elements are only used in AS data mode:\n          searchCriteriaResellerId", "type": "core:OCIRequest", "schema": [[{"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaExactServiceType", "required": false, "array": false, "type": "SearchCriteriaExactServiceType", "schema": [[{"name": "serviceType", "required": true, "array": false, "type": "ServiceType", "type_schema": "xs:token", "enum": ["Auto Attendant", "Auto Attendant - Standard", "BroadWorks Anywhere Portal", "Call Center", "Collaborate Bridge", "Find-me/Follow-me", "Flexible Seating Host", "Group Paging", "Hunt Group", "Instant Group Call", "Instant Conference Bridge", "Meet-Me Conference Bridge", "Route Point", "VoiceXML"]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupId", "required": false, "array": true, "type": "SearchCriteriaGroupId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactServiceProvider", "required": false, "array": false, "type": "SearchCriteriaExactServiceProvider", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaResellerId", "required": false, "array": true, "type": "SearchCriteriaResellerId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": 1, "maxLength": 36}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserGroupCommonPhoneListGetPagedSortedListRequest", "tags": ["User"], "documentation": "Get a user's group's common phone list.\n\t\t\t\tThe response is either a UserGroupCommonPhoneListGetPagedSortedListResponse or an\n\t\t\t\tErrorResponse.\n\t\t\t\tThe search can be done using multiple criterion.\n\t\t\t\tIf the searchCriteriaModeOr is present, any result matching any one\n\t\t\t\tcriteria is included in the results.\n\t\t\t\tOtherwise, only results matching all the search criterion are included in the\n\t\t\t\tresults.\n\t\t\t\tIf no search criteria is specified, all results are returned.\n\t\t\t\tSpecifying searchCriteriaModeOr without any search criteria results\n\t\t\t\tin an ErrorResponse.\n\t\t\t\tThe sort can be done on the name or the number in the common phone list.\n\t\t\t\tThe following elements are only used in AS data mode and ignored in XS data\n\t\t\t\tmode:\n\t\t\t\tsearchCriteriaGroupCommonMultiPartPhoneListName", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responsePagingControl", "required": true, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "searchCriteriaGroupCommonPhoneListName", "required": false, "array": true, "type": "SearchCriteriaGroupCommonPhoneListName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "PhoneListEntryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupCommonPhoneListNumber", "required": false, "array": true, "type": "SearchCriteriaGroupCommonPhoneListNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupCommonMultiPartPhoneListName", "required": false, "array": true, "type": "SearchCriteriaGroupCommonMultiPartPhoneListName", "schema": [[{"name": "value", "required": true, "array": true, "type": "PhoneListEntryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"choice": [{"name": "sortByGroupCommonPhoneListNumber", "required": true, "array": false, "type": "SortByGroupCommonPhoneListNumber", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByGroupCommonPhoneListName", "required": true, "array": false, "type": "SortByGroupCommonPhoneListName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]]}, {"name": "UserGroupCustomContactDirectoryGetPagedSortedListRequest", "tags": ["User"], "documentation": "Gets a Custom Contact Directory in a group.\n\t\t\t\tThe response is either UserGroupCustomContactDirectoryGetPagedSortedListResponse\n\t\t\t\tor ErrorResponse.\n\t\t\t\tThe search can be done using multiple criterion.\n\t\t\t\tIf the searchCriteriaModeOr is present, any result matching any one\n\t\t\t\tcriteria is included in the results.\n\t\t\t\tOtherwise, only results matching all the search criterion are included in the\n\t\t\t\tresults.\n\t\t\t\tIf no search criteria is specified, all results are returned.\n\t\t\t\tSpecifying searchCriteriaModeOr without any search criteria results\n\t\t\t\tin an ErrorResponse.\n\t\t\t\tThe sort can be done on the user last name, first name, department, or\n        contact notes.  The Receptionist Note column is only populated, if the\n        user sending the request is a the owner of this Receptionist Note and a Note\n        exists.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "name", "required": true, "array": false, "type": "CustomContactDirectoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "responsePagingControl", "required": true, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaMobilePhoneNumber", "required": false, "array": true, "type": "SearchCriteriaMobilePhoneNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaImpId", "required": false, "array": true, "type": "SearchCriteriaImpId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaTitle", "required": false, "array": true, "type": "SearchCriteriaTitle", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "Title", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaReceptionistNote", "required": false, "array": true, "type": "SearchCriteriaReceptionistNote", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ReceptionistNote", "type_schema": "xs:string", "minLength": 1, "maxLength": 256}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"choice": [{"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserDepartment", "required": true, "array": false, "type": "SortByUserDepartment", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByReceptionistNote", "required": true, "array": false, "type": "SortByReceptionistNote", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]]}, {"name": "UserLinePortGetListRequest", "tags": ["User"], "documentation": "Request to get all user's configured line ports.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserModifyGroupIdRequest", "tags": ["User"], "documentation": "Move the user from one group to another group within the same enterprise.\n          If evaluateOnly is specified, no actual move will happen. The command only tests the move and reports the impacts or possible conditions preventing the move.\n          The response is either UserModifyGroupIdResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "newGroupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "evaluateOnly", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserModifyRequest22", "tags": ["User"], "documentation": "The following data elements are only used in AS data mode:\n          contact[2]-contact[5]\n        The following elements are only used in AS data mode and will fail in XS data mode:\n          trunkAddressing\n          newUserExternalId\n        The following elements are only used in AS data mode and ignored in XS data mode:\n          nameDialingName\n          alternateUserIdList\n          newUserExternalId\n\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          allowVideo\n\n        The allowVideo element can only be used by a system administrator.\n\n        The impId and impPassword are accepted when the Third-Party IMP service is assigned to the user;\n        when Integrated IMP service is assigned to the user and active, only the impPassword is accepted;\n        all other cases, the request fails if either field is changed.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "lastName", "required": false, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "firstName", "required": false, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdLastName", "required": false, "array": false, "type": "CallingLineIdLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "callingLineIdFirstName", "required": false, "array": false, "type": "CallingLineIdFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "nameDialingName", "required": false, "array": false, "type": "NameDialingName", "schema": [[{"name": "nameDialingLastName", "required": true, "array": false, "type": "NameDialingLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "nameDialingFirstName", "required": true, "array": false, "type": "NameDialingFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "hiraganaLastName", "required": false, "array": false, "type": "HiraganaLastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "hiraganaFirstName", "required": false, "array": false, "type": "HiraganaFirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "phoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "extension", "required": false, "array": false, "type": "Extension17", "type_schema": "xs:token", "minLength": 2, "maxLength": 20}, {"name": "callingLineIdPhoneNumber", "required": false, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "oldPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "newPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "department", "required": false, "array": false, "type": "DepartmentKey", "schema": [null]}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "timeZone", "required": false, "array": false, "type": "TimeZone", "type_schema": "xs:token", "minLength": 1, "maxLength": 127}, {"name": "sipAliasList", "required": false, "array": false, "type": "ReplacementSIPAliasList", "schema": [[{"name": "sipAlias", "required": true, "array": true, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "endpoint", "type": null, "required": false, "array": false, "schema": [{"choice": [{"name": "accessDeviceEndpoint", "required": true, "array": false, "type": "AccessDeviceMultipleIdentityAndContactEndpointModify22", "schema": [[{"name": "accessDevice", "required": false, "array": false, "type": "AccessDevice", "schema": [[{"name": "deviceLevel", "required": true, "array": false, "type": "AccessDeviceLevel", "type_schema": "xs:token", "enum": ["System", "Service Provider", "Group"]}, {"name": "deviceName", "required": true, "array": false, "type": "AccessDeviceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "linePort", "required": false, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "privateIdentity", "required": false, "array": false, "type": "AccessDeviceEndpointPrivateIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contactList", "required": false, "array": false, "type": "ReplacementContactList22", "schema": [[{"name": "contact", "required": true, "array": true, "type": "SIPContactInfo", "schema": [[{"name": "sipContact", "required": true, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}]]}, {"name": "portNumber", "required": false, "array": false, "type": "AccessDevicePortNumber", "type_schema": "xs:int", "minimum": 1.0, "maximum": 1024.0}, {"name": "useHotline", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "hotlineContact", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "trunkAddressing", "required": true, "array": false, "type": "TrunkAddressingMultipleContactModify22", "schema": [[{"name": "trunkGroupDeviceEndpoint", "required": false, "array": false, "type": "TrunkGroupDeviceMultipleContactEndpointModify22", "schema": [[{"name": "name", "required": false, "array": false, "type": "TrunkGroupName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "linePort", "required": false, "array": false, "type": "AccessDeviceEndpointLinePort", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "contactList", "required": false, "array": false, "type": "ReplacementContactList22", "schema": [[{"name": "contact", "required": true, "array": true, "type": "SIPContactInfo", "schema": [[{"name": "sipContact", "required": true, "array": false, "type": "SIPContact", "type_schema": "xs:token", "minLength": 1, "maxLength": 1020}, {"name": "pathHeader", "required": false, "array": false, "type": "PathHeader", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}]]}]]}, {"name": "enterpriseTrunkName", "required": false, "array": false, "type": "EnterpriseTrunkName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "alternateTrunkIdentity", "required": false, "array": false, "type": "AlternateTrunkIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "alternateTrunkIdentityDomain", "required": false, "array": false, "type": "DomainName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "physicalLocation", "required": false, "array": false, "type": "AccessDevicePhysicalLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}]}]}, {"name": "title", "required": false, "array": false, "type": "Title", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "pagerPhoneNumber", "required": false, "array": false, "type": "InformationalDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "mobilePhoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "emailAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "yahooId", "required": false, "array": false, "type": "YahooId", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "addressLocation", "required": false, "array": false, "type": "AddressLocation", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "address", "required": false, "array": false, "type": "StreetAddress", "schema": [[{"name": "addressLine1", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "addressLine2", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 80, "type_schema": "xs:token"}, {"name": "city", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvince", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "stateOrProvinceDisplayName", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "zipOrPostalCode", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}, {"name": "country", "required": false, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 50, "type_schema": "xs:token"}]]}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "officeZoneName", "required": false, "array": false, "type": "OfficeZoneName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "primaryZoneName", "required": false, "array": false, "type": "ZoneName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "impId", "required": false, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "impPassword", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": 1, "maxLength": 60}, {"name": "alternateUserIdList", "required": false, "array": false, "type": "ReplacementAlternateUserIdEntryList", "schema": [[{"name": "alternateUserId", "required": true, "array": true, "type": "AlternateUserIdEntry", "schema": [[{"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "description", "required": false, "array": false, "type": "AlternateUserIdDescription", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "allowVideo", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "newUserExternalId", "required": false, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": 36}]]}, {"name": "UserModifyUserIdRequest", "tags": ["User"], "documentation": "Modify the user id of a real or virtual user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "newUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserNetworkConferencingGetRequest", "tags": ["User"], "documentation": "Request the Network-Based Conferencing data for a specified user.\n        The response is either a UserNetworkConferencingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOCICallControlApplicationGetListRequest", "tags": ["User"], "documentation": "Get the OCI call control application list that can be used by the user.\n        The response is either UserOCICallControlApplicationGetListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserOCICallControlApplicationModifyRequest", "tags": ["User"], "documentation": "Modify which OCI Call Control Applications are enabled on a user\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "applicationIdList", "required": false, "array": false, "type": "ReplacementOCICallControlApplicationIdList", "schema": [[{"name": "applicationId", "required": true, "array": true, "type": "OCICallControlApplicationId", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}]]}, {"name": "UserPasswordInfoGetRequest", "tags": ["User"], "documentation": "Request the user's Web password information.\n        The response is either a UserPasswordInfoGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPBXIntegrationGetRequest", "tags": ["User"], "documentation": "Request the user level data associated with PBX Integration service.\n        The response is either a UserPBXIntegrationGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPBXIntegrationModifyRequest", "tags": ["User"], "documentation": "Modify the user level data associated with PBX Integration service.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "proxyToHeaderFromNetwork", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserPersonalPhoneListAddListRequest", "tags": ["User"], "documentation": "Add one or more entries to a user's personal phone list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "entry", "required": true, "array": true, "type": "PhoneListEntry", "schema": [[{"name": "entryName", "required": true, "array": false, "type": "PhoneListEntryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "phoneNumber", "required": true, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}]]}, {"name": "UserPersonalPhoneListDeleteListRequest", "tags": ["User"], "documentation": "Delete one or more entries from a user's personal phone list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "entryName", "required": true, "array": true, "type": "PhoneListEntryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}]]}, {"name": "UserPersonalPhoneListGetListRequest", "tags": ["User"], "documentation": "Get a user's personal phone list.\n        The response is either a UserPersonalPhoneListGetListResponse or an ErrorResponse.\n        The search can be done using multiple criterion.\n        If the searchCriteriaModeOr is present, any result matching any one criteria is included in the results.\n        Otherwise, only results matching all the search criterion are included in the results.\n        If no search criteria is specified, all results are returned.\n        Specifying searchCriteriaModeOr without any search criteria results in an ErrorResponse.\n        In all cases, if a responseSizeLimit is specified and the number of matching results is more than this limit, then an\n        ErrorResponse is returned.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "searchCriteriaUserPersonalPhoneListName", "required": false, "array": true, "type": "SearchCriteriaUserPersonalPhoneListName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "PhoneListEntryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserPersonalPhoneListNumber", "required": false, "array": true, "type": "SearchCriteriaUserPersonalPhoneListNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserPersonalPhoneListGetPagedSortedListRequest", "tags": ["User"], "documentation": "Get a user's personal phone list.\n\t\t\t\tThe response is either a UserPersonalPhoneListGetPagedSortedListResponse or an\n\t\t\t\tErrorResponse.\n\t\t\t\tThe search can be done using multiple criterion.\n\t\t\t\tIf the searchCriteriaModeOr is present, any result matching any one\n\t\t\t\tcriteria is included in the results.\n\t\t\t\tOtherwise, only results matching all the search criterion are included in the\n\t\t\t\tresults.\n\t\t\t\tIf no search criteria is specified, all results are returned.\n\t\t\t\tSpecifying searchCriteriaModeOr without any search criteria results\n\t\t\t\tin an ErrorResponse.\n\t\t\t\tThe sort can done by the personal phone list number or name.\n\t\t\t\tThe following elements are only used in AS data mode and ignored in XS data\n\t\t\t\tmode:\n\t\t\t\tsearchCriteriaUserPersonalMultiPartPhoneListName", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responsePagingControl", "required": true, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "searchCriteriaUserPersonalPhoneListName", "required": false, "array": true, "type": "SearchCriteriaUserPersonalPhoneListName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "PhoneListEntryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserPersonalPhoneListNumber", "required": false, "array": true, "type": "SearchCriteriaUserPersonalPhoneListNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserPersonalMultiPartPhoneListName", "required": false, "array": true, "type": "SearchCriteriaUserPersonalMultiPartPhoneListName", "schema": [[{"name": "value", "required": true, "array": true, "type": "PhoneListEntryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"choice": [{"name": "sortByUserPersonalPhoneListNumber", "required": true, "array": false, "type": "SortByUserPersonalPhoneListNumber", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserPersonalPhoneListName", "required": true, "array": false, "type": "SortByUserPersonalPhoneListName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]]}, {"name": "UserPersonalPhoneListModifyRequest", "tags": ["User"], "documentation": "Modify an entry in a user's personal phone list.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "entryName", "required": true, "array": false, "type": "PhoneListEntryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "newEntryName", "required": false, "array": false, "type": "PhoneListEntryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "phoneNumber", "required": false, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "UserPhoneDirectoryGetListRequest", "tags": ["User"], "documentation": "Request a table containing the phone directory for a user's group.\n        If the user's group is part of an enterprise, the directory includes all users in the enterprise\n        and all entries in the enterprise common phone list and the common phone list of the specified\n        group  (if includeCommonPhoneList is set to true).\n        If the user's group is part of a service provider, the directory includes all users in the group\n        and all entries in the common phone list (if includeCommonPhoneList is set to true) of the\n        specified group.\n        The response is either UserPhoneDirectoryGetListResponse or ErrorResponse.\n        If the searchCriteriaModeOr is present, any result matching any one criteria is included in the results. Otherwise, only\n        results matching all the search criteria are included in the results.\n        If no search criteria is specified, all results are returned.\n        In all cases, if a responseSizeLimit is specified and the number of matching results is more than this limit, then an\n        ErrorResponse is returned.\n        Specifying searchCriteriaModeOr without any search criteria results in an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "includeCommonPhoneList", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": 1.0}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaMobilePhoneNumber", "required": false, "array": true, "type": "SearchCriteriaMobilePhoneNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaExactCustomContactDirectory", "required": false, "array": false, "type": "SearchCriteriaExactCustomContactDirectory", "schema": [[{"name": "customContactDirectoryName", "required": true, "array": false, "type": "CustomContactDirectoryName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaImpId", "required": false, "array": true, "type": "SearchCriteriaImpId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserPhoneDirectoryGetPagedListRequest", "tags": ["User"], "documentation": "Request a table containing the phone directory for a user.\n        Setting isEnterpriseRequested to true will return enterprise directory\n        members in the response if the user is in an enterprise. Otherwise,\n        just the group directory members for a user are returned in the response.\n        The response is either UserPhoneDirectoryGetPagedListResponse or\n        ErrorResponse.\n        The search can be done using multiple criteria.\n        If the searchCriteriaModeOr is present, any result matching any one criteria is included in\n        the results. Otherwise, only results matching all the search criteria are included in the results.\n        If no search criteria is specified, all results are returned.\n        In all cases, if a responseSizeLimit is specified and the number of matching results is more than\n        this limit, then an ErrorResponse is returned.\n        Specifying searchCriteriaModeOr without any search criteria results in an ErrorResponse.\n        The boolean sortByFirstName is optional. If it is not specified, the response is\n        sorted by Last Name.  The Receptionist Note column is only populated, if the user sending\n        the request is the owner of the Receptionist Note and a Note exists.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isEnterpriseInfoRequested", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "responsePagingControl", "required": true, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupLocationCode", "required": false, "array": true, "type": "SearchCriteriaGroupLocationCode", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LocationDialingCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 15}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaMobilePhoneNumber", "required": false, "array": true, "type": "SearchCriteriaMobilePhoneNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaYahooId", "required": false, "array": true, "type": "SearchCriteriaYahooId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "YahooId", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaExactUserDepartment", "required": false, "array": false, "type": "SearchCriteriaExactUserDepartment", "schema": [[{"name": "departmentKey", "required": true, "array": false, "type": "DepartmentKey", "schema": [null]}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaImpId", "required": false, "array": true, "type": "SearchCriteriaImpId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "sortByFirstName", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "searchCriteriaTitle", "required": false, "array": true, "type": "SearchCriteriaTitle", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "Title", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaReceptionistNote", "required": false, "array": true, "type": "SearchCriteriaReceptionistNote", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ReceptionistNote", "type_schema": "xs:string", "minLength": 1, "maxLength": 256}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "UserPhoneDirectoryGetPagedSortedListRequest", "tags": ["User"], "documentation": "Request a table containing the phone directory for a user.\n\t    Setting isEnterpriseRequested to true will return enterprise directory\n\t    members in the response if the user is in an enterprise.  Otherwise,\n\t    just the group directory members for a user are returned in the\n\t    response.\n      The response is either UserPhoneDirectoryGetPagedSortedListResponse or ErrorResponse.\n      The search can be done using multiple criteria.  If the searchCriteriaModeOr is present,\n      any result matching any one criteria is included in the results. Otherwise, only results\n      matching all the search criteria are included in the results.  If no search criteria is\n      specified, all results are returned.  Specifying searchCriteriaModeOr\n      without any search criteria results in an ErrorResponse.  The sort can be\n      performed on user last name, first name, department, or receptionist note.\n      The Receptionist Note column is only populated, if the user sending the request\n      is the owner of the Receptionist Note and a Note exists.\n      The following elements are only used in AS data mode and ignored in XS data\n        mode:\n        searchCriteriaMultiPartName", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isEnterpriseInfoRequested", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "responsePagingControl", "required": true, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "searchCriteriaUserLastName", "required": false, "array": true, "type": "SearchCriteriaUserLastName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserFirstName", "required": false, "array": true, "type": "SearchCriteriaUserFirstName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserName", "required": false, "array": true, "type": "SearchCriteriaUserName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 62, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaDn", "required": false, "array": true, "type": "SearchCriteriaDn", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaGroupLocationCode", "required": false, "array": true, "type": "SearchCriteriaGroupLocationCode", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "LocationDialingCode", "type_schema": "xs:token", "minLength": 1, "maxLength": 15}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExtension", "required": false, "array": true, "type": "SearchCriteriaExtension", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "xs:token", "minLength": 1, "maxLength": 20, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaMobilePhoneNumber", "required": false, "array": true, "type": "SearchCriteriaMobilePhoneNumber", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "OutgoingDN", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaEmailAddress", "required": false, "array": true, "type": "SearchCriteriaEmailAddress", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaYahooId", "required": false, "array": true, "type": "SearchCriteriaYahooId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "YahooId", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactUserGroup", "required": false, "array": false, "type": "SearchCriteriaExactUserGroup", "schema": [[{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "searchCriteriaDepartmentName", "required": false, "array": true, "type": "SearchCriteriaDepartmentName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "DepartmentName", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaUserId", "required": false, "array": true, "type": "SearchCriteriaUserId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaImpId", "required": false, "array": true, "type": "SearchCriteriaImpId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "IMPUserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 196}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaTitle", "required": false, "array": true, "type": "SearchCriteriaTitle", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "Title", "type_schema": "xs:token", "minLength": 1, "maxLength": 50}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaReceptionistNote", "required": false, "array": true, "type": "SearchCriteriaReceptionistNote", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ReceptionistNote", "type_schema": "xs:string", "minLength": 1, "maxLength": 256}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaMultiPartName", "required": false, "array": true, "type": "SearchCriteriaMultiPartUserName", "schema": [[{"name": "value", "required": true, "array": true, "type": "xs:token", "minLength": 1, "maxLength": 62, "type_schema": "xs:token"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"choice": [{"name": "sortByUserLastName", "required": true, "array": false, "type": "SortByUserLastName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserFirstName", "required": true, "array": false, "type": "SortByUserFirstName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByUserDepartment", "required": true, "array": false, "type": "SortByUserDepartment", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "sortByReceptionistNote", "required": true, "array": false, "type": "SortByReceptionistNote", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}]}]]}, {"name": "UserPhoneDirectoryGetSearchedListRequest", "tags": ["User"], "documentation": "Request a table containing the phone directory for a user.\n        If the specified user is part of an enterprise, the directory includes all users in the enterprise\n        and all entries in the enterprise common phone list and the common phone list of the specified user's group.\n        If the specified user is part of a service provider, the directory includes all users in the user's group\n        and all entries in the common phone list of the specified user's group.\n        It is possible to search the directory for names containing a specified search string. The search includes\n        matches on first name or last name or common phone list names.\n        The response is either UserPhoneDirectoryGetSearchedListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "nameSearchString", "required": false, "array": false, "type": "PhoneDirectoryNameSearchString", "type_schema": "xs:token", "minLength": 1}]]}, {"name": "UserPortalPasscodeGetInfoRequest", "tags": ["User"], "documentation": "Request the user's portal passcode information.\n        The response is either a UserPortalPasscodeGetInfoResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPortalPasscodeModifyRequest", "tags": ["User"], "documentation": "Modify the user's Portal passcode\n        The response is either a SuccessResponse or an ErrorResponse.\n        The following elements are only used in XS data mode and ignored in AS data mode:\n          oldPasscode", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "oldPasscode", "required": false, "array": false, "type": "Passcode", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "newPasscode", "required": true, "array": false, "type": "Passcode", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]}, {"name": "UserPortalPasscodeRulesGetRequest", "tags": ["User"], "documentation": "Requests the effective passcode rules setting for a user.\n        The response is either UserPortalPasscodeRulesGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [{"choice": [[[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}], [{"name": "serviceProviderId", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}, {"name": "groupId", "required": true, "array": false, "type": "GroupId", "type_schema": "xs:token", "minLength": 1, "maxLength": 30}]]]}]}, {"name": "UserPrimaryEndpointAdvancedSettingGetRequest", "tags": ["User"], "documentation": "Get the Users Primary Endpoint setting.\n        The response is either a UserPrimaryEndpointAdvancedSettingGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPrimaryEndpointAdvancedSettingModifyRequest", "tags": ["User"], "documentation": "Modify the Users Primary Endpoint line control settings.\n          The response is either a SuccessResponse or an ErrorResponse.\n          The following elements are only used in XS data mode and ignored in AS data mode:\n          \tallowVideo", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "allowOrigination", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowTermination", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowVideo", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserPushNotificationGetRequest24", "tags": ["User"], "documentation": "Get the push notification settings for a user.\n        The response is either UserPushNotificationGetResponse24 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserPushNotificationModifyRequest", "tags": ["User"], "documentation": "Modify the push notification settings for a user.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "sendPushNotificationForClickToDial", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sendPushNotificationForGroupPaging", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserPushNotificationRegistrationDeleteRequest", "tags": ["User"], "documentation": "Request to remove a push notification registration.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "registrationId", "required": true, "array": false, "type": "PushNotificationRegistrationId", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}]]}, {"name": "UserPushNotificationRegistrationGetListRequest21sp1", "tags": ["User"], "documentation": "Request a list of all of the push notification registrations for a user by\n        either registration id or user id.\n        The response is either UserPushNotificationRegistrationGetListResponse21sp1 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"choice": [{"name": "registrationId", "required": true, "array": false, "type": "PushNotificationRegistrationId", "type_schema": "xs:token", "minLength": 1, "maxLength": 1024}, {"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]}]]}, {"name": "UserScheduleAddEventRequest", "tags": ["User"], "documentation": "Add an event to user schedule.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The startDate element is adjusted to the first occurrence of the recurrent schedule that comes at or after the startDate.\n        The endDate element is set to the sum of the adjusted starDate element value and the event duration.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "eventName", "required": true, "array": false, "type": "EventName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "startDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "endDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurrence", "required": false, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}, {"choice": [{"name": "allDayEvent", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, [{"name": "startTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "endTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}]]}, {"name": "UserScheduleAddRequest", "tags": ["User"], "documentation": "Add a user schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "UserScheduleDeleteEventListRequest", "tags": ["User"], "documentation": "Delete a list of events from a user schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "eventName", "required": true, "array": true, "type": "EventName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "UserScheduleDeleteListRequest", "tags": ["User"], "documentation": "Delete a list of user schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "scheduleKey", "required": true, "array": true, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}]]}, {"name": "UserScheduleGetEventDetailListRequest", "tags": ["User"], "documentation": "Request the list of schedules viewable by a User. The list can be filtered by schedule type.\n        The response is either a UserScheduleGetEventListForGroupResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "scheduleGlobalKey", "required": true, "array": false, "type": "ScheduleGlobalKey", "schema": [[{"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "scheduleLevel", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}]]}, {"name": "UserScheduleGetEventListRequest", "tags": ["User"], "documentation": "Get the list of events of a user schedule.\n        The response is either a UserScheduleGetEventListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}]]}, {"name": "UserScheduleGetEventRequest", "tags": ["User"], "documentation": "Get an event from a user schedule.\n        The response is either a UserScheduleGetEventResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "eventName", "required": true, "array": false, "type": "EventName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "UserScheduleGetListRequest17sp1", "tags": ["User"], "documentation": "Get the list of schedules viewable by a User. The list can be filtered by schedule type.\n        The response is either a UserScheduleGetListResponse17sp1 or an ErrorResponse.\n        This command is authorized to user who is Executive-Assistant of the Executive.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "scheduleType", "required": false, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "UserScheduleGetPagedSortedListRequest", "tags": ["User"], "documentation": "Get the list of schedules viewable by a User. The list can be filtered by schedule name,\n        schedule type, and schedule level.\n        The response is either a UserScheduleGetPagedSortedListResponse or an ErrorResponse.\n        This command is authorized to user who is Executive-Assistant of the Executive.\n        If no sortOrder is included, the response is sorted by Name ascending by default.\n        If the responsePagingControl element is not provided, the paging startIndex will be\n        set to 1 by default, and the responsePageSize will be set to the maximum\n        responsePageSize by default.\n        Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option\n        is included. Then the search criteria are logically ORed together.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "responsePagingControl", "required": false, "array": false, "type": "ResponsePagingControl", "schema": [[{"name": "responseStartIndex", "required": true, "array": false, "type": "ResponseStartIndex", "type_schema": "xs:int", "minimum": 1.0}, {"name": "responsePageSize", "required": true, "array": false, "type": "ResponsePageSize", "type_schema": "xs:int", "minimum": 1.0, "maximum": 2000.0}]]}, {"name": "sortByScheduleName", "required": false, "array": false, "type": "SortByScheduleName", "schema": [[[{"name": "isAscending", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "isCaseSensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]]}, {"name": "searchCriteriaScheduleName", "required": false, "array": true, "type": "SearchCriteriaScheduleName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactScheduleType", "required": false, "array": true, "type": "SearchCriteriaExactScheduleType", "schema": [[{"name": "type", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "searchCriteriaExactScheduleLevel", "required": false, "array": true, "type": "SearchCriteriaExactScheduleLevel", "schema": [[{"name": "level", "required": true, "array": false, "type": "ScheduleLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "searchCriteriaModeOr", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "UserScheduleModifyEventRequest", "tags": ["User"], "documentation": "Modify an event of a user schedule.\n        The response is either a SuccessResponse or an ErrorResponse.\n        The startDate element is adjusted to the first occurrence of the recurrent schedule that comes at or after the startDate.\n        The endDate element is set to the sum of the adjusted starDate element value and the event duration.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "eventName", "required": true, "array": false, "type": "EventName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "newEventName", "required": false, "array": false, "type": "EventName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "startDate", "required": false, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "endDate", "required": false, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurrence", "required": false, "array": false, "type": "Recurrence", "schema": [[{"choice": [[{"name": "recurDaily", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurDailyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}, {"name": "recurWeekly", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurWeeklyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}, {"name": "sunday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "monday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tuesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "wednesday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "thursday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "friday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "saturday", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "recurMonthlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}]]}, {"name": "recurMonthlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurMonthlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}]]}, {"name": "recurYearlyByDay", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfMonth", "required": true, "array": false, "type": "DayOfMonth", "type_schema": "xs:int", "minimum": 1.0, "maximum": 31.0}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}, {"name": "recurYearlyByWeek", "type": null, "required": true, "array": false, "schema": [[{"name": "recurInterval", "required": false, "array": false, "type": "RecurYearlyInterval", "type_schema": "xs:int", "minimum": 1.0, "maximum": 99.0}, {"name": "dayOfWeek", "required": true, "array": false, "type": "DayOfWeek", "type_schema": "xs:NMTOKEN", "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]}, {"name": "dayOfWeekInMonth", "required": true, "array": false, "type": "DayOfWeekInMonth", "type_schema": "xs:token", "enum": ["First", "Second", "Third", "Fourth", "Last"]}, {"name": "month", "required": true, "array": false, "type": "Month", "type_schema": "xs:token", "enum": ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]}]]}], [{"name": "recurForEver", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "recurEndDate", "required": true, "array": false, "type": "xs:date", "type_schema": "xs:date"}, {"name": "recurEndOccurrence", "required": true, "array": false, "type": "RecurEndOccurrence", "type_schema": "xs:int", "minimum": 1.0, "maximum": 999.0}]]}]]}, {"choice": [{"name": "allDayEvent", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, [{"name": "startTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}, {"name": "endTime", "required": true, "array": false, "type": "HourMinute", "schema": [[{"name": "hour", "required": true, "array": false, "type": "Hour", "type_schema": "xs:int", "minimum": 0.0, "maximum": 23.0}, {"name": "minute", "required": true, "array": false, "type": "Minute", "type_schema": "xs:int", "minimum": 0.0, "maximum": 59.0}]]}]]}]]}, {"name": "UserScheduleModifyRequest", "tags": ["User"], "documentation": "Modify a user schedule.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "scheduleKey", "required": true, "array": false, "type": "ScheduleKey", "schema": [[{"name": "scheduleName", "required": true, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "scheduleType", "required": true, "array": false, "type": "ScheduleType", "type_schema": "xs:token", "enum": ["Holiday", "Time"]}]]}, {"name": "newScheduleName", "required": false, "array": false, "type": "ScheduleName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}]]}, {"name": "UserServiceAssignListRequest", "tags": ["User"], "documentation": "Request to assign the user services and service packs for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceName", "required": false, "array": true, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"name": "servicePackName", "required": false, "array": true, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "UserServiceGetAssignmentListRequest", "tags": ["User"], "documentation": "Requests the user's service and service pack assignment list with status.\n        The response is either UserServiceGetAssignmentListResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserServiceIsAssignedRequest", "tags": ["User"], "documentation": "Request to determine if a UserService or service pack is assigned to the user.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"choice": [{"name": "serviceName", "required": true, "array": false, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"name": "servicePackName", "required": true, "array": false, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]}]]}, {"name": "UserServiceUnassignListRequest", "tags": ["User"], "documentation": "Requests to unassign the user services and service packs for a user.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "serviceName", "required": false, "array": true, "type": "UserService", "type_schema": "xs:token", "enum": ["3G/4G Continuity", "Advice Of Charge", "Alternate Numbers", "Anonymous Call Rejection", "Attendant Console", "Authentication", "Automatic Callback", "Automatic Collect Call", "Automatic Hold/Retrieve", "Barge-in Exempt", "Basic Call Logs", "Bria For BroadWorks", "BroadTouch Business Communicator Desktop", "BroadTouch Business Communicator Desktop - Audio", "BroadTouch Business Communicator Mobile", "BroadTouch Business Communicator Mobile - Audio", "BroadTouch Business Communicator Tablet", "BroadTouch Business Communicator Tablet - Audio", "BroadTouch Business Communicator Tablet - Video", "BroadWorks Agent", "BroadWorks Anywhere", "BroadWorks Connector for Lotus Sametime", "BroadWorks Mobility", "BroadWorks Receptionist - Office", "BroadWorks Receptionist - Small Business", "BroadWorks Supervisor", "Busy Lamp Field", "Call Center - Basic", "Call Center Monitoring", "Call Center - Standard", "Call Center - Premium", "Call Forwarding Always", "Call Forwarding Always Secondary", "Call Forwarding Busy", "Call Forwarding No Answer", "Call Forwarding Not Reachable", "Call Forwarding Selective", "Call Me Now", "Call Notify", "Call Recording", "Call Return", "Call Transfer", "Call Waiting", "Calling Line ID Blocking Override", "Calling Line ID Delivery Blocking", "Calling Name Delivery", "Calling Name Retrieval", "Calling Number Delivery", "Calling Party Category", "Charge Number", "Classmark", "Client Call Control", "Client Call Control II", "Client License 1", "Client License 2", "Client License 3", "Client License 4", "Client License 5", "Client License 6", "Client License 7", "Client License 8", "Client License 9", "Client License 10", "Client License 11", "Client License 12", "Client License 13", "Client License 14", "Client License 15", "Client License 16", "Client License 17", "Client License 18", "Client License 19", "Client License 20", "Client License 21", "Client License 22", "Client License 23", "Client License 24", "Client License 25", "Client License 26", "Client License 27", "Client License 28", "Client License 29", "Client License 30", "Client License 31", "Client License 32", "Client License 33", "Client License 34", "Client License 35", "Client License 36", "Client License 37", "Client License 38", "Client License 39", "Client License 40", "Client License 41", "Client License 42", "Client License 43", "Client License 44", "Client License 45", "Client License 46", "Client License 47", "Client License 48", "Client License 49", "Client License 50", "Collaborate - Audio", "Collaborate - Video", "Collaborate - Sharing", "CommPilot Call Manager", "CommPilot Express", "CommPilot Express SR", "CommPilot Lite", "CommPilot Receptionist", "CommPilot Residential", "CommPilot Small Business", "Communication Barring User-Control", "Conference Room", "Connected Line Identification Presentation", "Connected Line Identification Restriction", "Customer Originated Trace", "Custom Ringback User", "Custom Ringback User - Call Waiting", "Custom Ringback User - Video", "Direct Route", "Directed Call Pickup", "Directed Call Pickup with Barge-in", "Directory Number Hunting", "Diversion Inhibitor", "Do Not Disturb", "Dual-Mode VCC", "Enhanced Call Logs", "Executive", "Executive-Assistant", "External Calling Line ID Delivery", "External Custom Ringback", "Fax Messaging", "Find-me/Follow-me", "Flash Call Hold", "GETS Calling Line ID Delivery Blocking", "Group Night Forwarding", "Hoteling Guest", "Hoteling Host", "Flexible Seating Guest", "Integrated IMP", "In-Call Service Activation", "IN Integration", "Intelligent Network Service Control", "Intercept User", "Internal Calling Line ID Delivery", "Last Number Redial", "Legacy Automatic Callback", "Location-Based Calling Restrictions", "Lync CTI", "Lync Softphone", "Malicious Call Trace", "Mobile Extension to Extension Dialing", "Mobility", "Multiple Call Arrangement", "Music On Hold User", "Video On Hold User", "MWI Delivery to Mobile Endpoint", "N-Way Call", "Number Portability Announcement", "OMA Presence", "Outlook Integration", "Office Communicator Tab", "PBX Integration", "Personal Assistant", "Physical Location", "Polycom Phone Services", "Pre-alerting Announcement", "Preferred Carrier User", "Prepaid", "Priority Alert", "Privacy", "Push to Talk", "Remote Office", "Resource Priority", "Route List", "SMDI Message Desk", "Security Classification", "Selective Call Acceptance", "Selective Call Rejection", "Sequential Ring", "Service Scripts User", "Shared Call Appearance", "Shared Call Appearance 5", "Shared Call Appearance 10", "Shared Call Appearance 15", "Shared Call Appearance 20", "Shared Call Appearance 25", "Shared Call Appearance 30", "Shared Call Appearance 35", "Short Message Service", "Silent Alerting", "Simultaneous Ring Family", "Simultaneous Ring Personal", "Speed Dial 100", "Speed Dial 8", "Terminating Alternate Trunk Identity", "Terminating Closed User Group", "Third-Party IMP", "Third-Party MWI Control", "Third-Party Voice Mail Support", "Three-Way Call", "Two-Stage Dialing", "Video Add-On", "Virtual On-Net Enterprise Extensions", "Visual Device Management", "Voice Messaging User", "Voice Messaging User - Video", "Voice Portal Calling", "Zone Calling Restrictions"]}, {"name": "servicePackName", "required": false, "array": true, "type": "ServicePackName", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "UserShInterfaceGetPublicIdDataRequest21sp1", "tags": ["User"], "documentation": "Returns the Sh non-transparent data stored against a Public User Identity (a SIP URI\n        or TEL URI).\n        The response is either a UserShInterfaceGetPublicIdDataResponse21sp1 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "publicUserIdentity", "required": true, "array": false, "type": "PublicUserIdentity", "schema": [{"choice": [{"name": "sipURI", "required": true, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "telURI", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]}]}]]}, {"name": "UserShInterfaceGetUserIdDataRequest21sp1", "tags": ["User"], "documentation": "Returns the Sh non-transparent data stored against a userId.\n        The response is either a UserShInterfaceGetUserIdDataResponse21sp1 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserShInterfaceModifyRequest", "tags": ["User"], "documentation": "Modifies the Sh Interface non-transparent data associated with a Public User Identity.\n        The response is a SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "publicUserIdentity", "required": true, "array": false, "type": "PublicUserIdentity", "schema": [{"choice": [{"name": "sipURI", "required": true, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "telURI", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]}]}, {"name": "SCSCFName", "required": false, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "IMSUserState", "required": false, "array": false, "type": "IMSUserState", "type_schema": "xs:token", "enum": ["Not Registered", "Registered", "Registered UnReg Services", "Authentication Pending"]}]]}, {"name": "UserShInterfacePublicIdentityRefreshTaskStartRequest", "tags": ["User"], "documentation": "Dispatches a Public Identity refresh task on the local Application Server node for the specified public identity.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "publicUserIdentity", "required": true, "array": false, "type": "PublicUserIdentity", "schema": [{"choice": [{"name": "sipURI", "required": true, "array": false, "type": "SIPURI", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "telURI", "required": true, "array": false, "type": "DN", "type_schema": "xs:token", "minLength": 1, "maxLength": 23}]}]}]]}, {"name": "UserTerminatingAlternateTrunkIdentityGetRequest", "tags": ["User"], "documentation": "Request the user level data associated with Terminating Alternate Trunk Identity.\n      The response is either a UserTerminatingAlternateTrunkIdentityGetResponse or an\n      ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserTerminatingAlternateTrunkIdentityModifyRequest", "tags": ["User"], "documentation": "Modify the user level data associated with Terminating Alternate Trunk Identity.\n      The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "terminatingTrunkIdentity", "required": false, "array": false, "type": "AlternateTrunkIdentity", "type_schema": "xs:token", "minLength": 1, "maxLength": 80}]]}, {"name": "UserTerminatingClosedUserGroupGetRequest", "tags": ["User"], "documentation": "Get user Terminating CUG service settings.\n        The response is either UserTerminatingClosedUserGroupGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserTerminatingClosedUserGroupModifyRequest", "tags": ["User"], "documentation": "Modify user Terminating CUG service settings.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "userInterlockCode", "required": false, "array": false, "type": "HexNumber16Bit", "type_schema": "xs:token"}]]}, {"name": "UserXsiPolicyProfileGetRequest", "tags": ["User"], "documentation": "Get the user Xsi policy profile.\n        The response is either a UserXsiPolicyProfileGetResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}]]}, {"name": "UserXsiPolicyProfileModifyRequest", "tags": ["User"], "documentation": "Modifies the default Xsi policy profile for a group.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": 1, "maxLength": 161}, {"name": "xsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": 1, "maxLength": 40}, {"name": "level", "required": true, "array": false, "type": "XsiPolicyProfileLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}]]}]
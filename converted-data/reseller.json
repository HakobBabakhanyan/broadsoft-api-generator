[{"name": "ResellerAddRequest", "tags": ["Reseller"], "documentation": "Add a reseller.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "resellerName", "required": false, "array": false, "type": "ResellerName22", "type_schema": "xs:token", "minLength": "1", "maxLength": "320"}, {"name": "resellerExternalId", "required": false, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": "36"}]]}, {"name": "ResellerAdminAddRequest", "tags": ["Reseller"], "documentation": "Add a reseller administrator.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": "1", "maxLength": "161"}, {"name": "firstName", "required": false, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": "1", "maxLength": "30"}, {"name": "lastName", "required": false, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": "1", "maxLength": "30"}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": "1", "maxLength": "60"}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}]]}, {"name": "ResellerAdminAlternateIdAddRequest", "tags": ["Reseller"], "documentation": "Request to add an alternate Id to a reseller admin.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": "1", "maxLength": "161"}, {"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": "1", "maxLength": "161"}, {"name": "description", "required": false, "array": false, "type": "AlternateUserIdDescription", "type_schema": "xs:token", "minLength": "1", "maxLength": "80"}]]}, {"name": "ResellerAdminAlternateIdDeleteRequest", "tags": ["Reseller"], "documentation": "Request to delete an alternate admin user id of a reseller admin.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": "1", "maxLength": "161"}, {"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": "1", "maxLength": "161"}]]}, {"name": "ResellerAdminAlternateIdGetListRequest", "tags": ["Reseller"], "documentation": "Request to get the admin id and the list of alternate admin ids of an admin.\n        The response is either ResellerAdminAlternateIdGetListResponse or ErrorResponse.\n        The \"userId\" can be either the admin user Id or an alternate admin user Id.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": "1", "maxLength": "161"}]]}, {"name": "ResellerAdminAlternateIdModifyRequest", "tags": ["Reseller"], "documentation": "Request to modify an alternate id of a reseller admin.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": "1", "maxLength": "161"}, {"name": "alternateUserId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": "1", "maxLength": "161"}, {"name": "newAlternateUserId", "required": false, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": "1", "maxLength": "161"}, {"name": "description", "required": false, "array": false, "type": "AlternateUserIdDescription", "type_schema": "xs:token", "minLength": "1", "maxLength": "80"}]]}, {"name": "ResellerAdminDeleteRequest", "tags": ["Reseller"], "documentation": "Delete a reseller administrator.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": "1", "maxLength": "161"}]]}, {"name": "ResellerAdminGetListRequest", "tags": ["Reseller"], "documentation": "Get a list of reseller administrators.\n        The response is either a ResellerAdminGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}]]}, {"name": "ResellerAdminGetRequest22", "tags": ["Reseller"], "documentation": "Get a reseller administrators profile.\n        The response is either a ResellerAdminGetResponse22 or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": "1", "maxLength": "161"}]]}, {"name": "ResellerAdminModifyRequest", "tags": ["Reseller"], "documentation": "Modify the profile for a reseller administrator.\n        Since old password is not specified here, any password rule related to old password does not apply.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "userId", "required": true, "array": false, "type": "UserId", "type_schema": "xs:token", "minLength": "1", "maxLength": "161"}, {"name": "firstName", "required": false, "array": false, "type": "FirstName", "type_schema": "xs:token", "minLength": "1", "maxLength": "30"}, {"name": "lastName", "required": false, "array": false, "type": "LastName", "type_schema": "xs:token", "minLength": "1", "maxLength": "30"}, {"name": "password", "required": false, "array": false, "type": "Password", "type_schema": "xs:token", "minLength": "1", "maxLength": "60"}, {"name": "language", "required": false, "array": false, "type": "Language", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}]]}, {"name": "ResellerCallAdmissionControlPoliciesGetRequest", "tags": ["Reseller"], "documentation": "Get a reseller call admission control policies.\n        The response is either a ResellerCallAdmissionControlPoliciesGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}]]}, {"name": "ResellerCallAdmissionControlPoliciesModifyRequest", "tags": ["Reseller"], "documentation": "Modify the reseller call admission control policies.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "enableCallAdmissionControl", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "maxConcurrentNetworkSessions", "required": false, "array": false, "type": "ConcurrentNetworkSessionsLimit", "type_schema": "xs:int"}, {"name": "maxConcurrentNetworkSessionsThreshold", "required": false, "array": false, "type": "ConcurrentNetworkSessionsThresholdLimit", "type_schema": "xs:int"}, {"name": "maxNetworkCallsPerSecond", "required": false, "array": false, "type": "NetworkCallsPerSecondLimit", "type_schema": "xs:int"}, {"name": "maxNetworkCallsPerSecondThreshold", "required": false, "array": false, "type": "NetworkCallsPerSecondThresholdLimit", "type_schema": "xs:int"}, {"name": "maxConcurrentExternalSIPRECSessions", "required": false, "array": false, "type": "ConcurrentExternalSIPRECSessionsLimit", "type_schema": "xs:int"}, {"name": "maxConcurrentExternalSIPRECSessionsThreshold", "required": false, "array": false, "type": "ConcurrentExternalSIPRECSessionsThresholdLimit", "type_schema": "xs:int"}]]}, {"name": "ResellerCallPoliciesGetRequest22", "tags": ["Reseller"], "documentation": "Request the reseller level data associated with Call Policies.\n        The response is either a ResellerCallPoliciesGetResponse22\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}]]}, {"name": "ResellerCallPoliciesModifyRequest", "tags": ["Reseller"], "documentation": "Modify the reseller level data associated with Call Policies.\n        The following elements are only used in AS data mode:\n          forceRedirectingUserIdentityForRedirectedCalls\n          applyRedirectingUserIdentityToNetworkLocations\n\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "forceRedirectingUserIdentityForRedirectedCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "applyRedirectingUserIdentityToNetworkLocations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ResellerDeleteRequest", "tags": ["Reseller"], "documentation": "Delete a reseller.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"choice": [{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "resellerExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": "36"}]}]]}, {"name": "ResellerDeviceActivationPolicyGetRequest", "tags": ["Reseller"], "documentation": "Request the Device Activation policy of a reseller.\n        The response is either a ResellerDeviceActivationPolicyGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}]]}, {"name": "ResellerDeviceActivationPolicyModifyRequest", "tags": ["Reseller"], "documentation": "Modify the Device Activation policy of a reseller.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "useResellerSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "allowActivationCodeRequestByUser", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "sendActivationCodeInEmail", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ResellerEmergencyCallNotificationGetRequest", "tags": ["Reseller"], "documentation": "Request the reseller level data associated with Emergency Call\n        Notification.\n        The response is either a\n        ResellerEmergencyCallNotificationGetResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}]]}, {"name": "ResellerEmergencyCallNotificationModifyRequest", "tags": ["Reseller"], "documentation": "Modify the reseller level data associated with Emergency Call\n        Notification.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "defaultFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": "1", "maxLength": "80"}]]}, {"name": "ResellerGetListRequest", "tags": ["Reseller"], "documentation": "Request a list of resellers in the system.\n        It is possible to search by various criteria to restrict the number of rows returned.\n        Multiple search criteria are logically ANDed together.\n        The response is either a ResellerGetListResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": "1"}, {"name": "searchCriteriaResellerId", "required": false, "array": true, "type": "SearchCriteriaResellerId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaResellerName", "required": false, "array": true, "type": "SearchCriteriaResellerName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ResellerName22", "type_schema": "xs:token", "minLength": "1", "maxLength": "320"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ResellerGetRequest22V2", "tags": ["Reseller"], "documentation": "Get the profile for a reseller.\n        The response is either ResellerGetResponse22V2 or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"choice": [{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "resellerExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": "36"}]}]]}, {"name": "ResellerMailParametersGetRequest", "tags": ["Reseller"], "documentation": "Request the reseller Mail parameters.\n        The response is either a ResellerMailParametersGetResponse or an\n        ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}]]}, {"name": "ResellerMailParametersModifyRequest", "tags": ["Reseller"], "documentation": "Request to modify the reseller Mail parameters.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "defaultFromAddress", "required": false, "array": false, "type": "EmailAddress", "type_schema": "xs:token", "minLength": "1", "maxLength": "80"}]]}, {"name": "ResellerModifyRequest", "tags": ["Reseller"], "documentation": "Modify the reseller profile.\n        The response is either SuccessResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerName", "required": false, "array": false, "type": "ResellerName22", "type_schema": "xs:token", "minLength": "1", "maxLength": "320"}, {"choice": [{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "resellerExternalId", "required": true, "array": false, "type": "ExternalId", "type_schema": "NonEmptyToken", "maxLength": "36"}]}]]}, {"name": "ResellerNetworkClassOfServiceAssignListRequest", "tags": ["Reseller"], "documentation": "Assign a list of Network Classes of Service to a reseller.\n        A default Network Class of Service is optional.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "networkClassOfService", "required": false, "array": true, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}, {"name": "defaultNetworkClassOfService", "required": false, "array": false, "type": "DefaultNetworkClassOfService", "schema": [{"choice": [{"name": "useExisting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfServiceName", "required": true, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}]}]}]]}, {"name": "ResellerNetworkClassOfServiceGetAssignedListRequest", "tags": ["Reseller"], "documentation": "Get a list of Network Classes of Service assigned to a reseller.\n        The response is either a ResellerNetworkClassOfServiceGetAssignedListResponse\n        or an ErorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}]]}, {"name": "ResellerNetworkClassOfServiceGetAssignedServiceProviderListRequest", "tags": ["Reseller"], "documentation": "Get a list of service provider/enterprises within a reseller that have a given\n        Network Class of Service assigned.\n        The response is either a ResellerNetworkClassOfServiceGetAssignedServiceProviderListResponse\n        or an ErorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "networkClassOfService", "required": true, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": "1"}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": "1", "maxLength": "30"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaServiceProviderName", "required": false, "array": true, "type": "SearchCriteriaServiceProviderName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderName", "type_schema": "xs:token", "minLength": "1", "maxLength": "80"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}]]}, {"name": "ResellerNetworkClassOfServiceModifyDefaultRequest", "tags": ["Reseller"], "documentation": "Modifies the default Network Classes of Service of a reseller.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "networkClassOfService", "required": false, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}]]}, {"name": "ResellerNetworkClassOfServiceUnassignListRequest", "tags": ["Reseller"], "documentation": "Unassign a list of Network Classes of Service from a reseller.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "networkClassOfService", "required": false, "array": true, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}, {"name": "defaultNetworkClassOfService", "required": false, "array": false, "type": "DefaultNetworkClassOfService", "schema": [{"choice": [{"name": "useExisting", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "networkClassOfServiceName", "required": true, "array": false, "type": "NetworkClassOfServiceName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}]}]}]]}, {"name": "ResellerServiceAuthorizationGetRequest", "tags": ["Reseller"], "documentation": "Get the reseller service authorization\n        The response is either ResellerServiceAuthorizationGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}]]}, {"name": "ResellerServiceAuthorizationModifyRequest", "tags": ["Reseller"], "documentation": "Modify the reseller service authorization file.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "serviceOffering", "required": false, "array": false, "type": "FileResource", "schema": [[{"choice": [{"name": "sourceFileName", "required": true, "array": false, "type": "FileName", "type_schema": "xs:token", "minLength": "1"}, {"name": "fileContent", "required": true, "array": false, "type": "xs:base64Binary", "type_schema": "xs:base64Binary"}]}]]}]]}, {"name": "ResellerStirShakenGetRequest", "tags": ["Reseller"], "documentation": "Get Reseller Stir Shaken service settings.\n        The response is either ResellerStirShakenGetResponse or ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}]]}, {"name": "ResellerStirShakenModifyRequest", "tags": ["Reseller"], "documentation": "Modify reseller Stir Shaken service settings.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "useParentLevelSettings", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "signingPolicy", "required": false, "array": false, "type": "StirShakenSigningPolicy", "type_schema": "xs:token", "enum": ["All Eligible Calls", "Eligible Inter-Network Calls", "Off"]}, {"name": "taggingPolicy", "required": false, "array": false, "type": "StirShakenTaggingPolicy", "type_schema": "xs:token", "enum": ["All Eligible Calls", "Eligible Intra-Network Calls", "Off"]}, {"name": "signEmergencyCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "tagEmergencyCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "signingServiceURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": "1", "maxLength": "256"}, {"name": "tagFromOrPAI", "required": false, "array": false, "type": "StirShakenTagFromOrPAI", "type_schema": "xs:token", "enum": ["PAI", "From", "Both"]}, {"name": "verstatTag", "required": false, "array": false, "type": "StirShakenVerstatTag", "type_schema": "xs:token", "enum": ["TN-Validation-Passed", "TN-Validation-Failed", "No-TN-Validation"]}, {"name": "useOSValueForOrigId", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "origUUID", "required": false, "array": false, "type": "StirShakenOrigUUID", "type_schema": "NonEmptyToken", "maxLength": "36"}, {"name": "attestationLevel", "required": false, "array": false, "type": "StirShakenAttestationLevel", "type_schema": "xs:token", "enum": ["Full", "Partial", "Gateway"]}, {"name": "enableVerification", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "verificationServiceURL", "required": false, "array": false, "type": "URL", "type_schema": "xs:token", "minLength": "1", "maxLength": "256"}, {"name": "verificationErrorHandling", "required": false, "array": false, "type": "StirShakenVerificationErrorHandling", "type_schema": "xs:token", "enum": ["Abort", "Proceed"]}, {"name": "proxyVerstatToCNAMSubscribe", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "useUnknownHeadersFromCNAMNotify", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableSigningForUnscreenedTrunkGroupOriginations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "enableTaggingForUnscreenedTrunkGroupOriginations", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}, {"name": "unscreenedTrunkGroupOriginationAttestationLevel", "required": false, "array": false, "type": "StirShakenUnscreenedTrunkGroupOriginationAttestationLevel", "type_schema": "xs:token", "enum": ["Full", "Partial", "Gateway"]}, {"name": "verifyGETSCalls", "required": false, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "ResellerXsiPolicyProfileAssignListRequest", "tags": ["Reseller"], "documentation": "Assign a list of Xsi policy profile to a reseller.\n        It contains the service provider, group, user level Xsi policy profile.\n        Each level has one default Xsi policy profile assigned.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "spXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileAssignEntry", "schema": [[{"name": "name", "required": false, "array": true, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}, {"name": "default", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}]]}, {"name": "groupXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileAssignEntry", "schema": [[{"name": "name", "required": false, "array": true, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}, {"name": "default", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}]]}, {"name": "userXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileAssignEntry", "schema": [[{"name": "name", "required": false, "array": true, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}, {"name": "default", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}]]}]]}, {"name": "ResellerXsiPolicyProfileGetAssignedListRequest", "tags": ["Reseller"], "documentation": "Get a list of Xsi policy profile assigned.\n        The response is either a XsiPolicyProfileGetAssignedListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "level", "required": false, "array": false, "type": "XsiPolicyProfileLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "ResellerXsiPolicyProfileGetAssignedServiceProviderListRequest", "tags": ["Reseller"], "documentation": "Get a list of service provider/enterprises within a reseller that have a given\n        Service provider Xsi policy profile assigned.\n        The response is either a ResellerXsiPolichProfileGetAssignedServiceProviderListResponse\n        or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "xsiPolicyProfile", "required": true, "array": false, "type": "XsiPolicyProfileKey", "schema": [[{"name": "name", "required": true, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}, {"name": "level", "required": true, "array": false, "type": "XsiPolicyProfileLevel", "type_schema": "xs:token", "enum": ["Service Provider", "Group", "User"]}]]}, {"name": "responseSizeLimit", "required": false, "array": false, "type": "ResponseSizeLimit", "type_schema": "xs:int", "minimum": "1"}, {"name": "searchCriteriaServiceProviderId", "required": false, "array": true, "type": "SearchCriteriaServiceProviderId", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderId", "type_schema": "xs:token", "minLength": "1", "maxLength": "30"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaServiceProviderName", "required": false, "array": true, "type": "SearchCriteriaServiceProviderName", "schema": [[{"name": "mode", "required": true, "array": false, "type": "SearchMode", "type_schema": "xs:token", "enum": ["Starts With", "Contains", "Equal To"]}, {"name": "value", "required": true, "array": false, "type": "ServiceProviderName", "type_schema": "xs:token", "minLength": "1", "maxLength": "80"}, {"name": "isCaseInsensitive", "required": true, "array": false, "type": "xs:boolean", "type_schema": "xs:boolean"}]]}, {"name": "searchCriteriaExactOrganizationType", "required": false, "array": false, "type": "SearchCriteriaExactOrganizationType", "schema": [[{"name": "organizationType", "required": true, "array": false, "type": "OrganizationType", "type_schema": "xs:token", "enum": ["Service Provider", "Enterprise"]}]]}]]}, {"name": "ResellerXsiPolicyProfileModifyDefaultRequest", "tags": ["Reseller"], "documentation": "Modifies the default Xsi policy profile for a reseller.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "spDefaultXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}, {"name": "groupDefaultXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}, {"name": "userDefaultXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}]]}, {"name": "ResellerXsiPolicyProfileUnassignListRequest", "tags": ["Reseller"], "documentation": "Unassign a list of Xsi policy profile.\n        The response is either a SuccessResponse or an ErrorResponse.", "type": "core:OCIRequest", "schema": [[{"name": "resellerId", "required": true, "array": false, "type": "ResellerId22", "type_schema": "xs:token", "minLength": "1", "maxLength": "36"}, {"name": "spXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileUnassignEntry", "schema": [[{"name": "name", "required": false, "array": true, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}, {"name": "newDefault", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}]]}, {"name": "groupXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileUnassignEntry", "schema": [[{"name": "name", "required": false, "array": true, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}, {"name": "newDefault", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}]]}, {"name": "userXsiPolicyProfile", "required": false, "array": false, "type": "XsiPolicyProfileUnassignEntry", "schema": [[{"name": "name", "required": false, "array": true, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}, {"name": "newDefault", "required": false, "array": false, "type": "XsiPolicyProfileName", "type_schema": "xs:token", "minLength": "1", "maxLength": "40"}]]}]]}]